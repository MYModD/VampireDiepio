@startuml
hide empty members
skinparam classAttributeIconSize 0

class "NativeIoCompletionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PackContext" {
    + Add()
    + Get()
}

class "CopyConverter" {
    + GetDouble()
    + GetUInt64()
    + GetInt64()
    + GetFloat()
    + GetInt32()
    + GetUInt32()
    + GetInt16()
    + GetUInt16()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
}

class "SwapConverter" {
    + GetDouble()
    + GetUInt64()
    + GetInt64()
    + GetFloat()
    + GetInt32()
    + GetUInt32()
    + GetInt16()
    + GetUInt16()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
    + PutBytes()
}

class "<>c" {
    + <get_breadcrumb_value>b__29_0()
}

class "SecurityParser" {
    + LoadXml()
    + ToXml()
    + OnStartParsing()
    + OnProcessingInstruction()
    + OnIgnorableWhitespace()
    + OnStartElement()
    + OnEndElement()
    + OnChars()
    + OnEndParsing()
}

class "DefaultHandler" {
    + OnStartParsing()
    + OnEndParsing()
    + OnStartElement()
    + OnEndElement()
    + OnChars()
    + OnIgnorableWhitespace()
    + OnProcessingInstruction()
}

class "SmallXmlParser" {
    - Error()
    - UnexpectedEndError()
    - IsNameChar()
    - IsWhitespace()
    + SkipWhitespaces()
    - HandleWhitespaces()
    + SkipWhitespaces()
    - Peek()
    - Read()
    + Expect()
    - ReadUntil()
    + ReadName()
    + Parse()
    - Cleanup()
    + ReadContent()
    - HandleBufferedContent()
    - ReadCharacters()
    - ReadReference()
    - ReadCharacterReference()
    - ReadAttribute()
    - ReadCDATASection()
    - ReadComment()
}

class "AttrListImpl" {
    + GetName()
    + GetValue()
    + GetValue()
    + Clear()
    + Add()
}

class "ComInteropProxy" {
    - CacheProxy()
    + Invoke()
    + CanCastTo()
}

class "CodePointIndexer" {
    + ToIndex()
    + ToCodePoint()
}

class "ContractionComparer" {
    + Compare()
}

class "<>c" {
    + <BuildTailoringTables>b__17_0()
}

class "SimpleCollator" {
    - SetCJKTable()
    - Category()
    - Level1()
    - Level2()
    - GetContraction()
    - GetContraction()
    - GetTailContraction()
    - GetTailContraction()
    - GetContraction()
    - GetContraction()
    - FilterOptions()
    - GetExtenderType()
    - FilterExtender()
    - IsSafe()
    + GetSortKey()
    + GetSortKey()
    + GetSortKey()
    - GetSortKey()
    - FillSortKeyRaw()
    - FillSurrogateSortKeyRaw()
    + Compare()
    - System.Globalization.ISimpleCollator.Compare()
    + Compare()
    - ClearBuffer()
    - CompareInternal()
    - CompareFlagPair()
    + IsPrefix()
    + IsPrefix()
    - IsPrefix()
    + IsSuffix()
    + IsSuffix()
    + IndexOf()
    - QuickIndexOf()
    + IndexOf()
    - IndexOfOrdinal()
    + IndexOf()
    + IndexOf()
    - IndexOfOrdinal()
    - IndexOfSortKey()
    - IndexOf()
    + LastIndexOf()
    + LastIndexOf()
    - LastIndexOfOrdinal()
    + LastIndexOf()
    + LastIndexOf()
    - LastIndexOfSortKey()
    - LastIndexOf()
    - MatchesForward()
    - MatchesForwardCore()
    - MatchesPrimitive()
    - MatchesBackward()
    - MatchesBackwardCore()
}

class "SortKeyBuffer" {
    + Reset()
    + ClearBuffer()
    + Initialize()
    + AppendCJKExtension()
    + AppendKana()
    + AppendNormal()
    - AppendLevel5()
    - AppendBufferPrimitive()
    + GetResultAndReset()
    - GetOptimizedLength()
    + GetResult()
}

class "ASN1" {
    - CompareArray()
    + Equals()
    + CompareValue()
    + Add()
    + GetBytes()
    + Decode()
    + DecodeTLV()
    + Element()
    + ToString()
    + SaveToFile()
}

class "StrongName" {
    - InvalidateCache()
    + GetBytes()
    - RVAtoPosition()
    + StrongHash()
    + Hash()
    + Sign()
    + Verify()
    + Verify()
}

class "StrongNameManager" {
    + ToString()
}

class "Element" {
    + GetUsers()
}

class "Uri" {
    + Equals()
    + GetHashCode()
    + GetLeftPart()
    + MakeRelative()
    + ToString()
    + Escape()
    + Parse()
    + Unescape()
    + Unescape()
    - ParseAsWindowsUNC()
    - ParseAsWindowsAbsoluteFilePath()
    - ParseAsUnixAbsoluteFilePath()
    - Parse()
    - GetOpaqueWiseSchemeDelimiter()
    + IsBadFileSystemCharacter()
    + IsReservedCharacter()
}

class "ARC4Managed" {
    + Finalize()
    + Dispose()
    + CreateEncryptor()
    + CreateDecryptor()
    + GenerateIV()
    + GenerateKey()
    - KeySetup()
    - CheckInput()
    + TransformBlock()
    - InternalTransformBlock()
    + TransformFinalBlock()
}

class "BlockProcessor" {
    + Finalize()
    + Initialize()
    + Core()
    + Core()
    + Final()
}

class "KeyPairPersistence" {
    + Load()
    + Save()
    + Remove()
    - Copy()
    - FromXml()
    - ToXml()
}

class "MD2Managed" {
    - Padding()
    + Initialize()
    + HashCore()
    + HashFinal()
    - MD2Transform()
}

class "MD4Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - Padding()
    - F()
    - G()
    - H()
    - ROL()
    - FF()
    - GG()
    - HH()
    - Encode()
    - Decode()
    - MD4Transform()
}

class "RSAManaged" {
    + Finalize()
    - GenerateKeyPair()
    + DecryptValue()
    + EncryptValue()
    + ExportParameters()
    + ImportParameters()
    + Dispose()
    + ToXmlString()
    - GetPaddedValue()
}

class "KeyGeneratedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DSAManaged" {
    + Finalize()
    - Generate()
    - GenerateKeyPair()
    - add()
    - GenerateParams()
    - NormalizeArray()
    + ExportParameters()
    + ImportParameters()
    + CreateSignature()
    + VerifySignature()
    + Dispose()
}

class "KeyGeneratedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HMACAlgorithm" {
    + Finalize()
    - CreateHash()
    + Dispose()
    + Initialize()
    - KeySetup()
    + Core()
    + Final()
}

class "MACAlgorithm" {
    + Initialize()
    + Core()
    + Final()
}

class "BigInteger" {
    + Randomize()
    + Randomize()
    + BitCount()
    + TestBit()
    + TestBit()
    + SetBit()
    + ClearBit()
    + SetBit()
    + LowestSetBit()
    + GetBytes()
    + Compare()
    + ToString()
    + ToString()
    - Normalize()
    + Clear()
    + GetHashCode()
    + ToString()
    + Equals()
    + GCD()
    + ModInverse()
    + ModPow()
    + IsProbablePrime()
    + Incr2()
}

class "ModulusRing" {
    + BarrettReduction()
    + Multiply()
    + Difference()
    + Pow()
    + Pow()
}

class "PrimalityTest" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NextPrimeFinder" {
    + GenerateSearchBase()
}

class "SequentialSearchPrimeGeneratorBase" {
    + GenerateSearchBase()
    + GenerateNewPrime()
    + GenerateNewPrime()
    + IsPrimeAcceptable()
}

class "RegistryKey" {
    - ClosePerfDataKey()
    - FlushCore()
    - CreateSubKeyInternalCore()
    - DeleteSubKeyCore()
    - DeleteSubKeyTreeCore()
    - DeleteValueCore()
    - InternalOpenSubKeyCore()
    - InternalOpenSubKeyCore()
    + InternalOpenSubKeyWithoutSecurityChecksCore()
    - InternalSubKeyCountCore()
    - InternalGetSubKeyNamesCore()
    - InternalValueCountCore()
    - GetValueNamesCore()
    - InternalGetValueCore()
    - GetValueKindCore()
    - SetValueCore()
    - Win32Error()
    + Flush()
    + Close()
    + Dispose()
    + CreateSubKey()
    + CreateSubKey()
    + CreateSubKey()
    + CreateSubKey()
    + CreateSubKey()
    + CreateSubKey()
    + CreateSubKey()
    - CreateSubKeyInternal()
    + DeleteSubKey()
    + DeleteSubKey()
    + DeleteSubKeyTree()
    + DeleteSubKeyTree()
    - DeleteSubKeyTreeInternal()
    + DeleteValue()
    + DeleteValue()
    + OpenSubKey()
    + OpenSubKey()
    + OpenSubKey()
    + OpenSubKey()
    + OpenSubKey()
    - InternalOpenSubKey()
    + InternalOpenSubKeyWithoutSecurityChecks()
    + GetAccessControl()
    + GetAccessControl()
    + SetAccessControl()
    - InternalSubKeyCount()
    + GetSubKeyNames()
    - InternalGetSubKeyNames()
    - InternalValueCount()
    + GetValueNames()
    + GetValue()
    + GetValue()
    + GetValue()
    - InternalGetValue()
    + GetValueKind()
    + SetValue()
    + SetValue()
    - CalculateValueKind()
    + ToString()
    - EnsureNotDisposed()
    - EnsureWriteable()
    - GetSubKeyPermissionCheck()
    - IsDirty()
    - IsSystemKey()
    - IsWritable()
    - IsPerfDataKey()
    - SetDirty()
}

class "SafeLibraryHandle" {
    + ReleaseHandle()
}

class "SafeRegistryHandle" {
    + ReleaseHandle()
}

class "SafePasswordHandle" {
    - CreateHandle()
    - CreateHandle()
    - FreeHandle()
    + ReleaseHandle()
    + Dispose()
    + Mono_DangerousGetString()
}

class "<>c" {
    + <get_InvalidHandle>b__10_0()
}

class "SafeThreadPoolIOHandle" {
    + ReleaseHandle()
}

class "SafeFileHandle" {
    + ReleaseHandle()
}

class "SafeFindHandle" {
    + ReleaseHandle()
}

class "SafeWaitHandle" {
    + ReleaseHandle()
}

class "SafeAccessTokenHandle" {
    + ReleaseHandle()
}

class "ReflectionExecutionDomainCallbacks" {
    + CreateMissingMetadataException()
}

class "RuntimeThread" {
    + ResetThreadPoolThread()
    + Start()
    + Start()
}

class "String" {
    + CompareTo()
    + CompareTo()
    + EndsWith()
    + EndsWith()
    + EndsWith()
    + EndsWith()
    + Equals()
    + Equals()
    + Equals()
    + GetHashCode()
    + GetHashCode()
    + GetLegacyNonRandomizedHashCode()
    + StartsWith()
    + StartsWith()
    + StartsWith()
    + StartsWith()
    + Insert()
    + PadLeft()
    + PadLeft()
    + PadRight()
    + PadRight()
    + Remove()
    + Remove()
    + Replace()
    + Replace()
    - ReplaceCore()
    + Replace()
    + Replace()
    - ReplaceHelper()
    + Split()
    + Split()
    + Split()
    + Split()
    + Split()
    + Split()
    - SplitInternal()
    + Split()
    + Split()
    + Split()
    + Split()
    - SplitInternal()
    - SplitInternal()
    - SplitKeepEmptyEntries()
    - SplitOmitEmptyEntries()
    - MakeSeparatorList()
    - MakeSeparatorList()
    - MakeSeparatorList()
    + Substring()
    + Substring()
    - InternalSubString()
    + ToLower()
    + ToLower()
    + ToLowerInvariant()
    + ToUpper()
    + ToUpper()
    + ToUpperInvariant()
    + Trim()
    + Trim()
    + Trim()
    + TrimStart()
    + TrimStart()
    + TrimStart()
    + TrimEnd()
    + TrimEnd()
    + TrimEnd()
    - TrimWhiteSpaceHelper()
    - TrimHelper()
    - CreateTrimmedString()
    + Contains()
    + Contains()
    + Contains()
    + Contains()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOfAny()
    + IndexOfAny()
    + IndexOfAny()
    - IndexOfAny()
    - IndexOfAny()
    - IndexOfCharArray()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOfAny()
    + LastIndexOfAny()
    + LastIndexOfAny()
    - LastIndexOfCharArray()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Clone()
    + CopyTo()
    + ToCharArray()
    + ToCharArray()
    + GetRawStringData()
    + ToString()
    + ToString()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetTypeCode()
    - System.IConvertible.ToBoolean()
    - System.IConvertible.ToChar()
    - System.IConvertible.ToSByte()
    - System.IConvertible.ToByte()
    - System.IConvertible.ToInt16()
    - System.IConvertible.ToUInt16()
    - System.IConvertible.ToInt32()
    - System.IConvertible.ToUInt32()
    - System.IConvertible.ToInt64()
    - System.IConvertible.ToUInt64()
    - System.IConvertible.ToSingle()
    - System.IConvertible.ToDouble()
    - System.IConvertible.ToDecimal()
    - System.IConvertible.ToDateTime()
    - System.IConvertible.ToType()
    + IsNormalized()
    + IsNormalized()
    + Normalize()
    + Normalize()
    + IndexOfUnchecked()
    + IndexOfUncheckedIgnoreCase()
    + LastIndexOfUnchecked()
    + LastIndexOfUncheckedIgnoreCase()
    + StartsWithOrdinalUnchecked()
    - CreateString()
    - CreateString()
    - CreateString()
    - CreateString()
    - CreateString()
    - CreateString()
    - CreateString()
    - CreateString()
    - CreateString()
    - LegacyStringGetHashCode()
}

class "TimeZoneInfo" {
    + GetAdjustmentRules()
    + GetAmbiguousTimeOffsets()
    + GetAmbiguousTimeOffsets()
    - GetAdjustmentRuleForAmbiguousOffsets()
    - GetPreviousAdjustmentRule()
    + GetUtcOffset()
    + GetUtcOffset()
    + GetUtcOffset()
    - GetUtcOffset()
    + IsAmbiguousTime()
    + IsAmbiguousTime()
    + IsAmbiguousTime()
    + IsDaylightSavingTime()
    + IsDaylightSavingTime()
    + IsDaylightSavingTime()
    - IsDaylightSavingTime()
    + IsInvalidTime()
    + Equals()
    + Equals()
    + GetHashCode()
    + HasSameRules()
    + ToSerializedString()
    + ToString()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    - GetAdjustmentRuleForTime()
    - GetAdjustmentRuleForTime()
    - CompareAdjustmentRuleToDateTime()
    - ConvertToUtc()
    - ConvertFromUtc()
    - ConvertToFromUtc()
    - GetDaylightTime()
    - GetDaylightSavingsStartOffsetFromUtc()
    - GetDaylightSavingsEndOffsetFromUtc()
}

class "CachedData" {
    + GetOneYearLocalFromUtc()
    - CreateLocal()
    + GetCorrespondingKind()
}

class "AdjustmentRule" {
    + Equals()
    + GetHashCode()
    + IsStartDateMarkerForBeginningOfYear()
    + IsEndDateMarkerForEndOfYear()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "<>c" {
    + <GetSystemTimeZonesWinRTFallback>b__49_0()
    + <GetSystemTimeZones>b__110_0()
    + <.cctor>b__157_0()
}

class "Action" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`3" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`4" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`5" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`6" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`7" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`8" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`3" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`4" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`5" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`6" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`7" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`8" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`9" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Comparison`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Converter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Predicate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AggregateException" {
    + GetObjectData()
    + GetBaseException()
    + Handle()
    + Flatten()
    + ToString()
}

class "ArgumentException" {
    + GetObjectData()
}

class "ArgumentOutOfRangeException" {
    + GetObjectData()
}

class "AssemblyLoadEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BadImageFormatException" {
    + GetObjectData()
    - SetMessageField()
    + ToString()
}

class "<>c" {
    + <ToString>b__38_0()
}

class "CharEnumerator" {
    + Clone()
    + MoveNext()
    + Dispose()
    + Reset()
}

class "CurrentSystemTimeZone" {
    + GetUtcOffsetFromUniversalTime()
    + ToLocalTime()
    + GetDaylightChanges()
    + GetUtcOffset()
    - GetCachedDaylightChanges()
}

class "DBNull" {
    + GetObjectData()
    + ToString()
    + ToString()
    + GetTypeCode()
    - System.IConvertible.ToBoolean()
    - System.IConvertible.ToChar()
    - System.IConvertible.ToSByte()
    - System.IConvertible.ToByte()
    - System.IConvertible.ToInt16()
    - System.IConvertible.ToUInt16()
    - System.IConvertible.ToInt32()
    - System.IConvertible.ToUInt32()
    - System.IConvertible.ToInt64()
    - System.IConvertible.ToUInt64()
    - System.IConvertible.ToSingle()
    - System.IConvertible.ToDouble()
    - System.IConvertible.ToDecimal()
    - System.IConvertible.ToDateTime()
    - System.IConvertible.ToType()
}

class "EventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "EventHandler`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Gen2GcCallback" {
    - Setup()
    + Finalize()
}

class "MatchNumberDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <DoStrictParse>b__98_0()
}

class "LazyHelper" {
    + ThrowException()
    - GetMode()
}

class "Lazy`1" {
    - ViaConstructor()
    - ViaFactory()
    - ExecutionAndPublication()
    - PublicationOnly()
    - PublicationOnlyViaConstructor()
    - PublicationOnlyViaFactory()
    - PublicationOnlyWaitForOtherThreadToPublish()
    - CreateValue()
    + ToString()
}

class "NotFiniteNumberException" {
    + GetObjectData()
}

class "ObjectDisposedException" {
    + GetObjectData()
}

class "Progress`1" {
    + OnReport()
    - System.IProgress<T>.Report()
    - InvokeHandlers()
}

class "Random" {
    + Sample()
    - InternalSample()
    + Next()
    - GetSampleForLargeRange()
    + Next()
    + Next()
    + NextDouble()
    + NextBytes()
    + NextBytes()
}

class "ResolveEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CultureAwareComparer" {
    + Compare()
    + Equals()
    + GetHashCode()
    + Equals()
    + GetHashCode()
    + GetObjectData()
}

class "OrdinalComparer" {
    + Compare()
    + Equals()
    + GetHashCode()
    + Equals()
    + GetHashCode()
}

class "OrdinalCaseSensitiveComparer" {
    + Compare()
    + Equals()
    + GetHashCode()
    + GetObjectData()
}

class "OrdinalIgnoreCaseComparer" {
    + Compare()
    + Equals()
    + GetHashCode()
    + GetObjectData()
}

class "Tuple`1" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`2" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`3" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`4" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`5" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`6" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`7" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "Tuple`8" {
    + Equals()
    - System.Collections.IStructuralEquatable.Equals()
    - System.IComparable.CompareTo()
    - System.Collections.IStructuralComparable.CompareTo()
    + GetHashCode()
    - System.Collections.IStructuralEquatable.GetHashCode()
    - System.ITupleInternal.GetHashCode()
    + ToString()
    - System.ITupleInternal.ToString()
}

class "TypeInitializationException" {
    + GetObjectData()
}

class "UnhandledExceptionEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Version" {
    + Clone()
    + CompareTo()
    + CompareTo()
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
    + ToString()
    + TryFormat()
    + TryFormat()
    - System.ISpanFormattable.TryFormat()
    - ToCachedStringBuilder()
}

class "ConsoleCancelEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ApplicationId" {
    + Copy()
    + ToString()
    + Equals()
    + GetHashCode()
}

class "OperatingSystem" {
    + GetObjectData()
    + Clone()
    + ToString()
}

class "MissingMemberException" {
    + GetObjectData()
}

class "ArrayEnumerator" {
    + MoveNext()
    + Reset()
    + Clone()
}

class "EmptyInternalEnumerator`1" {
    + Dispose()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "FunctorComparer`1" {
    + Compare()
}

class "__Filters" {
    + FilterAttribute()
    + FilterName()
    + FilterIgnoreCase()
}

class "LocalDataStoreHolder" {
    + Finalize()
}

class "LocalDataStore" {
    + Dispose()
    + GetData()
    + SetData()
    + FreeData()
    - PopulateElement()
}

class "LocalDataStoreSlot" {
    + Finalize()
}

class "LocalDataStoreMgr" {
    + CreateLocalDataStore()
    + DeleteLocalDataStore()
    + AllocateDataSlot()
    + AllocateNamedDataSlot()
    + GetNamedDataSlot()
    + FreeNamedDataSlot()
    + FreeDataSlot()
    + ValidateSlot()
    + GetSlotTableLength()
}

class "Activator" {
    - System.Runtime.InteropServices._Activator.GetTypeInfoCount()
    - System.Runtime.InteropServices._Activator.GetTypeInfo()
    - System.Runtime.InteropServices._Activator.GetIDsOfNames()
    - System.Runtime.InteropServices._Activator.Invoke()
}

class "DefaultBinder" {
    + BindToMethod()
    + BindToField()
    + SelectProperty()
    + ChangeType()
    + ReorderArgumentArray()
    + SelectMethod()
}

class "<>c" {
    + <SelectProperty>b__2_0()
}

class "Empty" {
    + ToString()
    + GetObjectData()
}

class "Exception" {
    - Init()
    + AddExceptionDataForRestrictedErrorInfo()
    + TryGetRestrictedLanguageErrorObject()
    - GetClassName()
    + GetBaseException()
    - GetStackTrace()
    + SetErrorCode()
    + ToString()
    - ToString()
    + GetObjectData()
    + PrepForRemoting()
    - OnDeserialized()
    + InternalPreserveStackTrace()
    - StripFileInfo()
    + RestoreExceptionDispatchInfo()
    + InternalToString()
    + GetType()
    + SetMessage()
    + SetStackTrace()
    + FixRemotingException()
}

class "CtorDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RuntimeType" {
    + IsSpecialSerializableType()
    - GetMethodCandidates()
    - GetConstructorCandidates()
    - GetPropertyCandidates()
    - GetEventCandidates()
    - GetFieldCandidates()
    - GetNestedTypeCandidates()
    + GetMethods()
    + GetConstructors()
    + GetProperties()
    + GetEvents()
    + GetFields()
    + GetNestedTypes()
    + GetMembers()
    + GetConstructorImpl()
    + GetPropertyImpl()
    + GetEvent()
    + GetField()
    + GetInterface()
    + GetNestedType()
    + GetMember()
    + GetRuntimeModule()
    + GetRuntimeAssembly()
    + GetTypeHandleInternal()
    + IsInstanceOfType()
    + IsAssignableFrom()
    + IsAssignableFrom()
    + IsEquivalentTo()
    - GetBaseType()
    + GetAttributeFlagsImpl()
    + IsContextfulImpl()
    + IsByRefImpl()
    + IsPrimitiveImpl()
    + IsPointerImpl()
    + IsCOMObjectImpl()
    + IsWindowsRuntimeObjectImpl()
    + IsExportedToWindowsRuntimeImpl()
    + HasProxyAttributeImpl()
    + IsDelegate()
    + IsValueTypeImpl()
    + HasElementTypeImpl()
    + IsArrayImpl()
    + GetArrayRank()
    + GetElementType()
    + GetEnumNames()
    + GetEnumValues()
    + GetEnumUnderlyingType()
    + IsEnumDefined()
    + GetEnumName()
    + GetGenericArgumentsInternal()
    + GetGenericArguments()
    + MakeGenericType()
    + GetGenericTypeDefinition()
    + GetDefaultMembers()
    + InvokeMember()
    + Equals()
    + Clone()
    + GetObjectData()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetCustomAttributesData()
    + FormatTypeName()
    - CreateInstanceCheckThis()
    + CreateInstanceImpl()
    - ActivationCreateInstance()
    + CreateInstanceDefaultCtor()
    + GetDefaultConstructor()
    - GetCorrespondingInflatedMethod()
    - GetCorrespondingInflatedConstructor()
    + GetMethod()
    + GetConstructor()
    + GetField()
    - GetDefaultMemberName()
    + GetSerializationCtor()
    + CreateInstanceSlow()
    - CreateInstanceMono()
    + CheckValue()
    - TryConvertToType()
    - GetCachedName()
    - make_array_type()
    + MakeArrayType()
    + MakeArrayType()
    - make_byref_type()
    + MakeByRefType()
    + MakePointerType()
    + GetGenericParameterConstraints()
    + GetMethodsByName_native()
    + GetMethodsByName()
    - GetPropertiesByName_native()
    - GetConstructors_native()
    - GetConstructors_internal()
    - GetPropertiesByName()
    + GetInterfaceMap()
    + GetPacking()
    + GetTypeCodeImpl()
    + ToString()
    - IsGenericCOMObjectImpl()
    + getFullName()
    - GetGenericArgumentsInternal()
    - GetGenericParameterAttributes()
    - GetGenericParameterPosition()
    - GetEvents_native()
    - GetFields_native()
    - GetFields_internal()
    - GetEvents_internal()
    + GetInterfaces()
    - GetNestedTypes_native()
    - GetNestedTypes_internal()
    + GetHashCode()
    + HasSameMetadataDefinitionAs()
    + IsSubclassOf()
    + GetMethodImpl()
    + GetMethodImpl()
    - GetMethodImplCommon()
    - GetMethodCandidates()
}

class "TypeLoadException" {
    - SetMessageField()
    + GetObjectData()
}

class "UnitySerializationHolder" {
    + MakeElementTypes()
    - ThrowInsufficientInformation()
    + GetObjectData()
    + GetRealObject()
}

class "AppDomain" {
    - getSetup()
    - getFriendlyName()
    + AppendPrivatePath()
    + ClearPrivatePath()
    + ClearShadowCopyPath()
    + CreateComInstanceFrom()
    + CreateComInstanceFrom()
    + InternalCreateInstanceWithNoSecurity()
    + InternalCreateInstanceWithNoSecurity()
    + InternalCreateInstanceFromWithNoSecurity()
    + InternalCreateInstanceFromWithNoSecurity()
    + CreateInstance()
    + CreateInstance()
    + CreateInstance()
    + CreateInstanceAndUnwrap()
    + CreateInstanceAndUnwrap()
    + CreateInstanceAndUnwrap()
    + CreateInstance()
    + CreateInstanceAndUnwrap()
    + CreateInstanceFrom()
    + CreateInstanceFromAndUnwrap()
    + CreateInstanceFrom()
    + CreateInstanceFrom()
    + CreateInstanceFrom()
    + CreateInstanceFromAndUnwrap()
    + CreateInstanceFromAndUnwrap()
    + CreateInstanceFromAndUnwrap()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineDynamicAssembly()
    + DefineInternalDynamicAssembly()
    + DoCallBack()
    + ExecuteAssembly()
    + ExecuteAssembly()
    + ExecuteAssembly()
    + ExecuteAssembly()
    + ExecuteAssembly()
    + ExecuteAssembly()
    - ExecuteAssemblyInternal()
    - ExecuteAssembly()
    - GetAssemblies()
    + GetAssemblies()
    + GetData()
    + GetType()
    + InitializeLifetimeService()
    + LoadAssembly()
    + Load()
    + LoadSatellite()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + LoadAssemblyRaw()
    + Load()
    + Load()
    + SetAppDomainPolicy()
    + SetCachePath()
    + SetPrincipalPolicy()
    + SetShadowCopyFiles()
    + SetShadowCopyPath()
    + SetThreadPrincipal()
    + IsFinalizingForUnload()
    - getDomainID()
    + SetData()
    + SetData()
    + SetDynamicBase()
    + ToString()
    - DoAssemblyLoad()
    - DoAssemblyResolve()
    + DoTypeBuilderResolve()
    + DoTypeResolve()
    + DoResourceResolve()
    - DoDomainUnload()
    + DoUnhandledException()
    + DoUnhandledException()
    + GetMarshalledDomainObjRef()
    + ProcessMessageInDomain()
    + ApplyPolicy()
    + ExecuteAssemblyByName()
    + ExecuteAssemblyByName()
    + ExecuteAssemblyByName()
    + ExecuteAssemblyByName()
    + ExecuteAssemblyByName()
    + ExecuteAssemblyByName()
    + IsDefaultAppDomain()
    + ReflectionOnlyGetAssemblies()
    - System._AppDomain.GetIDsOfNames()
    - System._AppDomain.GetTypeInfo()
    - System._AppDomain.GetTypeInfoCount()
    - System._AppDomain.Invoke()
    + IsCompatibilitySwitchSet()
    + SetCompatibilitySwitch()
}

class "Loader" {
    + Load()
}

class "Initializer" {
    + Initialize()
}

class "ActivationContext" {
    + Finalize()
    + Dispose()
    - Dispose()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "AppDomainInitializer" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AppDomainManager" {
    + CreateDomain()
    + InitializeNewDomain()
    + CheckSecuritySettings()
}

class "AppDomainSetup" {
    + GetConfigurationBytes()
    + SetConfigurationBytes()
    - DeserializeNonPrimitives()
    + SerializeNonPrimitives()
    + SetCompatibilitySwitches()
    + SetNativeFunction()
}

class "ApplicationIdentity" {
    + ToString()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "WindowsCancelHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <DoConsoleCancelEventInBackground>b__146_0()
}

class "CrossAppDomainDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DelegateSerializationHolder" {
    + GetObjectData()
    + GetRealObject()
}

class "DelegateEntry" {
    + DeserializeDelegate()
}

class "NullConsoleDriver" {
    + Beep()
    + Clear()
    + MoveBufferArea()
    + Init()
    + ReadLine()
    + ReadKey()
    + ResetColor()
    + SetBufferSize()
    + SetCursorPosition()
    + SetWindowPosition()
    + SetWindowSize()
}

class "NumberFormatter" {
    - InitDecHexDigits()
    - InitDecHexDigits()
    - InitDecHexDigits()
    - DecHexLen()
    - InitialFloatingPrecision()
    - Init()
    - InitHex()
    - Init()
    - Init()
    - Init()
    - Init()
    - Init()
    - Init()
    - ResetCharBuf()
    - Resize()
    - Append()
    - Append()
    - Append()
    - GetNumberFormatInstance()
    - RoundPos()
    - RoundDecimal()
    - RoundBits()
    - RemoveTrailingZeros()
    - AddOneToDecHex()
    - CountTrailingZeros()
    - Release()
    - IntegerToString()
    - NumberToString()
    - FormatCurrency()
    - FormatDecimal()
    - FormatHexadecimal()
    - FormatFixedPoint()
    - FormatRoundtrip()
    - FormatRoundtrip()
    - FormatGeneral()
    - FormatNumber()
    - FormatPercent()
    - FormatExponential()
    - FormatExponential()
    - FormatCustom()
    - AppendIntegerString()
    - AppendIntegerString()
    - AppendDecimalString()
    - AppendDecimalString()
    - AppendIntegerStringWithGroupSeparator()
    - AppendExponent()
    - AppendOneDigit()
    - AppendDigits()
    - AppendDigits()
    - Multiply10()
    - Divide10()
    - GetClone()
}

class "CustomInfo" {
    + Format()
}

class "Object" {
    + Equals()
    + Finalize()
    + GetHashCode()
    + GetType()
    + MemberwiseClone()
    + ToString()
    - FieldGetter()
    - FieldSetter()
}

class "TermInfoDriver" {
    - WriteConsole()
    + Init()
    - IncrementX()
    + WriteSpecialKey()
    + WriteSpecialKey()
    + IsSpecialKey()
    + IsSpecialKey()
    - ChangeColor()
    - GetCursorPosition()
    - CheckWindowDimensions()
    + Clear()
    + Beep()
    + MoveBufferArea()
    - AddToBuffer()
    - AdjustBuffer()
    - CreateKeyInfoFromInt()
    - GetKeyFromBuffer()
    - ReadKeyInternal()
    - InputPending()
    - QueueEcho()
    - Echo()
    - EchoFlush()
    + Read()
    + ReadKey()
    + ReadLine()
    + ReadToEnd()
    - ReadUntilConditionInternal()
    + ResetColor()
    + SetBufferSize()
    + SetCursorPosition()
    + SetWindowPosition()
    + SetWindowSize()
    - CreateKeyMap()
    - InitKeys()
    - AddStringMapping()
}

class "LowLevelStack" {
    + Pop()
    + Push()
    + Clear()
}

class "ByteMatcher" {
    + AddMapping()
    + Sort()
    + StartsWith()
    + Match()
}

class "TermInfoReader" {
    - DetermineVersion()
    - ReadHeader()
    - ReadNames()
    + Get()
    + Get()
    + Get()
    + GetStringBytes()
    - GetInt16()
    - GetString()
    - GetStringBytes()
}

class "Display" {
    + NestedName()
}

class "Display" {
    - GetInternalName()
    + NestedName()
}

class "Internal" {
    - GetDisplayName()
    + NestedName()
}

class "NoEscape" {
    + NestedName()
}

class "ArraySpec" {
    + Resolve()
    + Append()
    + ToString()
}

class "PointerSpec" {
    + Resolve()
    + Append()
    + ToString()
}

class "TypeSpec" {
    - GetDisplayFullName()
    + ModifierString()
    - GetModifierString()
    + Resolve()
    - AddName()
    - AddModifier()
    + TypeNameWithoutModifiers()
}

class "TypeSpecTypeName" {
    + NestedName()
}

class "WeakReference" {
    - AllocateHandle()
    + Finalize()
    + GetObjectData()
}

class "WeakReference`1" {
    + GetObjectData()
    + SetTarget()
    + TryGetTarget()
    + Finalize()
}

class "WindowsConsoleDriver" {
    + Beep()
    + Clear()
    + MoveBufferArea()
    + Init()
    + ReadLine()
    + ReadKey()
    + ResetColor()
    + SetBufferSize()
    + SetCursorPosition()
    + SetWindowPosition()
    + SetWindowSize()
}

class "__ComObject" {
    - ReleaseInterfaces()
    + Finalize()
    + Initialize()
    + Initialize()
    - InitializeApartmentDetails()
    + GetInterfaceInternal()
    + GetInterface()
    + GetInterface()
    - CheckIUnknown()
    + Equals()
    + GetHashCode()
    - <Finalize>b__6_0()
}

class "AbandonedMutexException" {
    - SetupException()
}

class "ParameterizedThreadStart" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SendOrPostCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ThreadStart" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CountdownEvent" {
    + Dispose()
    + Dispose()
    + Signal()
    + Signal()
    + AddCount()
    + TryAddCount()
    + AddCount()
    + TryAddCount()
    + Reset()
    + Reset()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    - ThrowIfDisposed()
}

class "<>c" {
    + <.cctor>b__26_0()
}

class "ManualResetEventSlim" {
    - Initialize()
    - EnsureLockObjectCreated()
    - LazyInitializeEvent()
    + Set()
    - Set()
    + Reset()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Dispose()
    + Dispose()
    - ThrowIfDisposed()
    - UpdateStateAtomically()
}

class "CancellationTokenSource" {
    - InitializeWithTimer()
    + Cancel()
    + Cancel()
    + CancelAfter()
    + CancelAfter()
    + Dispose()
    + Dispose()
    + ThrowIfDisposed()
    + InternalRegister()
    - NotifyCancellation()
    - ExecuteCallbackHandlers()
    - CancellationCallbackCoreWork_OnSyncContext()
    - CancellationCallbackCoreWork()
    + WaitForCallbackToComplete()
}

class "Linked1CancellationTokenSource" {
    + Dispose()
}

class "Linked2CancellationTokenSource" {
    + Dispose()
}

class "LinkedNCancellationTokenSource" {
    + Dispose()
}

class "<>c" {
    + <.cctor>b__4_0()
}

class "CancellationCallbackInfo" {
    + ExecuteCallback()
}

class "SparselyPopulatedArray`1" {
    + Add()
}

class "SparselyPopulatedArrayFragment`1" {
    + SafeAtomicRemove()
}

class "ThreadPoolBoundHandle" {
    + AllocateNativeOverlapped()
    + AllocateNativeOverlapped()
    + FreeNativeOverlapped()
    - AddRef()
    - Release()
    + Dispose()
    + Finalize()
    - System.Threading.IDeferredDisposable.OnFinalRelease()
}

class "OverlappedData" {
    + Reset()
}

class "PreAllocatedOverlapped" {
    + AddRef()
    + Release()
    + Dispose()
    + Finalize()
    - System.Threading.IDeferredDisposable.OnFinalRelease()
}

class "Lock" {
    + Acquire()
    + Release()
}

class "SemaphoreSlim" {
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    + Wait()
    - WaitUntilCountOrTimeout()
    + WaitAsync()
    + WaitAsync()
    + WaitAsync()
    + WaitAsync()
    + WaitAsync()
    + WaitAsync()
    - CreateAndAddAsyncWaiter()
    - RemoveAsyncWaiter()
    - WaitUntilCountOrTimeoutAsync()
    + Release()
    + Release()
    + Dispose()
    + Dispose()
    - CheckDispose()
}

class "TaskNode" {
    - System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
    - System.Threading.IThreadPoolWorkItem.MarkAborted()
}

class "ThreadLocal`1" {
    - Initialize()
    + Finalize()
    + Dispose()
    + Dispose()
    + ToString()
    - GetValueSlow()
    - SetValueSlow()
    - CreateLinkedSlot()
    - GetValuesAsList()
    - GrowTable()
}

class "IdManager" {
    + GetId()
    + ReturnId()
}

class "FinalizationHelper" {
    + Finalize()
}

class "EventWaitHandle" {
    + Reset()
    + Set()
    + GetAccessControl()
    + SetAccessControl()
}

class "ContextCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ContextCallback`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExecutionContext" {
    + Dispose()
    + CreateCopy()
    + CreateMutableCopy()
    + GetObjectData()
    + IsDefaultFTContext()
}

class "SynchronizationContext" {
    + SetWaitNotificationRequired()
    + IsWaitNotificationRequired()
    + Send()
    + Post()
    + OperationStarted()
    + OperationCompleted()
    + Wait()
    + CreateCopy()
}

class "WaitDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "InternalCrossContextDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ThreadHelper" {
    + SetExecutionContextHelper()
    + ThreadStart()
    + ThreadStart()
}

class "Thread" {
    + Start()
    + Start()
    - Start()
    + GetExecutionContextReader()
    + GetMutableExecutionContext()
    + SetExecutionContext()
    + SetExecutionContext()
    + SetCompressedStack()
    + GetCompressedStack()
    - ResetAbortNative()
    + Suspend()
    - SuspendInternal()
    + Resume()
    - ResumeInternal()
    + Interrupt()
    - InterruptInternal()
    - GetPriorityNative()
    - SetPriorityNative()
    - JoinInternal()
    + Join()
    + Join()
    + Join()
    - SetStartHelper()
    + GetCurrentUICultureNoAppX()
    - GetCurrentCultureNoAppX()
    - System.Runtime.InteropServices._Thread.GetTypeInfoCount()
    - System.Runtime.InteropServices._Thread.GetTypeInfo()
    - System.Runtime.InteropServices._Thread.GetIDsOfNames()
    - System.Runtime.InteropServices._Thread.Invoke()
    - ConstructInternalThread()
    - Thread_internal()
    + Finalize()
    + Abort()
    + Abort()
    - GetAbortExceptionState()
    - ClearAbortReason()
    - StartInternal()
    - SetStart()
    + GetApartmentState()
    + SetApartmentState()
    + TrySetApartmentState()
    + GetHashCode()
    + DisableComObjectEagerCleanup()
    - ValidateThreadState()
}

class "WaitCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WaitOrTimerCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "IOCompletionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ThreadPoolWorkQueue" {
    + EnsureCurrentThreadHasQueue()
    + EnsureThreadRequested()
    + MarkThreadRequestSatisfied()
    + Enqueue()
    + LocalFindAndPop()
    + Dequeue()
}

class "SparseArray`1" {
    + Add()
    + Remove()
}

class "WorkStealingQueue" {
    + LocalPush()
    + LocalFindAndPop()
    + LocalPop()
    + TrySteal()
    - TrySteal()
}

class "QueueSegment" {
    - GetIndexes()
    - CompareExchangeIndexes()
    + IsUsedUp()
    + TryEnqueue()
    + TryDequeue()
}

class "ThreadPoolWorkQueueThreadLocals" {
    - CleanUp()
    + Finalize()
}

class "QueueUserWorkItemCallback" {
    - System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
    - System.Threading.IThreadPoolWorkItem.MarkAborted()
}

class "<>c__DisplayClass17_0`1" {
    + <QueueUserWorkItem>b__0()
}

class "<>c__DisplayClass18_0`1" {
    + <UnsafeQueueUserWorkItem>b__0()
}

class "<EnumerateQueuedWorkItems>d__23" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Threading.IThreadPoolWorkItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "CompressedStack" {
    + CreateCopy()
    + GetObjectData()
    + Equals()
    + IsEmpty()
}

class "HostExecutionContext" {
    + CreateCopy()
    + Dispose()
    + Dispose()
}

class "HostExecutionContextManager" {
    + Capture()
    + Revert()
    + SetHostExecutionContext()
}

class "LockQueue" {
    + Wait()
    + Pulse()
}

class "Mutex" {
    + GetAccessControl()
    + ReleaseMutex()
    + SetAccessControl()
}

class "Overlapped" {
    + Pack()
    + Pack()
    + UnsafePack()
    + UnsafePack()
}

class "ReaderWriterLock" {
    + Finalize()
    + AcquireReaderLock()
    - AcquireReaderLock()
    + AcquireReaderLock()
    + AcquireWriterLock()
    - AcquireWriterLock()
    + AcquireWriterLock()
    + AnyWritersSince()
    + DowngradeFromWriterLock()
    + ReleaseLock()
    + ReleaseReaderLock()
    - ReleaseReaderLock()
    + ReleaseWriterLock()
    - ReleaseWriterLock()
    + RestoreLock()
    + UpgradeToWriterLock()
    + UpgradeToWriterLock()
    - GetLockCookie()
    - HasWriterLock()
    - CheckTimeout()
}

class "RegisteredWaitHandle" {
    + Wait()
    - DoCallBack()
    + Unregister()
}

class "InternalThread" {
    - Thread_free_internal()
    + Finalize()
}

class "Timer" {
    - Init()
    + Change()
    + Change()
    + Change()
    + Dispose()
    + Change()
    - Change()
    + Dispose()
    + DisposeAsync()
    + KeepRootedWhileScheduled()
}

class "Scheduler" {
    - InitScheduler()
    - WakeupScheduler()
    - SchedulerThread()
    + Remove()
    + Change()
    - Add()
    - InternalRemove()
    - FireTimer()
    - RunSchedulerLoop()
}

class "TimerCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ASCIIEncoding" {
    + SetDefaultFallbacks()
    + GetByteCount()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetBytes()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetString()
    + GetByteCount()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    + GetMaxByteCount()
    + GetMaxCharCount()
    + GetDecoder()
    + GetEncoder()
}

class "InternalDecoderBestFitFallback" {
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "InternalDecoderBestFitFallbackBuffer" {
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    + Reset()
    + InternalFallback()
    - TryBestFit()
}

class "DecoderExceptionFallback" {
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "DecoderExceptionFallbackBuffer" {
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    - Throw()
}

class "DecoderNLS" {
    + Reset()
    + GetCharCount()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetChars()
    + Convert()
    + Convert()
    + ClearMustFlush()
}

class "DecoderReplacementFallback" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "DecoderReplacementFallbackBuffer" {
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    + Reset()
    + InternalFallback()
}

class "InternalEncoderBestFitFallback" {
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "InternalEncoderBestFitFallbackBuffer" {
    + Fallback()
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    + Reset()
    - TryBestFit()
}

class "EncoderExceptionFallback" {
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "EncoderExceptionFallbackBuffer" {
    + Fallback()
    + Fallback()
    + GetNextChar()
    + MovePrevious()
}

class "EncoderFallbackException" {
    + IsUnknownSurrogate()
}

class "EncoderNLS" {
    + Reset()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + Convert()
    + Convert()
    + ClearMustFlush()
}

class "EncoderReplacementFallback" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "EncoderReplacementFallbackBuffer" {
    + Fallback()
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    + Reset()
}

class "EncodingInfo" {
    + GetEncoding()
    + Equals()
    + GetHashCode()
}

class "Latin1Encoding" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetByteCount()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    + GetMaxByteCount()
    + GetMaxCharCount()
    + IsAlwaysNormalized()
    + GetBestFitUnicodeToBytesData()
}

class "StringBuilder" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    - AssertInvariants()
    + EnsureCapacity()
    + ToString()
    + ToString()
    + Clear()
    + Append()
    + Append()
    + Append()
    - AppendHelper()
    + Append()
    + Append()
    + Append()
    - AppendCore()
    + AppendLine()
    + AppendLine()
    + CopyTo()
    + CopyTo()
    + Insert()
    + Remove()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    - AppendSpanFormattable()
    + Append()
    + Append()
    + Append()
    + AppendJoin()
    + AppendJoin()
    + AppendJoin()
    + AppendJoin()
    + AppendJoin()
    + AppendJoin()
    - AppendJoinCore()
    - AppendJoinCore()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + Insert()
    + AppendFormat()
    + AppendFormat()
    + AppendFormat()
    + AppendFormat()
    + AppendFormat()
    + AppendFormat()
    + AppendFormat()
    + AppendFormat()
    + AppendFormatHelper()
    + Replace()
    + Equals()
    + Equals()
    + Replace()
    + Replace()
    + Replace()
    + Append()
    - Insert()
    - ReplaceAllInChunk()
    - StartsWith()
    - ReplaceInPlaceAtChunk()
    - FindChunkForIndex()
    - FindChunkForByte()
    - Next()
    - ExpandByABlock()
    - MakeRoom()
    - Remove()
}

class "UTF32Encoding" {
    + SetDefaultFallbacks()
    + GetByteCount()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetBytes()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetString()
    + GetByteCount()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    - GetSurrogate()
    - GetHighSurrogate()
    - GetLowSurrogate()
    + GetDecoder()
    + GetEncoder()
    + GetMaxByteCount()
    + GetMaxCharCount()
    + GetPreamble()
    + Equals()
    + GetHashCode()
}

class "UTF32Decoder" {
    + Reset()
}

class "UTF7Encoding" {
    - MakeTables()
    + SetDefaultFallbacks()
    + Equals()
    + GetHashCode()
    + GetByteCount()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetBytes()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetString()
    + GetByteCount()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    + GetDecoder()
    + GetEncoder()
    + GetMaxByteCount()
    + GetMaxCharCount()
}

class "Decoder" {
    + Reset()
}

class "Encoder" {
    + Reset()
}

class "DecoderUTF7Fallback" {
    + CreateFallbackBuffer()
    + Equals()
    + GetHashCode()
}

class "DecoderUTF7FallbackBuffer" {
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    + Reset()
    + InternalFallback()
}

class "UTF8Encoding" {
    + SetDefaultFallbacks()
    + GetByteCount()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetBytes()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetString()
    + GetByteCount()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    - FallbackInvalidByteSequence()
    - FallbackInvalidByteSequence()
    - GetBytesUnknown()
    + GetDecoder()
    + GetEncoder()
    + GetMaxByteCount()
    + GetMaxCharCount()
    + GetPreamble()
    + Equals()
    + GetHashCode()
}

class "UTF8Encoder" {
    + Reset()
}

class "UTF8Decoder" {
    + Reset()
}

class "UnicodeEncoding" {
    + SetDefaultFallbacks()
    + GetByteCount()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetBytes()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetString()
    + GetByteCount()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    + GetEncoder()
    + GetDecoder()
    + GetPreamble()
    + GetMaxByteCount()
    + GetMaxCharCount()
    + Equals()
    + GetHashCode()
}

class "Decoder" {
    + Reset()
}

class "DefaultEncoder" {
    + GetRealObject()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
}

class "DefaultDecoder" {
    + GetRealObject()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetCharCount()
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
    + GetChars()
}

class "EncodingCharBuffer" {
    + AddChar()
    + AddChar()
    + AddChar()
    + AdjustBytes()
    + EvenMoreData()
    + GetNextByte()
    + Fallback()
    + Fallback()
    + Fallback()
    + Fallback()
}

class "EncodingByteBuffer" {
    + AddByte()
    + AddByte()
    + AddByte()
    + AddByte()
    + AddByte()
    + AddByte()
    + AddByte()
    + MovePrevious()
    + Fallback()
    + GetNextChar()
}

class "SecurityDocument" {
    + GuaranteeSize()
    + AddString()
    + AppendString()
    + GetString()
    + GetString()
    + AddToken()
    + ConvertElement()
    + GetRootElement()
    + GetElement()
    + InternalGetElement()
    + GetTagForElement()
    + GetChildrenPositionForElement()
    + GetAttributeForElement()
}

class "SecurityContext" {
    + CreateCopy()
    + Dispose()
}

class "HostProtectionException" {
    + GetObjectData()
    + ToString()
}

class "HostSecurityManager" {
    + DetermineApplicationTrust()
    + ProvideAppDomainEvidence()
    + ProvideAssemblyEvidence()
    + ResolvePolicy()
    + GenerateAppDomainEvidence()
    + GenerateAssemblyEvidence()
    + GetHostSuppliedAppDomainEvidenceTypes()
    + GetHostSuppliedAssemblyEvidenceTypes()
}

class "NamedPermissionSet" {
    + Copy()
    + Copy()
    + FromXml()
    + ToXml()
    + Equals()
    + GetHashCode()
}

class "PermissionSet" {
    + AddPermission()
    + Assert()
    + Clear()
    + Copy()
    + CopyTo()
    + Demand()
    + CasOnlyDemand()
    + Deny()
    + FromXml()
    + GetEnumerator()
    + IsSubsetOf()
    + PermitOnly()
    + ContainsNonCodeAccessPermissions()
    + GetPermission()
    + Intersect()
    + InternalIntersect()
    + IsEmpty()
    + IsUnrestricted()
    + RemovePermission()
    + SetPermission()
    + ToString()
    + ToXml()
    + Union()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    + Equals()
    + GetHashCode()
    + SetReadOnly()
    - AllIgnored()
    + AddPermissionImpl()
    + GetEnumeratorImpl()
    + GetPermissionImpl()
    + RemovePermissionImpl()
    + SetPermissionImpl()
}

class "SecureString" {
    + AppendChar()
    + Clear()
    + Copy()
    + Dispose()
    + InsertAt()
    + IsReadOnly()
    + MakeReadOnly()
    + RemoveAt()
    + SetAt()
    - Encrypt()
    - Decrypt()
    - Alloc()
    + GetBuffer()
}

class "SecurityElement" {
    + AddAttribute()
    + AddChild()
    + Attribute()
    + Copy()
    + Equal()
    + SearchForChildByTag()
    + SearchForTextOfTag()
    + ToString()
    - ToXml()
    + GetAttribute()
    + SearchForTextOfLocalName()
}

class "SecurityException" {
    + GetObjectData()
    + ToString()
}

class "Parser" {
    + GetTopElement()
    - GetRequiredSizes()
    - DetermineFormat()
    - ParseContents()
}

class "Tokenizer" {
    + BasicInitialization()
    + Recycle()
    + ChangeFormat()
    + GetTokens()
    - GetStringToken()
}

class "StringMaker" {
    - CompareStringAndChars()
    + MakeString()
}

class "StreamTokenReader" {
    + Read()
}

class "TokenizerStream" {
    + AddToken()
    + AddString()
    + Reset()
    + GetNextFullToken()
    + GetNextToken()
    + GetNextString()
    + ThrowAwayNextString()
    + TagLastToken()
    + GetTokenCount()
    + GoToPosition()
}

class "Publisher" {
    + Copy()
    + CreateIdentityPermission()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "PublisherMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
}

class "AllMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
}

class "ApplicationDirectory" {
    + Copy()
    + Equals()
    + GetHashCode()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
    - ThrowOnInvalid()
}

class "ApplicationDirectoryMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
}

class "ApplicationTrust" {
    + FromXml()
    + ToXml()
    - GetDefaultGrantSet()
}

class "ApplicationTrustCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Clear()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + Find()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
    + Remove()
    + RemoveRange()
    + RemoveRange()
    + RemoveAllInstances()
}

class "ApplicationTrustEnumerator" {
    + Reset()
    + MoveNext()
}

class "CodeConnectAccess" {
    + Equals()
    + GetHashCode()
}

class "Evidence" {
    + AddAssembly()
    + AddHost()
    + Clear()
    + Clone()
    + CopyTo()
    + GetEnumerator()
    + GetAssemblyEnumerator()
    + GetHostEnumerator()
    + Merge()
    + RemoveType()
    + AddAssemblyEvidence()
    + AddHostEvidence()
    + GetAssemblyEvidence()
    + GetHostEvidence()
}

class "EvidenceEnumerator" {
    + MoveNext()
    + Reset()
}

class "FileCodeGroup" {
    + Copy()
    + Resolve()
    + ResolveMatchingCodeGroups()
    + Equals()
    + GetHashCode()
    + ParseXml()
    + CreateXml()
}

class "FirstMatchCodeGroup" {
    + Copy()
    + Resolve()
    + ResolveMatchingCodeGroups()
    - CopyNoChildren()
}

class "GacInstalled" {
    + Copy()
    + CreateIdentityPermission()
    + Equals()
    + GetHashCode()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
}

class "GacMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
}

class "Hash" {
    + GenerateHash()
    + GetObjectData()
    + ToString()
    - GetData()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
}

class "HashMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + ToXml()
    + ToXml()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    - Compare()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "MonoTrustManager" {
    + DetermineApplicationTrust()
    + FromXml()
    + ToXml()
}

class "NetCodeGroup" {
    + AddConnectAccess()
    + Copy()
    - Equals()
    + Equals()
    + GetConnectAccessRules()
    + GetHashCode()
    + Resolve()
    + ResetConnectAccess()
    + ResolveMatchingCodeGroups()
    + CreateXml()
    + ParseXml()
}

class "PermissionRequestEvidence" {
    + Copy()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
}

class "PolicyLevel" {
    + LoadFromFile()
    + LoadFromString()
    - FromString()
    + AddFullTrustAssembly()
    + AddFullTrustAssembly()
    + AddNamedPermissionSet()
    + ChangeNamedPermissionSet()
    + FromXml()
    + GetNamedPermissionSet()
    + Recover()
    + RemoveFullTrustAssembly()
    + RemoveFullTrustAssembly()
    + RemoveNamedPermissionSet()
    + RemoveNamedPermissionSet()
    + Reset()
    + Resolve()
    + ResolveMatchingCodeGroups()
    + ToXml()
    + Save()
    + CreateDefaultLevel()
    + CreateDefaultFullTrustAssemblies()
    + CreateDefaultNamedPermissionSets()
    + ResolveClassName()
    + IsFullTrustAssembly()
}

class "PolicyStatement" {
    + Copy()
    + FromXml()
    + FromXml()
    + ToXml()
    + ToXml()
    + Equals()
    + GetHashCode()
}

class "Site" {
    + Copy()
    + CreateIdentityPermission()
    + Equals()
    + GetHashCode()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
}

class "SiteMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
}

class "StrongName" {
    + Copy()
    + CreateIdentityPermission()
    + Equals()
    + GetHashCode()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
}

class "StrongNameMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + GetHashCode()
    + FromXml()
    + FromXml()
    + ToString()
    + ToXml()
    + ToXml()
}

class "UnionCodeGroup" {
    + Copy()
    + Copy()
    + Resolve()
    + ResolveMatchingCodeGroups()
}

class "Url" {
    + Copy()
    + CreateIdentityPermission()
    + Equals()
    + GetHashCode()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
    - Prepare()
}

class "UrlMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
    + CheckUrl()
}

class "Zone" {
    + Copy()
    + CreateIdentityPermission()
    + Equals()
    + GetHashCode()
    + ToString()
    - System.Security.Policy.IBuiltInEvidence.GetRequiredSize()
    - System.Security.Policy.IBuiltInEvidence.InitFromBuffer()
    - System.Security.Policy.IBuiltInEvidence.OutputToBuffer()
}

class "ZoneMembershipCondition" {
    + Check()
    + Copy()
    + Equals()
    + FromXml()
    + FromXml()
    + GetHashCode()
    + ToString()
    + ToXml()
    + ToXml()
}

class "EnvironmentPermission" {
    + AddPathList()
    + Copy()
    + FromXml()
    + GetPathList()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + SetPathList()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    - Cast()
    + ThrowInvalidFlag()
    - GetPathList()
}

class "EnvironmentPermissionAttribute" {
    + CreatePermission()
}

class "FileDialogPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "FileDialogPermissionAttribute" {
    + CreatePermission()
}

class "FileIOPermission" {
    + CreateLists()
    + AddPathList()
    + AddPathList()
    + AddPathInternal()
    + Copy()
    + FromXml()
    + GetPathList()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + SetPathList()
    + SetPathList()
    + ToXml()
    + Union()
    + Equals()
    + GetHashCode()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    + Clear()
}

class "FileIOPermissionAttribute" {
    + CreatePermission()
}

class "GacIdentityPermission" {
    + Copy()
    + Intersect()
    + IsSubsetOf()
    + Union()
    + FromXml()
    + ToXml()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "GacIdentityPermissionAttribute" {
    + CreatePermission()
}

class "HostProtectionAttribute" {
    + CreatePermission()
}

class "HostProtectionPermission" {
    + Copy()
    + Intersect()
    + Union()
    + IsSubsetOf()
    + FromXml()
    + ToXml()
    + IsUnrestricted()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "IsolatedStorageFilePermission" {
    + Copy()
    + Intersect()
    + IsSubsetOf()
    + Union()
    + ToXml()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "IsolatedStorageFilePermissionAttribute" {
    + CreatePermission()
}

class "KeyContainerPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - SetFlags()
    - Cast()
}

class "KeyContainerPermissionAccessEntry" {
    + Equals()
    + GetHashCode()
}

class "KeyContainerPermissionAccessEntryCollection" {
    + Add()
    + Clear()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + IndexOf()
    + Remove()
}

class "KeyContainerPermissionAccessEntryEnumerator" {
    + MoveNext()
    + Reset()
}

class "KeyContainerPermissionAttribute" {
    + CreatePermission()
    - EmptyEntry()
}

class "PermissionSetAttribute" {
    + CreatePermission()
    - CreateFromXml()
    + CreatePermissionSet()
}

class "PrincipalPermission" {
    + Copy()
    + Demand()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToString()
    + ToXml()
    + Union()
    + Equals()
    + GetHashCode()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
    - IsEmpty()
    + CheckSecurityElement()
}

class "PrincipalPermissionAttribute" {
    + CreatePermission()
}

class "PublisherIdentityPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "PublisherIdentityPermissionAttribute" {
    + CreatePermission()
}

class "ReflectionPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "ReflectionPermissionAttribute" {
    + CreatePermission()
}

class "RegistryPermission" {
    + AddPathList()
    + AddPathList()
    + GetPathList()
    + SetPathList()
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    - Cast()
    + ThrowInvalidFlag()
    - GetPathList()
    + KeyIsSubsetOf()
    + AddWithUnionKey()
    + IntersectKeys()
}

class "RegistryPermissionAttribute" {
    + CreatePermission()
}

class "SecurityPermission" {
    + IsUnrestricted()
    + Copy()
    + Intersect()
    + Union()
    + IsSubsetOf()
    + FromXml()
    + ToXml()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    - Cast()
}

class "SecurityPermissionAttribute" {
    + CreatePermission()
}

class "SiteIdentityPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    - Cast()
    - IsValid()
    - Match()
}

class "SiteIdentityPermissionAttribute" {
    + CreatePermission()
}

class "StrongNameIdentityPermission" {
    + ResetToDefault()
    + Copy()
    + FromXml()
    - FromSecurityElement()
    + Intersect()
    + IsSubsetOf()
    + ToXml()
    - ToSecurityElement()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsUnrestricted()
    - Contains()
    - IsEmpty()
    - IsEmpty()
    - Cast()
    - Match()
}

class "StrongNameIdentityPermissionAttribute" {
    + CreatePermission()
}

class "StrongNamePublicKeyBlob" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "UIPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    - Cast()
}

class "UIPermissionAttribute" {
    + CreatePermission()
}

class "UrlIdentityPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + ToXml()
    + Union()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - IsEmpty()
    - Cast()
    - Match()
}

class "UrlIdentityPermissionAttribute" {
    + CreatePermission()
}

class "ZoneIdentityPermission" {
    + Copy()
    + IsSubsetOf()
    + Union()
    + Intersect()
    + FromXml()
    + ToXml()
    - System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
    - Cast()
}

class "ZoneIdentityPermissionAttribute" {
    + CreatePermission()
}

class "Rfc2898DeriveBytes" {
    + Dispose()
    + GetBytes()
    + CryptDeriveKey()
    + Reset()
    - OpenHmac()
    - Initialize()
    - Func()
}

class "CryptoStream" {
    + FlushFinalBlock()
    + Flush()
    + FlushAsync()
    + Seek()
    + SetLength()
    + ReadAsync()
    + BeginRead()
    + EndRead()
    - ReadAsyncInternal()
    + ReadByte()
    + WriteByte()
    + Read()
    - CheckReadArguments()
    - ReadAsyncCore()
    + WriteAsync()
    + BeginWrite()
    + EndWrite()
    - WriteAsyncInternal()
    + Write()
    - CheckWriteArguments()
    - WriteAsyncCore()
    + Clear()
    + Dispose()
    - InitializeBuffer()
}

class "<>c" {
    + <get_AsyncActiveSemaphore>b__54_0()
}

class "RSAEncryptionPadding" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "RSASignaturePadding" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "ToBase64Transform" {
    + TransformBlock()
    + TransformFinalBlock()
    + Dispose()
    + Clear()
    + Dispose()
    + Finalize()
}

class "FromBase64Transform" {
    + TransformBlock()
    + TransformFinalBlock()
    - DiscardWhiteSpaces()
    + Dispose()
    - Reset()
    + Clear()
    + Dispose()
    + Finalize()
}

class "KeySizes" {
    + IsLegal()
}

class "DESCryptoServiceProvider" {
    + CreateEncryptor()
    + CreateDecryptor()
    + GenerateKey()
    + GenerateIV()
}

class "DSASignatureDeformatter" {
    + SetKey()
    + SetHashAlgorithm()
    + VerifySignature()
}

class "DSASignatureFormatter" {
    + SetKey()
    + SetHashAlgorithm()
    + CreateSignature()
}

class "<>c" {
    + <.ctor>b__1_0()
    + <.ctor>b__1_1()
    + <.ctor>b__1_2()
    + <.ctor>b__1_3()
}

class "<>c" {
    + <.ctor>b__2_0()
    + <.ctor>b__2_1()
    + <.ctor>b__2_2()
    + <.ctor>b__2_3()
}

class "<>c" {
    + <.ctor>b__2_0()
    + <.ctor>b__2_1()
    + <.ctor>b__2_2()
    + <.ctor>b__2_3()
}

class "MACTripleDES" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "TailStream" {
    + Clear()
    + Dispose()
    + Flush()
    + Seek()
    + SetLength()
    + Read()
    + Write()
}

class "PasswordDeriveBytes" {
    + GetBytes()
    + Reset()
    + Dispose()
    + CryptDeriveKey()
    - ComputeBaseValue()
    - ComputeBytes()
    - HashPrefix()
}

class "PKCS1MaskGenerationMethod" {
    + GenerateMask()
}

class "RC2CryptoServiceProvider" {
    + CreateEncryptor()
    + CreateDecryptor()
    + GenerateKey()
    + GenerateIV()
}

class "RijndaelManaged" {
    + CreateEncryptor()
    + CreateDecryptor()
    + GenerateKey()
    + GenerateIV()
    - NewEncryptor()
}

class "RijndaelManagedTransform" {
    + Dispose()
    + Clear()
    - Dispose()
    + TransformBlock()
    + TransformFinalBlock()
    + Reset()
    - EncryptData()
    - DecryptData()
    - Enc()
    - Dec()
    - GenerateKeyExpansion()
}

class "RIPEMD160Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - InitializeState()
    - _HashData()
    - _EndHash()
}

class "RSACryptoServiceProvider" {
    + HashData()
    + HashData()
    + Encrypt()
    + Decrypt()
    + SignHash()
    + VerifyHash()
    - Common()
    - Common()
    + Finalize()
    + Decrypt()
    + DecryptValue()
    + Encrypt()
    + EncryptValue()
    + ExportParameters()
    + ImportParameters()
    - GetHash()
    - GetHashFromString()
    + SignData()
    + SignData()
    + SignData()
    - GetHashNameFromOID()
    + SignHash()
    - SignHash()
    + VerifyData()
    + VerifyHash()
    - VerifyHash()
    + Dispose()
    - OnKeyGenerated()
    + ExportCspBlob()
    + ImportCspBlob()
}

class "RSAOAEPKeyExchangeDeformatter" {
    + DecryptKeyExchange()
    + SetKey()
}

class "RSAOAEPKeyExchangeFormatter" {
    + SetKey()
    + CreateKeyExchange()
    + CreateKeyExchange()
}

class "RSAPKCS1KeyExchangeDeformatter" {
    + DecryptKeyExchange()
    + SetKey()
}

class "RSAPKCS1KeyExchangeFormatter" {
    + SetKey()
    + CreateKeyExchange()
    + CreateKeyExchange()
}

class "SHA1Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - InitializeState()
    - _HashData()
    - _EndHash()
}

class "SHA256Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - InitializeState()
    - _HashData()
    - _EndHash()
}

class "SHA384Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - InitializeState()
    - _HashData()
    - _EndHash()
}

class "SHA512Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - InitializeState()
    - _HashData()
    - _EndHash()
}

class "SignatureDescription" {
    + CreateDeformatter()
    + CreateFormatter()
    + CreateDigest()
}

class "TripleDESCryptoServiceProvider" {
    + CreateEncryptor()
    + CreateDecryptor()
    + GenerateKey()
    + GenerateIV()
}

class "CryptoAPITransform" {
    + Dispose()
    + Clear()
    - Dispose()
    + TransformBlock()
    + TransformFinalBlock()
    + Reset()
}

class "DESTransform" {
    - CipherFunct()
    + SetKey()
    + ProcessBlock()
    + ECB()
}

class "DSACryptoServiceProvider" {
    - Common()
    - Common()
    + Finalize()
    + ExportParameters()
    + ImportParameters()
    + CreateSignature()
    + SignData()
    + SignData()
    + SignData()
    + SignHash()
    + VerifyData()
    + VerifyHash()
    + VerifySignature()
    + HashData()
    + HashData()
    + Dispose()
    - OnKeyGenerated()
    + ExportCspBlob()
    + ImportCspBlob()
}

class "MD5CryptoServiceProvider" {
    + Finalize()
    + Dispose()
    + HashCore()
    + HashFinal()
    + Initialize()
    - ProcessBlock()
    - ProcessFinalBlock()
    + AddLength()
}

class "RC2Transform" {
    + ECB()
}

class "RNGCryptoServiceProvider" {
    - Check()
    + GetBytes()
    + GetBytes()
    + GetNonZeroBytes()
    + Finalize()
    + Dispose()
}

class "RSAPKCS1SignatureDeformatter" {
    + SetHashAlgorithm()
    + SetKey()
    + VerifySignature()
}

class "RSAPKCS1SignatureFormatter" {
    + CreateSignature()
    + SetHashAlgorithm()
    + SetKey()
}

class "SHA1Internal" {
    + HashCore()
    + HashFinal()
    + Initialize()
    - ProcessBlock()
    - ProcessFinalBlock()
    + AddLength()
}

class "SHA1CryptoServiceProvider" {
    + Finalize()
    + Dispose()
    + HashCore()
    + HashFinal()
    + Initialize()
}

class "TripleDESTransform" {
    + ECB()
}

class "AesCcm" {
    + Decrypt()
    + Decrypt()
    + Dispose()
    + Encrypt()
    + Encrypt()
}

class "AesGcm" {
    + Decrypt()
    + Decrypt()
    + Dispose()
    + Encrypt()
    + Encrypt()
}

class "X509Certificate" {
    + Reset()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    + Dispose()
    + Dispose()
    + Equals()
    + Equals()
    + Export()
    + Export()
    + Export()
    + GetRawCertDataString()
    + GetCertHash()
    + GetCertHash()
    + TryGetCertHash()
    + GetCertHashString()
    + GetCertHashString()
    - GetRawCertHash()
    + GetEffectiveDateString()
    + GetExpirationDateString()
    + GetFormat()
    + GetPublicKeyString()
    + GetRawCertData()
    + GetHashCode()
    + GetKeyAlgorithm()
    + GetKeyAlgorithmParameters()
    + GetKeyAlgorithmParametersString()
    + GetPublicKey()
    + GetSerialNumber()
    + GetSerialNumberString()
    - GetRawSerialNumber()
    + GetName()
    + GetIssuerName()
    + ToString()
    + ToString()
    + Import()
    + Import()
    + Import()
    + Import()
    + Import()
    + Import()
    + GetNotAfter()
    + GetNotBefore()
    - VerifyContentType()
    + ImportHandle()
    + ThrowIfInvalid()
}

class "GenericIdentity" {
    + Clone()
    - AddNameClaim()
}

class "GenericPrincipal" {
    + IsInRole()
}

class "IdentityNotMappedException" {
    + GetObjectData()
}

class "IdentityReferenceCollection" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
    + Translate()
    + Translate()
}

class "NTAccount" {
    + Equals()
    + GetHashCode()
    + IsValidTargetType()
    + ToString()
    + Translate()
}

class "SecurityIdentifier" {
    - CreateFromBinaryForm()
    - GetSidAuthority()
    - GetSidSubAuthorityCount()
    - GetSidSubAuthority()
    + CompareTo()
    + Equals()
    + Equals()
    + GetBinaryForm()
    + GetHashCode()
    + IsAccountSid()
    + IsEqualDomainSid()
    + IsValidTargetType()
    + IsWellKnown()
    + ToString()
    + Translate()
    + GetSddlForm()
}

class "WindowsIdentity" {
    + Dispose()
    + Dispose()
    + Impersonate()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + CloneAsBase()
    + GetTokenInternal()
    - SetToken()
}

class "WindowsImpersonationContext" {
    + Dispose()
    + Dispose()
    + Undo()
}

class "WindowsPrincipal" {
    + IsInRole()
    + IsInRole()
    + IsInRole()
    + IsInRole()
}

class "Claim" {
    - OnDeserializedMethod()
    + Clone()
    + Clone()
    - Initialize()
    + WriteTo()
    + WriteTo()
    + ToString()
}

class "ClaimsIdentity" {
    + Clone()
    + AddClaim()
    + AddClaims()
    + TryRemoveClaim()
    + RemoveClaim()
    - SafeAddClaims()
    - SafeAddClaim()
    + FindAll()
    + FindAll()
    + HasClaim()
    + HasClaim()
    + FindFirst()
    + FindFirst()
    - OnSerializingMethod()
    - OnDeserializedMethod()
    - OnDeserializingMethod()
    + GetObjectData()
    - DeserializeClaims()
    - SerializeClaims()
    - IsCircular()
    - Initialize()
    + CreateClaim()
    + WriteTo()
    + WriteTo()
    - Deserialize()
}

class "<get_Claims>d__51" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ClaimsPrincipal" {
    + Clone()
    + CreateClaimsIdentity()
    - OnSerializingMethod()
    - OnDeserializedMethod()
    + GetObjectData()
    - Deserialize()
    - DeserializeIdentities()
    - SerializeIdentities()
    + AddIdentity()
    + AddIdentities()
    + FindAll()
    + FindAll()
    + FindFirst()
    + FindFirst()
    + HasClaim()
    + HasClaim()
    + IsInRole()
    - Initialize()
    + WriteTo()
    + WriteTo()
}

class "<get_Claims>d__37" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<get_Claims>d__5" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "RegistrySecurity" {
    + AccessRuleFactory()
    + AuditRuleFactory()
    + GetAccessControlSectionsFromChanges()
    + Persist()
    + AddAccessRule()
    + SetAccessRule()
    + ResetAccessRule()
    + RemoveAccessRule()
    + RemoveAccessRuleAll()
    + RemoveAccessRuleSpecific()
    + AddAuditRule()
    + SetAuditRule()
    + RemoveAuditRule()
    + RemoveAuditRuleAll()
    + RemoveAuditRuleSpecific()
}

class "PrivilegeNotHeldException" {
    + GetObjectData()
}

class "AceEnumerator" {
    + MoveNext()
    + Reset()
}

class "AuthorizationRuleCollection" {
    + AddRule()
    + CopyTo()
}

class "CommonAce" {
    + GetBinaryForm()
    + GetSddlForm()
}

class "RemoveAcesCallback`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass30_0" {
    + <Purge>b__0()
}

class "<>c" {
    + <RemoveInheritedAces>b__31_0()
}

class "<>c__DisplayClass53_0" {
    + <RemoveAceSpecific>b__0()
}

class "<>c__DisplayClass54_0" {
    + <RemoveAceSpecific>b__0()
}

class "<>c__DisplayClass57_0" {
    + <SetAce>b__0()
}

class "CommonSecurityDescriptor" {
    - Init()
    - Init()
    + PurgeAccessControl()
    + PurgeAudit()
    + SetDiscretionaryAclProtection()
    + SetSystemAclProtection()
    + AddDiscretionaryAcl()
    + AddSystemAcl()
    - CheckAclConsistency()
}

class "CompoundAce" {
    + GetBinaryForm()
    + GetSddlForm()
}

class "CryptoKeySecurity" {
    + AccessRuleFactory()
    + AddAccessRule()
    + RemoveAccessRule()
    + RemoveAccessRuleAll()
    + RemoveAccessRuleSpecific()
    + ResetAccessRule()
    + SetAccessRule()
    + AuditRuleFactory()
    + AddAuditRule()
    + RemoveAuditRule()
    + RemoveAuditRuleAll()
    + RemoveAuditRuleSpecific()
    + SetAuditRule()
}

class "CustomAce" {
    + GetBinaryForm()
    + GetOpaque()
    + SetOpaque()
    + GetSddlForm()
}

class "DiscretionaryAcl" {
    + AddAccess()
    + AddAccess()
    + AddAccess()
    + RemoveAccess()
    + RemoveAccess()
    + RemoveAccess()
    + RemoveAccessSpecific()
    + RemoveAccessSpecific()
    + RemoveAccessSpecific()
    + SetAccess()
    + SetAccess()
    + SetAccess()
    + ApplyCanonicalSortToExplicitAces()
    + GetAceInsertPosition()
    + IsAceMeaningless()
}

class "EventWaitHandleSecurity" {
    + AccessRuleFactory()
    + AddAccessRule()
    + RemoveAccessRule()
    + RemoveAccessRuleAll()
    + RemoveAccessRuleSpecific()
    + ResetAccessRule()
    + SetAccessRule()
    + AuditRuleFactory()
    + AddAuditRule()
    + RemoveAuditRule()
    + RemoveAuditRuleAll()
    + RemoveAuditRuleSpecific()
    + SetAuditRule()
    + Persist()
}

class "MutexSecurity" {
    + AccessRuleFactory()
    + AddAccessRule()
    + RemoveAccessRule()
    + RemoveAccessRuleAll()
    + RemoveAccessRuleSpecific()
    + ResetAccessRule()
    + SetAccessRule()
    + AuditRuleFactory()
    + AddAuditRule()
    + RemoveAuditRule()
    + RemoveAuditRuleAll()
    + RemoveAuditRuleSpecific()
    + SetAuditRule()
}

class "ExceptionFromErrorCode" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetSecurityInfoNativeCall" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SetSecurityInfoNativeCall" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass19_0" {
    + <InternalGet>b__0()
}

class "<>c__DisplayClass20_0" {
    + <InternalGet>b__0()
}

class "<>c__DisplayClass21_0" {
    + <InternalSet>b__0()
}

class "<>c__DisplayClass22_0" {
    + <InternalSet>b__0()
}

class "ObjectAce" {
    + GetBinaryForm()
    + GetSddlForm()
    - WriteGuid()
    - ReadGuid()
}

class "RawAcl" {
    + GetBinaryForm()
    + InsertAce()
    + RemoveAce()
    + GetSddlForm()
    - WriteUShort()
    - ReadUShort()
}

class "RawSecurityDescriptor" {
    + SetFlags()
    - ParseSddl()
    - ReadUShort()
    - ReadInt()
}

class "SystemAcl" {
    + AddAudit()
    + AddAudit()
    + AddAudit()
    + RemoveAudit()
    + RemoveAudit()
    + RemoveAudit()
    + RemoveAuditSpecific()
    + RemoveAuditSpecific()
    + RemoveAuditSpecific()
    + SetAudit()
    + SetAudit()
    + SetAudit()
    + ApplyCanonicalSortToExplicitAces()
    + GetAceInsertPosition()
    + IsAceMeaningless()
}

class "MemoryFailPoint" {
    + Finalize()
    + Dispose()
}

class "ApplicationActivator" {
    + CreateInstance()
    + CreateInstance()
}

class "ActivatedClientTypeEntry" {
    + ToString()
}

class "ActivatedServiceTypeEntry" {
    + ToString()
}

class "ClientIdentity" {
    + CreateObjRef()
}

class "ObjRef" {
    + DeserializeInTheCurrentDomain()
    + SerializeType()
    + IsPossibleToCAD()
    + GetObjectData()
    + GetRealObject()
    + IsFromThisAppDomain()
    + IsFromThisProcess()
    + UpdateChannelInfo()
    + SetDomainID()
}

class "ObjectHandle" {
    + InitializeLifetimeService()
    + Unwrap()
}

class "ConfigHandler" {
    - ValidatePath()
    - CheckPath()
    + OnStartParsing()
    + OnProcessingInstruction()
    + OnIgnorableWhitespace()
    + OnStartElement()
    + ParseElement()
    + OnEndElement()
    - ReadCustomProviderData()
    - ReadLifetine()
    - ParseTime()
    - ReadChannel()
    - ReadProvider()
    - ReadClientActivated()
    - ReadServiceActivated()
    - ReadClientWellKnown()
    - ReadServiceWellKnown()
    - ReadInteropXml()
    - ReadPreload()
    - GetNotNull()
    - ExtractAssembly()
    + OnChars()
    + OnEndParsing()
}

class "ChannelData" {
    + CopyFrom()
}

class "ProviderData" {
    + CopyFrom()
}

class "ClientActivatedIdentity" {
    + GetServerObject()
    + GetClientProxy()
    + SetClientProxy()
    + OnLifetimeExpired()
    + SyncObjectProcessMessage()
    + AsyncObjectProcessMessage()
}

class "SingletonIdentity" {
    + GetServerObject()
    + SyncObjectProcessMessage()
    + AsyncObjectProcessMessage()
}

class "SingleCallIdentity" {
    + SyncObjectProcessMessage()
    + AsyncObjectProcessMessage()
}

class "DisposerReplySink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "TypeInfo" {
    + CanCastTo()
}

class "WellKnownClientTypeEntry" {
    + ToString()
}

class "WellKnownServiceTypeEntry" {
    + ToString()
}

class "ProxyAttribute" {
    + CreateInstance()
    + CreateProxy()
    + GetPropertiesForNewContext()
    + IsContextOK()
}

class "TransparentProxy" {
    + GetProxyType()
    - InCurrentContext()
    + LoadRemoteFieldNew()
    + StoreRemoteField()
}

class "RemotingProxy" {
    + Invoke()
    + AttachIdentity()
    + ActivateRemoteObject()
    + CanCastTo()
    + Finalize()
}

class "ClientSponsor" {
    + Close()
    + Finalize()
    + InitializeLifetimeService()
    + Register()
    + Renewal()
    + Unregister()
}

class "Lease" {
    + Activate()
    + Register()
    + Register()
    + Renew()
    + Unregister()
    + UpdateState()
    - CheckNextSponsor()
    - ProcessSponsorResponse()
}

class "RenewalDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LeaseManager" {
    + SetPollTime()
    + TrackLifetime()
    + StopTrackingLifetime()
    + StartManager()
    + StopManager()
    + ManageLeases()
}

class "LeaseSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
    - RenewLease()
}

class "Context" {
    + Finalize()
    + NotifyDynamicSinks()
    + GetProperty()
    + SetProperty()
    + Freeze()
    + ToString()
    + GetServerContextSinkChain()
    + GetClientContextSinkChain()
    + CreateServerObjectSinkChain()
    + CreateEnvoySink()
    + DoCallBack()
}

class "DynamicPropertyCollection" {
    + RegisterDynamicProperty()
    + UnregisterDynamicProperty()
    + NotifyMessage()
    - FindProperty()
}

class "ContextCallbackObject" {
    + DoCallBack()
}

class "ContextAttribute" {
    + Equals()
    + Freeze()
    + GetHashCode()
    + GetPropertiesForNewContext()
    + IsContextOK()
    + IsNewContextOK()
}

class "CrossContextChannel" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ContextRestoreSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "CrossContextDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SynchronizationAttribute" {
    + AcquireLock()
    + ReleaseLock()
    + GetPropertiesForNewContext()
    + GetClientContextSink()
    + GetServerContextSink()
    + IsContextOK()
}

class "SynchronizedClientContextSink" {
    + AsyncProcessMessage()
    + SyncProcessMessage()
}

class "SynchronizedServerContextSink" {
    + AsyncProcessMessage()
    + SyncProcessMessage()
}

class "SynchronizedContextReplySink" {
    + AsyncProcessMessage()
    + SyncProcessMessage()
}

class "AggregateDictionary" {
    + Add()
    + Clear()
    + Contains()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
    + CopyTo()
}

class "AggregateEnumerator" {
    + MoveNext()
    + Reset()
}

class "ExceptionFilterSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ClientChannelSinkStack" {
    + AsyncProcessResponse()
    + DispatchException()
    + DispatchReplyMessage()
    + Pop()
    + Push()
}

class "CrossAppDomainChannel" {
    + Parse()
    + GetUrlsForUri()
    + StartListening()
    + StopListening()
    + CreateMessageSink()
}

class "CrossAppDomainSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
    + SendAsyncMessage()
    - <AsyncProcessMessage>b__10_0()
}

class "ServerChannelSinkStack" {
    + GetResponseStream()
    + Pop()
    + Push()
    + ServerCallback()
    + Store()
    + StoreAndDispatch()
    + AsyncProcessResponse()
}

class "ServerDispatchSink" {
    + AsyncProcessResponse()
    + GetResponseStream()
    + ProcessMessage()
}

class "ServerDispatchSinkProvider" {
    + CreateSink()
    + GetChannelData()
}

class "TransportHeaders" {
    + GetEnumerator()
}

class "AppDomainLevelActivator" {
    + Activate()
}

class "ConstructionLevelActivator" {
    + Activate()
}

class "ContextLevelActivator" {
    + Activate()
}

class "RemoteActivationAttribute" {
    + IsContextOK()
    + GetPropertiesForNewContext()
}

class "RemoteActivator" {
    + Activate()
    + InitializeLifetimeService()
}

class "UrlAttribute" {
    + Equals()
    + GetHashCode()
    + GetPropertiesForNewContext()
    + IsContextOK()
}

class "SoapAttribute" {
    + SetReflectionObject()
}

class "SoapFieldAttribute" {
    + IsInteropXmlElement()
    + SetReflectionObject()
}

class "SoapMethodAttribute" {
    + SetReflectionObject()
}

class "SoapTypeAttribute" {
    + SetReflectionObject()
}

class "SoapAnyUri" {
    + GetXsdType()
    + ToString()
}

class "SoapBase64Binary" {
    + GetXsdType()
    + ToString()
}

class "SoapDate" {
    + GetXsdType()
    + ToString()
}

class "SoapDay" {
    + GetXsdType()
    + ToString()
}

class "SoapEntities" {
    + GetXsdType()
    + ToString()
}

class "SoapEntity" {
    + GetXsdType()
    + ToString()
}

class "SoapHexBinary" {
    + GetXsdType()
    + ToString()
}

class "SoapId" {
    + GetXsdType()
    + ToString()
}

class "SoapIdref" {
    + GetXsdType()
    + ToString()
}

class "SoapIdrefs" {
    + GetXsdType()
    + ToString()
}

class "SoapInteger" {
    + GetXsdType()
    + ToString()
}

class "SoapLanguage" {
    + GetXsdType()
    + ToString()
}

class "SoapMonth" {
    + GetXsdType()
    + ToString()
}

class "SoapMonthDay" {
    + GetXsdType()
    + ToString()
}

class "SoapName" {
    + GetXsdType()
    + ToString()
}

class "SoapNcName" {
    + GetXsdType()
    + ToString()
}

class "SoapNegativeInteger" {
    + GetXsdType()
    + ToString()
}

class "SoapNmtoken" {
    + GetXsdType()
    + ToString()
}

class "SoapNmtokens" {
    + GetXsdType()
    + ToString()
}

class "SoapNonNegativeInteger" {
    + GetXsdType()
    + ToString()
}

class "SoapNonPositiveInteger" {
    + GetXsdType()
    + ToString()
}

class "SoapNormalizedString" {
    + GetXsdType()
    + ToString()
}

class "SoapNotation" {
    + GetXsdType()
    + ToString()
}

class "SoapPositiveInteger" {
    + GetXsdType()
    + ToString()
}

class "SoapQName" {
    + GetXsdType()
    + ToString()
}

class "SoapTime" {
    + GetXsdType()
    + ToString()
}

class "SoapToken" {
    + GetXsdType()
    + ToString()
}

class "SoapYear" {
    + GetXsdType()
    + ToString()
}

class "SoapYearMonth" {
    + GetXsdType()
    + ToString()
}

class "IllogicalCallContext" {
    + FreeNamedDataSlot()
    + GetData()
    + SetData()
    + CreateCopy()
}

class "LogicalCallContext" {
    + GetObjectData()
    + Clone()
    + Merge()
    + FreeNamedDataSlot()
    + GetData()
    + SetData()
    - InternalGetOutgoingHeaders()
    + InternalSetHeaders()
    + InternalGetHeaders()
    + RemovePrincipalIfNotSerializable()
    + PropagateOutgoingHeadersToMessage()
    + PropagateIncomingHeadersToCallContext()
}

class "CallContextSecurityData" {
    + Clone()
}

class "CallContextRemotingData" {
    + Clone()
}

class "ArgInfo" {
    + GetInOutArgIndex()
    + GetInOutArgName()
    + GetInOutArgCount()
    + GetInOutArgs()
}

class "CADMethodRef" {
    - GetTypes()
    + Resolve()
}

class "CADMessageBase" {
    + GetMethod()
    + MarshalArgument()
    + UnmarshalArgument()
    + MarshalArguments()
    + UnmarshalArguments()
    + SaveLogicalCallContext()
    + GetLogicalCallContext()
}

class "CADMethodCallMessage" {
    + GetArguments()
    + GetArgs()
}

class "CADMethodReturnMessage" {
    + GetArguments()
    + GetArgs()
    + GetReturnValue()
    + GetException()
}

class "ClientContextTerminatorSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ClientContextReplySink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ConstructionCall" {
    + InitDictionary()
    + SetActivationAttributes()
    + InitMethodProperty()
    + GetObjectData()
}

class "ConstructionCallDictionary" {
    + GetMethodProperty()
    + SetMethodProperty()
}

class "EnvoyTerminatorSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ErrorMessage" {
    + GetArg()
    + GetArgName()
    + GetInArgName()
    + GetInArg()
}

class "HeaderHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MessageSurrogateFilter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MethodCall" {
    + CopyFrom()
    + InitMethodProperty()
    + GetObjectData()
    + InitDictionary()
    + GetArg()
    + GetArgName()
    + GetInArg()
    + GetInArgName()
    + HeaderHandler()
    + Init()
    + ResolveMethod()
    - CastTo()
    + RootSetObjectData()
    - System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
}

class "MethodCallMessageWrapper" {
    + GetArg()
    + GetArgName()
    + GetInArg()
    + GetInArgName()
}

class "DictionaryWrapper" {
    + AllocInternalProperties()
    + SetMethodProperty()
    + GetMethodProperty()
}

class "MessageDictionary" {
    + HasUserData()
    + AllocInternalProperties()
    + GetInternalProperties()
    - IsOverridenKey()
    + GetMethodProperty()
    + SetMethodProperty()
    + Add()
    + Clear()
    + Contains()
    + Remove()
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
}

class "DictionaryEnumerator" {
    + MoveNext()
    + Reset()
}

class "MethodResponse" {
    + InitMethodProperty()
    + GetArg()
    + GetArgName()
    + GetObjectData()
    + GetOutArg()
    + GetOutArgName()
    + HeaderHandler()
    + RootSetObjectData()
    - System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
}

class "MethodReturnMessageWrapper" {
    + GetArg()
    + GetArgName()
    + GetOutArg()
    + GetOutArgName()
}

class "DictionaryWrapper" {
    + AllocInternalProperties()
    + SetMethodProperty()
    + GetMethodProperty()
}

class "MonoMethodMessage" {
    + InitMessage()
    + GetArg()
    + GetArgName()
    + GetInArg()
    + GetInArgName()
    + GetOutArg()
    + GetOutArgName()
    - System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
    + NeedsOutProcessing()
}

class "RemotingSurrogate" {
    + GetObjectData()
    + SetObjectData()
}

class "ObjRefSurrogate" {
    + GetObjectData()
    + SetObjectData()
}

class "RemotingSurrogateSelector" {
    + ChainSelector()
    + GetNextSelector()
    + GetRootObject()
    + GetSurrogate()
    + SetRootObject()
    + UseSoapFormat()
}

class "ReturnMessage" {
    + GetArg()
    + GetArgName()
    + GetOutArg()
    + GetOutArgName()
    - System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
    + HasProperties()
}

class "ServerContextTerminatorSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ServerObjectTerminatorSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "ServerObjectReplySink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
}

class "StackBuilderSink" {
    + SyncProcessMessage()
    + AsyncProcessMessage()
    - ExecuteAsyncMessage()
    - CheckParameters()
    - <AsyncProcessMessage>b__4_0()
}

class "SerializationInfoEnumerator" {
    + MoveNext()
    + Reset()
}

class "DeserializationEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SerializationEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FormatterConverter" {
    + Convert()
    + Convert()
    + ToBoolean()
    + ToChar()
    + ToSByte()
    + ToByte()
    + ToInt16()
    + ToUInt16()
    + ToInt32()
    + ToUInt32()
    + ToInt64()
    + ToUInt64()
    + ToSingle()
    + ToDouble()
    + ToDecimal()
    + ToDateTime()
    + ToString()
}

class "MemberHolder" {
    + GetHashCode()
    + Equals()
}

class "SerializationEvents" {
    - GetMethodsWithAttribute()
    + InvokeOnSerializing()
    + InvokeOnDeserializing()
    + InvokeOnDeserialized()
    + AddOnSerialized()
    + AddOnDeserialized()
}

class "<>c" {
    + <GetSerializationEventsForType>b__1_0()
}

class "SerializationObjectManager" {
    + RegisterObject()
    + RaiseOnSerializedEvent()
    - AddOnSerialized()
}

class "<>c__DisplayClass9_0" {
    + <GetSerializableMembers>b__0()
}

class "SurrogateForCyclicalReference" {
    + GetObjectData()
    + SetObjectData()
}

class "ObjectIDGenerator" {
    - FindElement()
    + GetId()
    + HasId()
    - Rehash()
}

class "ObjectManager" {
    - CanCallGetType()
    + FindObjectHolder()
    + FindOrCreateObjectHolder()
    - AddObjectHolder()
    - GetCompletionInfo()
    - FixupSpecialObject()
    - ResolveObjectReference()
    - DoValueTypeFixup()
    - DumpValueTypeFixup()
    + CompleteObject()
    - DoNewlyRegisteredObjectFixups()
    + GetObject()
    + RegisterObject()
    + RegisterObject()
    + RegisterObject()
    + RegisterString()
    + RegisterObject()
    + CompleteISerializableObject()
    + DoFixups()
    - RegisterFixup()
    + RecordFixup()
    + RecordDelayedFixup()
    + RecordArrayElementFixup()
    + RecordArrayElementFixup()
    + RaiseDeserializationEvent()
    + AddOnDeserialization()
    + RemoveOnDeserialization()
    + AddOnDeserialized()
    + RaiseOnDeserializedEvent()
    + RaiseOnDeserializingEvent()
}

class "ObjectHolder" {
    - IncrementDescendentFixups()
    + DecrementFixupsRemaining()
    + RemoveDependency()
    + AddFixup()
    - UpdateDescendentDependencyChain()
    + AddDependency()
    + UpdateData()
    + MarkForCompletionWhenAvailable()
    + SetFlags()
    + SetObjectValue()
}

class "FixupHolderList" {
    + Add()
    + Add()
    - EnlargeArray()
}

class "LongList" {
    + Add()
    + StartEnumeration()
    + MoveNext()
    + RemoveElement()
    - EnlargeArray()
}

class "ObjectHolderList" {
    + Add()
    + GetFixupEnumerator()
    - EnlargeArray()
}

class "ObjectHolderListEnumerator" {
    + MoveNext()
}

class "SafeSerializationEventArgs" {
    + AddSerializedState()
}

class "SafeSerializationManager" {
    + CompleteSerialization()
    + CompleteDeserialization()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    - System.Runtime.Serialization.IObjectReference.GetRealObject()
    - OnDeserialized()
}

class "SerializationFieldInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetValue()
    + InternalGetValue()
    + SetValue()
    + InternalSetValue()
}

class "SerializationInfo" {
    + SetType()
    + GetEnumerator()
    - ExpandArrays()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValue()
    + AddValueInternal()
    + UpdateValue()
    - FindElement()
    - GetElement()
    - GetElementNoThrow()
    + GetValue()
    + GetValueNoThrow()
    + GetBoolean()
    + GetChar()
    + GetSByte()
    + GetByte()
    + GetInt16()
    + GetUInt16()
    + GetInt32()
    + GetUInt32()
    + GetInt64()
    + GetUInt64()
    + GetSingle()
    + GetDouble()
    + GetDecimal()
    + GetDateTime()
    + GetString()
}

class "SurrogateSelector" {
    + AddSurrogate()
    + ChainSelector()
    + GetNextSelector()
    + GetSurrogate()
    + RemoveSurrogate()
}

class "SurrogateKey" {
    + GetHashCode()
}

class "SurrogateHashtable" {
    + KeyEquals()
}

class "SoapFault" {
    + GetObjectData()
}

class "BinaryAssemblyInfo" {
    + GetAssembly()
}

class "SerializationHeaderRecord" {
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryAssembly" {
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryCrossAppDomainAssembly" {
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryObject" {
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryMethodCall" {
    + WriteArray()
    + Write()
    + Read()
    + ReadArray()
    + Dump()
    - DumpInternal()
}

class "BinaryMethodReturn" {
    + WriteArray()
    + Write()
    + Read()
    + ReadArray()
    + Dump()
    - DumpInternal()
}

class "BinaryObjectString" {
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryCrossAppDomainString" {
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryCrossAppDomainMap" {
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "MemberPrimitiveTyped" {
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryObjectWithMap" {
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "BinaryObjectWithMapTyped" {
    + Set()
    + Write()
    + Read()
}

class "BinaryArray" {
    + Set()
    + Write()
    + Read()
}

class "MemberPrimitiveUnTyped" {
    + Set()
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "MemberReference" {
    + Set()
    + Write()
    + Read()
    + Dump()
    - DumpInternal()
}

class "ObjectNull" {
    + SetNullCount()
    + Write()
    + Read()
    + Read()
    + Dump()
    - DumpInternal()
}

class "MessageEnd" {
    + Write()
    + Read()
    + Dump()
    + Dump()
    - DumpInternal()
}

class "ObjectMap" {
    + CreateObjectInfo()
}

class "ObjectProgress" {
    - Counter()
    + Init()
    + ArrayCountIncrement()
    + GetNext()
}

class "BinaryFormatter" {
    + Deserialize()
    + Deserialize()
    + Deserialize()
    + DeserializeMethodResponse()
    + UnsafeDeserialize()
    + UnsafeDeserializeMethodResponse()
    + Deserialize()
    + Deserialize()
    + Serialize()
    + Serialize()
    + Serialize()
}

class "__BinaryWriter" {
    + WriteBegin()
    + WriteEnd()
    + WriteBoolean()
    + WriteByte()
    - WriteBytes()
    - WriteBytes()
    + WriteChar()
    + WriteChars()
    + WriteDecimal()
    + WriteSingle()
    + WriteDouble()
    + WriteInt16()
    + WriteInt32()
    + WriteInt64()
    + WriteSByte()
    + WriteString()
    + WriteTimeSpan()
    + WriteDateTime()
    + WriteUInt16()
    + WriteUInt32()
    + WriteUInt64()
    + WriteObjectEnd()
    + WriteSerializationHeaderEnd()
    + WriteSerializationHeader()
    + WriteMethodCall()
    + WriteCallArray()
    + WriteMethodReturn()
    + WriteReturnArray()
    + WriteObject()
    + WriteObjectString()
    + WriteSingleArray()
    - WriteArrayAsBytes()
    + WriteJaggedArray()
    + WriteRectangleArray()
    + WriteObjectByteArray()
    + WriteMember()
    + WriteNullMember()
    + WriteMemberObjectRef()
    + WriteMemberNested()
    + WriteMemberString()
    + WriteItem()
    + WriteNullItem()
    + WriteDelayedNullItem()
    + WriteItemEnd()
    - InternalWriteItemNull()
    + WriteItemObjectRef()
    + WriteAssembly()
    + WriteValue()
}

class "ObjectMapInfo" {
    + isCompatible()
}

class "BinaryMethodCallMessage" {
    + PopulateMessageProperties()
}

class "BinaryMethodReturnMessage" {
    + PopulateMessageProperties()
}

class "WriteObjectInfo" {
    + ObjectEnd()
    - InternalInit()
    + InitSerialize()
    - DumpMemberInfo()
    + InitSerialize()
    - InitSiWrite()
    - InitNoMembers()
    - InitMemberInfo()
    + GetTypeFullName()
    + GetAssemblyString()
    - InvokeSerializationBinder()
    + GetMemberType()
    + GetMemberInfo()
}

class "ReadObjectInfo" {
    + ObjectEnd()
    + PrepareForReuse()
    + Init()
    + Init()
    - InitReadConstructor()
    - InitSiRead()
    - InitNoMembers()
    - InitMemberInfo()
    + GetMemberInfo()
    + GetType()
    + AddValue()
    + InitDataStore()
    + RecordFixup()
    + PopulateObjectMembers()
    - DumpPopulate()
    - DumpPopulateSi()
    - Position()
    + GetMemberTypes()
    + GetMemberType()
}

class "ObjectReader" {
    + SetMethodCall()
    + SetMethodReturn()
    + Deserialize()
    - HasSurrogate()
    - CheckSerializable()
    - InitFullDeserialization()
    + CrossAppDomainArray()
    + CreateReadObjectInfo()
    + CreateReadObjectInfo()
    + Parse()
    - ParseError()
    - ParseSerializedStreamHeader()
    - ParseSerializedStreamHeaderEnd()
    + CheckSecurity()
    - ParseObject()
    - ParseObjectEnd()
    - ParseArray()
    - NextRectangleMap()
    - ParseArrayMember()
    - ParseArrayMemberEnd()
    - ParseMember()
    - ParseMemberEnd()
    - ParseString()
    - RegisterObject()
    - RegisterObject()
    + GetId()
    - IndexTraceMessage()
    + Bind()
    + FastBindToType()
    + GetType()
}

class "TopLevelAssemblyTypeResolver" {
    + ResolveType()
}

class "ObjectWriter" {
    + Serialize()
    - WriteMethodCall()
    - WriteMethodReturn()
    - Write()
    - Write()
    - WriteMemberSetup()
    - WriteMembers()
    - WriteArray()
    - WriteArrayMember()
    - WriteRectangle()
    - IndexTraceMessage()
    - GetNext()
    - InternalGetId()
    - Schedule()
    - Schedule()
    - WriteKnownValueClass()
    - WriteObjectRef()
    - WriteString()
    - CheckForNull()
    - WriteSerializedStreamHeader()
    - TypeToNameInfo()
    - TypeToNameInfo()
    - TypeToNameInfo()
    - TypeToNameInfo()
    - TypeToNameInfo()
    - MemberToNameInfo()
    + ToCode()
    - GetAssemblyId()
    - GetType()
    - GetNameInfo()
    - CheckTypeFormat()
    - PutNameInfo()
}

class "__BinaryParser" {
    + Run()
    + ReadBegin()
    + ReadEnd()
    + ReadBoolean()
    + ReadByte()
    + ReadBytes()
    + ReadBytes()
    + ReadChar()
    + ReadChars()
    + ReadDecimal()
    + ReadSingle()
    + ReadDouble()
    + ReadInt16()
    + ReadInt32()
    + ReadInt64()
    + ReadSByte()
    + ReadString()
    + ReadTimeSpan()
    + ReadDateTime()
    + ReadUInt16()
    + ReadUInt32()
    + ReadUInt64()
    + ReadSerializationHeaderRecord()
    + ReadAssembly()
    + ReadMethodObject()
    - ReadObject()
    + ReadCrossAppDomainMap()
    + ReadObjectWithMap()
    - ReadObjectWithMap()
    + ReadObjectWithMapTyped()
    - ReadObjectWithMapTyped()
    - ReadObjectString()
    - ReadMemberPrimitiveTyped()
    - ReadArray()
    - ReadArrayAsBytes()
    - ReadMemberPrimitiveUnTyped()
    - ReadMemberReference()
    - ReadObjectNull()
    - ReadMessageEnd()
    + ReadValue()
    - GetOp()
    - PutOp()
}

class "ParseRecord" {
    + Init()
}

class "SerStack" {
    + Push()
    + Pop()
    + IncreaseCapacity()
    + Peek()
    + PeekPeek()
    + Count()
    + IsEmpty()
    + Dump()
}

class "SizedArray" {
    + Clone()
    + IncreaseCapacity()
}

class "IntSizedArray" {
    + Clone()
    + IncreaseCapacity()
}

class "NameCache" {
    + GetCachedValue()
    + SetCachedValue()
}

class "ValueFixup" {
    + Fixup()
}

class "NameInfo" {
    + Init()
}

class "PrimitiveArray" {
    + Init()
    + SetValue()
}

class "ExternalException" {
    + ToString()
}

class "<ToEnumerable>d__14`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "COMException" {
    + ToString()
}

class "SEHException" {
    + CanResume()
}

class "ObjectCreationDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ManagedErrorInfo" {
    + GetGUID()
    + GetSource()
    + GetDescription()
    + GetHelpFile()
    + GetHelpContext()
}

class "SecureStringAllocator" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MarshalerInstanceKeyComparer" {
    + Equals()
    + GetHashCode()
}

class "<>c" {
    + <GetCustomMarshalerInstance>b__225_0()
}

class "MarshalAsAttribute" {
    + Copy()
}

class "RegistrationServices" {
    + GetManagedCategoryGuid()
    + GetProgIdForType()
    + GetRegistrableTypesInAssembly()
    + RegisterAssembly()
    + RegisterTypeForComClients()
    + TypeRepresentsComType()
    + TypeRequiresRegistration()
    + UnregisterAssembly()
    + RegisterTypeForComClients()
    + UnregisterTypeForComClients()
}

class "TypeLibConverter" {
    + ConvertAssemblyToTypeLib()
    + ConvertTypeLibToAssembly()
    + ConvertTypeLibToAssembly()
    + GetPrimaryInteropAssembly()
}

class "EventRegistrationTokenTable`1" {
    + AddEventHandler()
    - AddEventHandlerNoLock()
    + ExtractHandler()
    + RemoveEventHandler()
    + RemoveEventHandler()
    - RemoveEventHandlerNoLock()
}

class "EventCacheKeyEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "EventRegistrationTokenListWithCount" {
    + Finalize()
    + Push()
    + Pop()
    + CopyTo()
}

class "TokenListCount" {
    + Inc()
    + Dec()
    - CleanupCache()
}

class "MyReaderWriterLock" {
    + AcquireReaderLock()
    + AcquireWriterLock()
    + ReleaseReaderLock()
    + ReleaseWriterLock()
    - LazyCreateEvent()
    - WaitOnEvent()
    - ExitAndWakeUpAppropriateWaiters()
    - EnterMyLock()
    - EnterMyLockSpin()
    - ExitMyLock()
}

class "ExceptionDispatchInfo" {
    + Throw()
}

class "ConcreteFormattableString" {
    + GetArguments()
    + GetArgument()
    + ToString()
}

class "RuntimeWrappedException" {
    + GetObjectData()
}

class "<>c" {
    + <.cctor>b__9_0()
}

class "<>c__DisplayClass11_0" {
    + <OutputWaitEtwEvents>b__0()
}

class "MoveNextRunner" {
    + Run()
}

class "ContinuationWrapper" {
    + Invoke()
}

class "<>c__DisplayClass5_0" {
    + <OutputAsyncCausalityEvents>b__0()
}

class "<>c" {
    + <ThrowAsync>b__7_0()
    + <ThrowAsync>b__7_1()
}

class "ConditionalWeakTable`2" {
    + Finalize()
    - RehashWithoutResize()
    - RecomputeSize()
    - Rehash()
    + AddOrUpdate()
    + Add()
    + Remove()
    + TryGetValue()
    + GetOrCreateValue()
    + GetValue()
    + FindEquivalentKeyUnsafe()
    + Clear()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "CreateValueCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Enumerator" {
    + Finalize()
    + Dispose()
    + MoveNext()
    + Reset()
}

class "<>c" {
    + <GetOrCreateValue>b__17_0()
}

class "TryCode" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CleanupCode" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SwitchExpressionException" {
    + GetObjectData()
}

class "ResourceFallbackManager" {
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
}

class "<GetEnumerator>d__5" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "RuntimeResourceSet" {
    + Dispose()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - GetEnumeratorHelper()
    + GetString()
    + GetString()
    + GetObject()
    + GetObject()
    - GetObject()
    - ResolveResourceLocator()
}

class "FastResourceComparer" {
    + GetHashCode()
    + GetHashCode()
    + Compare()
    + Compare()
    + Equals()
    + Equals()
}

class "FileBasedResourceGroveler" {
    + GrovelForResourceSet()
    + HasNeutralResources()
    - FindResourceFile()
    - CreateResourceSet()
}

class "ManifestBasedResourceGroveler" {
    + GrovelForResourceSet()
    + HasNeutralResources()
    - UltimateFallbackFixup()
    + CreateResourceSet()
    - GetManifestResourceStream()
    - CaseInsensitiveManifestResourceStreamLookup()
    - GetSatelliteAssembly()
    - CanUseDefaultResourceClasses()
    - GetSatelliteAssemblyName()
    - HandleSatelliteMissing()
    - HandleResourceStreamMissing()
}

class "ResourceManager" {
    - Init()
    - OnDeserializing()
    - OnDeserialized()
    - OnSerializing()
    - CommonAssemblyInit()
    + ReleaseAllResources()
    + GetResourceFileName()
    + GetFirstResourceSet()
    + GetResourceSet()
    + InternalGetResourceSet()
    - InternalGetResourceSet()
    - SetAppXConfiguration()
    + GetString()
    + GetString()
    + GetObject()
    + GetObject()
    - GetObject()
    + GetStream()
    + GetStream()
}

class "ResourceManagerMediator" {
    + GetResourceFileName()
    + ObtainSatelliteContractVersion()
}

class "ResourceReader" {
    + Close()
    + Dispose()
    - Dispose()
    - SkipInt32()
    - SkipString()
    - GetNameHash()
    - GetNamePosition()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + GetEnumeratorInternal()
    + FindPosForResource()
    - CompareStringEqualsName()
    - AllocateStringForNameIndex()
    - GetValueForNameIndex()
    + LoadString()
    + LoadObject()
    + LoadObject()
    + LoadObjectV1()
    - _LoadObjectV1()
    + LoadObjectV2()
    - _LoadObjectV2()
    - DeserializeObject()
    - ReadResources()
    - _ReadResources()
    - FindType()
    + GetResourceData()
    - TypeNameFromTypeCode()
}

class "ResourceEnumerator" {
    + MoveNext()
    + Reset()
}

class "ResourceSet" {
    - CommonInit()
    + Close()
    + Dispose()
    + Dispose()
    + GetDefaultReader()
    + GetDefaultWriter()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - GetEnumeratorHelper()
    + GetString()
    + GetString()
    + GetObject()
    + GetObject()
    + ReadResources()
    - GetObjectInternal()
    - GetCaseInsensitiveObjectInternal()
}

class "ResourceWriter" {
    + AddResource()
    + AddResource()
    + AddResource()
    + AddResource()
    - AddResourceInternal()
    + AddResource()
    + AddResourceData()
    + Close()
    - Dispose()
    + Dispose()
    + Generate()
    - FindTypeCode()
    - WriteValue()
}

class "NameOrId" {
    + ToString()
}

class "Win32EncodedResource" {
    + WriteTo()
}

class "Win32IconResource" {
    + WriteTo()
}

class "Win32GroupIconResource" {
    + WriteTo()
}

class "Win32VersionResource" {
    - emit_padding()
    - patch_length()
    + WriteTo()
}

class "Win32ResFileReader" {
    - read_int16()
    - read_int32()
    - read_padding()
    - read_ordinal()
    + ReadResources()
}

class "ICONDIRENTRY" {
    + ToString()
}

class "Win32IconFileReader" {
    + ReadIcons()
}

class "AddEventAdapter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AddEvent`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StaticAddEvent`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MemberFilter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Missing" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "ModuleResolveEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ParameterInfo" {
    + IsDefined()
    + GetCustomAttributesData()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetOptionalCustomModifiers()
    + GetRequiredCustomModifiers()
    + GetRealObject()
    + ToString()
    - System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames()
    - System.Runtime.InteropServices._ParameterInfo.GetTypeInfo()
    - System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount()
    - System.Runtime.InteropServices._ParameterInfo.Invoke()
}

class "Pointer" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetPointerType()
    + GetPointerValue()
}

class "ReflectionTypeLoadException" {
    + GetObjectData()
    + ToString()
    - CreateString()
}

class "SignatureArrayType" {
    + IsArrayImpl()
    + IsByRefImpl()
    + IsPointerImpl()
    + GetArrayRank()
}

class "SignatureByRefType" {
    + IsArrayImpl()
    + IsByRefImpl()
    + IsPointerImpl()
    + GetArrayRank()
}

class "SignatureConstructedGenericType" {
    + HasElementTypeImpl()
    + IsArrayImpl()
    + IsByRefImpl()
    + IsPointerImpl()
    + GetArrayRank()
    + GetGenericTypeDefinition()
    + GetGenericArguments()
    + ToString()
}

class "SignaturePointerType" {
    + IsArrayImpl()
    + IsByRefImpl()
    + IsPointerImpl()
    + GetArrayRank()
}

class "TypeDelegator" {
    + IsAssignableFrom()
    + InvokeMember()
    + GetConstructorImpl()
    + GetConstructors()
    + GetMethodImpl()
    + GetMethods()
    + GetField()
    + GetFields()
    + GetInterface()
    + GetInterfaces()
    + GetEvent()
    + GetEvents()
    + GetPropertyImpl()
    + GetProperties()
    + GetEvents()
    + GetNestedTypes()
    + GetNestedType()
    + GetMember()
    + GetMembers()
    + GetAttributeFlagsImpl()
    + IsArrayImpl()
    + IsPrimitiveImpl()
    + IsByRefImpl()
    + IsPointerImpl()
    + IsValueTypeImpl()
    + IsCOMObjectImpl()
    + GetElementType()
    + HasElementTypeImpl()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetInterfaceMap()
}

class "TypeFilter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<GetDeclaredMethods>d__10" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<get_DeclaredNestedTypes>d__22" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "AssemblyNameProxy" {
    + GetAssemblyName()
}

class "MemberInfoSerializationHolder" {
    + GetObjectData()
    + GetRealObject()
}

class "MonoArrayMethod" {
    + GetBaseDefinition()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + Invoke()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + ToString()
}

class "<get_DefinedTypes>d__127" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "AssemblyName" {
    + ToString()
    + GetPublicKey()
    + GetPublicKeyToken()
    - InternalGetPublicKeyToken()
    - ComputePublicKeyToken()
    + SetPublicKey()
    + SetPublicKeyToken()
    + GetObjectData()
    + Clone()
    + OnDeserialization()
    - System.Runtime.InteropServices._AssemblyName.GetIDsOfNames()
    - System.Runtime.InteropServices._AssemblyName.GetTypeInfo()
    - System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount()
    - System.Runtime.InteropServices._AssemblyName.Invoke()
    + FillName()
}

class "CustomAttributeData" {
    - ResolveArguments()
    + ToString()
    + Equals()
    + GetHashCode()
}

class "ExceptionHandlingClause" {
    + ToString()
}

class "LocalVariableInfo" {
    + ToString()
}

class "MethodBody" {
    + GetILAsByteArray()
}

class "RuntimeAssembly" {
    + GetObjectData()
    + GetName()
    + GetType()
    + GetModule()
    + GetReferencedAssemblies()
    + GetModules()
    + GetLoadedModules()
    + GetSatelliteAssembly()
    + GetSatelliteAssembly()
    + GetExportedTypes()
    - GetManifestResourceInfoInternal()
    + GetManifestResourceInfo()
    + GetManifestResourceNames()
    + GetManifestResourceInternal()
    + GetManifestResourceStream()
    + GetManifestResourceStream()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetCustomAttributesData()
    + GetManifestModule()
    + GetManifestModuleInternal()
    + GetModulesInternal()
    - GetFilesInternal()
    + GetFiles()
    + GetFile()
    + GetHashCode()
    + Equals()
    + ToString()
    + UnprotectedGetEvidence()
    + Resolve()
    - LoadAssemblyPermissions()
}

class "UnmanagedMemoryStreamForModule" {
    + Dispose()
}

class "RuntimeEventInfo" {
    + GetDeclaringTypeInternal()
    + GetRuntimeModule()
    + GetObjectData()
    + GetBindingFlags()
    + GetAddMethod()
    + GetRaiseMethod()
    + GetRemoveMethod()
    + GetOtherMethods()
    + ToString()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetCustomAttributesData()
    + HasSameMetadataDefinitionAs()
}

class "RuntimeFieldInfo" {
    + GetDeclaringTypeInternal()
    + GetRuntimeModule()
    + GetObjectData()
    + UnsafeGetValue()
    + CheckConsistency()
    + UnsafeSetValue()
    + SetValueDirect()
    + GetValueDirect()
    - ResolveType()
    - GetParentType()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetFieldOffset()
    - GetValueInternal()
    + GetValue()
    + ToString()
    + SetValue()
    + Clone()
    + GetRawConstantValue()
    + GetCustomAttributesData()
    - CheckGeneric()
    + HasSameMetadataDefinitionAs()
    - GetTypeModifiers()
    + GetOptionalCustomModifiers()
    + GetRequiredCustomModifiers()
    - GetCustomModifiers()
}

class "RuntimeMethodInfo" {
    + FormatNameAndSig()
    + CreateDelegate()
    + CreateDelegate()
    + ToString()
    + GetRuntimeModule()
    + GetObjectData()
    + SerializationToString()
    + GetBaseDefinition()
    + GetBaseMethod()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + InternalInvoke()
    + Invoke()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetPInvoke()
    + GetPseudoCustomAttributes()
    + GetPseudoCustomAttributesData()
    - GetDllImportAttributeData()
    + MakeGenericMethod()
    - MakeGenericMethod_impl()
    + GetGenericArguments()
    - GetGenericMethodDefinition_impl()
    + GetGenericMethodDefinition()
    + GetMethodBody()
    + GetCustomAttributesData()
    + HasSameMetadataDefinitionAs()
}

class "RuntimeConstructorInfo" {
    + GetRuntimeModule()
    + GetObjectData()
    + SerializationToString()
    + SerializationInvoke()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + InternalInvoke()
    + Invoke()
    - DoInvoke()
    + InternalInvoke()
    + Invoke()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetMethodBody()
    + ToString()
    + GetCustomAttributesData()
    + HasSameMetadataDefinitionAs()
}

class "RuntimeModule" {
    + IsResource()
    + FindTypes()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetField()
    + GetFields()
    + GetMethodImpl()
    + GetMethods()
    + GetModuleHandleImpl()
    + GetPEKind()
    + GetType()
    + IsDefined()
    + ResolveField()
    + ResolveMember()
    + ResolveMethod()
    + ResolveString()
    + ResolveType()
    + ResolveSignature()
    + GetObjectData()
    + GetSignerCertificate()
    + GetTypes()
    + GetCustomAttributesData()
    + GetRuntimeAssembly()
    + GetModuleVersionId()
}

class "RuntimeParameterInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetDefaultValueImpl()
    + IsDefined()
    + GetCustomAttributesData()
    + GetMetadataToken()
    + GetOptionalCustomModifiers()
    + GetPseudoCustomAttributes()
    + GetPseudoCustomAttributesData()
    + GetRequiredCustomModifiers()
    - GetCustomModifiers()
}

class "GetterAdapter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Getter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RuntimePropertyInfo" {
    + GetDeclaringTypeInternal()
    + GetRuntimeModule()
    + ToString()
    - FormatNameAndSig()
    + GetObjectData()
    + SerializationToString()
    - CachePropertyInfo()
    + GetAccessors()
    + GetGetMethod()
    + GetIndexParameters()
    + GetSetMethod()
    + GetConstantValue()
    + GetRawConstantValue()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetValue()
    + GetValue()
    + SetValue()
    + GetOptionalCustomModifiers()
    + GetRequiredCustomModifiers()
    - GetCustomModifiers()
    + GetCustomAttributesData()
    + HasSameMetadataDefinitionAs()
}

class "GetterAdapter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Getter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StaticGetter`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StrongNameKeyPair" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    - GetRSA()
    - LoadKey()
    + StrongName()
}

class "GenericInstanceKey" {
    + Equals()
    + GetHashCode()
}

class "AssemblyBuilder" {
    - System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._AssemblyBuilder.Invoke()
    + AddResourceFile()
    + AddResourceFile()
    - AddResourceFile()
    + AddPermissionRequests()
    + EmbedResourceFile()
    - EmbedResourceFile()
    + DefineDynamicModule()
    + DefineDynamicModule()
    + DefineDynamicModule()
    + DefineDynamicModule()
    - DefineDynamicModule()
    + DefineResource()
    + DefineResource()
    - AddUnmanagedResource()
    + DefineUnmanagedResource()
    + DefineUnmanagedResource()
    + DefineVersionInfoResource()
    + DefineVersionInfoResource()
    - DefineVersionInfoResourceImpl()
    + GetDynamicModule()
    + GetExportedTypes()
    + GetFile()
    + GetFiles()
    + GetModulesInternal()
    + GetTypes()
    + GetManifestResourceInfo()
    + GetManifestResourceNames()
    + GetManifestResourceStream()
    + GetManifestResourceStream()
    + GetManifestModule()
    + Save()
    + Save()
    + SetEntryPoint()
    + SetEntryPoint()
    + SetCustomAttribute()
    + SetCustomAttribute()
    - not_supported()
    - check_name_and_filename()
    - create_assembly_version()
    - GetCultureString()
    + MakeGenericType()
    + GetType()
    + GetModule()
    + GetModules()
    + GetName()
    + GetReferencedAssemblies()
    + GetLoadedModules()
    + GetSatelliteAssembly()
    + GetSatelliteAssembly()
    + Equals()
    + GetHashCode()
    + ToString()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + UnprotectedGetEvidence()
}

class "ConstructorBuilder" {
    - System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._ConstructorBuilder.Invoke()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + GetParameterType()
    + RuntimeResolve()
    + Invoke()
    + Invoke()
    + AddDeclarativeSecurity()
    + DefineParameter()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetILGenerator()
    + GetILGenerator()
    + SetMethodBody()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + SetImplementationFlags()
    + GetModule()
    + GetToken()
    + SetSymCustomAttribute()
    + ToString()
    + fixup()
    + ResolveUserTypes()
    + FixupTokens()
    + GenerateDebugInfo()
    - RejectIfCreated()
    - not_supported()
    - not_after_created()
    - not_created()
}

class "ConstructorOnTypeBuilderInst" {
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParameterTypes()
    + RuntimeResolve()
    + GetParametersCount()
    + Invoke()
    + GetGenericArguments()
    + Invoke()
}

class "CustomAttributeBuilder" {
    - System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._CustomAttributeBuilder.Invoke()
    + Invoke()
    - IsValidType()
    - IsValidParam()
    - Initialize()
    + string_arg()
}

class "ArrayType" {
    + GetEffectiveRank()
    + InternalResolve()
    + RuntimeResolve()
    + IsArrayImpl()
    + GetArrayRank()
    + FormatName()
}

class "ByRefType" {
    + InternalResolve()
    + IsByRefImpl()
    + FormatName()
    + MakeArrayType()
    + MakeArrayType()
    + MakeByRefType()
    + MakePointerType()
}

class "PointerType" {
    + InternalResolve()
    + IsPointerImpl()
    + FormatName()
}

class "DynamicILInfo" {
    + GetTokenFor()
    + GetTokenFor()
    + GetTokenFor()
    + GetTokenFor()
    + GetTokenFor()
    + GetTokenFor()
    + GetTokenFor()
    + GetTokenFor()
    + SetCode()
    + SetCode()
    + SetExceptions()
    + SetExceptions()
    + SetLocalSignature()
    + SetLocalSignature()
}

class "DynamicMethod" {
    - CreateDynMethod()
    + CreateDelegate()
    + CreateDelegate()
    + DefineParameter()
    + GetBaseDefinition()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetDynamicILInfo()
    + GetILGenerator()
    + GetILGenerator()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + GetParameterType()
    + Invoke()
    + IsDefined()
    + ToString()
    - RejectIfCreated()
    + AddRef()
}

class "DynamicMethodTokenGenerator" {
    + GetToken()
    + GetToken()
    + GetToken()
    + GetToken()
}

class "EnumBuilder" {
    - System.Runtime.InteropServices._EnumBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._EnumBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._EnumBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._EnumBuilder.Invoke()
    + GetTypeBuilder()
    + InternalResolve()
    + RuntimeResolve()
    + CreateType()
    + CreateTypeInfo()
    + GetEnumUnderlyingType()
    - setup_enum_type()
    + DefineLiteral()
    + GetAttributeFlagsImpl()
    + GetConstructorImpl()
    + GetConstructors()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetElementType()
    + GetEvent()
    + GetEvents()
    + GetEvents()
    + GetField()
    + GetFields()
    + GetInterface()
    + GetInterfaceMap()
    + GetInterfaces()
    + GetMember()
    + GetMembers()
    + GetMethodImpl()
    + GetMethods()
    + GetNestedType()
    + GetNestedTypes()
    + GetProperties()
    + GetPropertyImpl()
    + HasElementTypeImpl()
    + InvokeMember()
    + IsArrayImpl()
    + IsByRefImpl()
    + IsCOMObjectImpl()
    + IsPointerImpl()
    + IsPrimitiveImpl()
    + IsValueTypeImpl()
    + IsDefined()
    + MakeArrayType()
    + MakeArrayType()
    + MakeByRefType()
    + MakePointerType()
    + SetCustomAttribute()
    + SetCustomAttribute()
    - CreateNotSupportedException()
    + IsAssignableFrom()
}

class "EventBuilder" {
    - System.Runtime.InteropServices._EventBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._EventBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._EventBuilder.Invoke()
    + AddOtherMethod()
    + GetEventToken()
    + SetAddOnMethod()
    + SetRaiseMethod()
    + SetRemoveOnMethod()
    + SetCustomAttribute()
    + SetCustomAttribute()
    - RejectIfCreated()
}

class "EventOnTypeBuilderInst" {
    + GetAddMethod()
    + GetRaiseMethod()
    + GetRemoveMethod()
    + GetOtherMethods()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
}

class "FieldBuilder" {
    - System.Runtime.InteropServices._FieldBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._FieldBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._FieldBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._FieldBuilder.Invoke()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetToken()
    + GetValue()
    + IsDefined()
    + GetFieldOffset()
    + SetRVAData()
    + SetConstant()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + SetMarshal()
    + SetOffset()
    + SetValue()
    - CreateNotSupportedException()
    - RejectIfCreated()
    + ResolveUserTypes()
    + RuntimeResolve()
}

class "FieldOnTypeBuilderInst" {
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + ToString()
    + GetValue()
    + SetValue()
    + RuntimeResolve()
}

class "GenericTypeParameterBuilder" {
    + SetBaseTypeConstraint()
    + SetInterfaceConstraints()
    + SetGenericParameterAttributes()
    + InternalResolve()
    + RuntimeResolve()
    + IsSubclassOf()
    + GetAttributeFlagsImpl()
    + GetConstructorImpl()
    + GetConstructors()
    + GetEvent()
    + GetEvents()
    + GetEvents()
    + GetField()
    + GetFields()
    + GetInterface()
    + GetInterfaces()
    + GetMembers()
    + GetMember()
    + GetMethods()
    + GetMethodImpl()
    + GetNestedType()
    + GetNestedTypes()
    + GetProperties()
    + GetPropertyImpl()
    + HasElementTypeImpl()
    + IsAssignableFrom()
    + IsAssignableFrom()
    + IsInstanceOfType()
    + IsArrayImpl()
    + IsByRefImpl()
    + IsCOMObjectImpl()
    + IsPointerImpl()
    + IsPrimitiveImpl()
    + IsValueTypeImpl()
    + InvokeMember()
    + GetElementType()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetInterfaceMap()
    + GetGenericArguments()
    + GetGenericTypeDefinition()
    + GetGenericParameterConstraints()
    + SetCustomAttribute()
    + SetCustomAttribute()
    - not_supported()
    + ToString()
    + Equals()
    + GetHashCode()
    + MakeArrayType()
    + MakeArrayType()
    + MakeByRefType()
    + MakeGenericType()
    + MakePointerType()
}

class "ILGenerator" {
    - System.Runtime.InteropServices._ILGenerator.GetIDsOfNames()
    - System.Runtime.InteropServices._ILGenerator.GetTypeInfo()
    - System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount()
    - System.Runtime.InteropServices._ILGenerator.Invoke()
    - make_room()
    - emit_int()
    - ll_emit()
    - InternalEndClause()
    + BeginCatchBlock()
    + BeginExceptFilterBlock()
    + BeginExceptionBlock()
    + BeginFaultBlock()
    + BeginFinallyBlock()
    + BeginScope()
    + DeclareLocal()
    + DeclareLocal()
    + DefineLabel()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    - Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + EmitCall()
    + EmitCalli()
    + EmitCalli()
    + EmitWriteLine()
    + EmitWriteLine()
    + EmitWriteLine()
    + EndExceptionBlock()
    + EndScope()
    + MarkLabel()
    + MarkSequencePoint()
    + GenerateDebugInfo()
    + ThrowException()
    + UsingNamespace()
    + label_fixup()
    + FixupTokens()
    + SetExceptionHandlers()
    + SetTokenFixups()
    + SetCode()
    + SetCode()
    + Init()
}

class "SequencePointList" {
    + GetOffsets()
    + GetLines()
    + GetColumns()
    + GetEndLines()
    + GetEndColumns()
    + AddSequencePoint()
}

class "LocalBuilder" {
    - System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._LocalBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._LocalBuilder.Invoke()
    + SetLocalSymInfo()
    + SetLocalSymInfo()
}

class "MethodBuilder" {
    - System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._MethodBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._MethodBuilder.Invoke()
    + GetToken()
    + GetBaseDefinition()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + GetParameterType()
    + RuntimeResolve()
    + GetModule()
    + CreateMethodBody()
    + SetMethodBody()
    + Invoke()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetILGenerator()
    + GetILGenerator()
    + DefineParameter()
    + check_override()
    + fixup()
    + ResolveUserTypes()
    + FixupTokens()
    + GenerateDebugInfo()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + SetImplementationFlags()
    + AddDeclarativeSecurity()
    + SetMarshal()
    + SetSymCustomAttribute()
    + ToString()
    + Equals()
    + GetHashCode()
    - ExtendArray()
    - RejectIfCreated()
    - NotSupported()
    + MakeGenericMethod()
    + GetGenericMethodDefinition()
    + GetGenericArguments()
    + DefineGenericParameters()
    + SetReturnType()
    + SetParameters()
    + SetSignature()
}

class "MethodOnTypeBuilderInst" {
    + GetTypeArgs()
    + RuntimeResolve()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + ToString()
    + GetMethodImplementationFlags()
    + GetParameters()
    + GetParametersInternal()
    + GetParametersCount()
    + Invoke()
    + MakeGenericMethod()
    + GetGenericArguments()
    + GetGenericMethodDefinition()
    + GetBaseDefinition()
}

class "MethodRental" {
    - System.Runtime.InteropServices._MethodRental.GetIDsOfNames()
    - System.Runtime.InteropServices._MethodRental.GetTypeInfo()
    - System.Runtime.InteropServices._MethodRental.GetTypeInfoCount()
    - System.Runtime.InteropServices._MethodRental.Invoke()
}

class "ModuleBuilder" {
    - System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._ModuleBuilder.Invoke()
    + IsTransient()
    + CreateGlobalFunctions()
    + DefineInitializedData()
    + DefineUninitializedData()
    - DefineDataImpl()
    - addGlobalMethod()
    + DefineGlobalMethod()
    + DefineGlobalMethod()
    + DefineGlobalMethod()
    + DefinePInvokeMethod()
    + DefinePInvokeMethod()
    + DefineType()
    + DefineType()
    + DefineType()
    - AddType()
    - DefineType()
    + RegisterTypeName()
    + GetRegisteredType()
    + DefineType()
    + DefineType()
    + DefineType()
    + DefineType()
    + GetArrayMethod()
    + DefineEnum()
    + GetType()
    + GetType()
    - search_in_array()
    - search_nested_in_array()
    - GetMaybeNested()
    + GetType()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + GetSymWriter()
    + DefineDocument()
    + GetTypes()
    + DefineResource()
    + DefineResource()
    + DefineUnmanagedResource()
    + DefineUnmanagedResource()
    + DefineManifestResource()
    + SetSymCustomAttribute()
    + SetUserEntryPoint()
    + GetMethodToken()
    + GetMethodToken()
    + GetArrayMethodToken()
    + GetConstructorToken()
    + GetConstructorToken()
    + GetFieldToken()
    + GetSignatureToken()
    + GetSignatureToken()
    + GetStringConstant()
    + GetTypeToken()
    + GetTypeToken()
    + GetToken()
    - GetPseudoToken()
    + GetToken()
    + GetToken()
    + GetToken()
    + GetToken()
    + GetToken()
    + RegisterToken()
    + GetRegisteredToken()
    + GetTokenGenerator()
    - WriteToFile()
    - FixupTokens()
    - FixupTokens()
    + Save()
    + CreateGlobalType()
    + GetModuleVersionId()
    + IsResource()
    + GetMethodImpl()
    + ResolveField()
    + ResolveMember()
    + ResolveOrGetRegisteredToken()
    + ResolveMethod()
    + ResolveString()
    + ResolveSignature()
    + ResolveType()
    + Equals()
    + GetHashCode()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetField()
    + GetFields()
    + GetMethods()
}

class "ModuleBuilderTokenGenerator" {
    + GetToken()
    + GetToken()
    + GetToken()
    + GetToken()
}

class "ParameterBuilder" {
    - System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._ParameterBuilder.Invoke()
    + GetToken()
    + SetConstant()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + SetMarshal()
}

class "PropertyBuilder" {
    - System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._PropertyBuilder.Invoke()
    + AddOtherMethod()
    + GetAccessors()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetGetMethod()
    + GetIndexParameters()
    + GetSetMethod()
    + GetValue()
    + GetValue()
    + IsDefined()
    + SetConstant()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + SetGetMethod()
    + SetSetMethod()
    + SetValue()
    + SetValue()
    - not_supported()
}

class "PropertyOnTypeBuilderInst" {
    + GetAccessors()
    + GetGetMethod()
    + GetIndexParameters()
    + GetSetMethod()
    + ToString()
    + GetValue()
    + SetValue()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
}

class "SignatureHelper" {
    + AddArguments()
    + AddArgument()
    + AddArgument()
    + AddArgument()
    + AddSentinel()
    + Equals()
    + GetHashCode()
    + GetSignature()
    + ToString()
    - System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames()
    - System.Runtime.InteropServices._SignatureHelper.GetTypeInfo()
    - System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount()
    - System.Runtime.InteropServices._SignatureHelper.Invoke()
}

class "TypeBuilder" {
    - System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames()
    - System.Runtime.InteropServices._TypeBuilder.GetTypeInfo()
    - System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount()
    - System.Runtime.InteropServices._TypeBuilder.Invoke()
    + GetAttributeFlagsImpl()
    + IsSubclassOf()
    - GetFullName()
    + AddDeclarativeSecurity()
    + AddInterfaceImplementation()
    + GetConstructorImpl()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + DefineNestedType()
    + DefineNestedType()
    + DefineNestedType()
    - DefineNestedType()
    + DefineNestedType()
    + DefineNestedType()
    + DefineNestedType()
    + DefineNestedType()
    + DefineConstructor()
    + DefineConstructor()
    + DefineDefaultConstructor()
    - append_method()
    + DefineMethod()
    + DefineMethod()
    + DefineMethod()
    + DefinePInvokeMethod()
    + DefinePInvokeMethod()
    + DefinePInvokeMethod()
    + DefineMethod()
    + DefineMethod()
    + DefineMethodOverride()
    + DefineField()
    + DefineField()
    + DefineProperty()
    + DefineProperty()
    + DefineProperty()
    + DefineProperty()
    + DefineTypeInitializer()
    - create_runtime_class()
    - is_nested_in()
    - has_ctor_method()
    + CreateType()
    + CreateTypeInfo()
    - ResolveUserTypes()
    + FixupTokens()
    + GenerateDebugInfo()
    + GetConstructors()
    + GetConstructorsInternal()
    + GetElementType()
    + GetEvent()
    + GetEvents()
    + GetEvents()
    + GetField()
    + GetFields()
    + GetInterface()
    + GetInterfaces()
    + GetMember()
    + GetMembers()
    - GetMethodsByName()
    + GetMethods()
    + GetMethodImpl()
    + GetNestedType()
    + GetNestedTypes()
    + GetProperties()
    + GetPropertyImpl()
    + HasElementTypeImpl()
    + InvokeMember()
    + IsArrayImpl()
    + IsByRefImpl()
    + IsCOMObjectImpl()
    + IsPointerImpl()
    + IsPrimitiveImpl()
    + IsValueTypeImpl()
    + MakeArrayType()
    + MakeArrayType()
    + MakeByRefType()
    + MakeGenericType()
    + MakePointerType()
    + SetCustomAttribute()
    + SetCustomAttribute()
    + DefineEvent()
    + DefineInitializedData()
    + DefineUninitializedData()
    + SetParent()
    + GetInterfaceMap()
    + InternalResolve()
    + RuntimeResolve()
    - not_supported()
    - check_not_created()
    - check_created()
    - check_name()
    + ToString()
    + IsAssignableFrom()
    + IsAssignableTo()
    + IsCreated()
    + GetGenericArguments()
    + GetGenericTypeDefinition()
    + DefineGenericParameters()
    + IsAssignableFrom()
}

class "TypeBuilderInstantiation" {
    + InternalResolve()
    + RuntimeResolve()
    - GetParentType()
    + InflateType()
    + InflateType()
    + GetInterfaces()
    + IsValueTypeImpl()
    + GetMethod()
    + GetConstructor()
    + GetField()
    + GetMethods()
    + GetConstructors()
    + GetFields()
    + GetProperties()
    + GetEvents()
    + GetNestedTypes()
    + IsAssignableFrom()
    - format_name()
    + ToString()
    + GetGenericTypeDefinition()
    + GetGenericArguments()
    + MakeArrayType()
    + MakeArrayType()
    + MakeByRefType()
    + MakePointerType()
    + GetElementType()
    + HasElementTypeImpl()
    + IsCOMObjectImpl()
    + IsPrimitiveImpl()
    + IsArrayImpl()
    + IsByRefImpl()
    + IsPointerImpl()
    + GetAttributeFlagsImpl()
    + GetInterface()
    + GetEvent()
    + GetField()
    + GetMembers()
    + GetNestedType()
    + InvokeMember()
    + GetMethodImpl()
    + GetPropertyImpl()
    + GetConstructorImpl()
    + IsDefined()
    + GetCustomAttributes()
    + GetCustomAttributes()
}

class "CompareInfo" {
    - InvariantCreateSortKey()
    - OnDeserializing()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    - OnDeserialized()
    - OnDeserialized()
    - OnSerializing()
    + Compare()
    + Compare()
    + Compare()
    + CompareOptionNone()
    + CompareOptionIgnoreCase()
    + Compare()
    + Compare()
    + Compare()
    + Compare()
    + IsPrefix()
    + IsPrefix()
    + IsPrefix()
    + IsSuffix()
    + IsSuffix()
    + IsSuffix()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOfOrdinal()
    + IndexOf()
    + IndexOf()
    + IndexOfOrdinal()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOfOrdinal()
    + GetSortKey()
    + GetSortKey()
    + Equals()
    + GetHashCode()
    + GetHashCodeOfString()
    + GetHashCode()
    + ToString()
    - GetCollator()
    - CreateSortKeyCore()
    - internal_index_switch()
    - internal_compare_switch()
    - internal_compare_managed()
    - internal_index_managed()
    - internal_index_managed()
    - InitSort()
    - LastIndexOfCore()
    - IndexOfCore()
    - IndexOfCore()
    - IndexOfOrdinalCore()
    - CompareString()
    - CompareString()
    - CreateSortKey()
    - StartsWith()
    - StartsWith()
    - EndsWith()
    - EndsWith()
    + GetHashCodeOfStringCore()
    - GetSortVersion()
}

class "CultureNotFoundException" {
    + GetObjectData()
}

class "DateTimeFormatInfo" {
    - internalGetAbbreviatedDayOfWeekNames()
    - internalGetAbbreviatedDayOfWeekNamesCore()
    - internalGetSuperShortDayNames()
    - internalGetSuperShortDayNamesCore()
    - internalGetDayOfWeekNames()
    - internalGetDayOfWeekNamesCore()
    - internalGetAbbreviatedMonthNames()
    - internalGetAbbreviatedMonthNamesCore()
    - internalGetMonthNames()
    - internalGetMonthNamesCore()
    - InitializeOverridableProperties()
    + GetFormat()
    + Clone()
    + GetEra()
    + GetEraName()
    + GetAbbreviatedEraName()
    + internalGetMonthName()
    - internalGetGenitiveMonthNames()
    + internalGetLeapYearMonthNames()
    + GetAbbreviatedDayName()
    + GetShortestDayName()
    + GetAllDateTimePatterns()
    + GetAllDateTimePatterns()
    + GetDayName()
    + GetAbbreviatedMonthName()
    + GetMonthName()
    + SetAllDateTimePatterns()
    - InitializeFormatFlags()
    + YearMonthAdjustment()
    - ClearTokenHashTable()
    + CreateTokenHashTable()
    - PopulateSpecialTokenHashTable()
    - AddMonthNames()
    - IsAllowedJapaneseTokenFollowedByNonSpaceLetter()
    + Tokenize()
    - InsertAtCurrentHashNode()
    - InsertHash()
    - CompareStringIgnoreCaseOptimized()
}

class "DateTimeFormatInfoScanner" {
    + AddDateWordOrPostfix()
    + AddDateWords()
    + AddIgnorableSymbols()
    + ScanDateWord()
    + GetDateWordsOfDTFI()
}

class "SortVersion" {
    + Equals()
    + Equals()
    + GetHashCode()
}

class "PersianCalendar" {
    - GetAbsoluteDatePersian()
    + GetDatePart()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + ToFourDigitYear()
}

class "CalendarData" {
    - InitializeEraNames()
    - InitializeAbbreviatedEraNames()
    - fill_calendar_data()
}

class "ChineseLunisolarCalendar" {
    + GetYearInfo()
    + GetYear()
    + GetGregorianYear()
    + GetEra()
}

class "GregorianCalendar" {
    - OnDeserialized()
    + GetDatePart()
    + DateToTicks()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + TryToDateTime()
    + ToFourDigitYear()
}

class "GregorianCalendarHelper" {
    - GetYearOffset()
    + GetGregorianYear()
    + IsValidYear()
    + GetDatePart()
    + CheckTicksRange()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + GetWeekOfYear()
    + ToFourDigitYear()
}

class "HebrewCalendar" {
    - CheckHebrewMonthValue()
    - CheckHebrewDayValue()
    + GetDatePart()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + ToFourDigitYear()
}

class "HijriCalendar" {
    - GetAbsoluteDateHijri()
    - DaysUpToHijriYear()
    + GetDatePart()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + ToFourDigitYear()
}

class "JapaneseCalendar" {
    + AddMonths()
    + AddYears()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetMonthsInYear()
    + GetWeekOfYear()
    + GetEra()
    + GetMonth()
    + GetYear()
    + IsLeapDay()
    + IsLeapYear()
    + GetLeapMonth()
    + IsLeapMonth()
    + ToDateTime()
    + ToFourDigitYear()
    + IsValidYear()
}

class "JapaneseLunisolarCalendar" {
    + GetYearInfo()
    + GetYear()
    + GetGregorianYear()
    + GetEra()
}

class "JulianCalendar" {
    + CheckYearEraRange()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + ToFourDigitYear()
}

class "KoreanCalendar" {
    + AddMonths()
    + AddYears()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetMonthsInYear()
    + GetWeekOfYear()
    + GetEra()
    + GetMonth()
    + GetYear()
    + IsLeapDay()
    + IsLeapYear()
    + GetLeapMonth()
    + IsLeapMonth()
    + ToDateTime()
    + ToFourDigitYear()
}

class "KoreanLunisolarCalendar" {
    + GetYearInfo()
    + GetYear()
    + GetGregorianYear()
    + GetEra()
}

class "NumberFormatInfo" {
    - OnSerializing()
    - OnDeserializing()
    - OnDeserialized()
    - VerifyWritable()
    + Clone()
    + GetFormat()
}

class "StringInfo" {
    - OnDeserializing()
    - OnDeserialized()
    + Equals()
    + GetHashCode()
    + SubstringByTextElements()
    + SubstringByTextElements()
}

class "TaiwanCalendar" {
    + AddMonths()
    + AddYears()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetMonthsInYear()
    + GetWeekOfYear()
    + GetEra()
    + GetMonth()
    + GetYear()
    + IsLeapDay()
    + IsLeapYear()
    + GetLeapMonth()
    + IsLeapMonth()
    + ToDateTime()
    + ToFourDigitYear()
}

class "TaiwanLunisolarCalendar" {
    + GetYearInfo()
    + GetYear()
    + GetGregorianYear()
    + GetEra()
}

class "TextElementEnumerator" {
    - OnDeserializing()
    - OnDeserialized()
    - OnSerializing()
    + MoveNext()
    + GetTextElement()
    + Reset()
}

class "TextInfo" {
    - OnDeserializing()
    - OnDeserialized()
    - OnDeserialized()
    - OnSerializing()
    + Clone()
    - VerifyWritable()
    + SetReadOnlyState()
    + ToLower()
    + ToLower()
    + ToUpper()
    + ToUpper()
    + Equals()
    + GetHashCode()
    + ToString()
    + ToTitleCase()
    - AddTitlecaseLetter()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    + GetCaseInsensitiveHashCode()
    + GetCaseInsensitiveHashCode()
    - GetInvariantCaseInsensitiveHashCode()
    - ToUpperInternal()
    - ToLowerInternal()
    - ToUpperInternal()
    - ToLowerInternal()
    + ToLowerAsciiInvariant()
    + ToUpperAsciiInvariant()
    + ChangeCase()
}

class "ThaiBuddhistCalendar" {
    + AddMonths()
    + AddYears()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetMonthsInYear()
    + GetWeekOfYear()
    + GetEra()
    + GetMonth()
    + GetYear()
    + IsLeapDay()
    + IsLeapYear()
    + GetLeapMonth()
    + IsLeapMonth()
    + ToDateTime()
    + ToFourDigitYear()
}

class "UmAlQuraCalendar" {
    + GetDatePart()
    + AddMonths()
    + AddYears()
    + GetDayOfMonth()
    + GetDayOfWeek()
    + GetDayOfYear()
    + GetDaysInMonth()
    + GetDaysInYear()
    + GetEra()
    + GetMonth()
    + GetMonthsInYear()
    + GetYear()
    + IsLeapDay()
    + GetLeapMonth()
    + IsLeapMonth()
    + IsLeapYear()
    + ToDateTime()
    + ToFourDigitYear()
}

class "SortKey" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "CultureData" {
    - fill_culture_data()
    + GetCalendar()
    + GetCalendarIds()
    + CalendarName()
    + EraNames()
    + AbbrevEraNames()
    + AbbreviatedEnglishEraNames()
    + ShortDates()
    + LongDates()
    + YearMonths()
    + DayNames()
    + AbbreviatedDayNames()
    + SuperShortDayNames()
    + MonthNames()
    + GenitiveMonthNames()
    + AbbreviatedMonthNames()
    + AbbreviatedGenitiveMonthNames()
    + LeapYearMonthNames()
    + MonthDay()
    + DateSeparator()
    - create_group_sizes_array()
    + GetNFIValues()
}

class "CultureInfo" {
    + GetConsoleFallbackUICulture()
    + ClearCachedData()
    + Clone()
    + Equals()
    - GetTextInfoData()
    + GetHashCode()
    + ToString()
    - CheckNeutral()
    + GetFormat()
    - Construct()
    - construct_internal_locale_from_lcid()
    - construct_internal_locale_from_name()
    - ConstructInvariant()
    - CreateTextInfo()
    - ConstructLocaleFromName()
}

class "OnCultureInfoChangedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "IdnMapping" {
    + Equals()
    + GetHashCode()
    + GetAscii()
    + GetAscii()
    + GetAscii()
    - Convert()
    - ToAscii()
    - VerifyLength()
    - NamePrep()
    - VerifyProhibitedCharacters()
    - VerifyStd3AsciiRules()
    + GetUnicode()
    + GetUnicode()
    + GetUnicode()
    - ToUnicode()
}

class "Bootstring" {
    + Encode()
    - EncodeDigit()
    - DecodeDigit()
    - Adapt()
    + Decode()
}

class "RegionInfo" {
    - GetByTerritory()
    - construct_internal_region_from_name()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "DefaultFilter" {
    + AssertFailure()
}

class "StackFrame" {
    + GetFileLineNumber()
    + GetFileColumnNumber()
    + GetFileName()
    + GetSecureFileName()
    + GetILOffset()
    + GetMethod()
    + GetNativeOffset()
    + GetMethodAddress()
    + GetMethodIndex()
    + GetInternalMethodName()
    + ToString()
}

class "StackTrace" {
    - init_frames()
    + GetFrame()
    + GetFrames()
    - AddFrames()
    - GetFullNameForStackTrace()
    + ToString()
    + ToString()
}

class "ContractFailedEventArgs" {
    + SetHandled()
    + SetUnwind()
}

class "ContractException" {
    + GetObjectData()
}

class "EventCommandEventArgs" {
    + DisableEvent()
    + EnableEvent()
}

class "EventCounter" {
    + WriteMetric()
    + WriteMetric()
}

class "EventListener" {
    + EnableEvents()
    + EnableEvents()
    + EnableEvents()
    + DisableEvents()
    + OnEventSourceCreated()
    + OnEventWritten()
    + Dispose()
}

class "EventSource" {
    + Finalize()
    + IsEnabled()
    + IsEnabled()
    + IsEnabled()
    + Dispose()
    + GetTrait()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Dispose()
    + OnEventCommand()
    + ReportOutOfBandMessage()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEventCore()
    + WriteEventWithRelatedActivityId()
    + WriteEventWithRelatedActivityIdCore()
}

class "IncrementingEventCounter" {
    + Increment()
}

class "Comparer" {
    + GetObjectData()
    + Compare()
}

class "ListDictionaryInternal" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
}

class "NodeEnumerator" {
    + MoveNext()
    + Reset()
}

class "NodeKeyValueCollection" {
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "NodeKeyValueEnumerator" {
    + MoveNext()
    + Reset()
}

class "CompatibleComparer" {
    + Equals()
    + Compare()
    + GetHashCode()
}

class "CaseInsensitiveComparer" {
    + Compare()
}

class "CaseInsensitiveHashCodeProvider" {
    + GetHashCode()
}

class "Queue" {
    + Clone()
    + Clear()
    + CopyTo()
    + Enqueue()
    + GetEnumerator()
    + Dequeue()
    + Peek()
    + Contains()
    + GetElement()
    + ToArray()
    - SetCapacity()
    + TrimToSize()
}

class "SynchronizedQueue" {
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + Enqueue()
    + Dequeue()
    + GetEnumerator()
    + Peek()
    + ToArray()
    + TrimToSize()
}

class "QueueEnumerator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "SortedList" {
    - Init()
    + Add()
    + Clear()
    + Clone()
    + Contains()
    + ContainsKey()
    + ContainsValue()
    + CopyTo()
    + ToKeyValuePairsArray()
    - EnsureCapacity()
    + GetByIndex()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + GetKey()
    + GetKeyList()
    + GetValueList()
    + IndexOfKey()
    + IndexOfValue()
    - Insert()
    + RemoveAt()
    + Remove()
    + SetByIndex()
    + TrimToSize()
}

class "SyncSortedList" {
    + Add()
    + Clear()
    + Clone()
    + Contains()
    + ContainsKey()
    + ContainsValue()
    + CopyTo()
    + GetByIndex()
    + GetEnumerator()
    + GetKey()
    + GetKeyList()
    + GetValueList()
    + IndexOfKey()
    + IndexOfValue()
    + RemoveAt()
    + Remove()
    + SetByIndex()
    + ToKeyValuePairsArray()
    + TrimToSize()
}

class "SortedListEnumerator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "KeyList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Insert()
    + GetEnumerator()
    + IndexOf()
    + Remove()
    + RemoveAt()
}

class "ValueList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Insert()
    + GetEnumerator()
    + IndexOf()
    + Remove()
    + RemoveAt()
}

class "Stack" {
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + Peek()
    + Pop()
    + Push()
    + ToArray()
}

class "SyncStack" {
    + Contains()
    + Clone()
    + Clear()
    + CopyTo()
    + Push()
    + Pop()
    + GetEnumerator()
    + Peek()
    + ToArray()
}

class "StackEnumerator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "BitArray" {
    + Get()
    + Set()
    + SetAll()
    + And()
    + Or()
    + Xor()
    + Not()
    + RightShift()
    + LeftShift()
    + CopyTo()
    + Clone()
    + GetEnumerator()
}

class "BitArrayEnumeratorSimple" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "StructuralEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "StructuralComparer" {
    + Compare()
}

class "ArrayList" {
    + Add()
    + AddRange()
    + BinarySearch()
    + BinarySearch()
    + BinarySearch()
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + CopyTo()
    + CopyTo()
    - EnsureCapacity()
    + GetEnumerator()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Remove()
    + RemoveAt()
    + RemoveRange()
    + Reverse()
    + Reverse()
    + SetRange()
    + GetRange()
    + Sort()
    + Sort()
    + Sort()
    + ToArray()
    + ToArray()
    + TrimToSize()
}

class "IListWrapper" {
    + Add()
    + AddRange()
    + BinarySearch()
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Remove()
    + RemoveAt()
    + RemoveRange()
    + Reverse()
    + SetRange()
    + GetRange()
    + Sort()
    + ToArray()
    + ToArray()
    + TrimToSize()
}

class "IListWrapperEnumWrapper" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "SyncArrayList" {
    + Add()
    + AddRange()
    + BinarySearch()
    + BinarySearch()
    + BinarySearch()
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Remove()
    + RemoveAt()
    + RemoveRange()
    + Reverse()
    + SetRange()
    + GetRange()
    + Sort()
    + Sort()
    + Sort()
    + ToArray()
    + ToArray()
    + TrimToSize()
}

class "SyncIList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
}

class "FixedSizeList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
}

class "FixedSizeArrayList" {
    + Add()
    + AddRange()
    + BinarySearch()
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Remove()
    + RemoveAt()
    + RemoveRange()
    + SetRange()
    + GetRange()
    + Reverse()
    + Sort()
    + ToArray()
    + ToArray()
    + TrimToSize()
}

class "ReadOnlyList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
}

class "ReadOnlyArrayList" {
    + Add()
    + AddRange()
    + BinarySearch()
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Remove()
    + RemoveAt()
    + RemoveRange()
    + SetRange()
    + GetRange()
    + Reverse()
    + Sort()
    + ToArray()
    + ToArray()
    + TrimToSize()
}

class "ArrayListEnumerator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "Range" {
    - InternalUpdateRange()
    - InternalUpdateVersion()
    + Add()
    + AddRange()
    + BinarySearch()
    + Clear()
    + Clone()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + GetEnumerator()
    + GetRange()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + RemoveAt()
    + RemoveRange()
    + Reverse()
    + SetRange()
    + Sort()
    + ToArray()
    + ToArray()
    + TrimToSize()
}

class "ArrayListEnumeratorSimple" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "Hashtable" {
    - InitHash()
    + Add()
    + Clear()
    + Clone()
    + Contains()
    + ContainsKey()
    + ContainsValue()
    - CopyKeys()
    - CopyEntries()
    + CopyTo()
    + ToKeyValuePairsArray()
    - CopyValues()
    - expand()
    - rehash()
    - UpdateVersion()
    - rehash()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + GetHash()
    + KeyEquals()
    - Insert()
    - putEntry()
    + Remove()
    + GetObjectData()
    + OnDeserialization()
}

class "KeyCollection" {
    + CopyTo()
    + GetEnumerator()
}

class "ValueCollection" {
    + CopyTo()
    + GetEnumerator()
}

class "SyncHashtable" {
    + GetObjectData()
    + Add()
    + Clear()
    + Contains()
    + ContainsKey()
    + ContainsValue()
    + CopyTo()
    + Clone()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + Remove()
    + OnDeserialization()
    + ToKeyValuePairsArray()
}

class "HashtableEnumerator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "EmptyReadOnlyDictionaryInternal" {
    - System.Collections.IEnumerable.GetEnumerator()
    + CopyTo()
    + Contains()
    + Add()
    + Clear()
    + GetEnumerator()
    + Remove()
}

class "NodeEnumerator" {
    + MoveNext()
    + Reset()
}

class "ConcurrentQueue`1" {
    - InitializeFromCollection()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake()
    + ToArray()
    + CopyTo()
    + GetEnumerator()
    - SnapForObservation()
    - GetItemWhenAvailable()
    - Enumerate()
    + Enqueue()
    - EnqueueSlow()
    + TryDequeue()
    - TryDequeueSlow()
    + TryPeek()
    - TryPeek()
    + Clear()
}

class "Segment" {
    + EnsureFrozenForEnqueues()
    + TryDequeue()
    + TryPeek()
    + TryEnqueue()
}

class "<Enumerate>d__28" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "CDSCollectionETWBCLProvider" {
    + ConcurrentStack_FastPushFailed()
    + ConcurrentStack_FastPopFailed()
    + ConcurrentDictionary_AcquiringAllLocks()
    + ConcurrentBag_TryTakeSteals()
    + ConcurrentBag_TryPeekSteals()
}

class "ConcurrentDictionary`2" {
    - InitializeFromCollection()
    + TryAdd()
    + ContainsKey()
    + TryRemove()
    - TryRemoveInternal()
    + TryGetValue()
    - TryGetValueInternal()
    + TryUpdate()
    - TryUpdateInternal()
    + Clear()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo()
    + ToArray()
    - CopyToPairs()
    - CopyToEntries()
    - CopyToObjects()
    + GetEnumerator()
    - TryAddInternal()
    - GetCountInternal()
    + GetOrAdd()
    + GetOrAdd()
    + GetOrAdd()
    + AddOrUpdate()
    + AddOrUpdate()
    + AddOrUpdate()
    - System.Collections.Generic.IDictionary<TKey,TValue>.Add()
    - System.Collections.Generic.IDictionary<TKey,TValue>.Remove()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IDictionary.Add()
    - System.Collections.IDictionary.Contains()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.ICollection.CopyTo()
    - GrowTable()
    - AcquireAllLocks()
    - AcquireLocks()
    - ReleaseLocks()
    - GetKeys()
    - GetValues()
    - OnSerializing()
    - OnSerialized()
    - OnDeserialized()
}

class "DictionaryEnumerator" {
    + MoveNext()
    + Reset()
}

class "<GetEnumerator>d__35" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "ConcurrentStack`1" {
    - InitializeFromCollection()
    + Clear()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
    + Push()
    + PushRange()
    + PushRange()
    - PushCore()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd()
    + TryPeek()
    + TryPop()
    + TryPopRange()
    + TryPopRange()
    - TryPopCore()
    - TryPopCore()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake()
    + ToArray()
    - ToList()
    - ToList()
    + GetEnumerator()
    - GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__35" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "EnumerableDropIndices" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Dispose()
}

class "EnumeratorDropIndices" {
    + MoveNext()
    + Dispose()
    + Reset()
}

class "DynamicPartitionerForIEnumerable`1" {
    + GetOrderablePartitions()
    + GetOrderableDynamicPartitions()
}

class "InternalPartitionEnumerable" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - TryCopyFromFillBuffer()
    + GrabChunk()
    + GrabChunk_Single()
    + GrabChunk_Buffered()
    + Dispose()
}

class "InternalPartitionEnumerator" {
    + GrabNextChunk()
    + Dispose()
}

class "DynamicPartitionerForIList`1" {
    + GetOrderableDynamicPartitions_Factory()
}

class "InternalPartitionEnumerable" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "DynamicPartitionerForArray`1" {
    + GetOrderableDynamicPartitions_Factory()
}

class "InternalPartitionEnumerable" {
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
}

class "StaticIndexRangePartitionerForIList`1" {
    + CreatePartition()
}

class "StaticIndexRangePartitionerForArray`1" {
    + CreatePartition()
}

class "<CreateRanges>d__6" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Tuple<System.Int64,System.Int64>>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<CreateRanges>d__9" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Tuple<System.Int32,System.Int32>>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "Collection`1" {
    + Add()
    + Clear()
    + CopyTo()
    + Contains()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + ClearItems()
    + InsertItem()
    + RemoveItem()
    + SetItem()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
}

class "ReadOnlyCollection`1" {
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    - System.Collections.Generic.ICollection<T>.Add()
    - System.Collections.Generic.ICollection<T>.Clear()
    - System.Collections.Generic.IList<T>.Insert()
    - System.Collections.Generic.ICollection<T>.Remove()
    - System.Collections.Generic.IList<T>.RemoveAt()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "ReadOnlyDictionary`2" {
    + ContainsKey()
    + TryGetValue()
    - System.Collections.Generic.IDictionary<TKey,TValue>.Add()
    - System.Collections.Generic.IDictionary<TKey,TValue>.Remove()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IDictionary.Add()
    - System.Collections.IDictionary.Clear()
    - System.Collections.IDictionary.Contains()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.ICollection.CopyTo()
}

class "KeyCollection" {
    - System.Collections.Generic.ICollection<TKey>.Add()
    - System.Collections.Generic.ICollection<TKey>.Clear()
    - System.Collections.Generic.ICollection<TKey>.Contains()
    + CopyTo()
    - System.Collections.Generic.ICollection<TKey>.Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "ValueCollection" {
    - System.Collections.Generic.ICollection<TValue>.Add()
    - System.Collections.Generic.ICollection<TValue>.Clear()
    - System.Collections.Generic.ICollection<TValue>.Contains()
    + CopyTo()
    - System.Collections.Generic.ICollection<TValue>.Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "Dictionary`2" {
    + Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove()
    + Clear()
    + ContainsKey()
    + ContainsValue()
    - CopyTo()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
    + GetObjectData()
    - FindEntry()
    - Initialize()
    - TryInsert()
    + OnDeserialization()
    - Resize()
    - Resize()
    + Remove()
    + Remove()
    + TryGetValue()
    + TryAdd()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + EnsureCapacity()
    + TrimExcess()
    + TrimExcess()
    - System.Collections.IDictionary.Add()
    - System.Collections.IDictionary.Contains()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
}

class "KeyCollection" {
    + GetEnumerator()
    + CopyTo()
    - System.Collections.Generic.ICollection<TKey>.Add()
    - System.Collections.Generic.ICollection<TKey>.Clear()
    - System.Collections.Generic.ICollection<TKey>.Contains()
    - System.Collections.Generic.ICollection<TKey>.Remove()
    - System.Collections.Generic.IEnumerable<TKey>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "ValueCollection" {
    + GetEnumerator()
    + CopyTo()
    - System.Collections.Generic.ICollection<TValue>.Add()
    - System.Collections.Generic.ICollection<TValue>.Remove()
    - System.Collections.Generic.ICollection<TValue>.Clear()
    - System.Collections.Generic.ICollection<TValue>.Contains()
    - System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "List`1" {
    + Add()
    - AddWithResize()
    - System.Collections.IList.Add()
    + AddRange()
    + AsReadOnly()
    + BinarySearch()
    + BinarySearch()
    + BinarySearch()
    + Clear()
    + Contains()
    - System.Collections.IList.Contains()
    + ConvertAll()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
    + CopyTo()
    - EnsureCapacity()
    + Exists()
    + Find()
    + FindAll()
    + FindIndex()
    + FindIndex()
    + FindIndex()
    + FindLast()
    + FindLastIndex()
    + FindLastIndex()
    + FindLastIndex()
    + ForEach()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetRange()
    + IndexOf()
    - System.Collections.IList.IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    - System.Collections.IList.Insert()
    + InsertRange()
    + LastIndexOf()
    + LastIndexOf()
    + LastIndexOf()
    + Remove()
    - System.Collections.IList.Remove()
    + RemoveAll()
    + RemoveAt()
    + RemoveRange()
    + Reverse()
    + Reverse()
    + Sort()
    + Sort()
    + Sort()
    + Sort()
    + ToArray()
    + TrimExcess()
    + TrueForAll()
    - AddEnumerable()
}

class "LowLevelDictionary`2" {
    + TryGetValue()
    + Add()
    + Clear()
    + Remove()
    - Find()
    - UncheckedAdd()
    - ExpandBuckets()
    - GetBucket()
}

class "DefaultComparer`1" {
    + Equals()
    + GetHashCode()
}

class "ReferenceEqualityComparer`1" {
    + Equals()
    + GetHashCode()
}

class "Queue`1" {
    + Clear()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + Enqueue()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Dequeue()
    + TryDequeue()
    + Peek()
    + TryPeek()
    + Contains()
    + ToArray()
    - SetCapacity()
    - MoveNext()
    - ThrowForEmptyQueue()
    + TrimExcess()
}

class "Stack`1" {
    + Clear()
    + Contains()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + TrimExcess()
    + Peek()
    + TryPeek()
    + Pop()
    + TryPop()
    + Push()
    - PushWithResize()
    + ToArray()
    - ThrowForEmptyStack()
}

class "LowLevelList`1" {
    + Add()
    - EnsureCapacity()
    + AddRange()
    + Clear()
    + Contains()
    + CopyTo()
    + CopyTo()
    + IndexOf()
    + IndexOf()
    + Insert()
    + InsertRange()
    + Remove()
    + RemoveAll()
    + RemoveAt()
    + ToArray()
}

class "LowLevelListWithIList`1" {
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ArraySortHelper`1" {
    + Sort()
    + BinarySearch()
}

class "GenericArraySortHelper`1" {
    + Sort()
    + BinarySearch()
}

class "ArraySortHelper`2" {
    + Sort()
}

class "GenericArraySortHelper`2" {
    + Sort()
}

class "GenericComparer`1" {
    + Compare()
    + Equals()
    + GetHashCode()
}

class "NullableComparer`1" {
    + Compare()
    + Equals()
    + GetHashCode()
}

class "ObjectComparer`1" {
    + Compare()
    + Equals()
    + GetHashCode()
}

class "ComparisonComparer`1" {
    + Compare()
}

class "GenericEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + IndexOf()
    + LastIndexOf()
    + Equals()
    + GetHashCode()
}

class "NullableEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + IndexOf()
    + LastIndexOf()
    + Equals()
    + GetHashCode()
}

class "ObjectEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + IndexOf()
    + LastIndexOf()
    + Equals()
    + GetHashCode()
}

class "ByteEqualityComparer" {
    + Equals()
    + GetHashCode()
    + IndexOf()
    + LastIndexOf()
    + Equals()
    + GetHashCode()
}

class "EnumEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + GetObjectData()
    + Equals()
    + GetHashCode()
}

class "SByteEnumEqualityComparer`1" {
    + GetHashCode()
}

class "ShortEnumEqualityComparer`1" {
    + GetHashCode()
}

class "LongEnumEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + Equals()
    + GetHashCode()
    + GetObjectData()
}

class "InternalStringComparer" {
    + GetHashCode()
    + Equals()
    + IndexOf()
}

class "SpanAction`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ReadOnlySpanAction`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ArrayPoolEventSource" {
    + BufferRented()
    + BufferAllocated()
    + BufferReturned()
    + BufferTrimmed()
    + BufferTrimPoll()
}

class "ConfigurableArrayPool`1" {
    + Rent()
    + Return()
}

class "Bucket" {
    + Rent()
    + Return()
}

class "TlsOverPerCoreLockedStacksArrayPool`1" {
    - CreatePerCoreLockedStacks()
    + Rent()
    + Return()
    + Trim()
}

class "PerCoreLockedStacks" {
    + TryPush()
    + TryPop()
    + Trim()
}

class "LockedStack" {
    + TryPush()
    + TryPop()
    + Trim()
}

class "ArrayMemoryPool`1" {
    + Rent()
    + Dispose()
}

class "ArrayMemoryPoolBuffer" {
    + Dispose()
}

class "<>c" {
    + <ToString>b__33_0()
}

class "ArrayBufferWriter`1" {
    + Clear()
    + Advance()
    + GetMemory()
    + GetSpan()
    - CheckAndResizeBuffer()
}

class "FileLoadException" {
    + ToString()
    + GetObjectData()
}

class "FileNotFoundException" {
    - SetMessageField()
    + ToString()
    + GetObjectData()
}

class "MemoryStream" {
    - EnsureNotClosed()
    - EnsureWriteable()
    + Dispose()
    - EnsureCapacity()
    + Flush()
    + FlushAsync()
    + GetBuffer()
    + TryGetBuffer()
    + InternalGetBuffer()
    + InternalGetOriginAndLength()
    + InternalGetPosition()
    + InternalReadInt32()
    + InternalEmulateRead()
    + Read()
    + Read()
    + ReadAsync()
    + ReadAsync()
    + ReadByte()
    + CopyTo()
    + CopyToAsync()
    + Seek()
    + SetLength()
    + ToArray()
    + Write()
    + Write()
    + WriteAsync()
    + WriteAsync()
    + WriteByte()
    + WriteTo()
}

class "PinnedBufferMemoryStream" {
    + Read()
    + Write()
    + Finalize()
    + Dispose()
}

class "StreamReader" {
    - CheckAsyncTaskInProgress()
    - Init()
    + Init()
    + Close()
    + Dispose()
    + DiscardBufferedData()
    + Peek()
    + Read()
    + Read()
    + Read()
    - ReadSpan()
    + ReadToEnd()
    + ReadBlock()
    + ReadBlock()
    - CompressBuffer()
    - DetectEncoding()
    - IsPreamble()
    + ReadBuffer()
    - ReadBuffer()
    + ReadLine()
    + ReadLineAsync()
    - ReadLineAsyncInternal()
    + ReadToEndAsync()
    - ReadToEndAsyncInternal()
    + ReadAsync()
    + ReadAsync()
    + ReadAsyncInternal()
    + ReadBlockAsync()
    + ReadBlockAsync()
    - ReadBufferAsync()
    + DataAvailable()
}

class "NullStreamReader" {
    + Dispose()
    + Peek()
    + Read()
    + Read()
    + ReadLine()
    + ReadToEnd()
    + ReadBuffer()
}

class "StreamWriter" {
    - CheckAsyncTaskInProgress()
    - Init()
    + Close()
    + Dispose()
    + DisposeAsync()
    - DisposeAsyncCore()
    - CloseStreamFromDispose()
    + Flush()
    - Flush()
    + Write()
    + Write()
    + Write()
    + Write()
    - WriteSpan()
    + Write()
    + WriteLine()
    + WriteLine()
    + WriteAsync()
    + WriteAsync()
    + WriteAsync()
    + WriteAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + FlushAsync()
    - FlushAsyncInternal()
}

class "NullTextReader" {
    + Read()
    + ReadLine()
}

class "SyncTextReader" {
    + Close()
    + Dispose()
    + Peek()
    + Read()
    + Read()
    + ReadBlock()
    + ReadLine()
    + ReadToEnd()
    + ReadLineAsync()
    + ReadToEndAsync()
    + ReadBlockAsync()
    + ReadAsync()
}

class "<>c" {
    + <ReadLineAsync>b__13_0()
    + <ReadAsync>b__16_0()
    + <ReadAsyncInternal>b__17_0()
    + <ReadBlockAsync>b__19_0()
}

class "NullTextWriter" {
    + Write()
    + Write()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + Write()
}

class "SyncTextWriter" {
    + Close()
    + Dispose()
    + Flush()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteAsync()
    + WriteAsync()
    + WriteAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + FlushAsync()
}

class "<>c" {
    + <WriteAsync>b__56_0()
    + <WriteAsync>b__57_0()
    + <WriteAsync>b__59_0()
    + <WriteAsync>b__60_0()
    + <WriteLineAsync>b__61_0()
    + <WriteLineAsync>b__62_0()
    + <WriteLineAsync>b__64_0()
    + <WriteLineAsync>b__65_0()
    + <FlushAsync>b__67_0()
}

class "UnmanagedMemoryAccessor" {
    + Initialize()
    + Dispose()
    + Dispose()
    + ReadBoolean()
    + ReadByte()
    + ReadChar()
    + ReadInt16()
    + ReadInt32()
    + ReadInt64()
    + ReadDecimal()
    + ReadSingle()
    + ReadDouble()
    + ReadSByte()
    + ReadUInt16()
    + ReadUInt32()
    + ReadUInt64()
    + Read()
    + ReadArray()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + WriteArray()
    - EnsureSafeToRead()
    - EnsureSafeToWrite()
}

class "UnmanagedMemoryStream" {
    + Initialize()
    + Initialize()
    + Dispose()
    - EnsureNotClosed()
    - EnsureReadable()
    - EnsureWriteable()
    + Flush()
    + FlushAsync()
    + Read()
    + Read()
    + ReadCore()
    + ReadAsync()
    + ReadAsync()
    + ReadByte()
    + Seek()
    + SetLength()
    + Write()
    + Write()
    + WriteCore()
    + WriteAsync()
    + WriteAsync()
    + WriteByte()
}

class "UnmanagedMemoryStreamWrapper" {
    + Dispose()
    + Flush()
    + GetBuffer()
    + TryGetBuffer()
    + Read()
    + Read()
    + ReadByte()
    + Seek()
    + ToArray()
    + Write()
    + Write()
    + WriteByte()
    + WriteTo()
    + SetLength()
    + CopyToAsync()
    + FlushAsync()
    + ReadAsync()
    + ReadAsync()
    + WriteAsync()
    + WriteAsync()
}

class "DirectoryInfo" {
    - Init()
    + CreateSubdirectory()
    + Create()
    + GetFiles()
    + GetFiles()
    + GetFiles()
    + GetFiles()
    + GetFileSystemInfos()
    + GetFileSystemInfos()
    + GetFileSystemInfos()
    + GetFileSystemInfos()
    + GetDirectories()
    + GetDirectories()
    + GetDirectories()
    + GetDirectories()
    + EnumerateDirectories()
    + EnumerateDirectories()
    + EnumerateDirectories()
    + EnumerateDirectories()
    + EnumerateFiles()
    + EnumerateFiles()
    + EnumerateFiles()
    + EnumerateFiles()
    + EnumerateFileSystemInfos()
    + EnumerateFileSystemInfos()
    + EnumerateFileSystemInfos()
    + EnumerateFileSystemInfos()
    + MoveTo()
    + Delete()
    + Delete()
    + Create()
    + CreateSubdirectory()
    + GetAccessControl()
    + GetAccessControl()
    + SetAccessControl()
}

class "FileInfo" {
    + OpenText()
    + CreateText()
    + AppendText()
    + CopyTo()
    + CopyTo()
    + Create()
    + Delete()
    + Open()
    + Open()
    + Open()
    + OpenRead()
    + OpenWrite()
    + MoveTo()
    + Replace()
    + Replace()
    + Decrypt()
    + Encrypt()
    + GetAccessControl()
    + GetAccessControl()
    + SetAccessControl()
}

class "ReadLinesIterator" {
    + MoveNext()
    + Clone()
    + Dispose()
}

class "BufferedStream" {
    + LazyEnsureAsyncActiveSemaphoreInitialized()
    - EnsureNotClosed()
    - EnsureCanSeek()
    - EnsureCanRead()
    - EnsureCanWrite()
    - EnsureShadowBufferAllocated()
    - EnsureBufferAllocated()
    + DisposeAsync()
    + Dispose()
    + Flush()
    + FlushAsync()
    - FlushAsyncInternal()
    - FlushRead()
    - ClearReadBufferBeforeWrite()
    - FlushWrite()
    - FlushWriteAsync()
    - ReadFromBuffer()
    - ReadFromBuffer()
    - ReadFromBuffer()
    + Read()
    + Read()
    - LastSyncCompletedReadTask()
    + ReadAsync()
    + ReadAsync()
    - ReadFromUnderlyingStreamAsync()
    + BeginRead()
    + EndRead()
    + ReadByte()
    - ReadByteSlow()
    - WriteToBuffer()
    - WriteToBuffer()
    - WriteToBuffer()
    + Write()
    + Write()
    + WriteAsync()
    + WriteAsync()
    - WriteToUnderlyingStreamAsync()
    + BeginWrite()
    + EndWrite()
    + WriteByte()
    + Seek()
    + SetLength()
    + CopyTo()
    + CopyToAsync()
    - CopyToAsyncCore()
}

class "<>c" {
    + <LazyEnsureAsyncActiveSemaphoreInitialized>b__10_0()
}

class "ReadWriteTask" {
    + ClearBeginState()
    - System.Threading.Tasks.ITaskCompletionAction.Invoke()
}

class "NullStream" {
    + CopyTo()
    + CopyToAsync()
    + Dispose()
    + Flush()
    + FlushAsync()
    + BeginRead()
    + EndRead()
    + BeginWrite()
    + EndWrite()
    + Read()
    + Read()
    + ReadAsync()
    + ReadAsync()
    + ReadByte()
    + Write()
    + Write()
    + WriteAsync()
    + WriteAsync()
    + WriteByte()
    + Seek()
    + SetLength()
}

class "<>c" {
    + <get_AsyncWaitHandle>b__12_0()
}

class "SyncStream" {
    + Close()
    + Dispose()
    + Flush()
    + Read()
    + Read()
    + ReadByte()
    + BeginRead()
    + EndRead()
    + Seek()
    + SetLength()
    + Write()
    + Write()
    + WriteByte()
    + BeginWrite()
    + EndWrite()
}

class "<>c" {
    + <EnsureAsyncActiveSemaphoreInitialized>b__4_0()
    + <FlushAsync>b__37_0()
    + <BeginReadInternal>b__40_0()
    + <BeginEndReadAsync>b__45_0()
    + <BeginEndReadAsync>b__45_1()
    + <BeginWriteInternal>b__48_0()
    + <RunReadWriteTaskWhenReady>b__49_0()
    + <BeginEndWriteAsync>b__58_0()
    + <BeginEndWriteAsync>b__58_1()
}

class "BinaryReader" {
    + Close()
    + Dispose()
    + Dispose()
    + PeekChar()
    + Read()
    + ReadBoolean()
    + ReadByte()
    + ReadSByte()
    + ReadChar()
    + ReadInt16()
    + ReadUInt16()
    + ReadInt32()
    + ReadUInt32()
    + ReadInt64()
    + ReadUInt64()
    + ReadSingle()
    + ReadDouble()
    + ReadDecimal()
    + ReadString()
    + Read()
    - InternalReadChars()
    - InternalReadOneChar()
    + ReadChars()
    + Read()
    + Read()
    + Read()
    + ReadBytes()
    + FillBuffer()
    + Read7BitEncodedInt()
}

class "BinaryWriter" {
    + Close()
    + Dispose()
    + Dispose()
    + Flush()
    + Seek()
    + Write()
    + Write()
    + DisposeAsync()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write7BitEncodedInt()
}

class "StringReader" {
    + Close()
    + Dispose()
    + Peek()
    + Read()
    + Read()
    + ReadToEnd()
    + ReadLine()
    + ReadLineAsync()
    + ReadToEndAsync()
    + ReadBlockAsync()
    + ReadAsync()
}

class "StringWriter" {
    + Close()
    + Dispose()
    + GetStringBuilder()
    + Write()
    + Write()
    + Write()
    + WriteAsync()
    + WriteAsync()
    + WriteAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + WriteLineAsync()
    + FlushAsync()
    + ToString()
}

class "DriveInfo" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + ToString()
}

class "<>c" {
    + <.ctor>b__3_0()
}

class "FileStream" {
    - Init()
    - ExposeHandle()
    + ReadByte()
    + WriteByte()
    + Read()
    - ReadInternal()
    + BeginRead()
    + EndRead()
    + Write()
    - WriteInternal()
    + BeginWrite()
    + EndWrite()
    + Seek()
    + SetLength()
    + Flush()
    + Flush()
    + Lock()
    + Unlock()
    + Finalize()
    + Dispose()
    + GetAccessControl()
    + SetAccessControl()
    + FlushAsync()
    + ReadAsync()
    + WriteAsync()
    - ReadSegment()
    - WriteSegment()
    - FlushBuffer()
    - FlushBufferIfDirty()
    - RefillBuffer()
    - ReadData()
    - InitBuffer()
    - GetSecureFileName()
    - GetSecureFileName()
}

class "ReadDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WriteDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HGlobalUnmanagedMemoryStream" {
    + Dispose()
}

class "<>c" {
    + <JoinInternal>b__59_0()
    + <JoinInternal>b__60_0()
    + <JoinInternal>b__61_0()
}

class "UnexceptionalStreamReader" {
    + Peek()
    + Read()
    + Read()
    - CheckEOL()
    + ReadLine()
    + ReadToEnd()
}

class "UnexceptionalStreamWriter" {
    + Flush()
    + Write()
    + Write()
    + Write()
    + Write()
}

class "CStreamReader" {
    + Peek()
    + Read()
    + Read()
    + ReadLine()
    + ReadToEnd()
}

class "CStreamWriter" {
    + Write()
    + Write()
    + InternalWriteString()
    + InternalWriteChar()
    + InternalWriteChars()
    + Write()
    + Write()
    + WriteLine()
}

class "IsolatedStorageFile" {
    + Finalize()
    - PostInit()
    + Close()
    + CreateDirectory()
    + CopyFile()
    + CopyFile()
    + CreateFile()
    + DeleteDirectory()
    + DeleteFile()
    + Dispose()
    + DirectoryExists()
    + FileExists()
    + GetCreationTime()
    + GetLastAccessTime()
    + GetLastWriteTime()
    + GetDirectoryNames()
    + GetDirectoryNames()
    - GetNames()
    + GetFileNames()
    + GetFileNames()
    + IncreaseQuotaTo()
    + MoveDirectory()
    + MoveFile()
    + OpenFile()
    + OpenFile()
    + OpenFile()
    + Remove()
    + GetPermission()
    - CheckOpen()
    - CheckOpen()
    - IsPathInStorage()
    - GetNameFromIdentity()
    - SaveIdentities()
}

class "IsolatedStorageFileEnumerator" {
    + MoveNext()
    + Reset()
}

class "IsolatedStorageFileStream" {
    + BeginRead()
    + BeginWrite()
    + EndRead()
    + EndWrite()
    + Flush()
    + Flush()
    + Read()
    + ReadByte()
    + Seek()
    + SetLength()
    + Write()
    + WriteByte()
    + Dispose()
}

class "IsolatedStorageSecurityState" {
    + EnsureState()
}

class "FileSystemEnumerable`1" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "FindPredicate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FindTransform" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DelegateEnumerator" {
    + TransformEntry()
    + ShouldRecurseIntoEntry()
    + ShouldIncludeEntry()
}

class "<>c__DisplayClass3_0" {
    + <UserFiles>b__1()
}

class "<>c" {
    + <UserFiles>b__3_0()
    + <UserDirectories>b__4_0()
    + <UserEntries>b__5_0()
    + <FileInfos>b__6_0()
    + <DirectoryInfos>b__7_0()
    + <FileSystemInfos>b__8_0()
}

class "<>c__DisplayClass4_0" {
    + <UserDirectories>b__1()
}

class "<>c__DisplayClass5_0" {
    + <UserEntries>b__1()
}

class "<>c__DisplayClass6_0" {
    + <FileInfos>b__1()
}

class "<>c__DisplayClass7_0" {
    + <DirectoryInfos>b__1()
}

class "<>c__DisplayClass8_0" {
    + <FileSystemInfos>b__1()
}

class "ReadOnlyPermissionSet" {
    + AddPermissionImpl()
    + GetEnumeratorImpl()
    + GetPermissionImpl()
    + RemovePermissionImpl()
    + SetPermissionImpl()
}

class "WindowsRuntimeDesignerContext" {
    + GetAssembly()
    + GetType()
}

class "<>f__AnonymousType0`2" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "SafePipeHandle" {
    + ReleaseHandle()
    + SetHandle()
}

class "SafeMemoryMappedFileHandle" {
    + ReleaseHandle()
}

class "SafeMemoryMappedViewHandle" {
    + Flush()
    + ReleaseHandle()
}

class "SafeNCryptKeyHandle" {
    + ReleaseNativeHandle()
}

class "SafeNCryptProviderHandle" {
    + ReleaseNativeHandle()
}

class "SafeNCryptSecretHandle" {
    + ReleaseNativeHandle()
}

class "Action`9" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`10" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`11" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`12" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`13" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`14" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`15" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Action`16" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`10" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`11" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`12" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`13" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`14" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`15" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`16" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`17" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "IncrementalHash" {
    + AppendData()
    + AppendData()
    + GetHashAndReset()
    + Dispose()
    + AppendData()
    + TryGetHashAndReset()
}

class "AesManaged" {
    + CreateDecryptor()
    + CreateDecryptor()
    + CreateEncryptor()
    + CreateEncryptor()
    + Dispose()
    + GenerateIV()
    + GenerateKey()
}

class "CngAlgorithm" {
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "CngAlgorithmGroup" {
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "CngKey" {
    + Delete()
    + Dispose()
    + Export()
    + GetProperty()
    + HasProperty()
    + SetProperty()
}

class "CngKeyBlobFormat" {
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "CngProvider" {
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ECDsaCng" {
    + SignHash()
    + VerifyHash()
    + FromXmlString()
    + SignData()
    + SignData()
    + SignData()
    + ToXmlString()
    + VerifyData()
    + VerifyData()
    + VerifyData()
}

class "RSACng" {
    + ExportParameters()
    + ImportParameters()
}

class "AesCng" {
    + CreateDecryptor()
    + CreateDecryptor()
    + CreateEncryptor()
    + CreateEncryptor()
    + Dispose()
    + GenerateIV()
    + GenerateKey()
}

class "AesCryptoServiceProvider" {
    + GenerateIV()
    + GenerateKey()
    + CreateDecryptor()
    + CreateEncryptor()
    + CreateDecryptor()
    + CreateEncryptor()
    + Dispose()
}

class "AesTransform" {
    + Clear()
    + ECB()
    - SubByte()
    - Encrypt128()
    - Decrypt128()
}

class "MD5Cng" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA1Cng" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA256Cng" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA256CryptoServiceProvider" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA384Cng" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA384CryptoServiceProvider" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA512Cng" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "SHA512CryptoServiceProvider" {
    + Initialize()
    + HashCore()
    + HashFinal()
    + Dispose()
}

class "TripleDESCng" {
    + CreateDecryptor()
    + CreateDecryptor()
    + CreateEncryptor()
    + CreateEncryptor()
    + Dispose()
    + GenerateIV()
    + GenerateKey()
}

class "ProxyAssembly" {
    + CreateProxy()
    - GenerateTypeInfoOfIgnoresAccessChecksToAttribute()
    + GenerateInstanceOfIgnoresAccessChecksToAttribute()
    + EnsureTypeIsVisible()
    + GetTokenForMethod()
    + ResolveMethodToken()
}

class "<>c" {
    + <GenerateTypeInfoOfIgnoresAccessChecksToAttribute>b__11_0()
    + <GenerateTypeInfoOfIgnoresAccessChecksToAttribute>b__11_1()
}

class "ProxyBuilder" {
    - Complete()
    + CreateType()
    + AddInterfaceImpl()
    - AddMethodImpl()
}

class "ParametersArray" {
    + Get()
    + BeginSet()
    + EndSet()
}

class "GenericArray`1" {
    + Load()
    + Get()
    + BeginSet()
    + EndSet()
}

class "MethodInfoEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "<>c" {
    + <Complete>b__6_0()
    + <AddInterfaceImpl>b__8_0()
}

class "<>c" {
    + <GenerateProxyType>b__6_0()
}

class "UnixDomainSocketEndPoint" {
    - CreateSocketAddressForSerialize()
    + Serialize()
    + Create()
    + ToString()
}

class "<>c" {
    + <.cctor>b__18_0()
}

class "<>c__DisplayClass3_0" {
    + <MakeIntermediateReduceFunction>b__0()
}

class "<>c__DisplayClass4_0" {
    + <MakeFinalReduceFunction>b__0()
}

class "<>c" {
    + <MakeResultSelectorFunction>b__5_0()
}

class "OrderedParallelQuery`1" {
    + GetEnumerator()
}

class "ParallelQuery" {
    + Cast()
    + OfType()
    + GetEnumeratorUntyped()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ParallelQuery`1" {
    + Cast()
    + OfType()
    + GetEnumeratorUntyped()
    + GetEnumerator()
}

class "<>c__1`1" {
    + <Cast>b__1_0()
}

class "<>c__2`1" {
    + <OfType>b__2_0()
    + <OfType>b__2_1()
}

class "<>c__DisplayClass46_0`3" {
    + <GroupBy>b__0()
}

class "<>c__DisplayClass47_0`3" {
    + <GroupBy>b__0()
}

class "<>c__DisplayClass48_0`4" {
    + <GroupBy>b__0()
}

class "<>c__DisplayClass49_0`4" {
    + <GroupBy>b__0()
}

class "<>c__50`1" {
    + <PerformAggregation>b__50_0()
}

class "<>c__148`1" {
    + <Any>b__148_0()
}

class "EnumerableExecutor`1" {
    + ExecuteBoxed()
    + Execute()
}

class "EnumerableQuery`1" {
    - System.Linq.IQueryProvider.CreateQuery()
    - System.Linq.IQueryProvider.CreateQuery()
    - System.Linq.IQueryProvider.Execute()
    - System.Linq.IQueryProvider.Execute()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - GetEnumerator()
    + ToString()
}

class "EnumerableRewriter" {
    + VisitMethodCall()
    - FixupQuotedArgs()
    - FixupQuotedExpression()
    + VisitLambda()
    - GetEquivalentType()
    + VisitConstant()
    + VisitConditional()
    + VisitBlock()
    + VisitGoto()
    + VisitLabelTarget()
}

class "<>c" {
    + <GetEquivalentType>b__7_0()
    + <GetEquivalentType>b__7_1()
    + <GetEquivalentType>b__7_2()
    + <GetEquivalentType>b__7_3()
    + <GetEquivalentType>b__7_4()
    + <GetEquivalentType>b__7_5()
    + <FindEnumerableMethod>b__10_0()
}

class "<>c__DisplayClass10_0" {
    + <FindEnumerableMethod>b__1()
}

class "<>c__DisplayClass11_0" {
    + <FindMethod>b__0()
}

class "<>c" {
    + <GetStaticMethods>b__1_0()
}

class "AppendPrepend1Iterator`1" {
    + Clone()
    + MoveNext()
    + Append()
    + Prepend()
    - LazyToArray()
    + ToArray()
    + ToList()
    + GetCount()
}

class "AppendPrependN`1" {
    + Clone()
    + MoveNext()
    + Append()
    + Prepend()
    - LazyToArray()
    + ToArray()
    + ToList()
    + GetCount()
}

class "Concat2Iterator`1" {
    + Clone()
    + Concat()
    + GetCount()
    + GetEnumerable()
    + ToArray()
}

class "ConcatNIterator`1" {
    + Clone()
    + Concat()
    + GetCount()
    + GetEnumerable()
    + ToArray()
    - LazyToArray()
    - PreallocatingToArray()
}

class "DefaultIfEmptyIterator`1" {
    + Clone()
    + MoveNext()
    + Dispose()
    + ToArray()
    + ToList()
    + GetCount()
}

class "DistinctIterator`1" {
    + Clone()
    + MoveNext()
    + Dispose()
    - FillSet()
    + ToArray()
    + ToList()
    + GetCount()
}

class "ListPartition`1" {
    + Clone()
    + MoveNext()
    + Select()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
    + ToArray()
    + ToList()
    + GetCount()
}

class "EnumerablePartition`1" {
    + Clone()
    + Dispose()
    + GetCount()
    + MoveNext()
    + Select()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
    + ToArray()
    + ToList()
    - SkipBeforeFirst()
}

class "RangeIterator" {
    + Clone()
    + MoveNext()
    + Dispose()
    + Select()
    + ToArray()
    + ToList()
    + GetCount()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
}

class "RepeatIterator`1" {
    + Clone()
    + Dispose()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + GetCount()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
}

class "ReverseIterator`1" {
    + Clone()
    + MoveNext()
    + Dispose()
    + ToArray()
    + ToList()
    + GetCount()
}

class "SelectEnumerableIterator`2" {
    + Clone()
    + Dispose()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + GetCount()
}

class "SelectArrayIterator`2" {
    + Clone()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + GetCount()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
}

class "SelectListIterator`2" {
    + Clone()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + GetCount()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
}

class "SelectIListIterator`2" {
    + Clone()
    + MoveNext()
    + Dispose()
    + Select()
    + ToArray()
    + ToList()
    + GetCount()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
}

class "SelectIPartitionIterator`2" {
    + Clone()
    + MoveNext()
    + Dispose()
    + Select()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
    - LazyToArray()
    - PreallocatingToArray()
    + ToArray()
    + ToList()
    + GetCount()
}

class "SelectListPartitionIterator`2" {
    + Clone()
    + MoveNext()
    + Select()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
    + ToArray()
    + ToList()
    + GetCount()
}

class "SelectManySingleSelectorIterator`2" {
    + Clone()
    + Dispose()
    + GetCount()
    + MoveNext()
    + ToArray()
    + ToList()
}

class "UnionIterator2`1" {
    + Clone()
    + GetEnumerable()
    + Union()
}

class "UnionIteratorN`1" {
    + Clone()
    + GetEnumerable()
    + Union()
}

class "WhereEnumerableIterator`1" {
    + Clone()
    + Dispose()
    + GetCount()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + Where()
}

class "WhereArrayIterator`1" {
    + Clone()
    + GetCount()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + Where()
}

class "WhereListIterator`1" {
    + Clone()
    + GetCount()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
    + Where()
}

class "WhereSelectArrayIterator`2" {
    + Clone()
    + GetCount()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
}

class "WhereSelectListIterator`2" {
    + Clone()
    + GetCount()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
}

class "WhereSelectEnumerableIterator`2" {
    + Clone()
    + Dispose()
    + GetCount()
    + MoveNext()
    + Select()
    + ToArray()
    + ToList()
}

class "<OfTypeIterator>d__32`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<CastIterator>d__34`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<ExceptIterator>d__57`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GroupJoinIterator>d__66`4" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<IntersectIterator>d__77`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<JoinIterator>d__81`4" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SelectIterator>d__154`2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SelectManyIterator>d__163`2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SelectManyIterator>d__165`3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SelectManyIterator>d__167`3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SkipWhileIterator>d__177`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SkipWhileIterator>d__179`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<SkipLastIterator>d__181`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<TakeWhileIterator>d__204`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<TakeWhileIterator>d__206`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<TakeLastIterator>d__208`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<WhereIterator>d__228`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<ZipIterator>d__236`3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "Grouping`2" {
    + Add()
    + Trim()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.Generic.ICollection<TElement>.Add()
    - System.Collections.Generic.ICollection<TElement>.Clear()
    - System.Collections.Generic.ICollection<TElement>.Contains()
    - System.Collections.Generic.ICollection<TElement>.CopyTo()
    - System.Collections.Generic.ICollection<TElement>.Remove()
    - System.Collections.Generic.IList<TElement>.IndexOf()
    - System.Collections.Generic.IList<TElement>.Insert()
    - System.Collections.Generic.IList<TElement>.RemoveAt()
}

class "<GetEnumerator>d__9" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "GroupedResultEnumerable`4" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + ToArray()
    + ToList()
    + GetCount()
}

class "GroupedResultEnumerable`3" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + ToArray()
    + ToList()
    + GetCount()
}

class "GroupedEnumerable`3" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + ToArray()
    + ToList()
    + GetCount()
}

class "GroupedEnumerable`2" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + ToArray()
    + ToList()
    + GetCount()
}

class "Lookup`2" {
    + Contains()
    + GetEnumerator()
    - System.Linq.IIListProvider<System.Linq.IGrouping<TKey,TElement>>.ToArray()
    + ToArray()
    - System.Linq.IIListProvider<System.Linq.IGrouping<TKey,TElement>>.ToList()
    + ToList()
    - System.Linq.IIListProvider<System.Linq.IGrouping<TKey,TElement>>.GetCount()
    + ApplyResultSelector()
    - System.Collections.IEnumerable.GetEnumerator()
    - InternalGetHashCode()
    + GetGrouping()
    - Resize()
}

class "<GetEnumerator>d__13" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<ApplyResultSelector>d__19`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<GetEnumerator>d__7" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "OrderedEnumerable`2" {
    + GetEnumerableSorter()
    + GetComparer()
}

class "CachingComparer`2" {
    + Compare()
    + SetElement()
}

class "CachingComparerWithChild`2" {
    + Compare()
    + SetElement()
}

class "EnumerableSorter`2" {
    + ComputeKeys()
    + CompareAnyKeys()
    - CompareKeys()
    + QuickSort()
    + PartialQuickSort()
    + QuickSelect()
}

class "EmptyPartition`1" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.IDisposable.Dispose()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
    + ToArray()
    + ToList()
    + GetCount()
}

class "OrderedPartition`1" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Skip()
    + Take()
    + TryGetElementAt()
    + TryGetFirst()
    + TryGetLast()
    + ToArray()
    + ToList()
    + GetCount()
}

class "Set`1" {
    + Add()
    + Remove()
    - Resize()
    + ToArray()
    + ToList()
    + UnionWith()
    - InternalGetHashCode()
}

class "SingleLinkedNode`1" {
    + Add()
    + GetCount()
    + GetEnumerator()
    + GetNode()
    - ToArray()
}

class "<>c__DisplayClass1_0`1" {
    + <CombinePredicates>b__0()
}

class "<>c__DisplayClass2_0`3" {
    + <CombineSelectors>b__0()
}

class "SynchronousChannel`1" {
    + Init()
    + Enqueue()
    + Dequeue()
    + SetDone()
    + CopyTo()
}

class "EmptyEnumerable`1" {
    + GetEnumerator()
}

class "EmptyEnumerator`1" {
    + MoveNext()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "EnumerableWrapperWeakToStrong" {
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
}

class "WrapperEnumeratorWeakToStrong" {
    - System.IDisposable.Dispose()
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "ParallelEnumerableWrapper" {
    + GetEnumeratorUntyped()
    + GetEnumerator()
}

class "ParallelEnumerableWrapper`1" {
    + GetEnumerator()
}

class "RangeEnumerable" {
    + GetPartitions()
    + GetEnumerator()
}

class "RangeEnumerator" {
    + MoveNext()
    + Reset()
}

class "RepeatEnumerable`1" {
    + GetPartitions()
    + GetEnumerator()
}

class "RepeatEnumerator" {
    + MoveNext()
    + Reset()
}

class "Set`1" {
    + Add()
    + Contains()
    + Remove()
    - Find()
    - Resize()
    + InternalGetHashCode()
}

class "ArrayMergeHelper`1" {
    - ToArrayElement()
    + Execute()
    + GetEnumerator()
    + GetResultsAsArray()
}

class "DefaultMergeHelper`2" {
    - System.Linq.Parallel.IMergeHelper<TInputOutput>.Execute()
    - System.Linq.Parallel.IMergeHelper<TInputOutput>.GetEnumerator()
    + GetResultsAsArray()
}

class "MergeExecutor`1" {
    - Execute()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + GetResultsAsArray()
}

class "OrderPreservingMergeHelper`2" {
    - System.Linq.Parallel.IMergeHelper<TInputOutput>.Execute()
    - System.Linq.Parallel.IMergeHelper<TInputOutput>.GetEnumerator()
    + GetResultsAsArray()
}

class "OrderPreservingPipeliningMergeHelper`2" {
    - System.Linq.Parallel.IMergeHelper<TOutput>.Execute()
    - System.Linq.Parallel.IMergeHelper<TOutput>.GetEnumerator()
    + GetResultsAsArray()
}

class "ProducerComparer" {
    + Compare()
}

class "OrderedPipeliningMergeEnumerator" {
    + MoveNext()
    - ThrowIfInTearDown()
    - TryWaitForElement()
    - TryGetPrivateElement()
    + Dispose()
}

class "ProducerComparerInt" {
    + Compare()
}

class "SynchronousChannelMergeEnumerator`1" {
    + MoveNext()
}

class "HashRepartitionEnumerator`3" {
    + MoveNext()
    - EnumerateAndRedistributeElements()
    + Dispose()
}

class "OrderedHashRepartitionEnumerator`3" {
    + MoveNext()
    - EnumerateAndRedistributeElements()
    + Dispose()
}

class "PartitionedDataSource`1" {
    - InitializePartitions()
}

class "ArrayIndexRangeEnumerator" {
    + MoveNext()
    - MoveNextSlowPath()
}

class "ArrayContiguousIndexRangeEnumerator" {
    + MoveNext()
}

class "ListIndexRangeEnumerator" {
    + MoveNext()
    - MoveNextSlowPath()
}

class "ListContiguousIndexRangeEnumerator" {
    + MoveNext()
}

class "ContiguousChunkLazyEnumerator" {
    + MoveNext()
    + Dispose()
}

class "AssociativeAggregationOperator`3" {
    + Aggregate()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "AssociativeAggregationOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "ConcatQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapHelper()
    - WrapHelper2()
    + AsSequentialQuery()
}

class "ConcatQueryOperatorEnumerator`2" {
    + MoveNext()
    + Dispose()
}

class "ConcatQueryOperatorResults" {
    + GetElement()
}

class "ConcatKeyComparer" {
    + Compare()
}

class "ExceptQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapPartitionedStreamHelper()
    + AsSequentialQuery()
}

class "ExceptQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "OrderedExceptQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "GroupJoinQueryOperator`4" {
    + Open()
    + WrapPartitionedStream()
    - WrapPartitionedStreamHelper()
    + AsSequentialQuery()
}

class "HashJoinQueryOperatorEnumerator`5" {
    + MoveNext()
    + Dispose()
}

class "IntersectQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapPartitionedStreamHelper()
    + AsSequentialQuery()
}

class "IntersectQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "OrderedIntersectQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "JoinQueryOperator`4" {
    + WrapPartitionedStream()
    - WrapPartitionedStreamHelper()
    + Open()
    + AsSequentialQuery()
}

class "UnionQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapPartitionedStreamFixedLeftType()
    - WrapPartitionedStreamFixedBothTypes()
    + AsSequentialQuery()
}

class "UnionQueryOperatorEnumerator`2" {
    + MoveNext()
    + Dispose()
}

class "OrderedUnionQueryOperatorEnumerator`2" {
    + MoveNext()
    + Dispose()
}

class "ZipQueryOperator`3" {
    + Open()
    + AsSequentialQuery()
}

class "ZipQueryOperatorResults" {
    + GetElement()
    + GivePartitionedStream()
}

class "<AsSequentialQuery>d__9" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TOutput>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "BinaryQueryOperatorResults" {
    + GivePartitionedStream()
}

class "LeftChildResultsRecipient" {
    + Receive()
}

class "RightChildResultsRecipient`1" {
    + Receive()
}

class "CountAggregationOperator`1" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "CountAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "DecimalAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "DecimalAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "DecimalMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "DecimalMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "DecimalSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "DecimalSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "DoubleAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "DoubleAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "DoubleMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "DoubleMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "DoubleSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "DoubleSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "FloatAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "FloatAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "FloatMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "FloatMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "FloatSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "FloatSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "IntAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "IntAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "IntMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "IntMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "IntSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "IntSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "LongAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "LongAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "LongCountAggregationOperator`1" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "LongCountAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "LongMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "LongMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "LongSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "LongSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableDecimalAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableDecimalAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableDecimalMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableDecimalMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableDecimalSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableDecimalSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableDoubleAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableDoubleAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableDoubleMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableDoubleMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableDoubleSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableDoubleSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableFloatAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableFloatAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableFloatMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableFloatMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableFloatSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableFloatSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableIntAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableIntAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableIntMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableIntMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableIntSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableIntSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableLongAverageAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableLongAverageAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableLongMinMaxAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableLongMinMaxAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "NullableLongSumAggregationOperator" {
    + InternalAggregate()
    + CreateEnumerator()
}

class "NullableLongSumAggregationOperatorEnumerator`1" {
    + MoveNextCore()
    + Dispose()
}

class "ListQueryResults`1" {
    + GivePartitionedStream()
    + GetElement()
    + GetPartitionedStream()
}

class "OrderingQueryOperator`1" {
    + Open()
    + GetEnumerator()
    + AsSequentialQuery()
}

class "QueryExecutionOption`1" {
    + Open()
    + AsSequentialQuery()
}

class "PartitionedStreamMerger`1" {
    + Receive()
}

class "PartitionerQueryOperator`1" {
    + Open()
    + AsSequentialQuery()
}

class "PartitionerQueryOperatorResults" {
    + GivePartitionedStream()
}

class "OrderablePartitionerEnumerator" {
    + MoveNext()
    + Dispose()
}

class "PartitionerEnumerator" {
    + MoveNext()
    + Dispose()
}

class "<AsSequentialQuery>d__5" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "QueryOpeningEnumerator`1" {
    + Dispose()
    + MoveNext()
    - OpenQuery()
    + Reset()
}

class "QueryOperatorClassicEnumerator" {
    + MoveNext()
    + Dispose()
    + Reset()
}

class "<System-Collections-Generic-IEnumerable<T>-GetEnumerator>d__21" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "ScanQueryOperator`1" {
    + Open()
    + GetEnumerator()
    + AsSequentialQuery()
}

class "ScanEnumerableQueryOperatorResults" {
    + GivePartitionedStream()
}

class "AnyAllSearchOperator`1" {
    + Aggregate()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "AnyAllSearchOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "ContainsSearchOperator`1" {
    + Aggregate()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "ContainsSearchOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "DefaultIfEmptyQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "DefaultIfEmptyQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "DistinctQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapPartitionedStreamHelper()
    + AsSequentialQuery()
}

class "DistinctQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "OrderedDistinctQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "ElementAtQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
    + Aggregate()
}

class "ElementAtQueryOperatorEnumerator" {
    + MoveNext()
    + Dispose()
}

class "FirstQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapHelper()
    + AsSequentialQuery()
}

class "FirstQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "ForAllOperator`1" {
    + RunSynchronously()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "ForAllEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "GroupByQueryOperator`3" {
    + WrapPartitionedStream()
    - WrapPartitionedStreamHelper()
    - WrapPartitionedStreamHelperOrdered()
    + Open()
    + AsSequentialQuery()
}

class "GroupByIdentityQueryOperatorEnumerator`3" {
    + BuildHashLookup()
}

class "GroupByElementSelectorQueryOperatorEnumerator`4" {
    + BuildHashLookup()
}

class "OrderedGroupByIdentityQueryOperatorEnumerator`3" {
    + BuildHashLookup()
}

class "OrderedGroupByElementSelectorQueryOperatorEnumerator`4" {
    + BuildHashLookup()
}

class "GroupByGrouping`2" {
    - System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "OrderedGroupByGrouping`3" {
    - System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Add()
    + DoneAdding()
}

class "KeyAndValuesComparer" {
    + Compare()
}

class "<System-Collections-Generic-IEnumerable<TElement>-GetEnumerator>d__8" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "IndexedSelectQueryOperator`2" {
    - InitOrdinalIndexState()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "IndexedSelectQueryOperatorEnumerator" {
    + MoveNext()
    + Dispose()
}

class "IndexedSelectQueryOperatorResults" {
    + GetElement()
}

class "IndexedWhereQueryOperator`1" {
    - InitOrdinalIndexState()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "IndexedWhereQueryOperatorEnumerator" {
    + MoveNext()
    + Dispose()
}

class "LastQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    - WrapHelper()
    + AsSequentialQuery()
}

class "LastQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "ReverseQueryOperator`1" {
    + WrapPartitionedStream()
    + Open()
    + AsSequentialQuery()
}

class "ReverseQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "ReverseQueryOperatorResults" {
    + GetElement()
}

class "SelectManyQueryOperator`3" {
    - InitOrderIndex()
    + WrapPartitionedStream()
    - WrapPartitionedStreamNotIndexed()
    - WrapPartitionedStreamIndexed()
    + Open()
    + AsSequentialQuery()
}

class "IndexedSelectManyQueryOperatorEnumerator" {
    + MoveNext()
    + Dispose()
}

class "SelectManyQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "SelectQueryOperator`2" {
    + WrapPartitionedStream()
    + Open()
    + AsSequentialQuery()
}

class "SelectQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "SelectQueryOperatorResults" {
    + GetElement()
}

class "SingleQueryOperator`1" {
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "SingleQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "SortQueryOperator`2" {
    - System.Linq.IOrderedEnumerable<TInputOutput>.CreateOrderedEnumerable()
    + Open()
    + WrapPartitionedStream()
    + AsSequentialQuery()
}

class "<>c__DisplayClass3_0`1" {
    + <System.Linq.IOrderedEnumerable<TInputOutput>.CreateOrderedEnumerable>b__0()
}

class "SortQueryOperatorResults`2" {
    + GivePartitionedStream()
}

class "ChildResultsRecipient" {
    + Receive()
}

class "SortQueryOperatorEnumerator`3" {
    + MoveNext()
    + Dispose()
}

class "TakeOrSkipQueryOperator`1" {
    - OutputOrdinalIndexState()
    + WrapPartitionedStream()
    - WrapHelper()
    + Open()
    + AsSequentialQuery()
}

class "TakeOrSkipQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "TakeOrSkipQueryOperatorResults" {
    + GetElement()
}

class "TakeOrSkipWhileQueryOperator`1" {
    - InitOrderIndexState()
    + WrapPartitionedStream()
    - WrapHelper()
    + Open()
    + AsSequentialQuery()
}

class "TakeOrSkipWhileQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "WhereQueryOperator`1" {
    + WrapPartitionedStream()
    + Open()
    + AsSequentialQuery()
}

class "WhereQueryOperatorEnumerator`1" {
    + MoveNext()
    + Dispose()
}

class "UnaryQueryOperatorResults" {
    + GivePartitionedStream()
}

class "ChildResultsRecipient" {
    + Receive()
}

class "OrderPreservingPipeliningSpoolingTask`2" {
    + SpoolingWork()
    + SpoolingFinally()
}

class "<>c__DisplayClass12_0" {
    + <Spool>b__0()
}

class "OrderPreservingSpoolingTask`2" {
    + SpoolingWork()
}

class "<>c__DisplayClass3_0" {
    + <Spool>b__0()
}

class "<>c" {
    + <.cctor>b__10_0()
}

class "QueryTaskGroupState" {
    + QueryBegin()
    + QueryEnd()
}

class "<>c__DisplayClass0_0`2" {
    + <SpoolStopAndGo>b__0()
}

class "<>c__DisplayClass1_0`2" {
    + <SpoolPipeline>b__0()
}

class "<>c__DisplayClass2_0`2" {
    + <SpoolForAll>b__0()
}

class "StopAndGoSpoolingTask`2" {
    + SpoolingWork()
    + SpoolingFinally()
}

class "PipelineSpoolingTask`2" {
    + SpoolingWork()
    + SpoolingFinally()
}

class "ForAllSpoolingTask`2" {
    + SpoolingWork()
    + SpoolingFinally()
}

class "<Wrap>d__0`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<WrapEnumerable>d__0`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<WrapQueryEnumerator>d__1`2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass3_0`2" {
    + <WrapFunc>b__0()
}

class "FixedMaxHeap`1" {
    + Clear()
    + Insert()
    + ReplaceMax()
    + RemoveMax()
    - Swap()
    - HeapifyRoot()
    - HeapifyLastLeaf()
}

class "GrowingArray`1" {
    + Add()
    - GrowArray()
    + CopyFrom()
}

class "HashLookup`2" {
    + Add()
    + TryGetValue()
    - GetKeyHashCode()
    - AreKeysEqual()
    - Find()
    - Resize()
}

class "IntValueEvent" {
    + Set()
}

class "ListChunk`1" {
    + Add()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__10" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "Lookup`2" {
    + Contains()
    + Add()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__10" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "PlinqEtwProvider" {
    + ParallelQueryBegin()
    - ParallelQueryBegin()
    + ParallelQueryEnd()
    - ParallelQueryEnd()
    + ParallelQueryFork()
    - ParallelQueryFork()
    + ParallelQueryJoin()
    - ParallelQueryJoin()
}

class "PairComparer`2" {
    + Compare()
}

class "ReverseComparer`1" {
    + Compare()
}

class "SortHelper`2" {
    + Dispose()
    + Sort()
    - BuildKeysFromSource()
    - QuickSortIndicesInPlace()
    - MergeSortCooperatively()
    - ComputePartnerIndex()
    - QuickSort()
}

class "FastIntComparer" {
    + Compare()
}

class "FastLongComparer" {
    + Compare()
}

class "FastFloatComparer" {
    + Compare()
}

class "FastDoubleComparer" {
    + Compare()
}

class "FastDateTimeComparer" {
    + Compare()
}

class "BinaryExpression" {
    + GetMethod()
    + Update()
    + Reduce()
    - ReduceVariable()
    - ReduceMember()
    - ReduceIndex()
    + GetConversion()
    + Accept()
    + ReduceUserdefinedLifted()
}

class "CoalesceConversionBinaryExpression" {
    + GetConversion()
}

class "OpAssignMethodConversionBinaryExpression" {
    + GetConversion()
}

class "MethodBinaryExpression" {
    + GetMethod()
}

class "<>c" {
    + <New>b__358_0()
}

class "BlockExpression" {
    + Accept()
    + Update()
    + SameVariables()
    + SameExpressions()
    + GetExpression()
    + GetOrMakeExpressions()
    + GetOrMakeVariables()
    + Rewrite()
}

class "Block2" {
    + GetExpression()
    + SameExpressions()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "Block3" {
    + SameExpressions()
    + GetExpression()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "Block4" {
    + SameExpressions()
    + GetExpression()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "Block5" {
    + GetExpression()
    + SameExpressions()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "BlockN" {
    + SameExpressions()
    + GetExpression()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "ScopeExpression" {
    + SameVariables()
    + GetOrMakeVariables()
    + ReuseOrValidateVariables()
}

class "Scope1" {
    + SameExpressions()
    + GetExpression()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "ScopeN" {
    + SameExpressions()
    + GetExpression()
    + GetOrMakeExpressions()
    + Rewrite()
}

class "ScopeWithType" {
    + Rewrite()
}

class "BlockExpressionList" {
    + IndexOf()
    + Insert()
    + RemoveAt()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__18" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "CatchBlock" {
    + ToString()
    + Update()
}

class "ConditionalExpression" {
    + GetFalse()
    + Accept()
    + Update()
}

class "FullConditionalExpression" {
    + GetFalse()
}

class "ConstantExpression" {
    + Accept()
}

class "DebugInfoExpression" {
    + Accept()
}

class "SpanDebugInfoExpression" {
    + Accept()
}

class "DebugViewWriter" {
    - Indent()
    - Dedent()
    - NewLine()
    - GetLambdaId()
    - GetParamId()
    - GetLabelTargetId()
    - WriteTo()
    - Out()
    - Out()
    - Out()
    - Out()
    - WriteLine()
    - Write()
    - GetFlow()
    - CheckBreak()
    - VisitExpressions()
    - VisitExpressions()
    - VisitDeclarations()
    - VisitExpressions()
    + VisitBinary()
    + VisitParameter()
    + VisitLambda()
    + VisitConditional()
    + VisitConstant()
    + VisitRuntimeVariables()
    - OutMember()
    + VisitMember()
    + VisitInvocation()
    - ParenthesizedVisit()
    + VisitMethodCall()
    + VisitNewArray()
    + VisitNew()
    + VisitElementInit()
    + VisitListInit()
    + VisitMemberAssignment()
    + VisitMemberListBinding()
    + VisitMemberMemberBinding()
    + VisitMemberInit()
    + VisitTypeBinary()
    + VisitUnary()
    + VisitBlock()
    + VisitDefault()
    + VisitLabel()
    + VisitGoto()
    + VisitLoop()
    + VisitSwitchCase()
    + VisitSwitch()
    + VisitCatchBlock()
    + VisitTry()
    + VisitIndex()
    + VisitExtension()
    + VisitDebugInfo()
    - DumpLabel()
    - GetLabelTargetName()
    - WriteLambda()
    - GetLambdaName()
    - <VisitExpressions>b__37_0()
    - <VisitDeclarations>b__38_0()
    - <VisitListInit>b__58_0()
    - <VisitMemberListBinding>b__60_0()
    - <VisitMemberMemberBinding>b__61_0()
    - <VisitMemberInit>b__62_0()
}

class "DefaultExpression" {
    + Accept()
}

class "DynamicExpression" {
    + Reduce()
    + GetOrMakeArguments()
    + Accept()
    + Rewrite()
    + Update()
    + SameArguments()
    - System.Linq.Expressions.IArgumentProvider.GetArgument()
    - System.Linq.Expressions.IDynamicExpression.Rewrite()
    - System.Linq.Expressions.IDynamicExpression.CreateCallSite()
}

class "DynamicExpressionN" {
    - System.Linq.Expressions.IArgumentProvider.GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "DynamicExpression1" {
    - System.Linq.Expressions.IArgumentProvider.GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "DynamicExpression2" {
    - System.Linq.Expressions.IArgumentProvider.GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "DynamicExpression3" {
    - System.Linq.Expressions.IArgumentProvider.GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "DynamicExpression4" {
    - System.Linq.Expressions.IArgumentProvider.GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "DynamicExpressionVisitor" {
    + VisitDynamic()
}

class "ElementInit" {
    + GetArgument()
    + ToString()
    + Update()
}

class "ExpressionStringBuilder" {
    + ToString()
    - GetLabelId()
    - GetParamId()
    - GetId()
    - Out()
    - Out()
    - VisitExpressions()
    - VisitExpressions()
    + VisitBinary()
    + VisitParameter()
    + VisitLambda()
    + VisitListInit()
    + VisitConditional()
    + VisitConstant()
    + VisitDebugInfo()
    + VisitRuntimeVariables()
    - OutMember()
    + VisitMember()
    + VisitMemberInit()
    + VisitMemberAssignment()
    + VisitMemberListBinding()
    + VisitMemberMemberBinding()
    + VisitElementInit()
    + VisitInvocation()
    + VisitMethodCall()
    + VisitNewArray()
    + VisitNew()
    + VisitTypeBinary()
    + VisitUnary()
    + VisitBlock()
    + VisitDefault()
    + VisitLabel()
    + VisitGoto()
    + VisitLoop()
    + VisitSwitchCase()
    + VisitSwitch()
    + VisitCatchBlock()
    + VisitTry()
    + VisitIndex()
    + VisitExtension()
    - DumpLabel()
}

class "GotoExpression" {
    + Accept()
    + Update()
}

class "IndexExpression" {
    + Update()
    + GetArgument()
    + Accept()
    + Rewrite()
}

class "InvocationExpression" {
    + Update()
    + GetOrMakeArguments()
    + GetArgument()
    + Accept()
    + Rewrite()
}

class "InvocationExpressionN" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "InvocationExpression0" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "InvocationExpression1" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "InvocationExpression2" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "InvocationExpression3" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "InvocationExpression4" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "InvocationExpression5" {
    + GetOrMakeArguments()
    + GetArgument()
    + Rewrite()
}

class "LabelExpression" {
    + Accept()
    + Update()
}

class "LabelTarget" {
    + ToString()
}

class "Expression`1" {
    + Compile()
    + Compile()
    + Update()
    + SameParameters()
    + Rewrite()
    + Accept()
    + Accept()
    + Compile()
}

class "Expression0`1" {
    + SameParameters()
    + GetParameter()
    + GetOrMakeParameters()
    + Rewrite()
}

class "Expression1`1" {
    + GetParameter()
    + SameParameters()
    + GetOrMakeParameters()
    + Rewrite()
}

class "Expression2`1" {
    + GetParameter()
    + SameParameters()
    + GetOrMakeParameters()
    + Rewrite()
}

class "Expression3`1" {
    + GetParameter()
    + SameParameters()
    + GetOrMakeParameters()
    + Rewrite()
}

class "ExpressionN`1" {
    + GetParameter()
    + SameParameters()
    + GetOrMakeParameters()
    + Rewrite()
}

class "ListInitExpression" {
    + Accept()
    + Reduce()
    + Update()
}

class "LoopExpression" {
    + Accept()
    + Update()
}

class "MemberAssignment" {
    + Update()
    + ValidateAsDefinedHere()
}

class "MemberExpression" {
    + GetMember()
    + Accept()
    + Update()
}

class "FieldExpression" {
    + GetMember()
}

class "PropertyExpression" {
    + GetMember()
}

class "MemberInitExpression" {
    + Accept()
    + Reduce()
    + Update()
}

class "MemberListBinding" {
    + Update()
    + ValidateAsDefinedHere()
}

class "MemberMemberBinding" {
    + Update()
    + ValidateAsDefinedHere()
}

class "MethodCallExpression" {
    + GetInstance()
    + Update()
    + SameArguments()
    + GetOrMakeArguments()
    + Accept()
    + Rewrite()
    + GetArgument()
}

class "InstanceMethodCallExpression" {
    + GetInstance()
}

class "MethodCallExpressionN" {
    + GetArgument()
    + GetOrMakeArguments()
    + SameArguments()
    + Rewrite()
}

class "InstanceMethodCallExpressionN" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "MethodCallExpression0" {
    + GetArgument()
    + GetOrMakeArguments()
    + SameArguments()
    + Rewrite()
}

class "MethodCallExpression1" {
    + GetArgument()
    + GetOrMakeArguments()
    + SameArguments()
    + Rewrite()
}

class "MethodCallExpression2" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "MethodCallExpression3" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "MethodCallExpression4" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "MethodCallExpression5" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "InstanceMethodCallExpression0" {
    + GetArgument()
    + GetOrMakeArguments()
    + SameArguments()
    + Rewrite()
}

class "InstanceMethodCallExpression1" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "InstanceMethodCallExpression2" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "InstanceMethodCallExpression3" {
    + GetArgument()
    + SameArguments()
    + GetOrMakeArguments()
    + Rewrite()
}

class "NewArrayExpression" {
    + Accept()
    + Update()
}

class "NewExpression" {
    + GetArgument()
    + Accept()
    + Update()
}

class "ParameterExpression" {
    + GetIsByRef()
    + Accept()
}

class "ByRefParameterExpression" {
    + GetIsByRef()
}

class "RuntimeVariablesExpression" {
    + Accept()
    + Update()
}

class "StackGuard" {
    + TryEnterOnCurrentStack()
    + RunOnEmptyStack()
    + RunOnEmptyStack()
    + RunOnEmptyStack()
    + RunOnEmptyStack()
    - RunOnEmptyStackCore()
}

class "<>c__3`2" {
    + <RunOnEmptyStack>b__3_0()
}

class "<>c__4`3" {
    + <RunOnEmptyStack>b__4_0()
}

class "<>c__5`3" {
    + <RunOnEmptyStack>b__5_0()
}

class "<>c__6`4" {
    + <RunOnEmptyStack>b__6_0()
}

class "SwitchCase" {
    + ToString()
    + Update()
}

class "SwitchExpression" {
    + Accept()
    + Update()
}

class "TryExpression" {
    + Accept()
    + Update()
}

class "TypeBinaryExpression" {
    + ReduceTypeEqual()
    - ByValParameterTypeEqual()
    - ReduceConstantTypeEqual()
    + Accept()
    + Update()
}

class "UnaryExpression" {
    + Accept()
    + Reduce()
    - FunctionalOp()
    - ReduceVariable()
    - ReduceMember()
    - ReduceIndex()
    + Update()
}

class "AssemblyGen" {
    - DefineType()
}

class "BoundConstants" {
    + ToArray()
    + AddReference()
    + EmitConstant()
    + EmitCacheConstants()
    - EmitConstantFromArray()
}

class "CompilerScope" {
    + Enter()
    + Exit()
    + EmitVariableAccess()
    + AddLocal()
    + EmitGet()
    + EmitSet()
    + EmitAddressOf()
    - ResolveVariable()
    - ResolveVariable()
    - SetParent()
    - EmitNewHoistedLocals()
    - EmitCachedVariables()
    - ShouldCache()
    - ShouldCache()
    - CacheBoxToLocal()
    - EmitClosureAccess()
    - EmitClosureToVariable()
    - AllocateLocals()
    - GetVariables()
    - GetVariablesIncludingMerged()
    - <SetParent>b__27_0()
}

class "LocalStorage" {
    + EmitLoad()
    + EmitStore()
    + EmitAddress()
    + FreeLocal()
}

class "ArgumentStorage" {
    + EmitLoad()
    + EmitStore()
    + EmitAddress()
}

class "ElementBoxStorage" {
    + EmitLoad()
    + EmitStore()
    + EmitStore()
    + EmitAddress()
    + EmitLoadBox()
}

class "LocalBoxStorage" {
    + EmitLoad()
    + EmitAddress()
    + EmitStore()
    + EmitStore()
    + EmitStoreBox()
    + FreeLocal()
}

class "<GetVariablesIncludingMerged>d__37" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - <>m__Finally3()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ParameterList" {
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__6" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "KeyedStack`2" {
    + Push()
    + TryPop()
}

class "LabelInfo" {
    + Reference()
    + Define()
    - ValidateJump()
    + ValidateFinish()
    + EmitJump()
    - StoreValue()
    + Mark()
    + MarkWithEmptyStack()
    - EnsureLabelAndValue()
}

class "<>c" {
    + <ValidateJump>b__19_0()
}

class "LabelScopeInfo" {
    + ContainsTarget()
    + TryGetLabelInfo()
    + AddLabelInfo()
}

class "LambdaCompiler" {
    - EmitAddress()
    - EmitAddress()
    - AddressOf()
    - AddressOf()
    - AddressOf()
    - EmitMemberAddress()
    - AddressOf()
    - AddressOf()
    - AddressOf()
    - EmitExpressionAddress()
    - EmitAddressWriteBack()
    - AddressOfWriteBack()
    - AddressOfWriteBackCore()
    - AddressOfWriteBack()
    - AddressOfWriteBackCore()
    - GetInstanceLocal()
    - EmitBinaryExpression()
    - EmitBinaryExpression()
    - EmitNullEquality()
    - EmitBinaryMethod()
    - EmitBinaryOperator()
    - EmitUnliftedBinaryOp()
    - EmitShiftMask()
    - EmitConvertArithmeticResult()
    - EmitLiftedBinaryOp()
    - EmitLiftedRelational()
    - EmitLiftedToNullRelational()
    - EmitLiftedBinaryArithmetic()
    - EmitLiftedBooleanAnd()
    - EmitLiftedBooleanOr()
    - EnsureLabel()
    - ReferenceLabel()
    - DefineLabel()
    - PushLabelBlock()
    - PopLabelBlock()
    - EmitLabelExpression()
    - EmitGotoExpression()
    - EmitUnreachable()
    - TryPushLabelBlock()
    - DefineBlockLabels()
    - AddReturnLabel()
    + EmitExpression()
    - EmitExpressionAsVoid()
    - EmitExpressionAsVoid()
    - EmitExpressionAsType()
    - EmitExpressionStart()
    - EmitExpressionEnd()
    - EmitInvocationExpression()
    - EmitInlinedInvoke()
    - EmitIndexExpression()
    - EmitIndexAssignment()
    - EmitGetIndexCall()
    - EmitGetArrayElement()
    - EmitSetIndexCall()
    - EmitSetArrayElement()
    - EmitMethodCallExpression()
    - EmitMethodCallExpression()
    - EmitMethodCall()
    - EmitMethodCall()
    - EmitMethodCall()
    - EmitMethodCall()
    - EmitCall()
    - EmitArguments()
    - EmitArguments()
    - EmitWriteBack()
    - EmitConstantExpression()
    - EmitConstant()
    - EmitConstant()
    - EmitDynamicExpression()
    - EmitNewExpression()
    - EmitTypeBinaryExpression()
    - EmitVariableAssignment()
    - EmitAssignBinaryExpression()
    - EmitAssign()
    - EmitParameterExpression()
    - EmitLambdaExpression()
    - EmitRuntimeVariablesExpression()
    - EmitMemberAssignment()
    - EmitMemberExpression()
    - EmitMemberGet()
    - EmitInstance()
    - EmitNewArrayExpression()
    - EmitDebugInfoExpression()
    - EmitListInitExpression()
    - EmitMemberInitExpression()
    - EmitBinding()
    - EmitMemberAssignment()
    - EmitMemberMemberBinding()
    - EmitMemberListBinding()
    - EmitMemberInit()
    - EmitMemberInit()
    - EmitListInit()
    - EmitListInit()
    - EmitLift()
    - EmitExpression()
    + EmitConstantArray()
    - EmitClosureCreation()
    - EmitDelegateConstruction()
    - EmitDelegateConstruction()
    - EmitLambdaBody()
    - EmitLambdaBody()
    - EmitConditionalExpression()
    - EmitCoalesceBinaryExpression()
    - EmitNullableCoalesce()
    - EmitLambdaReferenceCoalesce()
    - EmitReferenceCoalesceWithoutConversion()
    - EmitLiftedAndAlso()
    - EmitMethodAndAlso()
    - EmitUnliftedAndAlso()
    - EmitAndAlsoBinaryExpression()
    - EmitLiftedOrElse()
    - EmitUnliftedOrElse()
    - EmitMethodOrElse()
    - EmitOrElseBinaryExpression()
    - EmitExpressionAndBranch()
    - EmitBranchOp()
    - EmitBranchNot()
    - EmitBranchComparison()
    - EmitBranchLogical()
    - EmitBranchAnd()
    - EmitBranchOr()
    - EmitBranchBlock()
    - EmitBlockExpression()
    - Emit()
    - EnterScope()
    - ExitScope()
    - EmitDefaultExpression()
    - EmitLoopExpression()
    - EmitSwitchExpression()
    - TryEmitSwitchInstruction()
    - DefineSwitchCaseLabel()
    - EmitSwitchCases()
    - EmitSwitchBuckets()
    - EmitSwitchBucket()
    - TryEmitHashtableSwitch()
    - CheckRethrow()
    - CheckTry()
    - EmitSaveExceptionOrPop()
    - EmitTryExpression()
    - EmitCatchStart()
    - EmitQuoteUnaryExpression()
    - EmitQuote()
    - EmitThrowUnaryExpression()
    - EmitThrow()
    - EmitUnaryExpression()
    - EmitUnary()
    - EmitUnaryOperator()
    - EmitConstantOne()
    - EmitUnboxUnaryExpression()
    - EmitConvertUnaryExpression()
    - EmitConvert()
    - EmitUnaryMethod()
    - InitializeMethod()
    + GetLocal()
    + FreeLocal()
    + GetLambdaArgument()
    + EmitLambdaArgument()
    + EmitClosureArgument()
    - CreateDelegate()
    - CreateStaticField()
    - CreateLazyInitializedField()
}

class "WriteBack" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass12_0" {
    + <AddressOfWriteBackCore>b__0()
}

class "<>c__DisplayClass14_0" {
    + <AddressOfWriteBackCore>b__0()
}

class "<>c" {
    + <EmitExpression>b__102_0()
    + <TryEmitSwitchInstruction>b__152_0()
    + <TryEmitSwitchInstruction>b__152_2()
    + <TryEmitSwitchInstruction>b__152_1()
}

class "StackSpiller" {
    - RewriteExpression()
    - MakeTemp()
    - Mark()
    - Free()
    - VerifyTemps()
    - ToTemp()
    + Rewrite()
    - RewriteExpressionFreeTemps()
    - RewriteDynamicExpression()
    - RewriteIndexAssignment()
    - RewriteLogicalBinaryExpression()
    - RewriteReducibleExpression()
    - RewriteBinaryExpression()
    - RewriteVariableAssignment()
    - RewriteAssignBinaryExpression()
    - RewriteExtensionAssignment()
    - RewriteConditionalExpression()
    - RewriteMemberAssignment()
    - RewriteMemberExpression()
    - RewriteIndexExpression()
    - RewriteMethodCallExpression()
    - RewriteNewArrayExpression()
    - RewriteInvocationExpression()
    - RewriteNewExpression()
    - RewriteTypeBinaryExpression()
    - RewriteThrowUnaryExpression()
    - RewriteUnaryExpression()
    - RewriteListInitExpression()
    - RewriteMemberInitExpression()
    - RewriteBlockExpression()
    - RewriteLabelExpression()
    - RewriteLoopExpression()
    - RewriteGotoExpression()
    - RewriteSwitchExpression()
    - RewriteTryExpression()
    - RewriteExtensionExpression()
}

class "MemberMemberBindingRewriter" {
    + AsBinding()
    + AsExpression()
}

class "ListBindingRewriter" {
    + AsBinding()
    + AsExpression()
}

class "MemberAssignmentRewriter" {
    + AsBinding()
    + AsExpression()
}

class "ChildRewriter" {
    + Add()
    + Add()
    + AddArguments()
    - EnsureDone()
    + MarkRefInstance()
    + MarkRefArgs()
    - MarkRef()
    + Finish()
}

class "TempMaker" {
    + Temp()
    - UseTemp()
    - FreeTemp()
    + Mark()
    + Free()
    + VerifyTemps()
}

class "<>c" {
    + <RewriteExpression>b__6_0()
    + <RequireNoRefArgs>b__57_0()
}

class "SpilledExpressionBlock" {
    + Rewrite()
}

class "VariableBinder" {
    + Visit()
    + VisitConstant()
    + VisitUnary()
    + VisitLambda()
    + VisitInvocation()
    + VisitBlock()
    + VisitCatchBlock()
    - MergeScopes()
    + VisitParameter()
    + VisitRuntimeVariables()
    - Reference()
}

class "<>c" {
    + <Visit>b__7_0()
}

class "ComAwareEventInfo" {
    + AddEventHandler()
    + RemoveEventHandler()
    + GetAddMethod()
    + GetRaiseMethod()
    + GetRemoveMethod()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
}

class "ExpressionQuoter" {
    + VisitLambda()
    + VisitBlock()
    + VisitCatchBlock()
    + VisitRuntimeVariables()
    + VisitParameter()
    - GetBox()
}

class "RuntimeVariableList" {
    - GetStrongBox()
}

class "CallSite`1" {
    + CreateMatchMaker()
    + GetMatchmaker()
    + ReleaseMatchmaker()
    - GetUpdateDelegate()
    - GetUpdateDelegate()
    - ClearRuleCache()
    + AddRule()
    + MoveRule()
    + MakeUpdateDelegate()
    - CreateCustomUpdateDelegate()
    - CreateCustomNoMatchDelegate()
}

class "<>c" {
    + <CreateCustomUpdateDelegate>b__21_0()
    + <CreateCustomUpdateDelegate>b__21_1()
    + <CreateCustomNoMatchDelegate>b__22_0()
}

class "ReadOnlyCollectionBuilder`1" {
    + IndexOf()
    + Insert()
    + RemoveAt()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.ICollection.CopyTo()
    + Reverse()
    + Reverse()
    + ToArray()
    + ToReadOnlyCollection()
    - EnsureCapacity()
}

class "Enumerator" {
    + Dispose()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "RuleCache`1" {
    + GetRules()
    + MoveRule()
    + AddRule()
    + ReplaceRule()
}

class "ExecutionScope" {
    + CreateHoistedLocals()
    + CreateDelegate()
    + IsolateExpression()
}

class "TestBuilder" {
    + Append()
    + ToExpression()
    - Push()
}

class "MergedRestriction" {
    + GetExpression()
}

class "CustomRestriction" {
    + Equals()
    + GetHashCode()
    + GetExpression()
}

class "TypeRestriction" {
    + Equals()
    + GetHashCode()
    + GetExpression()
}

class "InstanceRestriction" {
    + Equals()
    + GetHashCode()
    + GetExpression()
}

class "BindingRestrictionsProxy" {
    + ToString()
}

class "CallInfo" {
    + GetHashCode()
    + Equals()
}

class "DynamicMetaObject" {
    + BindConvert()
    + BindGetMember()
    + BindSetMember()
    + BindDeleteMember()
    + BindGetIndex()
    + BindSetIndex()
    + BindDeleteIndex()
    + BindInvokeMember()
    + BindInvoke()
    + BindCreateInstance()
    + BindUnaryOperation()
    + BindBinaryOperation()
    + GetDynamicMemberNames()
}

class "DynamicObject" {
    + TryGetMember()
    + TrySetMember()
    + TryDeleteMember()
    + TryInvokeMember()
    + TryConvert()
    + TryCreateInstance()
    + TryInvoke()
    + TryBinaryOperation()
    + TryUnaryOperation()
    + TryGetIndex()
    + TrySetIndex()
    + TryDeleteIndex()
    + GetDynamicMemberNames()
    + GetMetaObject()
}

class "MetaDynamic" {
    + GetDynamicMemberNames()
    + BindGetMember()
    + BindSetMember()
    + BindDeleteMember()
    + BindConvert()
    + BindInvokeMember()
    + BindCreateInstance()
    + BindInvoke()
    + BindBinaryOperation()
    + BindUnaryOperation()
    + BindGetIndex()
    + BindSetIndex()
    + BindDeleteIndex()
    - CallMethodWithResult()
    - CallMethodWithResult()
    - BuildCallMethodWithResult()
    - CallMethodReturnLast()
    - CallMethodNoResult()
    - IsOverridden()
    - GetRestrictions()
    - GetLimitedSelf()
}

class "Fallback`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetBinderAdapter" {
    + FallbackGetMember()
}

class "<>c" {
    + <BindGetMember>b__2_0()
    + <BindDeleteMember>b__4_0()
    + <BindConvert>b__5_0()
    + <BindUnaryOperation>b__10_0()
}

class "<>c__DisplayClass3_0" {
    + <BindSetMember>b__0()
}

class "<>c__DisplayClass6_0" {
    + <BindInvokeMember>b__0()
}

class "<>c__DisplayClass7_0" {
    + <BindCreateInstance>b__0()
}

class "<>c__DisplayClass8_0" {
    + <BindInvoke>b__0()
}

class "<>c__DisplayClass9_0" {
    + <BindBinaryOperation>b__0()
}

class "<>c__DisplayClass11_0" {
    + <BindGetIndex>b__0()
}

class "<>c__DisplayClass12_0" {
    + <BindSetIndex>b__0()
}

class "<>c__DisplayClass13_0" {
    + <BindDeleteIndex>b__0()
}

class "ExpandoClass" {
    + FindNewClass()
    - GetTransitionList()
    + GetValueIndex()
    + GetValueIndexCaseSensitive()
    - GetValueIndexCaseInsensitive()
}

class "ExpandoObject" {
    + TryGetValue()
    + TrySetValue()
    + TryDeleteValue()
    + IsDeletedMember()
    - PromoteClassCore()
    + PromoteClass()
    - System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject()
    - TryAddMember()
    - TryGetValueForKey()
    - ExpandoContainsKey()
    - System.Collections.Generic.IDictionary<System.String,System.Object>.Add()
    - System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey()
    - System.Collections.Generic.IDictionary<System.String,System.Object>.Remove()
    - System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - GetExpandoEnumerator()
}

class "KeyCollection" {
    - CheckVersion()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__15" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "ValueCollection" {
    - CheckVersion()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__15" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "MetaExpando" {
    - BindGetOrInvokeMember()
    + BindGetMember()
    + BindInvokeMember()
    + BindSetMember()
    + BindDeleteMember()
    + GetDynamicMemberNames()
    - AddDynamicTestAndDefer()
    - GetClassEnsureIndex()
    - GetLimitedSelf()
    - GetRestrictions()
}

class "<>c__DisplayClass3_0" {
    + <BindInvokeMember>b__0()
}

class "<GetDynamicMemberNames>d__6" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ExpandoData" {
    + UpdateClass()
}

class "<GetExpandoEnumerator>d__51" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "CacheDict`2" {
    + TryGetValue()
    + Add()
}

class "<GetEnumerator>d__20" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "ListArgumentProvider" {
    + GetElement()
}

class "ListParameterProvider" {
    + GetElement()
}

class "<>c" {
    + <.cctor>b__48_0()
    + <.cctor>b__48_1()
}

class "MemoryMappedFileSecurity" {
    + PersistHandle()
}

class "MemoryMappedViewAccessor" {
    + Dispose()
    + Flush()
}

class "MemoryMappedViewStream" {
    + SetLength()
    + Dispose()
    + Flush()
}

class "MemoryMappedFile" {
    + CreateViewStream()
    + CreateViewStream()
    + CreateViewStream()
    + CreateViewAccessor()
    + CreateViewAccessor()
    + CreateViewAccessor()
    + Dispose()
    + Dispose()
    + GetAccessControl()
    + SetAccessControl()
}

class "MemoryMappedView" {
    + Flush()
    + Dispose()
    + Dispose()
}

class "AnonymousPipeClientStream" {
    - Init()
    + Finalize()
}

class "AnonymousPipeServerStream" {
    - Create()
    - Create()
    + Finalize()
    + GetClientHandleAsString()
    + DisposeLocalCopyOfClientHandle()
    + Dispose()
}

class "ConnectionCompletionSource" {
    + SetCompletedSynchronously()
    + AsyncCallback()
    + HandleError()
    + HandleUnexpectedCancellation()
}

class "NamedPipeClientStream" {
    - TryConnect()
    - ValidateRemotePipeUser()
    + Finalize()
    + Connect()
    + Connect()
    - ConnectInternal()
    + ConnectAsync()
    + ConnectAsync()
    + ConnectAsync()
    + ConnectAsync()
    + CheckPipePropertyOperations()
    - CheckConnectOperationsClient()
}

class "<>c__DisplayClass24_0" {
    + <ConnectAsync>b__0()
}

class "NamedPipeServerStream" {
    - Create()
    - Create()
    + WaitForConnection()
    + WaitForConnectionAsync()
    + Disconnect()
    + GetImpersonationUserName()
    + RunAsClient()
    - WaitForConnectionCoreAsync()
    - CheckConnectOperationsServerWithHandle()
    + Finalize()
    + WaitForConnectionAsync()
    + BeginWaitForConnection()
    + EndWaitForConnection()
    - CheckConnectOperationsServer()
    - CheckDisconnectOperations()
}

class "<>c" {
    + <WaitForConnectionAsync>b__3_0()
}

class "PipeStreamImpersonationWorker" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <.ctor>b__11_0()
    + <RegisterForCancellation>b__14_0()
}

class "PipeSecurity" {
    + AddAccessRule()
    + SetAccessRule()
    + ResetAccessRule()
    + RemoveAccessRule()
    + RemoveAccessRuleSpecific()
    + AddAuditRule()
    + SetAuditRule()
    + RemoveAuditRule()
    + RemoveAuditRuleAll()
    + RemoveAuditRuleSpecific()
    + AccessRuleFactory()
    + AuditRuleFactory()
    - GetAccessControlSectionsFromChanges()
    + Persist()
    + Persist()
}

class "ReadWriteCompletionSource" {
    + SetCompletedSynchronously()
    + AsyncCallback()
    + HandleError()
}

class "ReferenceEqualityComparer`1" {
    + Equals()
    + GetHashCode()
}

class "BitHelper" {
    + MarkBit()
    + IsMarked()
}

class "HashSet`1" {
    - CopyFrom()
    - System.Collections.Generic.ICollection<T>.Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetObjectData()
    + OnDeserialization()
    + Add()
    + TryGetValue()
    + UnionWith()
    + IntersectWith()
    + ExceptWith()
    + SymmetricExceptWith()
    + IsSubsetOf()
    + IsProperSubsetOf()
    + IsSupersetOf()
    + IsProperSupersetOf()
    + Overlaps()
    + SetEquals()
    + CopyTo()
    + CopyTo()
    + RemoveWhere()
    + EnsureCapacity()
    + TrimExcess()
    - Initialize()
    - IncreaseCapacity()
    - SetCapacity()
    - AddIfNotPresent()
    - AddValue()
    - ContainsAllElements()
    - IsSubsetOfHashSetWithSameEC()
    - IntersectWithHashSetWithSameEC()
    - IntersectWithEnumerable()
    - InternalIndexOf()
    - SymmetricExceptWithUniqueHashSet()
    - SymmetricExceptWithEnumerable()
    - AddOrGetLocation()
    - CheckUniqueAndUnfoundElements()
    - InternalGetHashCode()
}

class "HashSetEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + Equals()
    + GetHashCode()
}

class "ReaderWriterLockSlim" {
    - InitializeThreadCounts()
    - IsRwHashEntryChanged()
    - GetThreadRWCount()
    + EnterReadLock()
    + TryEnterReadLock()
    + TryEnterReadLock()
    - TryEnterReadLock()
    - TryEnterReadLockCore()
    + EnterWriteLock()
    + TryEnterWriteLock()
    + TryEnterWriteLock()
    - TryEnterWriteLock()
    - TryEnterWriteLockCore()
    + EnterUpgradeableReadLock()
    + TryEnterUpgradeableReadLock()
    + TryEnterUpgradeableReadLock()
    - TryEnterUpgradeableReadLock()
    - TryEnterUpgradeableReadLockCore()
    + ExitReadLock()
    + ExitWriteLock()
    + ExitUpgradeableReadLock()
    - LazyCreateEvent()
    - WaitOnEvent()
    - ExitAndWakeUpAppropriateWaiters()
    - ExitAndWakeUpAppropriateWaitersPreferringWriters()
    - ExitAndWakeUpAppropriateReadWaiters()
    - IsWriterAcquired()
    - SetWriterAcquired()
    - ClearWriterAcquired()
    - SetWritersWaiting()
    - ClearWritersWaiting()
    - SetUpgraderWaiting()
    - ClearUpgraderWaiting()
    - GetNumReaders()
    - EnterMyLock()
    - EnterMyLockSpin()
    - ExitMyLock()
    + Dispose()
    - Dispose()
}

class "DSACng" {
    + CreateSignature()
    + ExportParameters()
    + ImportParameters()
    + VerifySignature()
}

class "ECDiffieHellmanCng" {
    + DeriveKeyMaterial()
    + DeriveSecretAgreementHandle()
    + DeriveSecretAgreementHandle()
    + FromXmlString()
    + ToXmlString()
}

class "ECDiffieHellmanCngPublicKey" {
    + Import()
}

class "CounterData" {
    + Decrement()
    + Increment()
    + IncrementBy()
}

class "CounterSet" {
    + AddCounter()
    + AddCounter()
    + CreateCounterSetInstance()
    + Dispose()
    + Dispose()
}

class "CounterSetInstance" {
    + Dispose()
}

class "CounterSetInstanceCounterDataSet" {
    + Dispose()
}

class "EventProvider" {
    + Close()
    + Dispose()
    + Dispose()
    + IsEnabled()
    + IsEnabled()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteMessageEvent()
    + WriteMessageEvent()
    + WriteTransferEvent()
    + WriteTransferEvent()
}

class "EventProviderTraceListener" {
    + Write()
    + WriteLine()
}

class "EventBookmark" {
    + GetObjectData()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "EventLogConfiguration" {
    + Dispose()
    + Dispose()
    + SaveChanges()
}

class "EventLogSession" {
    + CancelCurrentOperations()
    + ClearLog()
    + ClearLog()
    + Dispose()
    + Dispose()
    + ExportLog()
    + ExportLog()
    + ExportLogAndMessages()
    + ExportLogAndMessages()
    + GetLogInformation()
    + GetLogNames()
    + GetProviderNames()
}

class "EventLogPropertySelector" {
    + Dispose()
    + Dispose()
}

class "EventLogReader" {
    + CancelReading()
    + Dispose()
    + Dispose()
    + ReadEvent()
    + ReadEvent()
    + Seek()
    + Seek()
    + Seek()
}

class "EventLogRecord" {
    + Dispose()
    + FormatDescription()
    + FormatDescription()
    + GetPropertyValues()
    + ToXml()
}

class "EventLogWatcher" {
    + Dispose()
    + Dispose()
}

class "ProviderMetadata" {
    + Dispose()
    + Dispose()
}

class "CFObject" {
    + Finalize()
    - Retain()
    - Release()
    + Dispose()
    + Dispose()
}

class "CFString" {
    + ToString()
}

class "CFDictionary" {
    + Copy()
    + MutableCopy()
    + GetValue()
}

class "CFMutableDictionary" {
    + SetValue()
}

class "CFBoolean" {
    + Finalize()
    + Dispose()
    + Dispose()
}

class "CFDate" {
    + Finalize()
    + Dispose()
    + Dispose()
}

class "SystemCertificateProvider" {
    + Import()
    - Mono.ISystemCertificateProvider.Import()
    + Import()
    - Mono.ISystemCertificateProvider.Import()
    + Import()
}

class "X509PalImplMono" {
    + Import()
    + Import()
    + Import()
}

class "WavData" {
    + Play()
}

class "AuData" {
    + Play()
}

class "AudioDevice" {
    + SetFormat()
    + PlaySample()
    + XRunRecovery()
    + Wait()
}

class "AlsaDevice" {
    + Finalize()
    + Dispose()
    + Dispose()
    + SetFormat()
    + PlaySample()
    + XRunRecovery()
    + Wait()
}

class "Win32SoundPlayer" {
    + Dispose()
    + Finalize()
    + Dispose()
    + Play()
    + PlayLooping()
    + PlaySync()
    + Stop()
}

class "unitytls_x509verify_callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_write_callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_read_callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_trace_callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_certificate_callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_x509verify_callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_errorstate_create_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_errorstate_raise_error_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_key_get_ref_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_key_parse_der_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_key_parse_pem_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_key_free_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509_export_der_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_get_ref_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_get_x509_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_create_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_append_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_append_der_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_append_pem_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509list_free_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509verify_default_ca_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_x509verify_explicit_ca_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_create_server_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_create_client_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_server_require_client_authentication_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_set_certificate_callback_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_set_trace_callback_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_set_x509verify_callback_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_set_supported_ciphersuites_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_get_ciphersuite_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_get_protocol_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_process_handshake_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_read_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_write_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_notify_close_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_tlsctx_free_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "unitytls_random_generate_bytes_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UnityTlsContext" {
    + Flush()
    + Read()
    + Write()
    + Renegotiate()
    + PendingRenegotiation()
    + Shutdown()
    + Dispose()
    + StartHandshake()
    + ProcessHandshake()
    + FinishHandshake()
    - WriteCallback()
    - ReadCallback()
    - VerifyCallback()
    - CertificateCallback()
}

class "UnityTlsProvider" {
    + CreateSslStream()
    + ValidateCertificate()
}

class "UnityTlsStream" {
    + CreateContext()
}

class "X509ChainImplUnityTls" {
    + AddStatus()
    + Build()
    + Reset()
    + Dispose()
}

class "CFRunLoop" {
    + AddSource()
    + RemoveSource()
    + RunInMode()
    + Stop()
}

class "GetProxyData" {
    + Dispose()
}

class "CFProxyAutoConfigurationResultCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CFWebProxy" {
    + GetProxy()
    + IsBypassed()
}

class "<>c__DisplayClass13_0" {
    + <ExecuteProxyAutoConfigurationURL>b__0()
}

class "BufferOffsetSize" {
    + ToString()
}

class "BufferOffsetSize2" {
    + Reset()
    + MakeRoom()
    + AppendData()
}

class "ServerCertValidationCallbackWrapper" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ChainValidationHelper" {
    + SelectClientCertificate()
    + SelectClientCertificate()
    + ValidateClientCertificate()
    + ValidateCertificate()
    + ValidateCertificate()
    - ValidateChain()
    - ValidateChain()
    - InvokeCallback()
    - InvokeSystemValidator()
}

class "<>c__DisplayClass11_0" {
    + <GetValidationCallback>b__0()
}

class "<>c__DisplayClass66_0" {
    + <InnerRead>b__0()
}

class "MonoTlsStream" {
    + CreateStream()
    + Dispose()
    - CloseSslStream()
}

class "<>c__DisplayClass0_0" {
    + <PublicToMono>b__0()
}

class "<>c__DisplayClass1_0" {
    + <InternalToMono>b__0()
}

class "<>c__DisplayClass2_0" {
    + <InternalToPublic>b__0()
}

class "<>c__DisplayClass3_0" {
    + <InternalToMono>b__0()
}

class "<>c__DisplayClass4_0" {
    + <MonoToPublic>b__0()
}

class "<>c__DisplayClass5_0" {
    + <MonoToInternal>b__0()
}

class "<>c__DisplayClass6_0" {
    + <MonoToInternal>b__0()
}

class "<>c__DisplayClass7_0" {
    + <MonoToPublic>b__0()
}

class "<>c__DisplayClass8_0" {
    + <PublicToMono>b__0()
}

class "DnsHeader" {
    + Clear()
    + ToString()
}

class "DnsQuestion" {
    + Init()
    + ToString()
}

class "DnsResourceRecord" {
    + CopyFrom()
    + ToString()
}

class "DnsResourceRecordCName" {
    + ToString()
}

class "DnsResourceRecordPTR" {
    + ToString()
}

class "DnsResponse" {
    + Reset()
    - GetRRs()
    - GetQuestions()
    + GetQuestions()
    + GetAnswers()
    + GetAuthority()
    + GetAdditional()
    + ToString()
}

class "SimpleResolver" {
    - System.IDisposable.Dispose()
    + Close()
    - GetLocalHost()
    + GetHostAddressesAsync()
    + GetHostEntryAsync()
    - AddQuery()
    - SendAQuery()
    - SendAQuery()
    - SendPTRQuery()
    - SendQuery()
    - GetFreshBuffer()
    - FreeBuffer()
    - InitSocket()
    - BeginReceive()
    - OnTimeout()
    - OnReceive()
    - ProcessResponse()
    - InitFromSystem()
}

class "SimpleResolverEventArgs" {
    + Reset()
    + OnCompleted()
}

class "NtlmSession" {
    + Authenticate()
}

class "NtlmClient" {
    + Authenticate()
    + PreAuthenticate()
}

class "<>c" {
    + <Authenticate>b__1_0()
}

class "MonoBtlsBio" {
    + Read()
    + Write()
    + Flush()
    + Indent()
    + HexDump()
    + PrintErrors()
}

class "BoringBioHandle" {
    + ReleaseHandle()
}

class "MonoBtlsBioMemory" {
    + GetData()
}

class "MonoBtlsBioMono" {
    - Control()
    - OnRead()
    - OnWrite()
    + Close()
}

class "BioReadFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BioWriteFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BioControlFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamBackend" {
    + Read()
    + Write()
    + Flush()
    + Close()
}

class "StringBackend" {
    + Read()
    + Write()
    + Flush()
    + Close()
}

class "MonoBtlsContext" {
    - VerifyCallback()
    - SelectCallback()
    - ServerNameCallback()
    + StartHandshake()
    - SetPrivateCertificate()
    + ProcessHandshake()
    - DoProcessHandshake()
    + FinishHandshake()
    - InitializeConnection()
    - GetPeerCertificate()
    - InitializeSession()
    + Flush()
    + Read()
    + Write()
    + Renegotiate()
    + Shutdown()
    + PendingRenegotiation()
    - Dispose()
    + Dispose()
    - Mono.Btls.IMonoBtlsBioMono.Read()
    - Mono.Btls.IMonoBtlsBioMono.Write()
    - Mono.Btls.IMonoBtlsBioMono.Flush()
    - Mono.Btls.IMonoBtlsBioMono.Close()
}

class "MonoBtlsKey" {
    + GetBytes()
    + Copy()
}

class "BoringKeyHandle" {
    + ReleaseHandle()
}

class "MonoBtlsPkcs12" {
    + GetCertificate()
    + AddCertificate()
    + Import()
    + GetPrivateKey()
}

class "BoringPkcs12Handle" {
    + ReleaseHandle()
}

class "MonoBtlsProvider" {
    + CreateSslStream()
    + GetNativeCertificate()
    + GetNativeCertificate()
    + GetNativeCertificate()
    + ValidateCertificate()
    - CheckValidationResult()
}

class "MonoBtlsVerifyCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoBtlsSelectCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoBtlsServerNameCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoBtlsSsl" {
    + SetBio()
    - ThrowError()
    - GetError()
    + SetCertificate()
    + SetPrivateKey()
    + AddIntermediateCertificate()
    + Accept()
    + Connect()
    + Handshake()
    + GetErrors()
    + PrintErrors()
    + Read()
    + Write()
    + GetVersion()
    + SetMinVersion()
    + SetMaxVersion()
    + GetCipher()
    + GetCiphers()
    + SetCipherList()
    + GetPeerCertificate()
    + SetVerifyParam()
    + SetServerName()
    + GetServerName()
    + Shutdown()
    + SetQuietShutdown()
    + Close()
    + SetRenegotiateMode()
    + RenegotiatePending()
}

class "BoringSslHandle" {
    + ReleaseHandle()
}

class "PrintErrorsCallbackFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoBtlsSslCtx" {
    + Copy()
    - VerifyCallback()
    + SetDebugBio()
    + SetVerifyCallback()
    + SetSelectCallback()
    + SetMinVersion()
    + SetMaxVersion()
    + IsCipherSupported()
    + SetCiphers()
    + SetVerifyParam()
    + SetClientCertificateIssuers()
    + SetServerNameCallback()
    + Close()
}

class "BoringSslCtxHandle" {
    + ReleaseHandle()
}

class "NativeVerifyFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NativeSelectFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NativeServerNameFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoBtlsStream" {
    + CreateContext()
}

class "MonoBtlsX509" {
    + Copy()
    + Duplicate()
    + GetSubjectName()
    + GetSubjectNameString()
    + GetSubjectNameHash()
    + GetIssuerName()
    + GetIssuerNameString()
    + GetRawData()
    + GetRawData()
    + GetCertHash()
    + GetNotBefore()
    + GetNotAfter()
    + GetPublicKeyData()
    + GetSerialNumber()
    + GetVersion()
    + GetSignatureAlgorithm()
    + GetPublicKeyAsn1()
    + GetPublicKeyParameters()
    + GetSubjectKeyIdentifier()
    + GetPublicKey()
    + Print()
    + ExportAsPEM()
    + AddTrustObject()
    + AddRejectObject()
    + AddExplicitTrust()
}

class "BoringX509Handle" {
    + ReleaseHandle()
    + StealHandle()
}

class "MonoBtlsX509Chain" {
    + GetCertificate()
    + Dump()
    + AddCertificate()
    + Copy()
}

class "BoringX509ChainHandle" {
    + ReleaseHandle()
}

class "MonoBtlsX509Crl" {
    + GetByCert()
    + GetBySerial()
    + GetRevokedCount()
    + GetRevoked()
    + GetLastUpdate()
    + GetNextUpdate()
    + GetVersion()
    + GetIssuerName()
}

class "BoringX509CrlHandle" {
    + ReleaseHandle()
    + StealHandle()
}

class "MonoBtlsX509Exception" {
    + ToString()
}

class "MonoBtlsX509Lookup" {
    + GetNativeLookup()
    + LoadFile()
    + AddDirectory()
    + AddMono()
    + Initialize()
    + Shutdown()
    + LookupBySubject()
    + LookupByFingerPrint()
    + AddCertificate()
    + Close()
}

class "BoringX509LookupHandle" {
    + ReleaseHandle()
}

class "BoringX509LookupMonoHandle" {
    + ReleaseHandle()
}

class "BySubjectFunc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoBtlsX509LookupMonoCollection" {
    - Initialize()
    + OnGetBySubject()
    + Close()
}

class "MonoBtlsX509Name" {
    + GetString()
    + PrintBio()
    + GetRawData()
    + GetHash()
    + GetHashOld()
    + GetEntryCount()
    + GetEntryType()
    + GetEntryOid()
    + GetEntryOidData()
    + GetEntryValue()
}

class "BoringX509NameHandle" {
    + ReleaseHandle()
}

class "MonoBtlsX509Revoked" {
    + GetSerialNumber()
    + GetRevocationDate()
    + GetReason()
    + GetSequence()
}

class "BoringX509RevokedHandle" {
    + ReleaseHandle()
    + StealHandle()
}

class "MonoBtlsX509Store" {
    + LoadLocations()
    + SetDefaultPaths()
    + AddCertificate()
    + GetCount()
    + AddTrustedRoots()
    + AddLookup()
    + AddDirectoryLookup()
    + AddFileLookup()
    + AddCollection()
    + Close()
}

class "BoringX509StoreHandle" {
    + ReleaseHandle()
}

class "MonoBtlsX509StoreCtx" {
    + GetError()
    + GetErrorDepth()
    + GetException()
    + GetChain()
    + GetUntrusted()
    + Initialize()
    + SetVerifyParam()
    + Verify()
    + LookupBySubject()
    + GetCurrentCertificate()
    + GetCurrentIssuer()
    + GetVerifyParam()
    + Copy()
}

class "BoringX509StoreCtxHandle" {
    + ReleaseHandle()
}

class "MonoBtlsX509VerifyParam" {
    + Copy()
    - WantToModify()
    + SetName()
    + SetHost()
    + AddHost()
    + GetFlags()
    + SetFlags()
    + GetMonoFlags()
    + SetMonoFlags()
    + SetPurpose()
    + GetDepth()
    + SetDepth()
    + SetTime()
    + GetPeerName()
}

class "BoringX509VerifyParamHandle" {
    + ReleaseHandle()
}

class "X509CertificateImplBtls" {
    + GetNativeAppleCertificate()
    + Clone()
    + Equals()
    + GetRawCertData()
    + Dispose()
    + GetRSAPrivateKey()
    + GetDSAPrivateKey()
    - Import()
    - ImportPkcs12()
    - ImportAuthenticode()
    + Verify()
    + Reset()
}

class "X509ChainImplBtls" {
    + AddStatus()
    + Build()
    + Reset()
    + Dispose()
}

class "X509PalImplBtls" {
    + Import()
    + Import()
    + Import()
}

class "<>c" {
    + <.cctor>b__10_0()
    + <.cctor>b__10_1()
}

class "<ReadReverseRdns>d__21" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "IntranetZoneCredentialPolicy" {
    + ShouldSendCredential()
}

class "PowerModeChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SessionEndedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SessionEndingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SessionSwitchEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TimerElapsedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UserPreferenceChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UserPreferenceChangingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SafeProcessHandle" {
    + InitialSetHandle()
    + ReleaseHandle()
}

class "SafeX509ChainHandle" {
    + ReleaseHandle()
}

class "VBCodeGenerator" {
    - EnsureInDoubleQuotes()
    - EnsureNotInDoubleQuotes()
    + QuoteSnippetString()
    + ProcessCompilerOutputLine()
    + CmdArgsFromParameters()
    + OutputAttributeArgument()
    - OutputAttributes()
    - OutputAttributes()
    + OutputDirection()
    + GenerateDefaultValueExpression()
    + GenerateDirectionExpression()
    + OutputFieldScopeModifier()
    + OutputMemberAccessModifier()
    - OutputVTableModifier()
    + OutputMemberScopeModifier()
    + OutputOperator()
    - GenerateNotIsNullExpression()
    + GenerateBinaryOperatorExpression()
    + GetResponseFileCmdArgs()
    + OutputIdentifier()
    + OutputType()
    - OutputTypeAttributes()
    + OutputTypeNamePair()
    - GetArrayPostfix()
    - OutputArrayPostfix()
    + GenerateIterationStatement()
    + GeneratePrimitiveExpression()
    + GenerateThrowExceptionStatement()
    + GenerateArrayCreateExpression()
    + GenerateBaseReferenceExpression()
    + GenerateCastExpression()
    + GenerateDelegateCreateExpression()
    + GenerateFieldReferenceExpression()
    + GenerateSingleFloatValue()
    + GenerateDoubleValue()
    + GenerateDecimalValue()
    + GenerateArgumentReferenceExpression()
    + GenerateVariableReferenceExpression()
    + GenerateIndexerExpression()
    + GenerateArrayIndexerExpression()
    + GenerateSnippetExpression()
    + GenerateMethodInvokeExpression()
    + GenerateMethodReferenceExpression()
    + GenerateEventReferenceExpression()
    - GenerateFormalEventReferenceExpression()
    + GenerateDelegateInvokeExpression()
    + GenerateObjectCreateExpression()
    + GenerateParameterDeclarationExpression()
    + GeneratePropertySetValueReferenceExpression()
    + GenerateThisReferenceExpression()
    + GenerateExpressionStatement()
    - IsDocComment()
    + GenerateCommentStatements()
    + GenerateComment()
    + GenerateMethodReturnStatement()
    + GenerateConditionStatement()
    + GenerateTryCatchFinallyStatement()
    + GenerateAssignStatement()
    + GenerateAttachEventStatement()
    + GenerateRemoveEventStatement()
    + GenerateSnippetStatement()
    + GenerateGotoStatement()
    + GenerateLabeledStatement()
    + GenerateVariableDeclarationStatement()
    + GenerateLinePragmaStart()
    + GenerateLinePragmaEnd()
    + GenerateEvent()
    + GenerateField()
    - MethodIsOverloaded()
    + GenerateSnippetMember()
    + GenerateMethod()
    + GenerateEntryPointMethod()
    - PropertyIsOverloaded()
    + GenerateProperty()
    + GeneratePropertyReferenceExpression()
    + GenerateConstructor()
    + GenerateTypeConstructor()
    + GenerateTypeOfExpression()
    + GenerateTypeStart()
    - OutputTypeParameters()
    - OutputTypeParameterConstraints()
    + GenerateTypeEnd()
    + GenerateNamespace()
    - AllowLateBound()
    - RequireVariableDeclaration()
    - GetUserData()
    + GenerateCompileUnitStart()
    + GenerateCompileUnit()
    + GenerateDirectives()
    - GenerateChecksumPragma()
    - GenerateCodeRegionDirective()
    + GenerateNamespaceStart()
    + GenerateNamespaceEnd()
    + GenerateNamespaceImport()
    + GenerateAttributeDeclarationsStart()
    + GenerateAttributeDeclarationsEnd()
    + Supports()
    + IsValidIdentifier()
    + CreateValidIdentifier()
    + CreateEscapedIdentifier()
    - GetBaseTypeOutput()
    - GetTypeOutputWithoutArrayPostFix()
    - GetTypeArgumentsOutput()
    - GetTypeArgumentsOutput()
    + GetTypeOutput()
    + ContinueOnNewLine()
    - IsGeneratingStatements()
    - GenerateVBStatements()
    + FromFileBatch()
}

class "VBCodeProvider" {
    + CreateGenerator()
    + CreateCompiler()
    + GetConverter()
    + GenerateCodeFromMember()
}

class "CSharpCodeGenerator" {
    - QuoteSnippetStringCStyle()
    - QuoteSnippetStringVerbatimStyle()
    - QuoteSnippetString()
    - ContinueOnNewLine()
    - OutputIdentifier()
    - OutputType()
    - GenerateArrayCreateExpression()
    - GenerateBaseReferenceExpression()
    - GenerateBinaryOperatorExpression()
    - GenerateCastExpression()
    + GenerateCodeFromMember()
    - GenerateDefaultValueExpression()
    - GenerateDelegateCreateExpression()
    - GenerateEvents()
    - GenerateFields()
    - GenerateFieldReferenceExpression()
    - GenerateArgumentReferenceExpression()
    - GenerateVariableReferenceExpression()
    - GenerateIndexerExpression()
    - GenerateArrayIndexerExpression()
    - GenerateSnippetCompileUnit()
    - GenerateSnippetExpression()
    - GenerateMethodInvokeExpression()
    - GenerateMethodReferenceExpression()
    - GetUserData()
    - GenerateNamespace()
    - GenerateStatement()
    - GenerateStatements()
    - GenerateNamespaceImports()
    - GenerateEventReferenceExpression()
    - GenerateDelegateInvokeExpression()
    - GenerateObjectCreateExpression()
    - GeneratePrimitiveExpression()
    - GeneratePrimitiveExpressionBase()
    - GeneratePrimitiveChar()
    - AppendEscapedChar()
    - GeneratePropertySetValueReferenceExpression()
    - GenerateThisReferenceExpression()
    - GenerateExpressionStatement()
    - GenerateIterationStatement()
    - GenerateThrowExceptionStatement()
    - GenerateComment()
    - GenerateCommentStatement()
    - GenerateCommentStatements()
    - GenerateMethodReturnStatement()
    - GenerateConditionStatement()
    - GenerateTryCatchFinallyStatement()
    - GenerateAssignStatement()
    - GenerateAttachEventStatement()
    - GenerateRemoveEventStatement()
    - GenerateSnippetStatement()
    - GenerateGotoStatement()
    - GenerateLabeledStatement()
    - GenerateVariableDeclarationStatement()
    - GenerateLinePragmaStart()
    - GenerateLinePragmaEnd()
    - GenerateEvent()
    - GenerateExpression()
    - GenerateField()
    - GenerateSnippetMember()
    - GenerateParameterDeclarationExpression()
    - GenerateEntryPointMethod()
    - GenerateMethods()
    - GenerateMethod()
    - GenerateProperties()
    - GenerateProperty()
    - GenerateSingleFloatValue()
    - GenerateDoubleValue()
    - GenerateDecimalValue()
    - OutputVTableModifier()
    - OutputMemberAccessModifier()
    - OutputMemberScopeModifier()
    - OutputOperator()
    - OutputFieldScopeModifier()
    - GeneratePropertyReferenceExpression()
    - GenerateConstructors()
    - GenerateConstructor()
    - GenerateTypeConstructor()
    - GenerateTypeReferenceExpression()
    - GenerateTypeOfExpression()
    - GenerateType()
    - GenerateTypes()
    - GenerateTypeStart()
    - GenerateTypeMember()
    - GenerateTypeConstructors()
    - GenerateSnippetMembers()
    - GenerateNestedTypes()
    - GenerateNamespaces()
    - OutputAttributeArgument()
    - OutputDirection()
    - OutputExpressionList()
    - OutputExpressionList()
    - OutputParameters()
    - OutputTypeNamePair()
    - OutputTypeParameters()
    - OutputTypeParameterConstraints()
    - OutputTypeAttributes()
    - GenerateTypeEnd()
    - GenerateNamespaceStart()
    - GenerateCompileUnit()
    - GenerateCompileUnitStart()
    - GenerateCompileUnitEnd()
    - GenerateDirectionExpression()
    - GenerateDirectives()
    - GenerateChecksumPragma()
    - GenerateCodeRegionDirective()
    - GenerateNamespaceEnd()
    - GenerateNamespaceImport()
    - GenerateAttributeDeclarationsStart()
    - GenerateAttributeDeclarationsEnd()
    - GenerateAttributes()
    - GenerateAttributes()
    - GenerateAttributes()
    + Supports()
    + IsValidIdentifier()
    + ValidateIdentifier()
    + CreateValidIdentifier()
    + CreateEscapedIdentifier()
    - GetBaseTypeOutput()
    - GetTypeArgumentsOutput()
    - GetTypeArgumentsOutput()
    + GetTypeOutput()
    - OutputStartingBrace()
    - System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom()
    - System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile()
    - System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource()
    - System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch()
    - System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch()
    - System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch()
    - FromDom()
    - FromFile()
    - FromSource()
    - FromDomBatch()
    - ResolveReferencedAssemblies()
    - FromSourceBatch()
    - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType()
    - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression()
    - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit()
    - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace()
    - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement()
    - FromFileBatch()
}

class "<>c__DisplayClass180_0" {
    + <FromFileBatch>b__0()
    + <FromFileBatch>b__1()
}

class "CSharpCodeProvider" {
    + CreateGenerator()
    + CreateCompiler()
    + GetConverter()
    + GenerateCodeFromMember()
}

class "UriBuilder" {
    - Init()
    + Equals()
    + GetHashCode()
    - SetFieldsFromUri()
    + ToString()
}

class "InvariantComparer" {
    + Compare()
}

class "Uri" {
    - AllowIdnStatic()
    - IsIntranet()
    - SetUserDrivenParsing()
    - NotAny()
    - InFact()
    - EnsureUriInfo()
    - EnsureParseRemaining()
    - EnsureHostString()
    - CreateUri()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    - GetLocalPath()
    + GetLeftPart()
    + GetHashCode()
    + ToString()
    + Equals()
    + MakeRelativeUri()
    + ParseMinimal()
    - PrivateParseMinimal()
    - PrivateParseMinimalIri()
    - CreateUriInfo()
    - CreateHostString()
    - GetHostViaCustomSyntax()
    + GetParts()
    - GetEscapedParts()
    - GetUnescapedParts()
    - ReCreateParts()
    - GetUriPartsFromUserString()
    - ParseRemaining()
    - CheckAuthorityHelper()
    - CheckAuthorityHelperHandleDnsIri()
    - CheckAuthorityHelperHandleAnyHostIri()
    - FindEndOfComponent()
    - FindEndOfComponent()
    - CheckCanonical()
    - GetCanonicalPath()
    + MakeRelative()
    + Parse()
    + Canonicalize()
    + Escape()
    + Unescape()
    + CheckSecurity()
    + IsReservedCharacter()
    + IsBadFileSystemCharacter()
    - CreateThis()
    - InitializeUri()
    - CheckForConfigLoad()
    - CheckForUnicode()
    - CheckForEscapedUnreserved()
    + GetComponents()
    + IsWellFormedOriginalString()
    + InternalIsWellFormedOriginalString()
    + EscapeUnescapeIri()
    - GetRelativeSerializationString()
    + GetComponentsHelper()
    + IsBaseOf()
    + IsBaseOfHelper()
    - CreateThisFromUri()
}

class "UriFormatException" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "IOSelectorJob" {
    - System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
    - System.Threading.IThreadPoolWorkItem.MarkAborted()
    + MarkDisposed()
}

class "UriTypeConverter" {
    - CanConvert()
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + IsValid()
}

class "SoundPlayer" {
    - LoadFromStream()
    - LoadFromUri()
    + Load()
    - AsyncFinished()
    + LoadAsync()
    + OnLoadCompleted()
    + OnSoundLocationChanged()
    + OnStreamChanged()
    - Start()
    + Play()
    - PlayLoop()
    + PlayLooping()
    + PlaySync()
    + Stop()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "SystemSound" {
    + Play()
}

class "Barrier" {
    - GetCurrentTotal()
    - SetCurrentTotal()
    + AddParticipant()
    + AddParticipants()
    + RemoveParticipant()
    + RemoveParticipants()
    + SignalAndWait()
    + SignalAndWait()
    + SignalAndWait()
    + SignalAndWait()
    + SignalAndWait()
    + SignalAndWait()
    - FinishPhase()
    - SetResetEvents()
    - WaitCurrentPhase()
    - DiscontinuousWait()
    + Dispose()
    + Dispose()
    - ThrowIfDisposed()
}

class "Semaphore" {
    + Release()
    + Release()
    + GetAccessControl()
    + SetAccessControl()
}

class "ThreadExceptionEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FrameworkName" {
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "HandleCollector" {
    + Add()
    + Remove()
}

class "ElapsedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Timer" {
    - UpdateTimer()
    + BeginInit()
    + Close()
    + Dispose()
    + EndInit()
    + Start()
    + Stop()
    - MyTimerCallback()
}

class "AppSettingsReader" {
    + GetValue()
}

class "CollectionWrapper" {
    + Remove()
    + Clear()
    + UnWrap()
}

class "ConfigNameValueCollection" {
    + ResetModified()
    + Set()
}

class "ConfigXmlDocument" {
    + CreateAttribute()
    + CreateCDataSection()
    + CreateComment()
    + CreateElement()
    + CreateSignificantWhitespace()
    + CreateTextNode()
    + CreateWhitespace()
    + Load()
    + LoadSingleElement()
}

class "ConfigurationException" {
    + GetObjectData()
}

class "DefaultConfig" {
    + GetConfig()
    + Init()
}

class "ConfigurationData" {
    + Load()
    + LoadString()
    - GetHandler()
    - CreateNewHandler()
    - GetInnerDoc()
    - GetDocumentForSection()
    - GetConfigInternal()
    + GetConfig()
    - LookForFactory()
    - InitRead()
    - MoveToNextElement()
    - ReadSection()
    - ReadRemoveSection()
    - ReadSectionGroup()
    - ReadSections()
    - StorePending()
    - ReadConfigFile()
    - ThrowException()
}

class "CustomizableFileSettingsProvider" {
    + Initialize()
    - StripXmlHeader()
    - SaveProperties()
    - NormalizeInvalidXmlChars()
    - LoadPropertyValue()
    - LoadProperties()
    + SetPropertyValues()
    + GetPropertyValues()
    - CreateExeMap()
    + GetPreviousVersion()
    + Reset()
    + Upgrade()
}

class "DictionarySectionHandler" {
    + Create()
}

class "IdnElement" {
    + Equals()
    + GetHashCode()
}

class "IgnoreSectionHandler" {
    + Create()
}

class "IriParsingElement" {
    + Equals()
    + GetHashCode()
}

class "LocalFileSettingsProvider" {
    + GetPreviousVersion()
    + GetPropertyValues()
    + Initialize()
    + Reset()
    + SetPropertyValues()
    + Upgrade()
}

class "NameValueFileSectionHandler" {
    + Create()
}

class "NameValueSectionHandler" {
    + Create()
}

class "SettingChangingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SettingElement" {
    + Equals()
    + GetHashCode()
}

class "SettingElementCollection" {
    + Add()
    + Clear()
    + Get()
    + Remove()
    + CreateNewElement()
    + GetElementKey()
}

class "SettingValueElement" {
    + DeserializeElement()
    + Equals()
    + GetHashCode()
    + IsModified()
    + Reset()
    + ResetModified()
    + SerializeToXmlElement()
    + Unmerge()
    - HasValue()
    - GetItem()
    - PropertyIsElement()
    - ElementIsModified()
    - ElementUnmerge()
}

class "SettingsLoadedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SettingsPropertyCollection" {
    + Add()
    + Clear()
    + Clone()
    + CopyTo()
    + GetEnumerator()
    + Remove()
    + SetReadOnly()
    + OnAdd()
    + OnAddComplete()
    + OnClear()
    + OnClearComplete()
    + OnRemove()
    + OnRemoveComplete()
}

class "SettingsPropertyValue" {
    + Reset()
    - GetDeserializedDefaultValue()
    - GetDeserializedValue()
}

class "SettingsPropertyValueCollection" {
    + Add()
    + Add()
    + Clear()
    + Clone()
    + CopyTo()
    + GetEnumerator()
    + Remove()
    + SetReadOnly()
}

class "SettingsProviderCollection" {
    + Add()
}

class "SettingsSavingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SingleTagSectionHandler" {
    + Create()
}

class "HttpQSCollection" {
    + ToString()
}

class "AspNetHostingPermission" {
    + IsUnrestricted()
    + Copy()
    + FromXml()
    + ToXml()
    + Intersect()
    + IsSubsetOf()
    + Union()
    - IsEmpty()
    - Cast()
}

class "AspNetHostingPermissionAttribute" {
    + CreatePermission()
}

class "HttpEncoder" {
    + HeaderNameValueEncode()
    + HtmlAttributeEncode()
    + HtmlDecode()
    + HtmlEncode()
    + UrlEncode()
    + UrlPathEncode()
    + JavaScriptStringEncode()
}

class "<>c" {
    + <.cctor>b__13_0()
}

class "Capture" {
    + ToString()
    + GetLeftSubstring()
    + GetRightSubstring()
}

class "CaptureCollection" {
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Capture>.GetEnumerator()
    - GetCapture()
    + ForceInitialized()
    + CopyTo()
    + CopyTo()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.IndexOf()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Insert()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.RemoveAt()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Add()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Clear()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Contains()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Remove()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "Enumerator" {
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.IDisposable.Dispose()
}

class "CompiledRegexRunner" {
    + SetDelegates()
    + Go()
    + FindFirstChar()
    + InitTrackCount()
}

class "CompiledRegexRunnerFactory" {
    + CreateInstance()
}

class "GroupCollection" {
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Group>.GetEnumerator()
    - GetGroup()
    - GetGroupImpl()
    + CopyTo()
    + CopyTo()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.IndexOf()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.Insert()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.RemoveAt()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Add()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Clear()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Contains()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Remove()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "Enumerator" {
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.IDisposable.Dispose()
}

class "Match" {
    + Reset()
    + NextMatch()
    + Result()
    + GroupToStringImpl()
    + LastGroupToStringImpl()
    + AddMatch()
    + BalanceMatch()
    + RemoveMatch()
    + IsMatched()
    + MatchIndex()
    + MatchLength()
    + Tidy()
}

class "MatchCollection" {
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Match>.GetEnumerator()
    - GetMatch()
    - EnsureInitialized()
    + CopyTo()
    + CopyTo()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.IndexOf()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.Insert()
    - System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.RemoveAt()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Add()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Clear()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Contains()
    - System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Remove()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "Enumerator" {
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.IDisposable.Dispose()
}

class "ExclusiveReference" {
    + Get()
    + Release()
}

class "Regex" {
    - GetCachedCode()
    - GetCachedCodeEntryInternal()
    - FillCacheDictionary()
    + IsMatch()
    + IsMatch()
    + Match()
    + Match()
    + Match()
    + Matches()
    + Matches()
    + Replace()
    + Replace()
    + Replace()
    + Replace()
    + Replace()
    + Replace()
    + Split()
    + Split()
    + Split()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    - Compile()
    + ToString()
    + GetGroupNames()
    + GetGroupNumbers()
    + GroupNameFromNumber()
    + GroupNumberFromName()
    + InitializeReferences()
    + Run()
    + UseOptionC()
    + UseOptionR()
    + UseOptionInvariant()
}

class "CachedCodeEntry" {
    + AddCompiled()
}

class "MatchEvaluator" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RegexBoyerMoore" {
    - MatchPattern()
    + IsMatch()
    + Scan()
}

class "RegexCharClass" {
    + AddChar()
    + AddCharClass()
    - AddSet()
    + AddSubtraction()
    + AddRange()
    + AddCategoryFromName()
    - AddCategory()
    + AddLowercase()
    - AddLowercaseRange()
    + AddWord()
    + AddSpace()
    + AddDigit()
    - RangeCount()
    + ToStringClass()
    - GetRangeAt()
    - Canonicalize()
}

class "SingleRangeComparer" {
    + Compare()
}

class "RegexFC" {
    + AddFC()
    + GetFirstChars()
}

class "RegexInterpreter" {
    + InitTrackCount()
    - Advance()
    - Goto()
    - Textto()
    - Trackto()
    - Textstart()
    - Textpos()
    - Trackpos()
    - TrackPush()
    - TrackPush()
    - TrackPush()
    - TrackPush()
    - TrackPush2()
    - TrackPush2()
    - Backtrack()
    - SetOperator()
    - TrackPop()
    - TrackPop()
    - TrackPeek()
    - TrackPeek()
    - StackPush()
    - StackPush()
    - StackPop()
    - StackPop()
    - StackPeek()
    - StackPeek()
    - Operator()
    - Operand()
    - Leftchars()
    - Rightchars()
    - Bump()
    - Forwardchars()
    - Forwardcharnext()
    - Stringmatch()
    - Refmatch()
    - Backwardnext()
    - CharAt()
    + FindFirstChar()
    + Go()
}

class "RegexLWCGCompiler" {
    + FactoryInstanceFromCode()
    + DefineDynamicMethod()
}

class "RegexMatchTimeoutException" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "RegexNode" {
    + UseOptionR()
    + ReverseLeft()
    - MakeRep()
    - Reduce()
    - StripEnation()
    - ReduceGroup()
    - ReduceRep()
    - ReduceSet()
    - ReduceAlternation()
    - ReduceConcatenation()
    + MakeQuantifier()
    + AddChild()
    + Child()
    + ChildCount()
    + Type()
}

class "RegexParser" {
    - SetPattern()
    - Reset()
    - ScanRegex()
    - ScanReplacement()
    - ScanCharClass()
    - ScanGroupOpen()
    - ScanBlank()
    - ScanBackslash()
    - ScanBasicBackslash()
    - ScanDollar()
    - ScanCapname()
    - ScanOctal()
    - ScanDecimal()
    - ScanHex()
    - ScanControl()
    - IsOnlyTopOption()
    - ScanOptions()
    - ScanCharEscape()
    - ParseProperty()
    - TypeFromCode()
    - CountCaptures()
    - NoteCaptureSlot()
    - NoteCaptureName()
    - NoteCaptures()
    - AssignNameSlots()
    - CaptureSlotFromName()
    - IsCaptureSlot()
    - IsCaptureName()
    - UseOptionN()
    - UseOptionI()
    - UseOptionM()
    - UseOptionS()
    - UseOptionX()
    - UseOptionE()
    - IsTrueQuantifier()
    - AddConcatenate()
    - PushGroup()
    - PopGroup()
    - EmptyStack()
    - StartGroup()
    - AddAlternate()
    - AddConcatenate()
    - AddConcatenate()
    - Unit()
    - AddUnitOne()
    - AddUnitNotone()
    - AddUnitSet()
    - AddUnitNode()
    - AddUnitType()
    - AddGroup()
    - PushOptions()
    - PopOptions()
    - EmptyOptionsStack()
    - PopKeepOptions()
    - MakeException()
    - Textpos()
    - Textto()
    - RightCharMoveRight()
    - MoveRight()
    - MoveRight()
    - MoveLeft()
    - CharAt()
    + RightChar()
    - RightChar()
    - CharsRight()
}

class "RegexReplacement" {
    - ReplacementImpl()
    - ReplacementImplRTL()
    + Replacement()
    + Replace()
}

class "BooleanSwitch" {
    + OnValueChanged()
}

class "ConsoleTraceListener" {
    + Close()
}

class "CorrelationManager" {
    + StartLogicalOperation()
    + StartLogicalOperation()
    + StopLogicalOperation()
    - GetLogicalOperationStack()
}

class "DelimitedListTraceListener" {
    + GetSupportedAttributes()
    + TraceEvent()
    + TraceEvent()
    + TraceData()
    + TraceData()
    - WriteHeader()
    - WriteFooter()
    - WriteEscaped()
    - WriteStackEscaped()
}

class "FilterElement" {
    + GetRuntimeObject()
    + RefreshRuntimeObject()
}

class "ListenerElementsCollection" {
    + CreateNewElement()
    + GetElementKey()
    + GetRuntimeObject()
    + InitializeDefault()
    + InitializeDefaultInternal()
    + BaseAdd()
}

class "SharedListenerElementsCollection" {
    + CreateNewElement()
}

class "ListenerElement" {
    + Equals()
    + GetHashCode()
    + GetRuntimeObject()
    + OnDeserializeUnrecognizedAttribute()
    + PreSerialize()
    + SerializeElement()
    + Unmerge()
    + ResetProperties()
    + RefreshRuntimeObject()
}

class "EventTypeFilter" {
    + ShouldTrace()
}

class "SourceElementsCollection" {
    + CreateNewElement()
    + GetElementKey()
}

class "SourceElement" {
    + DeserializeElement()
    + OnDeserializeUnrecognizedAttribute()
    + PreSerialize()
    + SerializeElement()
    + Unmerge()
    + ResetProperties()
}

class "SourceFilter" {
    + ShouldTrace()
}

class "SourceSwitch" {
    + ShouldTrace()
    + OnValueChanged()
}

class "SwitchElementsCollection" {
    + CreateNewElement()
    + GetElementKey()
}

class "SwitchElement" {
    + OnDeserializeUnrecognizedAttribute()
    + PreSerialize()
    + SerializeElement()
    + Unmerge()
    + ResetProperties()
}

class "SystemDiagnosticsSection" {
    + InitializeDefault()
}

class "TextWriterTraceListener" {
    + Close()
    + Dispose()
    + Flush()
    + Write()
    + WriteLine()
    + EnsureWriter()
}

class "TraceListenerCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + InitializeListener()
    + IndexOf()
    + Insert()
    + Remove()
    + Remove()
    + RemoveAt()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.ICollection.CopyTo()
}

class "TraceSource" {
    - Initialize()
    - NoConfigInit()
    + Close()
    + Flush()
    + GetSupportedAttributes()
    + Refresh()
    + TraceEvent()
    + TraceEvent()
    + TraceEvent()
    + TraceData()
    + TraceData()
    + TraceInformation()
    + TraceInformation()
    + TraceTransfer()
    - CreateSwitch()
}

class "TraceSwitch" {
    + OnSwitchSettingChanged()
    + OnValueChanged()
}

class "TypedElement" {
    + BaseGetRuntimeObject()
}

class "XmlWriterTraceListener" {
    + Write()
    + WriteLine()
    + Fail()
    + TraceEvent()
    + TraceEvent()
    + TraceData()
    + TraceData()
    - WriteData()
    + Close()
    + TraceTransfer()
    - WriteHeader()
    - WriteHeader()
    - WriteStartHeader()
    - WriteEndHeader()
    - WriteFooter()
    - WriteEscaped()
    - InternalWrite()
}

class "UserCallBack" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Process" {
    - GetProcessTimes()
    - ReleaseProcessHandle()
    - CompletionCallback()
    + Dispose()
    + Close()
    - EnsureState()
    - EnsureWatchingForExit()
    - EnsureWorkingSetLimits()
    + OnExited()
    - GetProcessHandle()
    - GetProcessHandle()
    - OpenProcessHandle()
    - OpenProcessHandle()
    + Refresh()
    - SetProcessHandle()
    - SetProcessId()
    - SetWorkingSetLimits()
    + Start()
    + Kill()
    - StopWatchingForExit()
    + ToString()
    + WaitForExit()
    + WaitForExit()
    + WaitForInputIdle()
    + WaitForInputIdle()
    + BeginOutputReadLine()
    + BeginErrorReadLine()
    + CancelOutputRead()
    + CancelErrorRead()
    + OutputReadNotifyUser()
    + ErrorReadNotifyUser()
    - GetModules_icall()
    - GetModules_internal()
    + CloseMainWindow()
    - StartWithShellExecuteEx()
    - StartWithCreateProcess()
    - RaiseOnExited()
}

class "OrdinalCaseInsensitiveComparer" {
    + Compare()
}

class "ProcessModuleCollection" {
    + IndexOf()
    + Contains()
    + CopyTo()
}

class "ProcessThreadCollection" {
    + Add()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
}

class "AlphabeticalEnumConverter" {
    + GetStandardValues()
}

class "CounterCreationDataCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + OnValidate()
    + Remove()
}

class "DataReceivedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DefaultTraceListener" {
    + Fail()
    + Fail()
    - ProcessUI()
    - WriteDebugString()
    - WriteMonoTrace()
    - WritePrefix()
    - WriteImpl()
    - WriteLogFile()
    + Write()
    + WriteLine()
}

class "DiagnosticsConfigurationHandler" {
    + Create()
    - AddAssertNode()
    - AddPerformanceCountersNode()
    - AddSwitchesNode()
    - AddTraceNode()
    - AddTraceAttributes()
    - GetSharedListeners()
    - AddSourcesNode()
    - AddTraceSource()
    - AddTraceListeners()
    - AddTraceListener()
    - RemoveTraceListener()
    - GetAttribute()
    - ValidateAttribute()
    - ValidateInvalidAttributes()
    - ThrowMissingAttribute()
    - ThrowUnrecognizedNode()
    - ThrowUnrecognizedElement()
    - ThrowUnrecognizedAttribute()
}

class "ElementHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "EntryWrittenEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "EventLog" {
    + ModifyOverflowPolicy()
    + RegisterDisplayName()
    + BeginInit()
    + Clear()
    + Close()
    + Reset()
    + Dispose()
    + EndInit()
    + WriteEntry()
    + WriteEntry()
    + WriteEntry()
    + WriteEntry()
    + WriteEntry()
    + WriteEvent()
    + WriteEvent()
    + OnEntryWritten()
    + GetLogName()
    - WriteEntry()
    - ValidateEventID()
}

class "EventLogEntry" {
    + Equals()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "EventLogEntryCollection" {
    + CopyTo()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "EventLogEntryEnumerator" {
    + MoveNext()
    + Reset()
}

class "EventLogPermission" {
    - SetUp()
    + GetEntries()
    + ClearEntries()
    + Add()
    + Remove()
}

class "EventLogPermissionAttribute" {
    + CreatePermission()
}

class "EventLogPermissionEntry" {
    + CreateResourcePermissionBaseEntry()
}

class "EventLogPermissionEntryCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + OnClear()
    + OnInsert()
    + OnRemove()
    + OnSet()
    + Remove()
}

class "EventLogTraceListener" {
    + Close()
    + Dispose()
    + Write()
    + WriteLine()
    + TraceData()
    + TraceData()
    + TraceEvent()
    + TraceEvent()
}

class "FileVersionInfo" {
    - GetVersionInfo_icall()
    - GetVersionInfo_internal()
    + ToString()
}

class "InstanceDataCollection" {
    + Contains()
    + CopyTo()
}

class "InstanceDataCollectionCollection" {
    + Contains()
    + CopyTo()
}

class "LocalFileEventLog" {
    + BeginInit()
    + Clear()
    + Close()
    + CreateEventSource()
    + Delete()
    + DeleteEventSource()
    + Dispose()
    + DisableNotification()
    + EnableNotification()
    + EndInit()
    + Exists()
    + FormatMessage()
    + GetEntryCount()
    + GetEntry()
    + GetLogDisplayName()
    + GetLogNames()
    + LogNameFromSourceName()
    + SourceExists()
    + WriteEntry()
    - FindSourceDirectory()
    - FindLogStore()
    - GetLatestIndex()
    + ModifyOverflowPolicy()
    + RegisterDisplayName()
    - <EnableNotification>b__14_0()
}

class "NullEventLog" {
    + BeginInit()
    + Clear()
    + Close()
    + CreateEventSource()
    + Delete()
    + DeleteEventSource()
    + Dispose()
    + DisableNotification()
    + EnableNotification()
    + EndInit()
    + Exists()
    + FormatMessage()
    + GetEntryCount()
    + GetEntry()
    + GetLogDisplayName()
    + GetLogNames()
    + LogNameFromSourceName()
    + SourceExists()
    + WriteEntry()
    + ModifyOverflowPolicy()
    + RegisterDisplayName()
}

class "PerformanceCounter" {
    - UpdateInfo()
    + BeginInit()
    + EndInit()
    + Close()
    + Decrement()
    + Dispose()
    + Increment()
    + IncrementBy()
    + NextSample()
    + NextValue()
    + RemoveInstance()
}

class "PerformanceCounterCategory" {
    + CounterExists()
    + GetCounters()
    + GetCounters()
    + GetInstanceNames()
    + InstanceExists()
    + ReadCategory()
}

class "PerformanceCounterManager" {
    - System.Diagnostics.ICollectData.CloseData()
    - System.Diagnostics.ICollectData.CollectData()
}

class "PerformanceCounterPermission" {
    - SetUp()
    + GetEntries()
    + ClearEntries()
    + Add()
    + Remove()
}

class "PerformanceCounterPermissionAttribute" {
    + CreatePermission()
}

class "PerformanceCounterPermissionEntry" {
    + CreateResourcePermissionBaseEntry()
}

class "PerformanceCounterPermissionEntryCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + OnClear()
    + OnInsert()
    + OnRemove()
    + OnSet()
    + Remove()
}

class "ProcessModule" {
    + ToString()
}

class "ProcessThread" {
    + ResetIdealProcessor()
}

class "Stopwatch" {
    + Reset()
    + Start()
    + Stop()
    + Restart()
}

class "Win32EventLog" {
    + BeginInit()
    + Clear()
    + Close()
    + CreateEventSource()
    + Delete()
    + DeleteEventSource()
    + Dispose()
    + EndInit()
    + Exists()
    + FormatMessage()
    - FormatCategory()
    + GetEntryCount()
    + GetEntry()
    + GetLogDisplayName()
    + GetLogNames()
    + LogNameFromSourceName()
    + SourceExists()
    + WriteEntry()
    - ReadEventLog()
    - CloseEventLog()
    - DeregisterEventSource()
    - GetMessageResourceDlls()
    - RegisterEventSource()
    + DisableNotification()
    + EnableNotification()
    - NotifyEventThread()
    + ModifyOverflowPolicy()
    + RegisterDisplayName()
    - <EnableNotification>b__44_0()
}

class "SemaphoreSecurity" {
    + AccessRuleFactory()
    + AddAccessRule()
    + RemoveAccessRule()
    + RemoveAccessRuleAll()
    + RemoveAccessRuleSpecific()
    + ResetAccessRule()
    + SetAccessRule()
    + AuditRuleFactory()
    + AddAuditRule()
    + RemoveAuditRule()
    + RemoveAuditRuleAll()
    + RemoveAuditRuleSpecific()
    + SetAuditRule()
    + Persist()
}

class "TypeDescriptorPermission" {
    - SetUnrestricted()
    - Reset()
    + IsUnrestricted()
    + Union()
    + IsSubsetOf()
    + Intersect()
    + Copy()
    - VerifyAccess()
    + ToXml()
    + FromXml()
}

class "StorePermission" {
    + IsUnrestricted()
    + Copy()
    + Intersect()
    + Union()
    + IsSubsetOf()
    + FromXml()
    + ToXml()
    - Cast()
}

class "StorePermissionAttribute" {
    + CreatePermission()
}

class "ServiceNameCollection" {
    + Merge()
    + Merge()
    + Contains()
}

class "TokenBinding" {
    + GetRawTokenBindingId()
}

class "ExtendedProtectionPolicy" {
    + ToString()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "ExtendedProtectionPolicyTypeConverter" {
    + CanConvertTo()
    + ConvertTo()
}

class "ExtendedProtectionPolicyElement" {
    + BuildPolicy()
}

class "ServiceNameElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "AsnSetValueComparer" {
    + Compare()
    + Compare()
}

class "DerSequenceReader" {
    + PeekTag()
    + HasTag()
    + HasTag()
    + SkipValue()
    + ValidateAndSkipDerValue()
    + ReadNextEncodedValue()
    + ReadBoolean()
    + ReadInteger()
    + ReadIntegerBytes()
    + ReadBitString()
    + ReadOctetString()
    + ReadOidAsString()
    + ReadOid()
    + ReadUtf8String()
    - ReadCollectionWithTag()
    + ReadSequence()
    + ReadSet()
    + ReadPrintableString()
    + ReadIA5String()
    + ReadT61String()
    + ReadX509Date()
    + ReadUtcTime()
    + ReadGeneralizedTime()
    + ReadBMPString()
    - ReadTime()
    - ReadContentAsBytes()
    - EatTag()
    - EatLength()
}

class "<>c" {
    + <ReadT61String>b__45_0()
    + <ReadT61String>b__45_1()
    + <ReadTime>b__51_0()
}

class "AsnEncodedDataCollection" {
    + Add()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
}

class "AsnEncodedDataEnumerator" {
    + MoveNext()
    + Reset()
}

class "OidCollection" {
    + Add()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
}

class "OidEnumerator" {
    + MoveNext()
    + Reset()
}

class "AsnEncodedData" {
    + CopyFrom()
    + Format()
    + ToString()
    + Default()
    + BasicConstraintsExtension()
    + EnhancedKeyUsageExtension()
    + KeyUsageExtension()
    + SubjectKeyIdentifierExtension()
    + SubjectAltName()
    + NetscapeCertType()
}

class "GeneralNameEncoder" {
    + EncodeEmailAddress()
    + EncodeDnsName()
    + EncodeUri()
    + EncodeIpAddress()
    + EncodeUserPrincipalName()
}

class "SubjectAlternativeNameBuilder" {
    + AddEmailAddress()
    + AddDnsName()
    + AddUri()
    + AddIpAddress()
    + AddUserPrincipalName()
    + Build()
}

class "X500DistinguishedName" {
    + Decode()
    + Format()
    - DecodeRawData()
}

class "X509BasicConstraintsExtension" {
    + CopyFrom()
    + Decode()
    + Encode()
    + ToString()
}

class "X509Certificate2" {
    + Reset()
    + GetNameInfo()
    + ToString()
    + ToString()
    + Import()
    + Import()
    + Import()
    + Import()
    + Import()
    + Import()
    + Verify()
}

class "X509Certificate2Collection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + Export()
    + Export()
    - GetKeyIdentifier()
    + Find()
    + GetEnumerator()
    + Import()
    + Import()
    + Import()
    + Import()
    + Insert()
    + Remove()
    + RemoveRange()
    + RemoveRange()
}

class "X509Certificate2Enumerator" {
    + MoveNext()
    + Reset()
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "X509Certificate2ImplMono" {
    + GetNativeAppleCertificate()
    + Clone()
    + GetRawCertData()
    + Equals()
    + GetRSAPrivateKey()
    + GetDSAPrivateKey()
    - ImportPkcs12()
    - ImportPkcs12()
    + Reset()
    + Verify()
}

class "X509CertificateCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + GetHashCode()
    + IndexOf()
    + Insert()
    + Remove()
    - Compare()
}

class "X509CertificateEnumerator" {
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
    + MoveNext()
    + Reset()
}

class "X509CertificateImplCollection" {
    + Add()
    + Clone()
    + Dispose()
    + Dispose()
    + Finalize()
}

class "X509Chain" {
    + ThrowIfContextInvalid()
    + Build()
    + Reset()
    + Dispose()
    + Dispose()
    + Finalize()
}

class "X509ChainElement" {
    - Count()
    - Set()
    + UncompressFlags()
}

class "X509ChainElementCollection" {
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Add()
    + Clear()
    + Contains()
}

class "X509ChainElementEnumerator" {
    + MoveNext()
    + Reset()
}

class "X509ChainImplMono" {
    + AddStatus()
    + Build()
    + Reset()
    - BuildChainFrom()
    - SelectBestFromCollection()
    - FindParent()
    - IsChainComplete()
    - IsSelfIssued()
    - ValidateChain()
    - Process()
    - PrepareForNextCertificate()
    - WrapUp()
    - ProcessCertificateExtensions()
    - IsSignedWith()
    - GetSubjectKeyIdentifier()
    - CheckRevocationOnChain()
    - CheckRevocation()
    - CheckRevocation()
    - FindCrl()
    - ProcessCrlExtensions()
    - ProcessCrlEntryExtensions()
}

class "X509ChainPolicy" {
    + Reset()
}

class "X509EnhancedKeyUsageExtension" {
    + CopyFrom()
    + Decode()
    + Encode()
    + ToString()
}

class "X509Extension" {
    + CopyFrom()
    + FormatUnkownData()
}

class "X509ExtensionCollection" {
    + Add()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "X509ExtensionEnumerator" {
    + MoveNext()
    + Reset()
}

class "X509KeyUsageExtension" {
    + CopyFrom()
    + GetValidFlags()
    + Decode()
    + Encode()
    + ToString()
}

class "X509Store" {
    + Add()
    + AddRange()
    + Close()
    + Dispose()
    + Open()
    + Remove()
    + RemoveRange()
    - Exists()
}

class "X509SubjectKeyIdentifierExtension" {
    + CopyFrom()
    + Decode()
    + Encode()
    + ToString()
}

class "CertificateRequest" {
    + Create()
    + Create()
    + CreateSelfSigned()
    + CreateSigningRequest()
    + CreateSigningRequest()
}

class "CodeTypeReference" {
    - InitializeFromType()
    - Initialize()
    - Initialize()
    - RipOffAssemblyInformationFromTypeName()
}

class "CodeTypeReferenceCollection" {
    + Add()
    + Add()
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeAttributeArgumentCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeAttributeDeclarationCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeCatchClauseCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeCommentStatementCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeDirectiveCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeExpressionCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeNamespaceCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeNamespaceImportCollection" {
    + Add()
    + AddRange()
    + Clear()
    - SyncKeys()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "CodeParameterDeclarationExpressionCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeStatementCollection" {
    + Add()
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeTypeDeclarationCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeTypeMemberCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CodeTypeParameterCollection" {
    + Add()
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "TempFileCollection" {
    - System.IDisposable.Dispose()
    + Dispose()
    + Finalize()
    + AddExtension()
    + AddExtension()
    + AddFile()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
    - EnsureTempNameCreated()
    - KeepFile()
    + Delete()
    + Delete()
    + SafeDelete()
}

class "CodeValidator" {
    + ValidateIdentifiers()
    - ValidateTypeMember()
    - ValidateCodeCompileUnit()
    - ValidateSnippetCompileUnit()
    - ValidateCompileUnitStart()
    - ValidateCompileUnitEnd()
    - ValidateNamespaces()
    - ValidateNamespace()
    - ValidateNamespaceImports()
    - ValidateAttributes()
    - ValidateAttributeArgument()
    - ValidateTypes()
    - ValidateTypeDeclaration()
    - ValidateTypeMembers()
    - ValidateTypeParameters()
    - ValidateTypeParameter()
    - ValidateField()
    - ValidateConstructor()
    - ValidateProperty()
    - ValidateMemberMethod()
    - ValidateTypeConstructor()
    - ValidateMethod()
    - ValidateSnippetMember()
    - ValidateTypeStart()
    - ValidateCommentStatements()
    - ValidateCommentStatement()
    - ValidateComment()
    - ValidateStatement()
    - ValidateStatements()
    - ValidateExpressionStatement()
    - ValidateIterationStatement()
    - ValidateThrowExceptionStatement()
    - ValidateMethodReturnStatement()
    - ValidateConditionStatement()
    - ValidateTryCatchFinallyStatement()
    - ValidateAssignStatement()
    - ValidateAttachEventStatement()
    - ValidateRemoveEventStatement()
    - ValidateLabeledStatement()
    - ValidateVariableDeclarationStatement()
    - ValidateLinePragmaStart()
    - ValidateEvent()
    - ValidateParameters()
    - ValidateSnippetStatement()
    - ValidateExpressionList()
    - ValidateExpression()
    - ValidateArrayCreateExpression()
    - ValidateBaseReferenceExpression()
    - ValidateBinaryOperatorExpression()
    - ValidateCastExpression()
    - ValidateDelegateCreateExpression()
    - ValidateFieldReferenceExpression()
    - ValidateIndexerExpression()
    - ValidateArrayIndexerExpression()
    - ValidateSnippetExpression()
    - ValidateMethodInvokeExpression()
    - ValidateMethodReferenceExpression()
    - ValidateEventReferenceExpression()
    - ValidateDelegateInvokeExpression()
    - ValidateObjectCreateExpression()
    - ValidateParameterDeclarationExpression()
    - ValidateDirectionExpression()
    - ValidatePrimitiveExpression()
    - ValidatePropertyReferenceExpression()
    - ValidatePropertySetValueReferenceExpression()
    - ValidateThisReferenceExpression()
}

class "CompilerError" {
    + ToString()
}

class "CompilerErrorCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    + Remove()
}

class "CompilerInfo" {
    + GetLanguages()
    + GetExtensions()
    + CreateProvider()
    + CreateProvider()
    + CreateDefaultCompilerParameters()
    + GetHashCode()
    + Equals()
    - CloneCompilerParameters()
    - CloneCompilerLanguages()
    - CloneCompilerExtensions()
}

class "ExposedTabStringIndentedTextWriter" {
    + InternalOutputTabs()
}

class "IndentedTextWriter" {
    + Close()
    + Flush()
    + OutputTabs()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + WriteLineNoTabs()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
    + WriteLine()
}

class "CodeDomConfigurationHandler" {
    + InitializeDefault()
    + PostDeserialize()
    + GetRuntimeObject()
}

class "CompilerCollection" {
    + BaseAdd()
    + CreateNewElement()
    + GetCompilerInfoForLanguage()
    + GetCompilerInfoForExtension()
    + GetLanguageFromExtension()
    + Get()
    + Get()
    + GetElementKey()
    + GetKey()
}

class "CompilerProviderOptionsCollection" {
    + CreateNewElement()
    + Get()
    + Get()
    + GetElementKey()
    + GetKey()
}

class "ProcessResultReader" {
    + Read()
}

class "SSPIAuthType" {
    + EnumerateSecurityPackages()
    + AcquireCredentialsHandle()
    + AcquireCredentialsHandle()
    + AcquireDefaultCredential()
    + AcquireCredentialsHandle()
    + AcceptSecurityContext()
    + AcceptSecurityContext()
    + InitializeSecurityContext()
    + InitializeSecurityContext()
    + EncryptMessage()
    + DecryptMessage()
    + MakeSignature()
    + VerifySignature()
    + QueryContextChannelBinding()
    + QueryContextAttributes()
    + SetContextAttributes()
    + QuerySecurityContextToken()
    + CompleteAuthToken()
    + ApplyControlToken()
}

class "SSPISecureChannelType" {
    + EnumerateSecurityPackages()
    + AcquireCredentialsHandle()
    + AcquireCredentialsHandle()
    + AcquireDefaultCredential()
    + AcquireCredentialsHandle()
    + AcceptSecurityContext()
    + AcceptSecurityContext()
    + InitializeSecurityContext()
    + InitializeSecurityContext()
    + EncryptMessage()
    + DecryptMessage()
    + MakeSignature()
    + VerifySignature()
    + QueryContextChannelBinding()
    + QueryContextAttributes()
    + SetContextAttributes()
    + QuerySecurityContextToken()
    + CompleteAuthToken()
    + ApplyControlToken()
}

class "SecurityPackageInfoClass" {
    + ToString()
}

class "ContextAwareResult" {
    - SafeCaptureIdentity()
    - CleanupInternal()
    + StartPostingAsyncOp()
    + StartPostingAsyncOp()
    + FinishPostingAsyncOp()
    + FinishPostingAsyncOp()
    + Cleanup()
    - CaptureOrComplete()
    + Complete()
    - CompleteCallback()
}

class "<>c" {
    + <Complete>b__20_0()
}

class "CallbackClosure" {
    + IsCompatible()
}

class "NetEventSource" {
    - Enter()
    - Exit()
    - Info()
    - ErrorMessage()
    - CriticalFailure()
    - DumpBuffer()
    - Associate()
    - WriteEvent()
    - WriteEvent()
    - WriteEvent()
    - WriteEvent()
    - WriteEvent()
    - WriteEvent()
    + AcquireDefaultCredential()
    + AcquireCredentialsHandle()
    + AcquireCredentialsHandle()
    + InitializeSecurityContext()
    - InitializeSecurityContext()
    + AcceptSecurityContext()
    - AcceptSecurityContext()
    + OperationReturnedSomething()
    + SecurityContextInputBuffer()
    + SecurityContextInputBuffers()
    + EnumerateSecurityPackages()
    + SspiPackageNotFound()
}

class "NTAuthentication" {
    - Initialize()
    + GetContext()
    + CloseContext()
    + VerifySignature()
    + MakeSignature()
    + GetOutgoingBlob()
    + GetOutgoingBlob()
    + GetOutgoingBlob()
    - GetClientSpecifiedSpn()
}

class "TlsStream" {
    + AuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + EndAuthenticateAsClient()
    + BeginWrite()
    + EndWrite()
    + Write()
    + Read()
    + BeginRead()
    + EndRead()
    + Close()
}

class "Base64Stream" {
    + BeginRead()
    + BeginWrite()
    + Close()
    + DecodeBytes()
    + EncodeBytes()
    + EncodeBytes()
    + GetStream()
    + GetEncodedString()
    + EndRead()
    + EndWrite()
    + Flush()
    - FlushInternal()
    + Read()
    + Write()
}

class "ClosableStream" {
    + Close()
}

class "DelegatedStream" {
    + BeginRead()
    + BeginWrite()
    + Close()
    + EndRead()
    + EndWrite()
    + Flush()
    + FlushAsync()
    + Read()
    + ReadAsync()
    + Seek()
    + SetLength()
    + Write()
    + WriteAsync()
}

class "TrackingStringDictionary" {
    + Add()
    + Clear()
    + Remove()
}

class "TrackingValidationObjectDictionary" {
    - PersistValue()
    + InternalGet()
    + InternalSet()
    + Add()
    + Clear()
    + Remove()
}

class "ValidateAndParseValue" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "IPAddress" {
    + TryWriteBytes()
    - WriteIPv6Bytes()
    - WriteIPv4Bytes()
    + GetAddressBytes()
    + ToString()
    + TryFormat()
    + Equals()
    + Equals()
    + GetHashCode()
    + MapToIPv6()
    + MapToIPv4()
}

class "IPEndPoint" {
    + ToString()
    + Serialize()
    + Create()
    + Equals()
    + GetHashCode()
}

class "CommandStream" {
    + Abort()
    + Dispose()
    + InvokeRequestCallback()
    + MarkAsRecoverableFailure()
    + SubmitRequest()
    + ClearState()
    + BuildCommandsList()
    + GenerateException()
    + GenerateException()
    + InitCommandPipeline()
    + CheckContinuePipeline()
    + ContinueCommandPipeline()
    - PostSendCommandProcessing()
    - PostReadCommandProcessing()
    + PipelineCallback()
    + CheckValid()
    - ReceiveCommandResponse()
    - ReceiveCommandResponseCallback()
}

class "PipelineEntry" {
    + HasFlag()
}

class "FtpControlStream" {
    + AbortConnect()
    - QueueOrCreateFtpDataStream()
    + ClearState()
    + PipelineCallback()
    + BuildCommandsList()
    - QueueOrCreateDataConection()
    - FormatAddress()
    - FormatAddressV6()
    - GetContentLengthFrom213Response()
    - GetLastModifiedFrom213Response()
    - TryUpdateResponseUri()
    - TryUpdateContentLength()
    - GetLoginDirectory()
    - GetPortV4()
    - GetPortV6()
    - CreateFtpListenerSocket()
    - GetPortCommandLine()
    - FormatFtpCommand()
    + CreateFtpDataSocket()
    + CheckValid()
    - IsFtpDataStreamWriteable()
}

class "<>c__DisplayClass31_0" {
    + <PipelineCallback>b__0()
}

class "FtpDataStream" {
    + Dispose()
    - System.Net.ICloseEx.CloseEx()
    - CheckError()
    + Seek()
    + Read()
    + Write()
    - AsyncReadCallback()
    + BeginRead()
    + EndRead()
    + BeginWrite()
    + EndWrite()
    + Flush()
    + SetLength()
    + SetSocketTimeoutOption()
}

class "FtpMethodInfo" {
    + HasFlag()
}

class "FtpWebRequest" {
    + GetResponse()
    + BeginGetResponse()
    + EndGetResponse()
    + GetRequestStream()
    + BeginGetRequestStream()
    + EndGetRequestStream()
    - SubmitRequest()
    - TranslateConnectException()
    - CreateConnectionAsync()
    - CreateConnection()
    - TimedSubmitRequestHelper()
    - TimerCallback()
    - AttemptedRecovery()
    - SetException()
    - CheckError()
    + RequestCallback()
    - SyncRequestCallback()
    - AsyncRequestCallback()
    - FinishRequestStage()
    + Abort()
    - EnsureFtpWebResponse()
    + DataStreamClosed()
}

class "<>c" {
    + <get_ClientCertificates>b__114_0()
}

class "FtpWebRequestCreator" {
    + Create()
}

class "FtpWebResponse" {
    + UpdateStatus()
    + GetResponseStream()
    + SetResponseStream()
    + Close()
}

class "NetworkStreamWrapper" {
    + Seek()
    + Read()
    + Write()
    + Dispose()
    + CloseSocket()
    + Close()
    + BeginRead()
    + EndRead()
    + ReadAsync()
    + BeginWrite()
    + EndWrite()
    + WriteAsync()
    + Flush()
    + FlushAsync()
    + SetLength()
    + SetSocketTimeoutOption()
}

class "WebClient" {
    + OnDownloadStringCompleted()
    + OnDownloadDataCompleted()
    + OnDownloadFileCompleted()
    + OnDownloadProgressChanged()
    + OnUploadStringCompleted()
    + OnUploadDataCompleted()
    + OnUploadFileCompleted()
    + OnUploadValuesCompleted()
    + OnUploadProgressChanged()
    + OnOpenReadCompleted()
    + OnOpenWriteCompleted()
    - StartOperation()
    - StartAsyncOperation()
    - EndOperation()
    + GetWebRequest()
    + GetWebResponse()
    + GetWebResponse()
    - GetWebResponseTaskAsync()
    + DownloadData()
    + DownloadData()
    - DownloadDataInternal()
    + DownloadFile()
    + DownloadFile()
    + OpenRead()
    + OpenRead()
    + OpenWrite()
    + OpenWrite()
    + OpenWrite()
    + OpenWrite()
    + UploadData()
    + UploadData()
    + UploadData()
    + UploadData()
    - UploadDataInternal()
    - OpenFileInternal()
    + UploadFile()
    + UploadFile()
    + UploadFile()
    + UploadFile()
    - GetValuesToUpload()
    + UploadValues()
    + UploadValues()
    + UploadValues()
    + UploadValues()
    + UploadString()
    + UploadString()
    + UploadString()
    + UploadString()
    + DownloadString()
    + DownloadString()
    - CopyHeadersTo()
    - GetUri()
    - GetUri()
    - DownloadBits()
    - DownloadBitsAsync()
    - UploadBits()
    - UploadBitsAsync()
    - GetStringUsingEncoding()
    - MapToDefaultMethod()
    - InvokeOperationCompleted()
    + OpenReadAsync()
    + OpenReadAsync()
    + OpenWriteAsync()
    + OpenWriteAsync()
    + OpenWriteAsync()
    - DownloadStringAsyncCallback()
    + DownloadStringAsync()
    + DownloadStringAsync()
    - DownloadDataAsyncCallback()
    + DownloadDataAsync()
    + DownloadDataAsync()
    - DownloadFileAsyncCallback()
    + DownloadFileAsync()
    + DownloadFileAsync()
    + UploadStringAsync()
    + UploadStringAsync()
    + UploadStringAsync()
    + UploadDataAsync()
    + UploadDataAsync()
    + UploadDataAsync()
    + UploadFileAsync()
    + UploadFileAsync()
    + UploadFileAsync()
    + UploadValuesAsync()
    + UploadValuesAsync()
    + UploadValuesAsync()
    + CancelAsync()
    + DownloadStringTaskAsync()
    + DownloadStringTaskAsync()
    + OpenReadTaskAsync()
    + OpenReadTaskAsync()
    + OpenWriteTaskAsync()
    + OpenWriteTaskAsync()
    + OpenWriteTaskAsync()
    + OpenWriteTaskAsync()
    + UploadStringTaskAsync()
    + UploadStringTaskAsync()
    + UploadStringTaskAsync()
    + UploadStringTaskAsync()
    + DownloadDataTaskAsync()
    + DownloadDataTaskAsync()
    + DownloadFileTaskAsync()
    + DownloadFileTaskAsync()
    + UploadDataTaskAsync()
    + UploadDataTaskAsync()
    + UploadDataTaskAsync()
    + UploadDataTaskAsync()
    + UploadFileTaskAsync()
    + UploadFileTaskAsync()
    + UploadFileTaskAsync()
    + UploadFileTaskAsync()
    + UploadValuesTaskAsync()
    + UploadValuesTaskAsync()
    + UploadValuesTaskAsync()
    + UploadValuesTaskAsync()
    - HandleCompletion()
    - PostProgressChanged()
    + OnWriteStreamClosed()
    - <StartAsyncOperation>b__78_0()
    - <StartAsyncOperation>b__78_1()
    - <StartAsyncOperation>b__78_2()
    - <StartAsyncOperation>b__78_3()
    - <StartAsyncOperation>b__78_4()
    - <StartAsyncOperation>b__78_5()
    - <StartAsyncOperation>b__78_6()
    - <StartAsyncOperation>b__78_7()
    - <StartAsyncOperation>b__78_8()
    - <StartAsyncOperation>b__78_9()
    - <StartAsyncOperation>b__78_10()
    - <UploadStringAsync>b__179_0()
}

class "ProgressData" {
    + Reset()
}

class "WebClientWriteStream" {
    + Dispose()
}

class "<>c__DisplayClass164_0" {
    + <OpenReadAsync>b__0()
}

class "<>c__DisplayClass167_0" {
    + <OpenWriteAsync>b__0()
}

class "<>c__DisplayClass182_0" {
    + <UploadDataAsync>b__0()
}

class "<>c__DisplayClass185_0" {
    + <UploadFileAsync>b__0()
}

class "<>c__DisplayClass188_0" {
    + <UploadValuesAsync>b__0()
}

class "<>c__DisplayClass192_0" {
    + <DownloadStringTaskAsync>b__0()
}

class "<>c" {
    + <DownloadStringTaskAsync>b__192_1()
    + <DownloadStringTaskAsync>b__192_2()
    + <OpenReadTaskAsync>b__194_1()
    + <OpenReadTaskAsync>b__194_2()
    + <OpenWriteTaskAsync>b__198_1()
    + <OpenWriteTaskAsync>b__198_2()
    + <UploadStringTaskAsync>b__202_1()
    + <UploadStringTaskAsync>b__202_2()
    + <DownloadDataTaskAsync>b__204_1()
    + <DownloadDataTaskAsync>b__204_2()
    + <DownloadFileTaskAsync>b__206_1()
    + <DownloadFileTaskAsync>b__206_2()
    + <UploadDataTaskAsync>b__210_1()
    + <UploadDataTaskAsync>b__210_2()
    + <UploadFileTaskAsync>b__214_1()
    + <UploadFileTaskAsync>b__214_2()
    + <UploadValuesTaskAsync>b__218_1()
    + <UploadValuesTaskAsync>b__218_2()
}

class "<>c__DisplayClass194_0" {
    + <OpenReadTaskAsync>b__0()
}

class "<>c__DisplayClass198_0" {
    + <OpenWriteTaskAsync>b__0()
}

class "<>c__DisplayClass202_0" {
    + <UploadStringTaskAsync>b__0()
}

class "<>c__DisplayClass204_0" {
    + <DownloadDataTaskAsync>b__0()
}

class "<>c__DisplayClass206_0" {
    + <DownloadFileTaskAsync>b__0()
}

class "<>c__DisplayClass210_0" {
    + <UploadDataTaskAsync>b__0()
}

class "<>c__DisplayClass214_0" {
    + <UploadFileTaskAsync>b__0()
}

class "<>c__DisplayClass218_0" {
    + <UploadValuesTaskAsync>b__0()
}

class "OpenReadCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OpenWriteCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DownloadStringCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DownloadDataCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UploadStringCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UploadDataCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UploadFileCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UploadValuesCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DownloadProgressChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UploadProgressChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WriteStreamClosedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AuthenticationSchemeSelector" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Authorization" {
    + SetComplete()
}

class "CredentialCache" {
    + Add()
    + Add()
    + Remove()
    + Remove()
    + GetCredential()
    + GetCredential()
    + GetEnumerator()
}

class "CredentialEnumerator" {
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "CredentialHostKey" {
    + Match()
    + GetHashCode()
    + Equals()
    + ToString()
}

class "CredentialKey" {
    + Match()
    + IsPrefix()
    + GetHashCode()
    + Equals()
    + ToString()
}

class "DnsEndPoint" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "HttpListenerRequestUriBuilder" {
    - Build()
    - BuildRequestUriUsingCookedPath()
    - BuildRequestUriUsingRawPath()
    - BuildRequestUriUsingRawPath()
    - ParseRawPath()
    - AppendUnicodeCodePointValuePercentEncoded()
    - AddPercentEncodedOctetToRawOctetsList()
    - EmptyDecodeAndAppendRawOctetsList()
    - LogWarning()
}

class "HttpAbortDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HttpContinueDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UnlockConnectionDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "KnownHttpVerb" {
    + Equals()
}

class "SplitWritesState" {
    + GetNextBuffers()
}

class "NetworkCredential" {
    + InternalGetUserName()
    + InternalGetPassword()
    + InternalGetSecurePassword()
    + InternalGetDomain()
    + InternalGetDomainUserName()
    + GetCredential()
    + GetCredential()
}

class "ProtocolViolationException" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
}

class "SocketAddress" {
    + GetIPAddress()
    + GetIPEndPoint()
    + CopyAddressSizeIntoBuffer()
    + GetAddressSizeOffset()
    + SetSize()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "CachedTransportContext" {
    + GetChannelBinding()
}

class "WebException" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
}

class "WebHeaderCollection" {
    - NormalizeCommonHeaders()
    + Add()
    + Add()
    + Set()
    + Set()
    + SetInternal()
    + Remove()
    + Remove()
    + AddWithoutValidate()
    + SetAddVerified()
    + AddInternal()
    + ChangeInternal()
    + RemoveInternal()
    + CheckUpdate()
    - AddInternalNotCommon()
    + ThrowOnRestrictedHeader()
    + Add()
    + Add()
    + Set()
    + SetInternal()
    + Remove()
    + GetValues()
    + ToString()
    + ToString()
    + ToByteArray()
    + OnDeserialization()
    + GetObjectData()
    + ParseHeaders()
    + ParseHeadersStrict()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + Get()
    + GetEnumerator()
    + InternalHasKeys()
    + Get()
    + GetValues()
    + GetKey()
    + Clear()
}

class "CaseInsensitiveAscii" {
    + GetHashCode()
    + Compare()
    - FastGetHashCode()
    + Equals()
}

class "HostHeaderString" {
    - Init()
    - Convert()
    + Copy()
}

class "WebPermissionAttribute" {
    + CreatePermission()
}

class "DelayedRegex" {
    + ToString()
}

class "WebPermission" {
    + AddPermission()
    + AddPermission()
    + AddPermission()
    + AddAsPattern()
    + IsUnrestricted()
    + Copy()
    + IsSubsetOf()
    + Union()
    + Intersect()
    + FromXml()
    + ToXml()
}

class "DesignerWebRequestCreate" {
    + Create()
}

class "WebProxyWrapperOpaque" {
    + GetProxy()
    + IsBypassed()
    + GetProxies()
}

class "<>c__DisplayClass78_0" {
    + <GetRequestStreamAsync>b__1()
}

class "<>c__DisplayClass79_0" {
    + <GetResponseAsync>b__1()
}

class "UrlDecoder" {
    - FlushBytes()
    + AddChar()
    + AddByte()
    + GetString()
}

class "HeaderParser" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BaseLoggingObject" {
    + EnterFunc()
    + LeaveFunc()
    + DumpArrayToConsole()
    + PrintLine()
    + DumpArray()
    + DumpArrayToFile()
    + Flush()
    + Flush()
    + LoggingMonitorTick()
    + Dump()
    + Dump()
    + Dump()
    + Dump()
}

class "ProxyEnumerator" {
    + MoveNext()
    + Reset()
    + Dispose()
}

class "ProxyScriptChain" {
    + GetNextProxy()
    + Abort()
}

class "DirectProxy" {
    + GetNextProxy()
}

class "StaticProxy" {
    + GetNextProxy()
}

class "ScatterGatherBuffers" {
    + GetBuffers()
    + Write()
    - AllocateMemoryChunk()
}

class "Semaphore" {
    + ReleaseSemaphore()
}

class "ServiceNameStore" {
    - AddSingleServiceName()
    + Add()
    + Remove()
    - Contains()
    + Clear()
    - ExtractHostname()
    + BuildSimpleServiceName()
    + BuildServiceNames()
}

class "Callback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TimerQueue" {
    + CreateTimer()
    + Fire()
}

class "InfiniteTimerQueue" {
    + CreateTimer()
}

class "TimerNode" {
    + Cancel()
    + Fire()
}

class "InfiniteTimer" {
    + Cancel()
}

class "EmptyWebProxy" {
    + GetProxy()
    + IsBypassed()
    - System.Net.IAutoWebProxy.GetProxies()
}

class "Cookie" {
    + InternalSetName()
    + Clone()
    + VerifySetDefaults()
    + Equals()
    + GetHashCode()
    + ToString()
    + ToServerString()
}

class "CookieTokenizer" {
    + Extract()
    + FindNext()
    + Next()
    + Reset()
    + TokenFromName()
}

class "CookieParser" {
    + Get()
    + GetServer()
}

class "Comparer" {
    - System.Collections.IComparer.Compare()
}

class "CookieCollection" {
    + Add()
    + Add()
    + CopyTo()
    + CopyTo()
    + TimeStamp()
    + InternalAdd()
    + IndexOf()
    + RemoveAt()
    + GetEnumerator()
}

class "CookieCollectionEnumerator" {
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "CookieContainer" {
    + Add()
    - AddRemoveDomain()
    + Add()
    - AgeCookies()
    - ExpireCollection()
    + Add()
    + IsLocalDomain()
    + Add()
    + Add()
    + CookieCutter()
    + GetCookies()
    + InternalGetCookies()
    - BuildCookieCollectionFromDomainMatches()
    - MergeUpdateCollections()
    + GetCookieHeader()
    + GetCookieHeader()
    + SetCookies()
}

class "PathList" {
    + GetCookiesCount()
    + GetEnumerator()
}

class "PathListComparer" {
    - System.Collections.IComparer.Compare()
}

class "CookieException" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
}

class "FileWebRequest" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    + BeginGetRequestStream()
    + BeginGetResponse()
    - CanGetRequestStream()
    + EndGetRequestStream()
    + EndGetResponse()
    + GetRequestStream()
    + GetResponse()
    + UnblockReader()
    + Abort()
}

class "FileWebRequestCreator" {
    + Create()
}

class "FileWebStream" {
    + Dispose()
    - System.Net.ICloseEx.CloseEx()
    + Read()
    + Write()
    + BeginRead()
    + EndRead()
    + BeginWrite()
    + EndWrite()
    - CheckError()
}

class "FileWebResponse" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    - CheckDisposed()
    + Close()
    - System.Net.ICloseEx.CloseEx()
    + GetResponseStream()
}

class "WebProxy" {
    + CheckForChanges()
    + GetProxy()
    - UpdateRegExList()
    - IsMatchInBypassList()
    - IsLocal()
    - IsLocalInProxyHash()
    + IsBypassed()
    - IsBypassedManual()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    + DeleteScriptEngine()
    + UnsafeUpdateFromRegistry()
    + Update()
    - System.Net.IAutoWebProxy.GetProxies()
    - GetProxyAuto()
    - IsBypassedAuto()
    + GetProxiesAuto()
    + AbortGetProxiesAuto()
    + GetProxyAutoFailover()
}

class "AutoWebProxyScriptEngine" {
    + GetProxies()
    + GetProxies()
    + Close()
    + Abort()
    + CheckForChanges()
    + GetWebProxyData()
    - ReadEnvVariables()
    - InitializeRegistryGlobalProxy()
}

class "ServerCertValidationCallback" {
    + Callback()
    + Invoke()
}

class "BasicClient" {
    + Authenticate()
    + PreAuthenticate()
}

class "BindIPEndPoint" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BufferedReadStream" {
    + ProcessReadAsync()
    + TryReadFromBuffer()
}

class "ChunkedInputStream" {
    + Read()
    + BeginRead()
    - OnRead()
    + EndRead()
    + Close()
}

class "ContentDecodeStream" {
    + ProcessReadAsync()
    + FinishReading()
}

class "DefaultCertificatePolicy" {
    + CheckValidationResult()
}

class "DigestHeaderParser" {
    + Parse()
    - SkipWhitespace()
    - GetKey()
    - GetKeywordAndValue()
}

class "DigestSession" {
    + Parse()
    - HashToHexString()
    - HA1()
    - HA2()
    - Response()
    + Authenticate()
}

class "DigestClient" {
    + Authenticate()
    + PreAuthenticate()
}

class "GetHostByNameCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ResolveCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetHostEntryNameCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetHostEntryIPCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetHostAddressesCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DnsPermission" {
    + Copy()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + FromXml()
    + Union()
    - IsEmpty()
    - Cast()
}

class "DnsPermissionAttribute" {
    + CreatePermission()
}

class "EndPointListener" {
    + RemoveConnection()
    + BindContext()
    + UnbindContext()
    - SearchListener()
    - MatchFromList()
    - AddSpecial()
    - RemoveSpecial()
    - CheckIfRemove()
    + Close()
    + AddPrefix()
    + RemovePrefix()
}

class "EndpointPermission" {
    + Equals()
    + GetHashCode()
    + ToString()
    + IsSubsetOf()
    - IsSubsetOf()
    + Intersect()
    - IntersectHostname()
    - Intersect()
    - ToNumber()
    + Resolve()
    + UndoResolve()
}

class "FixedSizeReadStream" {
    + ProcessReadAsync()
}

class "HttpConnection" {
    - Init()
    - OnTimeout()
    + BeginReadRequest()
    + GetRequestStream()
    + GetResponseStream()
    - OnReadInternal()
    - RemoveConnection()
    - ProcessInput()
    - ReadLine()
    + SendError()
    + SendError()
    - Unbind()
    + Close()
    - CloseSocket()
    + Close()
    - <.ctor>b__24_0()
}

class "HttpListener" {
    + LoadCertificateAndKey()
    + CreateSslStream()
    + Abort()
    + Close()
    - Close()
    - Cleanup()
    + BeginGetContext()
    + EndGetContext()
    + SelectAuthenticationScheme()
    + GetContext()
    + Start()
    + Stop()
    - System.IDisposable.Dispose()
    + GetContextAsync()
    + CheckDisposed()
    - GetContextFromQueue()
    + RegisterContext()
    + UnregisterContext()
    + AddConnection()
    + RemoveConnection()
}

class "ExtendedProtectionSelector" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HttpListenerContext" {
    + ParseAuthentication()
    + ParseBasicAuthentication()
    + AcceptWebSocketAsync()
    + AcceptWebSocketAsync()
    + AcceptWebSocketAsync()
    + AcceptWebSocketAsync()
}

class "HttpListenerPrefixCollection" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
}

class "HttpListenerRequest" {
    + SetRequestLine()
    - CreateQueryString()
    + FinishInitialization()
    + AddHeader()
    + FlushInput()
    + BeginGetClientCertificate()
    + EndGetClientCertificate()
    + GetClientCertificate()
    + GetClientCertificateAsync()
}

class "Context" {
    + GetChannelBinding()
}

class "GCCDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HttpListenerResponse" {
    - System.IDisposable.Dispose()
    + Abort()
    + AddHeader()
    + AppendCookie()
    + AppendHeader()
    - Close()
    + Close()
    + Close()
    + CopyFrom()
    + Redirect()
    - FindCookie()
    + SendHeaders()
    + SetCookie()
}

class "HttpRequestCreator" {
    + Create()
}

class "HttpWebRequest" {
    - ResetAuthorization()
    - SetSpecialHeaders()
    - SetDateHeaderHelper()
    - TryGetHostUri()
    + GetServicePoint()
    + AddRange()
    + AddRange()
    + AddRange()
    + AddRange()
    + AddRange()
    + AddRange()
    + AddRange()
    + AddRange()
    - SendRequest()
    - MyGetRequestStreamAsync()
    + BeginGetRequestStream()
    + EndGetRequestStream()
    + GetRequestStream()
    + GetRequestStream()
    + GetRequestStreamAsync()
    - RunWithTimeout()
    - MyGetResponseAsync()
    - GetResponseFromData()
    - GetWebException()
    + BeginGetResponse()
    + EndGetResponse()
    + EndGetRequestStream()
    + GetResponse()
    + Abort()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    - CheckRequestStarted()
    + DoContinueDelegate()
    - RewriteRedirectToGet()
    - Redirect()
    - GetHeaders()
    - DoPreAuthenticate()
    + GetRequestHeaders()
    - HandleNtlmAuth()
    - CheckAuthorization()
    - GetRewriteHandler()
    - CheckFinalStatus()
    - <RunWithTimeout>b__245_0()
    - <GetRewriteHandler>b__274_0()
}

class "<>c__244`1" {
    + <RunWithTimeoutWorker>b__244_0()
}

class "HttpWebResponse" {
    + GetResponseHeader()
    + GetResponseStream()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    + Close()
    - System.IDisposable.Dispose()
    + Dispose()
    - CheckDisposed()
    - FillCookies()
}

class "ListenerPrefix" {
    + ToString()
    + Equals()
    + GetHashCode()
    - Parse()
}

class "MonoChunkParser" {
    + WriteAndReadBack()
    + Read()
    - ReadFromChunks()
    + Write()
    - InternalWrite()
    - ReadBody()
    - GetChunkSize()
    - ReadCRLF()
    - ReadTrailer()
}

class "Chunk" {
    + Read()
}

class "MonoChunkStream" {
    + ProcessReadAsync()
    + FinishReading()
    - <>n__0()
}

class "NetConfig" {
    - System.ICloneable.Clone()
}

class "NtlmClient" {
    + Authenticate()
    + PreAuthenticate()
}

class "RequestStream" {
    + Close()
    + Flush()
    - FillFromBuffer()
    + Read()
    + BeginRead()
    + EndRead()
    + Seek()
    + SetLength()
    + Write()
    + BeginWrite()
    + EndWrite()
}

class "ResponseStream" {
    + Close()
    - GetHeaders()
    + Flush()
    + InternalWrite()
    + Write()
    + BeginWrite()
    + EndWrite()
    + Read()
    + BeginRead()
    + EndRead()
    + Seek()
    + SetLength()
}

class "ServicePoint" {
    + SetTcpKeepAlive()
    + KeepAliveSetup()
    + SetVersion()
    + SendRequest()
    + CloseConnectionGroup()
    + FreeServicePoint()
    + UpdateServerCertificate()
    + UpdateClientCertificate()
    + CallEndPointDelegate()
}

class "SPKey" {
    + GetHashCode()
    + Equals()
}

class "ServicePointScheduler" {
    - Debug()
    + Run()
    - RunScheduler()
    - Cleanup()
    - RunSchedulerIteration()
    - OperationCompleted()
    - CloseIdleConnection()
    - SchedulerIteration()
    - RemoveOperation()
    - RemoveIdleConnection()
    - FinalCleanup()
    + SendRequest()
    + CloseConnectionGroup()
    - GetConnectionGroup()
    - OnConnectionCreated()
    - OnConnectionClosed()
    - <Run>b__31_0()
}

class "ConnectionGroup" {
    + IsEmpty()
    + RemoveConnection()
    + Cleanup()
    + Close()
    + EnqueueOperation()
    + GetNextOperation()
    + FindIdleConnection()
    + CreateOrReuseConnection()
}

class "<>c" {
    + <Set>b__4_0()
}

class "SocketPermission" {
    + AddPermission()
    + Copy()
    + Intersect()
    - IntersectEmpty()
    - Intersect()
    + IsSubsetOf()
    - IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    - ToXml()
    + FromXml()
    - FromXml()
    + Union()
}

class "SocketPermissionAttribute" {
    + CreatePermission()
    + AlreadySet()
}

class "WebCompletionSource`1" {
    + TrySetCompleted()
    + TrySetCompleted()
    + TrySetCanceled()
    + TrySetCanceled()
    + TrySetException()
    + ThrowOnError()
    + WaitForCompletion()
}

class "WebConnection" {
    - CanReuse()
    - CheckReusable()
    - Connect()
    - CreateStream()
    + InitConnection()
    + CanReuseConnection()
    - PrepareSharingNtlm()
    - Reset()
    - Close()
    - CloseSocket()
    + StartOperation()
    + Continue()
    - Dispose()
    + Dispose()
    - ResetNtlm()
}

class "<>c" {
    + <Connect>b__16_0()
    + <Connect>b__16_1()
}

class "WebConnectionTunnel" {
    + Initialize()
    - ReadHeaders()
    - FlushContents()
}

class "WebOperation" {
    + Abort()
    + Close()
    - SetCanceled()
    - SetError()
    - SetDisposed()
    + CheckDisposed()
    + ThrowIfDisposed()
    + ThrowIfDisposed()
    + ThrowIfClosedOrDisposed()
    + ThrowIfClosedOrDisposed()
    - CheckThrowDisposed()
    + RegisterRequest()
    + SetPriorityRequest()
    + GetRequestStream()
    + GetRequestStreamInternal()
    + WaitUntilRequestWritten()
    + GetResponseStream()
    + Run()
    + CompleteRequestWritten()
    + Finish()
    - <RegisterRequest>b__48_0()
}

class "WebRequestStream" {
    + GetWriteBuffer()
    - FinishWriting()
    + WriteAsync()
    - WriteAsyncInner()
    - ProcessWrite()
    - CheckWriteOverflow()
    + Initialize()
    - SetHeadersAsync()
    + WriteRequestAsync()
    - WriteChunkTrailer_inner()
    - WriteChunkTrailer()
    + KillBuffer()
    + ReadAsync()
    + TryReadFromBufferedContent()
    + Close_internal()
}

class "WebResponseStream" {
    + ReadAsync()
    - ProcessRead()
    + TryReadFromBufferedContent()
    - CheckAuthHeader()
    - Initialize()
    - ReadAllAsyncInner()
    + ReadAllAsync()
    + WriteAsync()
    + Close_internal()
    - GetReadException()
    + InitReadAsync()
    - GetResponse()
}

class "<>c__DisplayClass41_0" {
    + <ProcessRead>b__0()
    + <ProcessRead>b__1()
    + <ProcessRead>b__2()
}

class "GatewayIPAddressInformationCollection" {
    + CopyTo()
    + Add()
    + InternalAdd()
    + Contains()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
    + Clear()
}

class "IPAddressCollection" {
    + CopyTo()
    + Add()
    + InternalAdd()
    + Contains()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + Remove()
    + Clear()
}

class "IPAddressInformationCollection" {
    + CopyTo()
    + Add()
    + InternalAdd()
    + Contains()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + Remove()
    + Clear()
}

class "MulticastIPAddressInformationCollection" {
    + CopyTo()
    + Add()
    + InternalAdd()
    + Contains()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + Remove()
    + Clear()
}

class "NetworkAddressChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NetworkAvailabilityChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NetworkInformationPermissionAttribute" {
    + CreatePermission()
}

class "NetworkInformationPermission" {
    + AddPermission()
    + IsUnrestricted()
    + Copy()
    + Union()
    + Intersect()
    + IsSubsetOf()
    + FromXml()
    + ToXml()
}

class "PhysicalAddress" {
    + GetHashCode()
    + Equals()
    + ToString()
    + GetAddressBytes()
}

class "PingReply" {
    - GetIPStatus()
}

class "UnicastIPAddressInformationCollection" {
    + CopyTo()
    + Add()
    + InternalAdd()
    + Contains()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    + Remove()
    + Clear()
}

class "MacNetworkChange" {
    - LoadRunLoopMode()
    + Dispose()
}

class "SCNetworkReachabilityCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LinuxNetworkChange" {
    + Dispose()
    - EnsureSocket()
    - MaybeCloseSocket()
    - GetAvailability()
    - OnAvailabilityChanged()
    - OnAddressChanged()
    - OnEventDue()
    - QueueEvent()
    - OnDataAvailable()
    - Register()
    - Register()
    - Unregister()
    - Unregister()
}

class "Ping" {
    - System.IDisposable.Dispose()
    + OnPingCompleted()
    + Send()
    + Send()
    + Send()
    + Send()
    + Send()
    + Send()
    + Send()
    + Send()
    - SendPrivileged()
    - SendUnprivileged()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsyncCancel()
    - BuildPingArgs()
    + SendPingAsync()
    + SendPingAsync()
    + SendPingAsync()
    + SendPingAsync()
    + SendPingAsync()
    + SendPingAsync()
    + SendPingAsync()
    + SendPingAsync()
}

class "IcmpMessage" {
    + GetBytes()
}

class "<>c__DisplayClass39_0" {
    + <SendAsync>b__0()
    + <SendAsync>b__1()
}

class "<>c__DisplayClass50_0" {
    + <SendPingAsync>b__0()
    + <SendPingAsync>b__1()
}

class "PingCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Win32IPAddressCollection" {
    - AddSubsequentlyString()
}

class "Win32IPGlobalProperties" {
    - FillTcpTable()
    - IsListenerState()
    + GetActiveTcpConnections()
    + GetActiveTcpListeners()
    + GetActiveUdpListeners()
    + GetIcmpV4Statistics()
    + GetIcmpV6Statistics()
    + GetIPv4GlobalStatistics()
    + GetIPv6GlobalStatistics()
    + GetTcpIPv4Statistics()
    + GetTcpIPv6Statistics()
    + GetUdpIPv4Statistics()
    + GetUdpIPv6Statistics()
}

class "Win32IPInterfaceProperties2" {
    + GetIPv4Properties()
    + GetIPv6Properties()
}

class "Win32NetworkInterfaceAPI" {
    + GetAllNetworkInterfaces()
    + GetLoopbackInterfaceIndex()
    + GetNetMask()
}

class "Win32NetworkInterface2" {
    + GetIPProperties()
    + GetIPv4Statistics()
    + GetPhysicalAddress()
    + Supports()
}

class "AuthenticationModuleElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "AuthenticationModulesSection" {
    + PostDeserialize()
    + InitializeDefault()
}

class "BypassElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "ConnectionManagementElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "ConnectionManagementData" {
    + Add()
    + Add()
    + Remove()
    + Clear()
    + GetMaxConnections()
}

class "ConnectionManagementHandler" {
    + Create()
}

class "DefaultProxyHandler" {
    + Create()
}

class "DefaultProxySection" {
    + PostDeserialize()
    + Reset()
}

class "FtpCachePolicyElement" {
    + DeserializeElement()
    + Reset()
}

class "HttpCachePolicyElement" {
    + DeserializeElement()
    + Reset()
}

class "HttpWebRequestElement" {
    + PostDeserialize()
}

class "NetAuthenticationModuleHandler" {
    + Create()
}

class "NetConfigurationHandler" {
    + Create()
}

class "RequestCachingSection" {
    + PostDeserialize()
    + DeserializeElement()
}

class "ServicePointManagerElement" {
    + PostDeserialize()
}

class "SmtpNetworkElement" {
    + PostDeserialize()
}

class "SocketElement" {
    + PostDeserialize()
}

class "WebProxyScriptElement" {
    + PostDeserialize()
}

class "WebRequestModuleElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "WebRequestModuleHandler" {
    + Create()
}

class "WebRequestModulesSection" {
    + PostDeserialize()
    + InitializeDefault()
}

class "RequestCacheEntry" {
    + ToString()
}

class "RequestCacheValidator" {
    + CreateValidator()
}

class "RequestCachePolicy" {
    + ToString()
}

class "HttpRequestCachePolicy" {
    + ToString()
}

class "NetworkStream" {
    + Seek()
    + Read()
    + Read()
    + ReadByte()
    + Write()
    + Write()
    + WriteByte()
    + Close()
    + Dispose()
    + Finalize()
    + BeginRead()
    + EndRead()
    + BeginWrite()
    + EndWrite()
    + ReadAsync()
    + ReadAsync()
    + WriteAsync()
    + WriteAsync()
    + Flush()
    + FlushAsync()
    + SetLength()
    + SetSocketTimeoutOption()
}

class "Socket" {
    + AcceptAsync()
    - AcceptAsyncApm()
    + ConnectAsync()
    + ConnectAsync()
    + ConnectAsync()
    + ConnectAsync()
    + ReceiveAsync()
    + ReceiveAsync()
    - ReceiveAsyncApm()
    + ReceiveAsync()
    - ReceiveAsyncApm()
    + ReceiveFromAsync()
    + ReceiveMessageFromAsync()
    + SendAsync()
    + SendAsync()
    + SendAsyncForNetworkStream()
    - SendAsyncApm()
    + SendAsync()
    - SendAsyncApm()
    + SendToAsync()
    - GetTaskForSendReceive()
    - RentSocketAsyncEventArgs()
    - ReturnSocketAsyncEventArgs()
    - ReturnSocketAsyncEventArgs()
    - DisposeCachedTaskSocketAsyncEventArgs()
    + CanTryAddressFamily()
    + Connect()
    + Send()
    + Send()
    + Send()
    + Send()
    + Send()
    + SendFile()
    + Send()
    + SendTo()
    + SendTo()
    + SendTo()
    + Receive()
    + Receive()
    + Receive()
    + Receive()
    + Receive()
    + Receive()
    + ReceiveFrom()
    + ReceiveFrom()
    + ReceiveFrom()
    + IOControl()
    + SetIPProtectionLevel()
    + BeginSendFile()
    + BeginConnect()
    + BeginSend()
    + BeginSend()
    + EndSend()
    + BeginReceive()
    + BeginReceive()
    + EndReceive()
    + BeginAccept()
    + EndAccept()
    + Dispose()
    + Finalize()
    + InternalShutdown()
    + UnsafeBeginConnect()
    + UnsafeBeginSend()
    + UnsafeBeginReceive()
    + BeginMultipleSend()
    + UnsafeBeginMultipleSend()
    + EndMultipleSend()
    + MultipleSend()
    + SetSocketOption()
    - SocketDefaults()
    + Poll()
    + Accept()
    + Accept()
    + AcceptAsync()
    + BeginAccept()
    + BeginAccept()
    + EndAccept()
    + EndAccept()
    + Bind()
    + Listen()
    + Connect()
    + Connect()
    + Connect()
    + ConnectAsync()
    + BeginConnect()
    + BeginConnect()
    + BeginConnect()
    + EndConnect()
    - GetCheckedIPs()
    + Disconnect()
    + DisconnectAsync()
    + BeginDisconnect()
    + EndDisconnect()
    + Receive()
    - Receive()
    + Receive()
    + Receive()
    + Send()
    + Receive()
    + Receive()
    + ReceiveAsync()
    + BeginReceive()
    + BeginReceive()
    + EndReceive()
    + ReceiveFrom()
    + ReceiveFrom()
    - ReceiveFrom()
    + ReceiveFromAsync()
    + BeginReceiveFrom()
    + EndReceiveFrom()
    - EndReceiveFrom_internal()
    + ReceiveMessageFrom()
    + ReceiveMessageFromAsync()
    + BeginReceiveMessageFrom()
    + EndReceiveMessageFrom()
    + Send()
    + Send()
    + Send()
    + Send()
    + SendAsync()
    + BeginSend()
    + BeginSend()
    + EndSend()
    + SendTo()
    - SendTo()
    + SendToAsync()
    + BeginSendTo()
    + EndSendTo()
    + SendFile()
    + BeginSendFile()
    + EndSendFile()
    + SendPacketsAsync()
    + DuplicateAndClose()
    + GetSocketOption()
    + GetSocketOption()
    + GetSocketOption()
    + SetSocketOption()
    + SetSocketOption()
    + SetSocketOption()
    + SetSocketOption()
    + IOControl()
    + Close()
    + Close()
    + Shutdown()
    + Dispose()
    - Linger()
    - ThrowIfDisposedAndClosed()
    - ThrowIfDisposedAndClosed()
    - ThrowIfBufferNull()
    - ThrowIfBufferOutOfRange()
    - ThrowIfUdp()
    - ValidateEndIAsyncResult()
    - QueueIOSelectorJob()
    - InitSocketAsyncEventArgs()
    - SocketOperationToSocketAsyncOperation()
    - RemapIPEndPoint()
    + ReplaceHandleIfNecessaryAfterFailedConnect()
}

class "<>c" {
    + <OnCompleted>b__14_0()
    + <InvokeContinuation>b__20_0()
    + <.cctor>b__27_0()
    + <.cctor>b__27_1()
}

class "SendFileHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <AcceptAsync>b__7_0()
    + <AcceptAsyncApm>b__8_0()
    + <ConnectAsync>b__9_0()
    + <ConnectAsync>b__10_0()
    + <ConnectAsync>b__11_0()
    + <ConnectAsync>b__12_0()
    + <ReceiveAsync>b__14_0()
    + <ReceiveAsync>b__14_1()
    + <ReceiveAsyncApm>b__15_0()
    + <ReceiveAsyncApm>b__15_1()
    + <ReceiveAsyncApm>b__17_0()
    + <ReceiveFromAsync>b__18_0()
    + <ReceiveMessageFromAsync>b__19_0()
    + <SendAsync>b__21_0()
    + <SendAsync>b__21_1()
    + <SendAsyncForNetworkStream>b__22_0()
    + <SendAsyncForNetworkStream>b__22_1()
    + <SendAsyncApm>b__23_0()
    + <SendAsyncApm>b__23_1()
    + <SendAsyncApm>b__25_0()
    + <SendToAsync>b__26_0()
    + <RentSocketAsyncEventArgs>b__34_0()
    + <SendAsync>b__295_0()
    + <BeginSend>b__297_0()
    + <SendToAsync>b__308_0()
    + <BeginSendTo>b__310_0()
    + <.cctor>b__367_0()
    + <.cctor>b__367_1()
    + <.cctor>b__367_2()
    + <.cctor>b__367_3()
    + <.cctor>b__367_4()
    + <.cctor>b__367_5()
    + <.cctor>b__367_6()
    + <.cctor>b__367_7()
    + <.cctor>b__367_8()
    + <.cctor>b__367_9()
    + <.cctor>b__367_10()
    + <.cctor>b__367_11()
    + <.cctor>b__367_12()
    + <.cctor>b__367_13()
    + <.cctor>b__367_14()
    + <.cctor>b__367_15()
    + <.cctor>b__367_16()
    + <.cctor>b__367_17()
}

class "<>c__DisplayClass240_0" {
    + <BeginConnect>b__0()
}

class "<>c__DisplayClass298_0" {
    + <BeginSendCallback>b__0()
}

class "<>c__DisplayClass311_0" {
    + <BeginSendToCallback>b__0()
}

class "<>c__DisplayClass316_0" {
    + <BeginSendFile>b__0()
}

class "<>c__DisplayClass355_0" {
    + <QueueIOSelectorJob>b__0()
}

class "SendPacketsElement" {
    - Initialize()
}

class "TcpClient" {
    + Connect()
    + Connect()
    + Connect()
    + Connect()
    + BeginConnect()
    + BeginConnect()
    + BeginConnect()
    + EndConnect()
    + ConnectAsync()
    + ConnectAsync()
    + ConnectAsync()
    + GetStream()
    + Close()
    + Dispose()
    + Dispose()
    + Finalize()
    - initialize()
    - numericOption()
}

class "TcpListener" {
    + AllowNatTraversal()
    + Start()
    + Start()
    + Stop()
    + Pending()
    + AcceptSocket()
    + AcceptTcpClient()
    + BeginAcceptSocket()
    + EndAcceptSocket()
    + BeginAcceptTcpClient()
    + EndAcceptTcpClient()
    + AcceptSocketAsync()
    + AcceptTcpClientAsync()
}

class "UdpClient" {
    + AllowNatTraversal()
    + Close()
    - FreeResources()
    + Dispose()
    + Dispose()
    + Connect()
    + Connect()
    + Connect()
    - CheckForBroadcast()
    + Send()
    + Send()
    + Send()
    + BeginSend()
    + BeginSend()
    + BeginSend()
    + EndSend()
    + Receive()
    + BeginReceive()
    + EndReceive()
    + JoinMulticastGroup()
    + JoinMulticastGroup()
    + JoinMulticastGroup()
    + JoinMulticastGroup()
    + DropMulticastGroup()
    + DropMulticastGroup()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + ReceiveAsync()
    - createClientSocket()
    - <ReceiveAsync>b__65_0()
    - <ReceiveAsync>b__65_1()
}

class "<>c__DisplayClass64_0" {
    + <SendAsync>b__0()
}

class "SafeSocketHandle" {
    + ReleaseHandle()
    + RegisterForBlockingSyscall()
    + UnRegisterForBlockingSyscall()
}

class "<>c" {
    + <Complete>b__27_0()
}

class "<>c" {
    + <AcceptAsync>b__0_0()
    + <AcceptAsync>b__0_1()
    + <AcceptAsync>b__1_0()
    + <AcceptAsync>b__1_1()
    + <ConnectAsync>b__2_0()
    + <ConnectAsync>b__2_1()
    + <ConnectAsync>b__3_0()
    + <ConnectAsync>b__3_1()
    + <ConnectAsync>b__4_0()
    + <ConnectAsync>b__4_1()
    + <ConnectAsync>b__5_0()
    + <ConnectAsync>b__5_1()
    + <ReceiveAsync>b__6_0()
    + <ReceiveAsync>b__6_1()
    + <ReceiveAsync>b__7_0()
    + <ReceiveAsync>b__7_1()
    + <ReceiveFromAsync>b__8_0()
    + <ReceiveFromAsync>b__8_1()
    + <ReceiveMessageFromAsync>b__9_0()
    + <ReceiveMessageFromAsync>b__9_1()
    + <SendAsync>b__10_0()
    + <SendAsync>b__10_1()
    + <SendAsync>b__11_0()
    + <SendAsync>b__11_1()
    + <SendToAsync>b__12_0()
    + <SendToAsync>b__12_1()
}

class "<>c__DisplayClass14_0" {
    + <ReceiveAsync>b__0()
}

class "ManagedWebSocket" {
    + Dispose()
    - DisposeCore()
    + SendAsync()
    - SendPrivateAsync()
    + ReceiveAsync()
    + CloseAsync()
    + CloseOutputAsync()
    + Abort()
    - SendFrameAsync()
    - SendFrameLockAcquiredNonCancelableAsync()
    - WaitForWriteTaskAsync()
    - SendFrameFallbackAsync()
    - WriteFrameToSendBuffer()
    - SendKeepAliveFrameAsync()
    - ReceiveAsyncPrivate()
    - HandleReceivedCloseAsync()
    - WaitForServerToCloseConnectionAsync()
    - HandleReceivedPingPongAsync()
    - CloseWithReceiveErrorAndThrowAsync()
    - TryParseMessageHeaderFromReceiveBuffer()
    - CloseAsyncPrivate()
    - SendCloseFrameAsync()
    - ConsumeFromBuffer()
    - EnsureBufferContainsAsync()
    - ThrowIfEOFUnexpected()
    - AllocateSendBuffer()
    - ReleaseSendBuffer()
    - ThrowIfOperationInProgress()
    - ThrowOperationInProgress()
    - ValidateAndReceiveAsync()
}

class "<>c" {
    + <.ctor>b__36_0()
    + <.ctor>b__36_1()
    + <SendFrameFallbackAsync>b__56_0()
    + <SendKeepAliveFrameAsync>b__58_0()
    + <WaitForServerToCloseConnectionAsync>b__63_0()
}

class "<>c__61`2" {
    + <ReceiveAsyncPrivate>b__61_0()
}

class "ClientWebSocket" {
    + ConnectAsync()
    - ConnectAsyncCore()
    + SendAsync()
    + SendAsync()
    + ReceiveAsync()
    + ReceiveAsync()
    + CloseAsync()
    + CloseOutputAsync()
    + Abort()
    + Dispose()
    - ThrowIfNotConnected()
}

class "DefaultWebProxy" {
    + GetProxy()
    + IsBypassed()
}

class "ClientWebSocketOptions" {
    + SetRequestHeader()
    + AddSubProtocol()
    + SetBuffer()
    + SetBuffer()
    + SetToReadOnly()
    - ThrowIfReadOnly()
}

class "WebSocketHandle" {
    + Dispose()
    + Abort()
    + SendAsync()
    + SendAsync()
    + ReceiveAsync()
    + ReceiveAsync()
    + CloseAsync()
    + CloseOutputAsync()
    + ConnectAsyncCore()
    - ConnectSocketAsync()
    - ParseAndValidateConnectResponseAsync()
}

class "<>c" {
    + <ConnectAsyncCore>b__26_0()
    + <ConnectSocketAsync>b__27_0()
    + <ConnectSocketAsync>b__27_1()
}

class "<>c__DisplayClass30_0" {
    + <ParseAndValidateConnectResponseAsync>b__0()
}

class "WebSocketException" {
    + GetObjectData()
    - SetErrorCodeOnError()
}

class "ContentDisposition" {
    + GetDateParameter()
    + Set()
    + PersistIfNeeded()
    + ToString()
    + Encode()
    + Equals()
    + GetHashCode()
    - ParseValue()
}

class "<>c" {
    + <.cctor>b__49_0()
    + <.cctor>b__49_1()
}

class "ContentType" {
    + Set()
    + PersistIfNeeded()
    + ToString()
    + Encode()
    + Equals()
    + GetHashCode()
    - ParseValue()
}

class "EightBitStream" {
    + BeginWrite()
    + EndWrite()
    + Write()
    - EncodeLines()
    + GetStream()
    + DecodeBytes()
    + EncodeBytes()
    + GetEncodedString()
}

class "EncodedStreamFactory" {
    + GetEncoder()
    + GetEncoderForHeader()
    + CreateHeader()
    + CreateFooter()
}

class "HeaderCollection" {
    + Remove()
    + Get()
    + GetValues()
    + InternalRemove()
    + InternalSet()
    + InternalAdd()
    + Set()
    + Add()
}

class "MimeBasePart" {
    + PrepareHeaders()
    + Send()
    + BeginSend()
    + EndSend()
}

class "MimeMultiPart" {
    - SetType()
    + Complete()
    + MimeWriterCloseCallback()
    - MimeWriterCloseCallbackHandler()
    + MimePartSentCallback()
    - MimePartSentCallbackHandler()
    + ContentStreamCallback()
    - ContentStreamCallbackHandler()
    + BeginSend()
    + Send()
    + GetNextBoundary()
}

class "MimePart" {
    + Dispose()
    + SetContent()
    + SetContent()
    + SetContent()
    + Complete()
    + ReadCallback()
    + ReadCallbackHandler()
    + WriteCallback()
    + WriteCallbackHandler()
    + GetEncodedStream()
    + ContentStreamCallbackHandler()
    + ContentStreamCallback()
    + BeginSend()
    + Send()
    + ResetStream()
}

class "MimeWriter" {
    + WriteHeaders()
    + BeginClose()
    + EndClose()
    + Close()
    - Close()
    + OnClose()
    + CheckBoundary()
}

class "QEncodedStream" {
    + BeginWrite()
    + Close()
    + DecodeBytes()
    + EncodeBytes()
    + GetStream()
    + GetEncodedString()
    + EndWrite()
    + Flush()
    - FlushInternal()
    + Write()
}

class "QuotedPrintableStream" {
    + BeginWrite()
    + Close()
    + DecodeBytes()
    + EncodeBytes()
    + GetStream()
    + GetEncodedString()
    + EndWrite()
    + Flush()
    - FlushInternal()
    + Write()
}

class "SmtpDateTime" {
    + ToString()
    + ValidateAndGetTimeZoneOffsetValues()
    + ValidateTimeZoneShortHandValue()
    + FormatDate()
    + ParseValue()
    + TryParseTimeZoneString()
    + ValidateAndGetSanitizedTimeSpan()
    + TimeSpanToOffset()
}

class "WriteStateInfoBase" {
    - EnsureSpaceInBuffer()
    + Append()
    + Append()
    + AppendCRLF()
    + AppendHeader()
    + AppendFooter()
    + Reset()
    + BufferFlushed()
}

class "BufferBuilder" {
    - EnsureBuffer()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + Append()
    + GetBuffer()
    + Reset()
}

class "MailAddress" {
    - GetUser()
    - GetHost()
    - GetAddress()
    + GetSmtpAddress()
    + ToString()
    + Equals()
    + GetHashCode()
    + Encode()
}

class "MailAddressCollection" {
    + Add()
    + SetItem()
    + InsertItem()
    + ParseValue()
    + ToString()
    + Encode()
}

class "AlternateView" {
    + Dispose()
}

class "AlternateViewCollection" {
    + Dispose()
    + ClearItems()
    + InsertItem()
    + RemoveItem()
    + SetItem()
}

class "Attachment" {
    - InitName()
}

class "AttachmentCollection" {
    + Dispose()
    + ClearItems()
    + InsertItem()
    + RemoveItem()
    + SetItem()
}

class "LinkedResourceCollection" {
    + Dispose()
    - Dispose()
    + ClearItems()
    + InsertItem()
    + RemoveItem()
    + SetItem()
}

class "MailMessage" {
    + Dispose()
    + Dispose()
    - GuessEncoding()
}

class "SendCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SmtpClient" {
    + Dispose()
    + Dispose()
    - CheckState()
    - EncodeSubjectRFC2047()
    - EncodeBody()
    - EncodeBody()
    - EndSection()
    - GenerateBoundary()
    - IsError()
    + OnSendCompleted()
    - CheckCancellation()
    - Read()
    - ResetExtensions()
    - ParseExtensions()
    + Send()
    - SendInternal()
    - SendToFile()
    - SendCore()
    + Send()
    + SendMailAsync()
    + SendMailAsync()
    - SendDot()
    - SendData()
    + SendAsync()
    + SendAsync()
    + SendAsyncCancel()
    - AddPriorityHeader()
    - SendSimpleBody()
    - SendBodylessSingleAlternate()
    - SendWithoutAttachments()
    - SendWithAttachments()
    - SendBodyWithAlternateViews()
    - SendLinkedResources()
    - SendAttachments()
    - SendCommand()
    - SendHeader()
    - StartSection()
    - StartSection()
    - StartSection()
    - ToQuotedPrintable()
    - ToQuotedPrintable()
    - InitiateSecureConnection()
    - Authenticate()
    - CheckStatus()
    - ThrowIfError()
    - Authenticate()
}

class "<>c__DisplayClass85_0" {
    + <SendMailAsync>b__0()
}

class "<>c__DisplayClass90_0" {
    + <SendAsync>b__0()
    + <SendAsync>b__1()
}

class "CCredentialsByHost" {
    + GetCredential()
}

class "SmtpException" {
    + GetObjectData()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "SmtpFailedRecipientException" {
    + GetObjectData()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "SmtpFailedRecipientsException" {
    + GetObjectData()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "SmtpPermission" {
    + AddPermission()
    + Copy()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + FromXml()
    + Union()
    - IsEmpty()
    - Cast()
}

class "SmtpPermissionAttribute" {
    - GetSmtpAccess()
    + CreatePermission()
}

class "SafeSspiAuthDataHandle" {
    + ReleaseHandle()
}

class "SafeFreeContextBuffer_SECURITY" {
    + ReleaseHandle()
}

class "SafeFreeCertContext" {
    + Set()
    + ReleaseHandle()
}

class "SafeCredentialReference" {
    + ReleaseHandle()
}

class "SafeFreeCredential_SECURITY" {
    + ReleaseHandle()
}

class "SafeDeleteContext_SECURITY" {
    + ReleaseHandle()
}

class "SafeFreeContextBufferChannelBinding_SECURITY" {
    + ReleaseHandle()
}

class "SecurityContextTokenHandle" {
    + DangerousGetHandle()
    + ReleaseHandle()
}

class "LocalCertificateSelectionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NegotiateStream" {
    + BeginAuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + BeginRead()
    + BeginAuthenticateAsServer()
    + BeginAuthenticateAsServer()
    + BeginAuthenticateAsServer()
    + BeginAuthenticateAsServer()
    + BeginWrite()
    + AuthenticateAsClient()
    + AuthenticateAsClient()
    + AuthenticateAsClient()
    + AuthenticateAsClient()
    + AuthenticateAsClient()
    + AuthenticateAsServer()
    + AuthenticateAsServer()
    + AuthenticateAsServer()
    + AuthenticateAsServer()
    + Dispose()
    + EndAuthenticateAsClient()
    + EndRead()
    + EndAuthenticateAsServer()
    + EndWrite()
    + Flush()
    + Read()
    + Seek()
    + SetLength()
    + Write()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsServerAsync()
    + AuthenticateAsServerAsync()
    + AuthenticateAsServerAsync()
    + AuthenticateAsServerAsync()
}

class "<>c__DisplayClass69_0" {
    + <AuthenticateAsClientAsync>b__0()
}

class "RemoteCertificateValidationCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ServerCertificateSelectionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RemoteCertValidationCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LocalCertSelectionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ServerCertSelectionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SslStream" {
    - SetAndVerifyValidationCallback()
    - SetAndVerifySelectionCallback()
    - CreateAuthenticationOptions()
    + AuthenticateAsClient()
    + AuthenticateAsClient()
    + AuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + BeginAuthenticateAsClient()
    + EndAuthenticateAsClient()
    + AuthenticateAsServer()
    + AuthenticateAsServer()
    + AuthenticateAsServer()
    + BeginAuthenticateAsServer()
    + BeginAuthenticateAsServer()
    + BeginAuthenticateAsServer()
    + EndAuthenticateAsServer()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsClientAsync()
    + AuthenticateAsServerAsync()
    + AuthenticateAsServerAsync()
    + AuthenticateAsServerAsync()
    + AuthenticateAsServerAsync()
    + ShutdownAsync()
    + SetLength()
    + Seek()
    + FlushAsync()
    + Flush()
    - CheckDisposed()
    + Dispose()
    + Read()
    + Write()
    + Write()
    + ReadAsync()
    + WriteAsync()
    + BeginRead()
    + EndRead()
    + BeginWrite()
    + EndWrite()
}

class "<>c__DisplayClass21_0" {
    + <SetAndVerifySelectionCallback>b__0()
}

class "<>c__DisplayClass22_0" {
    + <CreateAuthenticationOptions>b__0()
}

class "DefaultValueAttribute" {
    + Equals()
    + GetHashCode()
    + SetValue()
}

class "EditorBrowsableAttribute" {
    + Equals()
    + GetHashCode()
}

class "BackgroundWorker" {
    - AsyncOperationCompleted()
    + CancelAsync()
    + OnDoWork()
    + OnRunWorkerCompleted()
    + OnProgressChanged()
    - ProgressReporter()
    + ReportProgress()
    + ReportProgress()
    + RunWorkerAsync()
    + RunWorkerAsync()
    - WorkerThreadStart()
    + Dispose()
    - <RunWorkerAsync>b__27_0()
}

class "BrowsableAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "ComponentCollection" {
    + CopyTo()
}

class "DescriptionAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "DesignOnlyAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "DesignerCategoryAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "DesignerSerializationVisibilityAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "DisplayNameAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "EventHandlerList" {
    + AddHandler()
    + AddHandlers()
    + Dispose()
    - Find()
    + RemoveHandler()
}

class "ImmutableObjectAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "LocalizableAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "MergablePropertyAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "ReadOnlyAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "AddingNewEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AmbientValueAttribute" {
    + Equals()
    + GetHashCode()
}

class "ArrayConverter" {
    + ConvertTo()
    + GetProperties()
    + GetPropertiesSupported()
}

class "ArrayPropertyDescriptor" {
    + GetValue()
    + SetValue()
}

class "AttributeCollection" {
    + Contains()
    + Contains()
    + GetDefaultAttribute()
    + GetEnumerator()
    + Matches()
    + Matches()
    - System.Collections.IEnumerable.GetEnumerator()
    + CopyTo()
}

class "BindableAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "BindingList`1" {
    - Initialize()
    + OnAddingNew()
    - FireAddingNew()
    + OnListChanged()
    + ResetBindings()
    + ResetItem()
    - FireListChanged()
    + ClearItems()
    + InsertItem()
    + RemoveItem()
    + SetItem()
    + CancelNew()
    + EndNew()
    + AddNew()
    - System.ComponentModel.IBindingList.AddNew()
    + AddNewCore()
    - System.ComponentModel.IBindingList.ApplySort()
    + ApplySortCore()
    - System.ComponentModel.IBindingList.RemoveSort()
    + RemoveSortCore()
    - System.ComponentModel.IBindingList.Find()
    + FindCore()
    - System.ComponentModel.IBindingList.AddIndex()
    - System.ComponentModel.IBindingList.RemoveIndex()
    - HookPropertyChanged()
    - UnhookPropertyChanged()
    - Child_PropertyChanged()
}

class "BooleanConverter" {
    + CanConvertFrom()
    + ConvertFrom()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
}

class "ByteConverter" {
    + FromString()
    + FromString()
    + ToString()
}

class "CancelEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CharConverter" {
    + CanConvertFrom()
    + ConvertTo()
    + ConvertFrom()
}

class "CollectionChangeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ComplexBindingPropertiesAttribute" {
    + Equals()
    + GetHashCode()
}

class "ComponentResourceManager" {
    + ApplyResources()
    + ApplyResources()
    - FillResources()
}

class "CultureInfoConverter" {
    + GetCultureName()
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
}

class "CultureComparer" {
    + Compare()
}

class "DataObjectAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "DataObjectFieldAttribute" {
    + Equals()
    + GetHashCode()
}

class "DataObjectMethodAttribute" {
    + Equals()
    + GetHashCode()
    + Match()
}

class "DateTimeConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
}

class "DecimalConverter" {
    + CanConvertTo()
    + ConvertTo()
    + FromString()
    + FromString()
    + ToString()
}

class "DefaultBindingPropertyAttribute" {
    + Equals()
    + GetHashCode()
}

class "DefaultEventAttribute" {
    + Equals()
    + GetHashCode()
}

class "DefaultPropertyAttribute" {
    + Equals()
    + GetHashCode()
}

class "DelegatingTypeDescriptionProvider" {
    + CreateInstance()
    + GetCache()
    + GetFullComponentName()
    + GetExtendedTypeDescriptor()
    + GetExtenderProviders()
    + GetReflectionType()
    + GetRuntimeType()
    + GetTypeDescriptor()
    + IsSupportedType()
}

class "InheritanceAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
    + ToString()
}

class "PropertyTabAttribute" {
    + Equals()
    + Equals()
    + GetHashCode()
    + InitializeArrays()
    + InitializeArrays()
    - InitializeArrays()
}

class "ToolboxItemAttribute" {
    + IsDefaultAttribute()
    + Equals()
    + GetHashCode()
}

class "DesignTimeVisibleAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "DoubleConverter" {
    + FromString()
    + FromString()
    + ToString()
}

class "EditorAttribute" {
    + Equals()
    + GetHashCode()
}

class "EventDescriptorCollection" {
    + Add()
    + Clear()
    + Contains()
    - System.Collections.ICollection.CopyTo()
    - EnsureEventsOwned()
    - EnsureSize()
    + Find()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + Sort()
    + Sort()
    + Sort()
    + Sort()
    + InternalSort()
    + InternalSort()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.Clear()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "ArraySubsetEnumerator" {
    + MoveNext()
    + Reset()
}

class "ExpandableObjectConverter" {
    + GetProperties()
    + GetPropertiesSupported()
}

class "ExtendedPropertyDescriptor" {
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "ExtenderProvidedPropertyAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "GuidConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
}

class "HandledEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "InstallerTypeAttribute" {
    + Equals()
    + GetHashCode()
}

class "Int16Converter" {
    + FromString()
    + FromString()
    + ToString()
}

class "Int32Converter" {
    + FromString()
    + FromString()
    + ToString()
}

class "Int64Converter" {
    + FromString()
    + FromString()
    + ToString()
}

class "LicFileLicenseProvider" {
    + IsKeyValid()
    + GetKey()
    + GetLicense()
}

class "LicFileLicense" {
    + Dispose()
}

class "LicenseContext" {
    + GetSavedLicenseKey()
    + GetService()
    + SetSavedLicenseKey()
}

class "LicenseProviderAttribute" {
    + Equals()
    + GetHashCode()
}

class "ListBindableAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "ListChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ListSortDescriptionCollection" {
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    + Contains()
    + IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "LookupBindingPropertiesAttribute" {
    + Equals()
    + GetHashCode()
}

class "MarshalByValueComponent" {
    + Finalize()
    + Dispose()
    + Dispose()
    + GetService()
    + ToString()
}

class "MaskedTextProvider" {
    - Initialize()
    + Clone()
    + Add()
    + Add()
    + Add()
    + Add()
    + Clear()
    + Clear()
    + FindAssignedEditPositionFrom()
    + FindAssignedEditPositionInRange()
    + FindEditPositionFrom()
    + FindEditPositionInRange()
    - FindEditPositionInRange()
    + FindNonEditPositionFrom()
    + FindNonEditPositionInRange()
    - FindPositionInRange()
    + FindUnassignedEditPositionFrom()
    + FindUnassignedEditPositionInRange()
    + InsertAt()
    + InsertAt()
    + InsertAt()
    + InsertAt()
    - InsertAtInt()
    + IsAvailablePosition()
    + IsEditPosition()
    + Remove()
    + Remove()
    + RemoveAt()
    + RemoveAt()
    + RemoveAt()
    - RemoveAtInt()
    + Replace()
    + Replace()
    + Replace()
    + Replace()
    + Replace()
    + Replace()
    - ResetChar()
    - ResetString()
    + Set()
    + Set()
    - SetChar()
    - SetChar()
    - SetString()
    - TestChar()
    - TestEscapeChar()
    - TestEscapeChar()
    - TestSetChar()
    - TestSetString()
    - TestString()
    + ToDisplayString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + VerifyChar()
    + VerifyEscapeChar()
    + VerifyString()
    + VerifyString()
}

class "CharDescriptor" {
    + ToString()
}

class "MultilineStringConverter" {
    + ConvertTo()
    + GetProperties()
    + GetPropertiesSupported()
}

class "NestedContainer" {
    + CreateSite()
    + Dispose()
    + GetService()
    - OnOwnerDisposed()
}

class "Site" {
    + GetService()
}

class "NullableConverter" {
    + CanConvertFrom()
    + ConvertFrom()
    + CanConvertTo()
    + ConvertTo()
    + CreateInstance()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetPropertiesSupported()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
    + IsValid()
}

class "PasswordPropertyTextAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "PropertyDescriptorCollection" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    - EnsurePropsOwned()
    - EnsureSize()
    + Find()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + Sort()
    + Sort()
    + Sort()
    + Sort()
    + InternalSort()
    + InternalSort()
    + GetEnumerator()
    - System.Collections.IList.Clear()
    - System.Collections.IDictionary.Clear()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.RemoveAt()
    - System.Collections.IDictionary.Add()
    - System.Collections.IDictionary.Contains()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
}

class "PropertyDescriptorEnumerator" {
    + MoveNext()
    + Reset()
}

class "ProvidePropertyAttribute" {
    + Equals()
    + GetHashCode()
}

class "RecommendedAsConfigurableAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "ReferenceConverter" {
    + CanConvertFrom()
    + ConvertFrom()
    + ConvertTo()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
    + IsValueAllowed()
}

class "ReferenceComparer" {
    + Compare()
}

class "ReflectEventDescriptor" {
    + AddEventHandler()
    + FillAttributes()
    - FillEventInfoAttribute()
    - FillMethods()
    - FillSingleMethodAttribute()
    + RemoveEventHandler()
}

class "RefreshEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RunInstallerAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "SByteConverter" {
    + FromString()
    + FromString()
    + ToString()
}

class "SettingsBindableAttribute" {
    + Equals()
    + GetHashCode()
}

class "SingleConverter" {
    + FromString()
    + FromString()
    + ToString()
}

class "StringConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "TimeSpanConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
}

class "ToolboxItemFilterAttribute" {
    + Equals()
    + GetHashCode()
    + Match()
    + ToString()
}

class "TypeConverterAttribute" {
    + Equals()
    + GetHashCode()
}

class "UInt16Converter" {
    + FromString()
    + FromString()
    + ToString()
}

class "UInt32Converter" {
    + FromString()
    + FromString()
    + ToString()
}

class "UInt64Converter" {
    + FromString()
    + FromString()
    + ToString()
}

class "WarningException" {
    + GetObjectData()
}

class "PropertyChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PropertyChangingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ArraySubsetEnumerator" {
    + MoveNext()
    + Reset()
}

class "CategoryAttribute" {
    + Equals()
    + GetHashCode()
    + GetLocalizedString()
    + IsDefaultAttribute()
}

class "CollectionConverter" {
    + ConvertTo()
    + GetProperties()
    + GetPropertiesSupported()
}

class "Component" {
    + Finalize()
    + Dispose()
    + Dispose()
    + GetService()
    + ToString()
}

class "ComponentConverter" {
    + GetProperties()
    + GetPropertiesSupported()
}

class "Container" {
    + Finalize()
    + Add()
    + Add()
    + CreateSite()
    + Dispose()
    + Dispose()
    + GetService()
    + Remove()
    - Remove()
    + RemoveWithoutUnsiting()
    + ValidateName()
}

class "Site" {
    + GetService()
}

class "DateTimeOffsetConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
}

class "DesignerAttribute" {
    + Equals()
    + GetHashCode()
}

class "DoWorkEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "EnumConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
    + IsValid()
}

class "LicenseException" {
    + GetObjectData()
}

class "ProgressChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ReflectPropertyDescriptor" {
    + AddValueChanged()
    + ExtenderCanResetValue()
    + ExtenderGetReceiverType()
    + ExtenderGetType()
    + ExtenderGetValue()
    + ExtenderResetValue()
    + ExtenderSetValue()
    + ExtenderShouldSerializeValue()
    + CanResetValue()
    + FillAttributes()
    + GetValue()
    + OnINotifyPropertyChanged()
    + OnValueChanged()
    + RemoveValueChanged()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "ReflectTypeDescriptionProvider" {
    + CreateInstance()
    + GetAttributes()
    + GetCache()
    + GetClassName()
    + GetComponentName()
    + GetConverter()
    + GetDefaultEvent()
    + GetDefaultProperty()
    + GetEditor()
    + GetEvents()
    + GetExtendedAttributes()
    + GetExtendedClassName()
    + GetExtendedComponentName()
    + GetExtendedConverter()
    + GetExtendedDefaultEvent()
    + GetExtendedDefaultProperty()
    + GetExtendedEditor()
    + GetExtendedEvents()
    + GetExtendedProperties()
    + GetExtenderProviders()
    + GetExtendedPropertyOwner()
    + GetExtendedTypeDescriptor()
    + GetFullComponentName()
    + GetPopulatedTypes()
    + GetProperties()
    + GetPropertyOwner()
    + GetReflectionType()
    - GetTypeData()
    + GetTypeDescriptor()
    + IsPopulated()
    + Refresh()
}

class "ReflectedTypeData" {
    + GetAttributes()
    + GetClassName()
    + GetComponentName()
    + GetConverter()
    + GetDefaultEvent()
    + GetDefaultProperty()
    + GetEditor()
    + GetEvents()
    + GetProperties()
    - GetTypeFromName()
    + Refresh()
}

class "RunWorkerCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TypeConverter" {
    + CanConvertFrom()
    + CanConvertFrom()
    + CanConvertTo()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertFrom()
    + ConvertFromInvariantString()
    + ConvertFromInvariantString()
    + ConvertFromString()
    + ConvertFromString()
    + ConvertFromString()
    + ConvertTo()
    + ConvertTo()
    + ConvertToInvariantString()
    + ConvertToInvariantString()
    + ConvertToString()
    + ConvertToString()
    + ConvertToString()
    + CreateInstance()
    + CreateInstance()
    + GetConvertFromException()
    + GetConvertToException()
    + GetCreateInstanceSupported()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetProperties()
    + GetProperties()
    + GetPropertiesSupported()
    + GetPropertiesSupported()
    + GetStandardValues()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
    + GetStandardValuesSupported()
    + IsValid()
    + IsValid()
    + SortProperties()
}

class "StandardValuesCollection" {
    + CopyTo()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "AttributeProvider" {
    + GetTypeDescriptor()
}

class "AttributeTypeDescriptor" {
    + GetAttributes()
}

class "ComNativeDescriptionProvider" {
    + GetTypeDescriptor()
}

class "ComNativeTypeDescriptor" {
    - System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    - System.ComponentModel.ICustomTypeDescriptor.GetClassName()
    - System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
    - System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
    - System.ComponentModel.ICustomTypeDescriptor.GetEditor()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner()
}

class "AttributeFilterCacheItem" {
    + IsValid()
}

class "FilterCacheItem" {
    + IsValid()
}

class "MemberDescriptorComparer" {
    + Compare()
}

class "MergedTypeDescriptor" {
    - System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    - System.ComponentModel.ICustomTypeDescriptor.GetClassName()
    - System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
    - System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
    - System.ComponentModel.ICustomTypeDescriptor.GetEditor()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner()
}

class "TypeDescriptionNode" {
    + CreateInstance()
    + GetCache()
    + GetExtendedTypeDescriptor()
    + GetExtenderProviders()
    + GetFullComponentName()
    + GetReflectionType()
    + GetRuntimeType()
    + GetTypeDescriptor()
    + IsSupportedType()
}

class "Win32Exception" {
    + GetObjectData()
}

class "NotifyParentPropertyAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "ParenthesizePropertyNameAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "RefreshPropertiesAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "WeakHashtable" {
    + Clear()
    + Remove()
    + SetWeak()
    - ScavengeKeys()
}

class "WeakKeyComparer" {
    - System.Collections.IEqualityComparer.Equals()
    - System.Collections.IEqualityComparer.GetHashCode()
}

class "EqualityWeakReference" {
    + Equals()
    + GetHashCode()
}

class "ActiveDesignerEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CommandID" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ComponentChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ComponentChangingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ComponentEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ComponentRenameEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DesignerTransactionCloseEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DesignerVerb" {
    + ToString()
}

class "DesignerVerbCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
    + OnSet()
    + OnInsert()
    + OnClear()
    + OnRemove()
    + OnValidate()
}

class "DesigntimeLicenseContext" {
    + GetSavedLicenseKey()
    + SetSavedLicenseKey()
}

class "RuntimeLicenseContext" {
    - GetLocalPath()
    + GetSavedLicenseKey()
    - CaseInsensitiveManifestResourceStreamLookup()
}

class "DesignerCollection" {
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "DesignerEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HelpKeywordAttribute" {
    + Equals()
    + GetHashCode()
    + IsDefaultAttribute()
}

class "MenuCommand" {
    - SetStatus()
    + Invoke()
    + Invoke()
    + OnCommandChanged()
    + ToString()
}

class "ServiceCreatorCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ServiceContainer" {
    + AddService()
    + AddService()
    + AddService()
    + AddService()
    + Dispose()
    + Dispose()
    + GetService()
    + RemoveService()
    + RemoveService()
}

class "EmbeddedTypeAwareTypeComparer" {
    + Equals()
    + GetHashCode()
}

class "DesignerOptionCollection" {
    + CopyTo()
    - EnsurePopulated()
    + GetEnumerator()
    + IndexOf()
    + ShowDialog()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
}

class "WrappedPropertyDescriptor" {
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "DesignerOptionConverter" {
    + GetPropertiesSupported()
    + GetProperties()
    + ConvertTo()
}

class "OptionPropertyDescriptor" {
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "ContextStack" {
    + Append()
    + Pop()
    + Push()
}

class "InstanceDescriptor" {
    + Invoke()
}

class "ResolveNameEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ObservableCollection`1" {
    + Move()
    + ClearItems()
    + RemoveItem()
    + InsertItem()
    + SetItem()
    + MoveItem()
    + OnPropertyChanged()
    + OnCollectionChanged()
    + BlockReentrancy()
    + CheckReentrancy()
    - OnCountPropertyChanged()
    - OnIndexerPropertyChanged()
    - OnCollectionChanged()
    - OnCollectionChanged()
    - OnCollectionChanged()
    - OnCollectionReset()
    - EnsureMonitorInitialized()
    - OnSerializing()
    - OnDeserialized()
}

class "SimpleMonitor" {
    + Dispose()
}

class "ReadOnlyObservableCollection`1" {
    + OnCollectionChanged()
    + OnPropertyChanged()
    - HandleCollectionChanged()
    - HandlePropertyChanged()
}

class "BlockingCollection`1" {
    - Initialize()
    + Add()
    + Add()
    + TryAdd()
    + TryAdd()
    + TryAdd()
    + TryAdd()
    - TryAddWithNoTimeValidation()
    + Take()
    + Take()
    + TryTake()
    + TryTake()
    + TryTake()
    + TryTake()
    - TryTakeWithNoTimeValidation()
    + CompleteAdding()
    - CancelWaitingConsumers()
    - CancelWaitingProducers()
    + Dispose()
    + Dispose()
    + ToArray()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetConsumingEnumerable()
    + GetConsumingEnumerable()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - CheckDisposed()
}

class "<GetConsumingEnumerable>d__68" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "CDSCollectionETWBCLProvider" {
    + ConcurrentStack_FastPushFailed()
    + ConcurrentStack_FastPopFailed()
    + ConcurrentDictionary_AcquiringAllLocks()
    + ConcurrentBag_TryTakeSteals()
    + ConcurrentBag_TryPeekSteals()
}

class "ConcurrentBag`1" {
    + Add()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd()
    + TryTake()
    + TryPeek()
    - GetCurrentThreadWorkStealingQueue()
    - CreateWorkStealingQueueForCurrentThread()
    - GetUnownedWorkStealingQueue()
    - TrySteal()
    - TryStealFromTo()
    + CopyTo()
    - CopyFromEachQueueToArray()
    - System.Collections.ICollection.CopyTo()
    + ToArray()
    + Clear()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - FreezeBag()
    - UnfreezeBag()
}

class "WorkStealingQueue" {
    + LocalPush()
    + LocalClear()
    + TryLocalPop()
    + TryLocalPeek()
    + TrySteal()
    + DangerousCopyTo()
}

class "Enumerator" {
    + MoveNext()
    + Reset()
    + Dispose()
}

class "HybridDictionary" {
    - ChangeOver()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
}

class "ListDictionary" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
}

class "NodeEnumerator" {
    + MoveNext()
    + Reset()
}

class "NodeKeyValueCollection" {
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "NodeKeyValueEnumerator" {
    + MoveNext()
    + Reset()
}

class "NameValueCollection" {
    + InvalidateCachedArrays()
    + Add()
    + Clear()
    + CopyTo()
    + HasKeys()
    + InternalHasKeys()
    + Add()
    + Get()
    + GetValues()
    + Set()
    + Remove()
    + Get()
    + GetValues()
    + GetKey()
}

class "OrderedDictionary" {
    + Add()
    + Clear()
    + AsReadOnly()
    + Contains()
    + CopyTo()
    - IndexOfKey()
    + Insert()
    + RemoveAt()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetObjectData()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    + OnDeserialization()
}

class "OrderedDictionaryEnumerator" {
    + MoveNext()
    + Reset()
}

class "OrderedDictionaryKeyValueCollection" {
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "StringCollection" {
    + Add()
    + AddRange()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "StringEnumerator" {
    + MoveNext()
    + Reset()
}

class "StringDictionary" {
    + Add()
    + Clear()
    + ContainsKey()
    + ContainsValue()
    + CopyTo()
    + GetEnumerator()
    + Remove()
    + ReplaceHashtable()
    + AsGenericDictionary()
}

class "NotifyCollectionChangedEventArgs" {
    - InitializeAddOrRemove()
    - InitializeAdd()
    - InitializeRemove()
    - InitializeMoveOrReplace()
}

class "NotifyCollectionChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ReadOnlyList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
}

class "CaseSensitiveStringDictionary" {
    + Add()
    + ContainsKey()
    + Remove()
}

class "NameObjectKeysEnumerator" {
    + MoveNext()
    + Reset()
}

class "KeysCollection" {
    + Get()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "CompatibleComparer" {
    + Equals()
    + GetHashCode()
}

class "GenericAdapter" {
    + Add()
    + ContainsKey()
    + Clear()
    + Remove()
    + TryGetValue()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.CopyTo()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
}

class "ICollectionToGenericCollectionAdapter" {
    + Add()
    + Clear()
    + ThrowNotSupportedException()
    + Contains()
    + CopyTo()
    + Remove()
    - GetUnderlyingCollection()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__14" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<GetEnumerator>d__25" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "BidirectionalDictionary`2" {
    + Add()
    + TryGetForward()
    + TryGetBackward()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<T1,T2>>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "BitHelper" {
    + MarkBit()
    + IsMarked()
}

class "LinkedList`1" {
    - System.Collections.Generic.ICollection<T>.Add()
    + AddAfter()
    + AddAfter()
    + AddBefore()
    + AddBefore()
    + AddFirst()
    + AddFirst()
    + AddLast()
    + AddLast()
    + Clear()
    + Contains()
    + CopyTo()
    + Find()
    + FindLast()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    + Remove()
    + Remove()
    + RemoveFirst()
    + RemoveLast()
    + GetObjectData()
    + OnDeserialization()
    - InternalInsertNodeBefore()
    - InternalInsertNodeToEmptyList()
    + InternalRemoveNode()
    + ValidateNewNode()
    + ValidateNode()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "LinkedListNode`1" {
    + Invalidate()
}

class "SortedDictionary`2" {
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove()
    + Add()
    + Clear()
    + ContainsKey()
    + ContainsValue()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
    + Remove()
    + TryGetValue()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IDictionary.Add()
    - System.Collections.IDictionary.Contains()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "KeyCollection" {
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<TKey>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<TKey>.Add()
    - System.Collections.Generic.ICollection<TKey>.Clear()
    - System.Collections.Generic.ICollection<TKey>.Contains()
    - System.Collections.Generic.ICollection<TKey>.Remove()
}

class "<>c__DisplayClass5_0" {
    + <CopyTo>b__0()
}

class "<>c__DisplayClass6_0" {
    + <System.Collections.ICollection.CopyTo>b__0()
}

class "ValueCollection" {
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<TValue>.Add()
    - System.Collections.Generic.ICollection<TValue>.Clear()
    - System.Collections.Generic.ICollection<TValue>.Contains()
    - System.Collections.Generic.ICollection<TValue>.Remove()
}

class "<>c__DisplayClass5_0" {
    + <CopyTo>b__0()
}

class "<>c__DisplayClass6_0" {
    + <System.Collections.ICollection.CopyTo>b__0()
}

class "KeyValuePairComparer" {
    + Compare()
}

class "<>c__DisplayClass34_0" {
    + <ContainsValue>b__0()
}

class "<>c__DisplayClass34_1" {
    + <ContainsValue>b__1()
}

class "TreeSet`1" {
    + AddIfNotPresent()
}

class "SortedList`2" {
    + Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove()
    - System.Collections.IDictionary.Add()
    - GetKeyListHelper()
    - GetValueListHelper()
    + Clear()
    - System.Collections.IDictionary.Contains()
    + ContainsKey()
    + ContainsValue()
    - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo()
    - System.Collections.ICollection.CopyTo()
    - EnsureCapacity()
    - GetByIndex()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - GetKey()
    + IndexOfKey()
    + IndexOfValue()
    - Insert()
    + TryGetValue()
    + RemoveAt()
    + Remove()
    - System.Collections.IDictionary.Remove()
    + TrimExcess()
}

class "SortedListKeyEnumerator" {
    + Dispose()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "SortedListValueEnumerator" {
    + Dispose()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "KeyList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + Insert()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + IndexOf()
    + Remove()
    + RemoveAt()
}

class "ValueList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + Insert()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + IndexOf()
    + Remove()
    + RemoveAt()
}

class "SortedSet`1" {
    - AddAllElements()
    - RemoveAllElements()
    - ContainsAllElements()
    + InOrderTreeWalk()
    + BreadthFirstTreeWalk()
    + VersionCheck()
    + IsWithinRange()
    + Add()
    - System.Collections.Generic.ICollection<T>.Add()
    + AddIfNotPresent()
    + Remove()
    + DoRemove()
    + Clear()
    + Contains()
    + CopyTo()
    + CopyTo()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - InsertionBalance()
    - ReplaceChildOrRoot()
    - ReplaceNode()
    + FindNode()
    + InternalIndexOf()
    + FindRange()
    + FindRange()
    + UpdateVersion()
    - HasEqualComparer()
    + UnionWith()
    + IntersectWith()
    + IntersectWithEnumerable()
    + ExceptWith()
    + SymmetricExceptWith()
    - SymmetricExceptWithSameComparer()
    - SymmetricExceptWithSameComparer()
    + IsSubsetOf()
    - IsSubsetOfSortedSetWithSameComparer()
    + IsProperSubsetOf()
    + IsSupersetOf()
    + IsProperSupersetOf()
    + SetEquals()
    + Overlaps()
    - CheckUniqueAndUnfoundElements()
    + RemoveWhere()
    + Reverse()
    + GetViewBetween()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    + OnDeserialization()
    + TryGetValue()
}

class "TreeSubSet" {
    + AddIfNotPresent()
    + Contains()
    + DoRemove()
    + Clear()
    + IsWithinRange()
    + InOrderTreeWalk()
    + BreadthFirstTreeWalk()
    + FindNode()
    + InternalIndexOf()
    + VersionCheck()
    - VersionCheckImpl()
    + GetViewBetween()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + GetObjectData()
    - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization()
    + OnDeserialization()
    - <VersionCheckImpl>b__20_0()
}

class "<>c__DisplayClass9_0" {
    + <Clear>b__0()
}

class "Node" {
    + ColorBlack()
    + ColorRed()
    + DeepClone()
    + GetRotation()
    + GetSibling()
    + ShallowClone()
    + Split4Node()
    + Rotate()
    + RotateLeft()
    + RotateLeftRight()
    + RotateRight()
    + RotateRightLeft()
    + Merge2Nodes()
    + ReplaceChild()
}

class "<>c__DisplayClass52_0" {
    + <CopyTo>b__0()
}

class "<>c__DisplayClass53_0" {
    + <System.Collections.ICollection.CopyTo>b__0()
}

class "<>c__DisplayClass85_0" {
    + <RemoveWhere>b__0()
}

class "<Reverse>d__94" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "TreeWalkPredicate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SortedSetEqualityComparer`1" {
    + Equals()
    + GetHashCode()
    + Equals()
    + GetHashCode()
}

class "ChunkedMemoryStream" {
    + ToArray()
    + Write()
    + WriteAsync()
    - AppendChunk()
    + Flush()
    + FlushAsync()
    + Read()
    + Seek()
    + SetLength()
}

class "ReadOnlyMemoryStream" {
    + Seek()
    + ReadByte()
    + Read()
    + Read()
    + ReadAsync()
    + ReadAsync()
    + BeginRead()
    + EndRead()
    + CopyTo()
    + CopyToAsync()
    + Flush()
    + FlushAsync()
    + SetLength()
    + Write()
}

class "FileSystemEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RenamedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CoreFXFileSystemWatcherProxy" {
    + Operation()
    + ProxyDispatch()
    + ProxyDispatchError()
    + NewWatcher()
    + StartDispatching()
    + StopDispatching()
    + Dispose()
}

class "<>c__DisplayClass5_0" {
    + <Operation>b__0()
}

class "<>c__DisplayClass6_0" {
    + <ProxyDispatch>b__0()
    + <ProxyDispatch>b__1()
}

class "<>c__DisplayClass7_0" {
    + <ProxyDispatchError>b__0()
    + <ProxyDispatchError>b__1()
}

class "<>c__DisplayClass8_0" {
    + <NewWatcher>b__0()
    + <NewWatcher>b__1()
    + <NewWatcher>b__2()
    + <NewWatcher>b__3()
    + <NewWatcher>b__4()
    + <NewWatcher>b__5()
}

class "<>c__DisplayClass8_1" {
    + <NewWatcher>b__6()
}

class "<>c__DisplayClass8_2" {
    + <NewWatcher>b__7()
}

class "<>c__DisplayClass8_3" {
    + <NewWatcher>b__8()
}

class "<>c__DisplayClass8_4" {
    + <NewWatcher>b__9()
}

class "<>c__DisplayClass8_5" {
    + <NewWatcher>b__10()
}

class "<>c" {
    + <StartDispatching>b__9_0()
    + <StopDispatching>b__10_0()
}

class "<>c__DisplayClass11_0" {
    + <Dispose>b__0()
}

class "DefaultWatcher" {
    + StartDispatching()
    + StopDispatching()
    + Dispose()
    - Monitor()
    - UpdateDataAndDispatch()
    - DoFiles()
    - IterateAndModifyFilesData()
}

class "ErrorEventArgs" {
    + GetException()
}

class "ErrorEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FAMWatcher" {
    + StartDispatching()
    + StopDispatching()
    - Monitor()
    - ProcessEvents()
    + Finalize()
    + Dispose()
}

class "FileSystemWatcher" {
    - InitWatcher()
    - ShowWatcherInfo()
    + BeginInit()
    + Dispose()
    + Finalize()
    + EndInit()
    - RaiseEvent()
    + OnChanged()
    + OnCreated()
    + OnDeleted()
    + OnError()
    + OnRenamed()
    + WaitForChanged()
    + WaitForChanged()
    + DispatchErrorEvents()
    + DispatchEvents()
    - Start()
    - Stop()
}

class "<>c__DisplayClass70_0" {
    + <DispatchEvents>b__0()
    + <DispatchEvents>b__1()
    + <DispatchEvents>b__2()
}

class "<>c__DisplayClass70_1" {
    + <DispatchEvents>b__3()
}

class "KqueueMonitor" {
    + Dispose()
    + Start()
    + Stop()
    - CleanUp()
    - DoMonitor()
    - Setup()
    - CreateChangeList()
    - Monitor()
    - Add()
    - Remove()
    - RemoveTree()
    - UpdatePath()
    - Scan()
    - PostEvent()
    - GetFilenameFromFd()
    - <Start>b__5_0()
}

class "<>c__DisplayClass11_0" {
    + <Monitor>b__0()
}

class "KeventWatcher" {
    + StartDispatching()
    + StopDispatching()
    + Dispose()
}

class "NullFileWatcher" {
    + StartDispatching()
    + StopDispatching()
    + Dispose()
}

class "SearchPattern2" {
    + IsMatch()
    + IsMatch()
    - Compile()
    - Match()
}

class "SerialPort" {
    + Close()
    + Dispose()
    + DiscardInBuffer()
    + DiscardOutBuffer()
    + Open()
    + Read()
    + Read()
    + read_byte()
    + ReadByte()
    + ReadChar()
    + ReadExisting()
    + ReadLine()
    + ReadTo()
    + Write()
    + Write()
    + Write()
    + WriteLine()
    - CheckOpen()
    + OnErrorReceived()
    + OnDataReceived()
    + OnDataReceived()
}

class "SerialDataReceivedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SerialPinChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SerialErrorReceivedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SerialPortStream" {
    + Flush()
    + Read()
    + Seek()
    + SetLength()
    + Write()
    + Dispose()
    + Close()
    - System.IDisposable.Dispose()
    + Finalize()
    - CheckDisposed()
    + SetAttributes()
    + DiscardInBuffer()
    + DiscardOutBuffer()
    + GetSignals()
    + SetSignal()
    + SetBreakState()
    - TryBaudRate()
}

class "WinSerialStream" {
    + Dispose()
    - System.IDisposable.Dispose()
    + Close()
    + Finalize()
    + Flush()
    + Seek()
    + SetLength()
    + Read()
    + Write()
    + SetAttributes()
    - ReportIOError()
    - CheckDisposed()
    + DiscardInBuffer()
    + DiscardOutBuffer()
    + GetSignals()
    + SetSignal()
    + SetBreakState()
}

class "DCB" {
    + SetValues()
}

class "Timeouts" {
    + SetValues()
}

class "FileSystemWatcher" {
    - StartRaisingEvents()
    - StopRaisingEvents()
    - FinalizeDispose()
    - Monitor()
    - ReadDirectoryChangesCallback()
    - ParseEventBufferAndNotifyForEach()
    - AllocateBuffer()
    + Dispose()
    - MatchPattern()
    - NotifyInternalBufferOverflowEvent()
    - NotifyRenameEventArgs()
    - GetHandler()
    - NotifyFileSystemEventArgs()
    - NotifyFileSystemEventArgs()
    + OnChanged()
    + OnCreated()
    + OnDeleted()
    - InvokeOn()
    + OnError()
    + OnRenamed()
    + WaitForChanged()
    + WaitForChanged()
    - Restart()
    - StartRaisingEventsIfNotDisposed()
    + BeginInit()
    + EndInit()
    - IsSuspended()
}

class "NormalizedFilterCollection" {
    + InsertItem()
    + SetItem()
    + GetFilters()
}

class "ImmutableStringList" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass80_0" {
    + <WaitForChanged>b__0()
    + <WaitForChanged>b__1()
}

class "GZipStream" {
    + Flush()
    + Seek()
    + SetLength()
    + ReadByte()
    + BeginRead()
    + EndRead()
    + Read()
    + Read()
    + BeginWrite()
    + EndWrite()
    + Write()
    + Write()
    + CopyTo()
    + Dispose()
    + ReadAsync()
    + ReadAsync()
    + WriteAsync()
    + WriteAsync()
    + FlushAsync()
    + CopyToAsync()
    - CheckDeflateStream()
}

class "DeflateStream" {
    + Finalize()
    + Dispose()
    - ReadInternal()
    + ReadAsyncMemory()
    + ReadCore()
    + Read()
    - WriteInternal()
    + WriteAsyncMemory()
    + WriteCore()
    + Write()
    + Flush()
    + BeginRead()
    + BeginWrite()
    + EndRead()
    + EndWrite()
    + Seek()
    + SetLength()
}

class "ReadMethod" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WriteMethod" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DeflateStreamNative" {
    + Finalize()
    + Dispose()
    + Flush()
    + ReadZStream()
    + WriteZStream()
    - UnmanagedRead()
    - UnmanagedWrite()
    - CheckResult()
}

class "UnmanagedReadOrWrite" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SafeDeflateStreamHandle" {
    + ReleaseHandle()
}

class "SchemeSettingElementCollection" {
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
}

class "TypeDescriptorPermissionAttribute" {
    + CreatePermission()
}

class "MiniParser" {
    + Reset()
    + FatalErr()
    + Parse()
}

class "SecurityParser" {
    + LoadXml()
    + ToXml()
    + Read()
    + OnStartParsing()
    + OnStartElement()
    + OnEndElement()
    + OnChars()
    + OnEndParsing()
}

class "ASN1" {
    - CompareArray()
    + Equals()
    + CompareValue()
    + Add()
    + GetBytes()
    + Decode()
    + DecodeTLV()
    + Element()
    + ToString()
    + SaveToFile()
}

class "StrongName" {
    - InvalidateCache()
    + GetBytes()
    - RVAtoPosition()
    + StrongHash()
    + Hash()
    + Sign()
    + Verify()
    + Verify()
}

class "PKCS12" {
    - Decode()
    + Finalize()
    - Compare()
    - GetSymmetricAlgorithm()
    + Decrypt()
    + Decrypt()
    + Encrypt()
    - GetExistingParameters()
    - AddPrivateKey()
    - ReadSafeBag()
    - Pkcs8ShroudedKeyBagSafeBag()
    - KeyBagSafeBag()
    - SecretBagSafeBag()
    - CertificateSafeBag()
    - MAC()
    + GetBytes()
    - EncryptedContentInfo()
    + AddCertificate()
    + AddCertificate()
    + RemoveCertificate()
    + RemoveCertificate()
    - CompareAsymmetricAlgorithm()
    + AddPkcs8ShroudedKeyBag()
    + AddPkcs8ShroudedKeyBag()
    + RemovePkcs8ShroudedKeyBag()
    + AddKeyBag()
    + AddKeyBag()
    + RemoveKeyBag()
    + AddSecretBag()
    + AddSecretBag()
    + RemoveSecretBag()
    + GetAsymmetricAlgorithm()
    + GetSecret()
    + GetCertificate()
    + GetAttributes()
    + GetAttributes()
    + SaveToFile()
    + Clone()
}

class "X509Crl" {
    - Parse()
    + WasCurrent()
    + GetBytes()
    - Compare()
    + GetCrlEntry()
    + GetCrlEntry()
    + VerifySignature()
    + VerifySignature()
    + VerifySignature()
    + VerifySignature()
}

class "X509Certificate" {
    - Parse()
    - GetUnsignedBigInteger()
    + WasCurrent()
    + VerifySignature()
    + VerifySignature()
    + VerifySignature()
    + CheckSignature()
    + GetIssuerName()
    + GetSubjectName()
    + GetObjectData()
}

class "X509CertificateBuilder" {
    - SubjectPublicKeyInfo()
    - UniqueIdentifier()
    + ToBeSigned()
}

class "X509CertificateCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetHashCode()
    + IndexOf()
    + Insert()
    + Remove()
    - Compare()
}

class "X509Chain" {
    + LoadCertificate()
    + LoadCertificates()
    + FindByIssuerName()
    + Build()
    + Reset()
    - IsValid()
    - FindCertificateParent()
    - FindCertificateRoot()
    - IsTrusted()
    - IsParent()
}

class "X509Extension" {
    + Decode()
    + Encode()
    + Equals()
    + GetBytes()
    + GetHashCode()
    - WriteLine()
    + ToString()
}

class "X509ExtensionCollection" {
    + Add()
    + AddRange()
    + AddRange()
    + Contains()
    + Contains()
    + CopyTo()
    + IndexOf()
    + IndexOf()
    + Insert()
    + Remove()
    + Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetBytes()
}

class "X509Store" {
    + Clear()
    - ClearCertificates()
    - ClearCrls()
    + Import()
    + Import()
    + Remove()
    + Remove()
    - ImportNewFormat()
    - RemoveNewFormat()
    - GetUniqueNameWithSerial()
    - GetUniqueName()
    - GetUniqueName()
    - GetUniqueName()
    - GetUniqueName()
    - Load()
    - LoadCertificate()
    - LoadCrl()
    - CheckStore()
    - BuildCertificatesCollection()
    - BuildCrlsCollection()
    - ImportPrivateKey()
}

class "X509Stores" {
    + Clear()
    + Open()
}

class "AuthorityKeyIdentifierExtension" {
    + Decode()
    + Encode()
    + ToString()
}

class "BasicConstraintsExtension" {
    + Decode()
    + Encode()
    + ToString()
}

class "CRLDistributionPointsExtension" {
    + Decode()
    + ToString()
}

class "CertificatePoliciesExtension" {
    + Decode()
    + ToString()
}

class "ExtendedKeyUsageExtension" {
    + Decode()
    + Encode()
    + ToString()
}

class "GeneralNames" {
    + GetBytes()
    + ToString()
}

class "KeyAttributesExtension" {
    + Decode()
    + Support()
    + ToString()
}

class "KeyUsageExtension" {
    + Decode()
    + Encode()
    + Support()
    + ToString()
}

class "NetscapeCertTypeExtension" {
    + Decode()
    + Support()
    + ToString()
}

class "PrivateKeyUsagePeriodExtension" {
    + Decode()
    + ToString()
}

class "SubjectAltNameExtension" {
    + Decode()
    + ToString()
}

class "SubjectKeyIdentifierExtension" {
    + Decode()
    + Encode()
    + ToString()
}

class "ChallengeResponse" {
    + Finalize()
    + Dispose()
    - Dispose()
    - GetResponse()
    - PrepareDESKey()
    - PasswordToKey()
}

class "Type1Message" {
    + Decode()
    + GetBytes()
}

class "Type2Message" {
    + Finalize()
    + Decode()
    + GetBytes()
}

class "Type3Message" {
    + Finalize()
    + Decode()
    - DecodeString()
    - EncodeString()
    + GetBytes()
}

class "Alert" {
    - inferAlertLevel()
    + ToString()
}

class "MonoServerCertificateSelectionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoTlsConnectionInfo" {
    + ToString()
}

class "MonoRemoteCertificateValidationCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoLocalCertificateSelectionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MonoTlsSettings" {
    + CloneWithValidator()
    + Clone()
}

class "ARC4Managed" {
    + Finalize()
    + Dispose()
    + CreateEncryptor()
    + CreateDecryptor()
    + GenerateIV()
    + GenerateKey()
    - KeySetup()
    - CheckInput()
    + TransformBlock()
    - InternalTransformBlock()
    + TransformFinalBlock()
}

class "BlockProcessor" {
    + Finalize()
    + Initialize()
    + Core()
    + Core()
    + Final()
}

class "DiffieHellmanManaged" {
    - Initialize()
    + CreateKeyExchange()
    + DecryptKeyExchange()
    + Dispose()
    + ExportParameters()
    + ImportParameters()
    + Finalize()
    - GenerateKey()
}

class "KeyPairPersistence" {
    + Load()
    + Save()
    + Remove()
    - Copy()
    - FromXml()
    - ToXml()
}

class "MD2Managed" {
    - Padding()
    + Initialize()
    + HashCore()
    + HashFinal()
    - MD2Transform()
}

class "MD4Managed" {
    + Initialize()
    + HashCore()
    + HashFinal()
    - Padding()
    - F()
    - G()
    - H()
    - ROL()
    - FF()
    - GG()
    - HH()
    - Encode()
    - Decode()
    - MD4Transform()
}

class "RSAManaged" {
    + Finalize()
    - GenerateKeyPair()
    + DecryptValue()
    + EncryptValue()
    + ExportParameters()
    + ImportParameters()
    + Dispose()
    + ToXmlString()
    - GetPaddedValue()
}

class "SHA224Managed" {
    - Ch()
    - Maj()
    - Ro0()
    - Ro1()
    - Sig0()
    - Sig1()
    + HashCore()
    + HashFinal()
    + Initialize()
    - ProcessBlock()
    - ProcessFinalBlock()
    + AddLength()
}

class "HMAC" {
    + Initialize()
    + HashFinal()
    + HashCore()
    - initializePad()
}

class "AuthenticodeBase" {
    + Open()
    + Open()
    + Close()
    + ReadFirstBlock()
    + ProcessFirstBlock()
    + GetSecurityEntry()
    + GetHash()
    + HashFile()
}

class "AuthenticodeDeformatter" {
    + IsTrusted()
    - CheckSignature()
    - CompareIssuerSerial()
    - VerifySignature()
    - VerifyCounterSignature()
    - Reset()
}

class "AuthenticodeFormatter" {
    - AlgorithmIdentifier()
    - Attribute()
    - Opus()
    - Header()
    + TimestampRequest()
    + ProcessTimestamp()
    - Timestamp()
    - Save()
    + Sign()
    + Timestamp()
}

class "PrivateKey" {
    - DeriveKey()
    - Decode()
    + Save()
    + Save()
}

class "SoftwarePublisherCertificate" {
    + GetBytes()
}

class "BigInteger" {
    + Randomize()
    + Randomize()
    + BitCount()
    + TestBit()
    + TestBit()
    + SetBit()
    + ClearBit()
    + SetBit()
    + LowestSetBit()
    + GetBytes()
    + Compare()
    + ToString()
    + ToString()
    - Normalize()
    + Clear()
    + GetHashCode()
    + ToString()
    + Equals()
    + GCD()
    + ModInverse()
    + ModPow()
    + IsProbablePrime()
    + Incr2()
}

class "PrimalityTest" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NextPrimeFinder" {
    + GenerateSearchBase()
}

class "SequentialSearchPrimeGeneratorBase" {
    + GenerateSearchBase()
    + GenerateNewPrime()
    + GenerateNewPrime()
    + IsPrimeAcceptable()
}

class "HandlerAdapter" {
    + OnStartParsing()
    + OnStartElement()
    + OnEndElement()
    + OnChars()
    + OnEndParsing()
}

class "AttrListImpl" {
    + GetName()
    + GetValue()
    + GetValue()
    + ChangeValue()
    + Clear()
    + Add()
    + Remove()
    + Remove()
    + CopyFrom()
}

class "XMLError" {
    + ToString()
}

class "ContentInfo" {
    + GetASN1()
    + GetBytes()
}

class "EncryptedData" {
    + GetASN1()
    + GetBytes()
}

class "EnvelopedData" {
    + GetASN1()
    + GetBytes()
}

class "SignedData" {
    + VerifySignature()
    + OidToName()
    + GetASN1()
    + GetBytes()
}

class "SignerInfo" {
    + GetASN1()
    + GetBytes()
}

class "SortedSet" {
    + Compare()
}

class "DeriveBytes" {
    - Adjust()
    - Derive()
    + DeriveKey()
    + DeriveIV()
    + DeriveMAC()
}

class "X509CrlEntry" {
    + GetBytes()
}

class "X509CertificateEnumerator" {
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
    + MoveNext()
    + Reset()
}

class "PrivateKeyInfo" {
    - Decode()
    + GetBytes()
}

class "EncryptedPrivateKeyInfo" {
    - Decode()
    + GetBytes()
}

class "KeyGeneratedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ModulusRing" {
    + BarrettReduction()
    + Multiply()
    + Difference()
    + Pow()
    + Pow()
}

class "AppSettingsSection" {
    + IsModified()
    + DeserializeElement()
    + Reset()
    + SerializeSection()
    + GetRuntimeObject()
}

class "CallbackValidator" {
    + CanValidate()
    + Validate()
}

class "ClientConfigurationSystem" {
    - System.Configuration.Internal.IInternalConfigSystem.GetSection()
    - System.Configuration.Internal.IInternalConfigSystem.RefreshConfig()
}

class "CommaDelimitedStringCollection" {
    + Add()
    + AddRange()
    + Clear()
    + Clone()
    + Insert()
    + Remove()
    + SetReadOnly()
    + ToString()
    + UpdateStringHash()
}

class "CommaDelimitedStringCollectionConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "ConfigNameValueCollection" {
    + ResetModified()
    + Set()
}

class "ConfigurationXmlDocument" {
    + CreateElement()
}

class "Configuration" {
    + FindLocationConfiguration()
    + Init()
    + GetParentWithFile()
    + GetLocationSubPath()
    + GetSection()
    + GetSectionGroup()
    + GetSectionInstance()
    + GetSectionGroupInstance()
    + SetConfigurationSection()
    + SetSectionXml()
    + GetSectionXml()
    + CreateSection()
    + CreateSectionGroup()
    + RemoveConfigInfo()
    + Save()
    + Save()
    + Save()
    + SaveAs()
    + SaveAs()
    + SaveAs()
    - Save()
    - SaveData()
    - HasValues()
    - ResetModified()
    - Load()
    - ReadConfigFile()
    + ReadData()
    - ThrowException()
}

class "SaveContext" {
    + HasValues()
    + HasValue()
}

class "ConfigurationErrorsException" {
    + GetObjectData()
}

class "ConfigurationFileMap" {
    + Clone()
}

class "ConfigurationLocation" {
    + OpenConfiguration()
    + SetParentConfiguration()
}

class "ConfigurationLocationCollection" {
    + Add()
    + Find()
    + FindBest()
}

class "ConfigurationLockCollection" {
    - CheckName()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IsReadOnly()
    + Remove()
    + SetFromList()
    - System.Collections.ICollection.CopyTo()
}

class "ConfigurationPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + Union()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
}

class "ConfigurationPermissionAttribute" {
    + CreatePermission()
}

class "ConfigurationProperty" {
    + ConvertFromString()
    + ConvertToString()
    + Validate()
}

class "ConfigurationPropertyCollection" {
    + Add()
    + Contains()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    + Remove()
    + Clear()
}

class "ConfigurationSaveEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ConfigurationSectionCollection" {
    + Add()
    + Clear()
    + CopyTo()
    + Get()
    + Get()
    + GetEnumerator()
    + GetKey()
    + Remove()
    + RemoveAt()
    + GetObjectData()
}

class "<GetEnumerator>d__17" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "ConfigurationSectionGroup" {
    + Initialize()
    + SetName()
    + ForceDeclaration()
    + ForceDeclaration()
    + ShouldSerializeSectionGroupInTargetVersion()
}

class "ConfigurationSectionGroupCollection" {
    + Add()
    + Clear()
    + CopyTo()
    + Get()
    + Get()
    + GetEnumerator()
    + GetKey()
    + Remove()
    + RemoveAt()
    + GetObjectData()
}

class "ConnectionStringSettings" {
    + ToString()
}

class "ConnectionStringSettingsCollection" {
    + CreateNewElement()
    + GetElementKey()
    + Add()
    + Clear()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
    + BaseAdd()
}

class "ConnectionStringsSection" {
    + GetRuntimeObject()
}

class "ContextInformation" {
    + GetSection()
}

class "DefaultSection" {
    + DeserializeSection()
    + IsModified()
    + Reset()
    + ResetModified()
    + SerializeSection()
}

class "DefaultValidator" {
    + CanValidate()
    + Validate()
}

class "DpapiProtectedConfigurationProvider" {
    + Decrypt()
    + Encrypt()
    + Initialize()
}

class "ElementInformation" {
    + Reset()
}

class "ExeConfigurationFileMap" {
    + Clone()
}

class "GenericEnumConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "IgnoreSection" {
    + IsModified()
    + DeserializeSection()
    + Reset()
    + ResetModified()
    + SerializeSection()
}

class "InfiniteIntConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "InfiniteTimeSpanConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "IntegerValidator" {
    + CanValidate()
    + Validate()
}

class "InternalConfigurationFactory" {
    + Create()
    + NormalizeLocationSubPath()
}

class "InternalConfigurationSystem" {
    + Init()
    + InitForConfiguration()
}

class "ExeConfigurationHost" {
    + Init()
    + GetStreamName()
    + InitForConfiguration()
}

class "MachineConfigurationHost" {
    + Init()
    + GetStreamName()
    + InitForConfiguration()
    + IsDefinitionAllowed()
}

class "InternalConfigurationRoot" {
    + GetConfigRecord()
    + GetSection()
    + GetUniqueConfigPath()
    + GetUniqueConfigRecord()
    + Init()
    + RemoveConfig()
}

class "KeyValueConfigurationCollection" {
    + Add()
    + Add()
    + Clear()
    + Remove()
    + CreateNewElement()
    + GetElementKey()
}

class "KeyValueConfigurationElement" {
    + Init()
}

class "KeyValueInternalCollection" {
    + SetReadOnly()
    + Add()
}

class "LongValidator" {
    + CanValidate()
    + Validate()
}

class "NameValueConfigurationCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + Remove()
    + Remove()
}

class "PositiveTimeSpanValidator" {
    + CanValidate()
    + Validate()
}

class "PropertyInformation" {
    + Reset()
    + GetStringValue()
    + SetStringValue()
}

class "PropertyInformationCollection" {
    + CopyTo()
    + GetEnumerator()
    + Add()
    + GetObjectData()
}

class "PropertyInformationEnumerator" {
    + MoveNext()
    + Reset()
}

class "ProtectedConfigurationProviderCollection" {
    + Add()
}

class "ProtectedConfigurationSection" {
    + EncryptSection()
    + DecryptSection()
    + GetAllProviders()
    - InstantiateProvider()
}

class "ProviderSettings" {
    + OnDeserializeUnrecognizedAttribute()
    + IsModified()
    + Reset()
    + Unmerge()
}

class "ProviderSettingsCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + Remove()
}

class "RegexStringValidator" {
    + CanValidate()
    + Validate()
}

class "RsaProtectedConfigurationProvider" {
    - GetProvider()
    + Decrypt()
    + Encrypt()
    + Initialize()
    + AddKey()
    + DeleteKey()
    + ExportKey()
    + ImportKey()
}

class "SectionGroupInfo" {
    + AddChild()
    + Clear()
    + HasChild()
    + RemoveChild()
    + GetChildSection()
    + GetChildGroup()
    + HasDataContent()
    + HasConfigContent()
    + ReadConfig()
    + WriteConfig()
    - ReadRemoveSection()
    + ReadRootData()
    + ReadData()
    - ReadContent()
    - GetConfigInfo()
    + Merge()
    + WriteRootData()
    + WriteData()
    + WriteContent()
    + HasValues()
    + ResetModified()
}

class "ConfigInfoCollection" {
    + Add()
    + Clear()
    + GetKey()
    + Remove()
    + RemoveAt()
}

class "SectionInfo" {
    + CreateInstance()
    + HasDataContent()
    + HasConfigContent()
    + ReadConfig()
    + WriteConfig()
    + ReadData()
    + WriteData()
    + Merge()
    + HasValues()
    + ResetModified()
}

class "SectionInformation" {
    + GetParentSection()
    + SetParentSection()
    + GetRawXml()
    + ProtectSection()
    + ForceDeclaration()
    + ForceDeclaration()
    + RevertToParent()
    + UnprotectSection()
    + SetRawXml()
    + SetName()
}

class "StringValidator" {
    + CanValidate()
    + Validate()
}

class "SubclassTypeValidator" {
    + CanValidate()
    + Validate()
}

class "TimeSpanMinutesConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "TimeSpanMinutesOrInfiniteConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "TimeSpanSecondsConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "TimeSpanSecondsOrInfiniteConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "TimeSpanValidator" {
    + CanValidate()
    + Validate()
}

class "TypeNameConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "ValidatorCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WhiteSpaceTrimStringConverter" {
    + ConvertFrom()
    + ConvertTo()
}

class "ProviderCollection" {
    + Add()
    + Clear()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + GetEnumerator()
    + Remove()
    + SetReadOnly()
}

class "DelegatingConfigHost" {
    + CreateConfigurationContext()
    + CreateDeprecatedConfigContext()
    + DecryptSection()
    + DeleteStream()
    + EncryptSection()
    + GetConfigPathFromLocationSubPath()
    + GetConfigType()
    + GetConfigTypeName()
    + GetRestrictedPermissions()
    + GetStreamName()
    + GetStreamNameForConfigSource()
    + GetStreamVersion()
    + Impersonate()
    + Init()
    + InitForConfiguration()
    + IsAboveApplication()
    + IsConfigRecordRequired()
    + IsDefinitionAllowed()
    + IsInitDelayed()
    + IsFile()
    + IsFullTrustSectionWithoutAptcaAllowed()
    + IsLocationApplicable()
    + IsSecondaryRoot()
    + IsTrustedConfigPath()
    + OpenStreamForRead()
    + OpenStreamForRead()
    + OpenStreamForWrite()
    + OpenStreamForWrite()
    + PrefetchAll()
    + PrefetchSection()
    + RequireCompleteInit()
    + StartMonitoringStreamForChanges()
    + StopMonitoringStreamForChanges()
    + VerifyDefinitionAllowed()
    + WriteCompleted()
    + WriteCompleted()
    + ProcessConfigurationSection()
    + ProcessRawXml()
}

class "InternalConfigEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamChangeCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ConfigurationBuildersSection" {
    + GetBuilderFromName()
}

class "<>c" {
    + <.cctor>b__9_0()
}

class "InvariantComparer" {
    + Compare()
}

class "XmlSystemPathResolver" {
    + GetEntity()
    + GetEntityAsync()
}

class "Base64Decoder" {
    + Decode()
    + Decode()
    + Reset()
    + SetNextOutputBuffer()
    - Decode()
}

class "XmlRawWriterBase64Encoder" {
    + WriteChars()
    + WriteCharsAsync()
}

class "XmlTextWriterBase64Encoder" {
    + WriteChars()
    + WriteCharsAsync()
}

class "BinHexDecoder" {
    + Decode()
    + Decode()
    + Reset()
    + SetNextOutputBuffer()
}

class "XmlSqlBinaryReader" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + ReadAttributeValue()
    + Close()
    + LookupNamespace()
    + ResolveEntity()
    + Read()
    - SetupContentAsXXX()
    - FinishContentAsXXX()
    + ReadContentAsBoolean()
    + ReadContentAsDateTime()
    + ReadContentAsDouble()
    + ReadContentAsFloat()
    + ReadContentAsDecimal()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsObject()
    + ReadContentAs()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    - VerifyVersion()
    - AddInitNamespace()
    - AddName()
    - AddQName()
    - NameFlush()
    - SkipExtn()
    - ReadQNameRef()
    - ReadNameRef()
    - FillAllowEOF()
    - Fill_()
    - Fill()
    - ReadByte()
    - ReadUShort()
    - ParseMB32()
    - ParseMB32_()
    - ParseMB32()
    - ParseMB64()
    - PeekToken()
    - ReadToken()
    - NextToken2()
    - NextToken1()
    - NextToken()
    - PeekNextToken()
    - RescanNextToken()
    - ParseText()
    - ScanText()
    - GetString()
    - GetStringAligned()
    - GetAttributeText()
    - LocateAttribute()
    - LocateAttribute()
    - PositionOnAttribute()
    - GrowElements()
    - GrowAttributes()
    - ClearAttributes()
    - PushNamespace()
    - PopNamespaces()
    - GenerateImpliedXmlnsAttrs()
    - ReadInit()
    - ScanAttributes()
    - SimpleCheckForDuplicateAttributes()
    - HashCheckForDuplicateAttributes()
    - XmlDeclValue()
    - CDATAValue()
    - FinishCDATA()
    - FinishEndElement()
    - ReadDoc()
    - ImplReadData()
    - ImplReadElement()
    - ImplReadEndElement()
    - ImplReadDoctype()
    - ImplReadPI()
    - ImplReadComment()
    - ImplReadCDATA()
    - ImplReadNest()
    - ImplReadEndNest()
    - ImplReadXmlText()
    - UpdateFromTextReader()
    - UpdateFromTextReader()
    - CheckAllowContent()
    - GenerateTokenTypeMap()
    - GetValueType()
    - ReScanOverValue()
    - ScanOverValue()
    - ScanOverAnyValue()
    - CheckText()
    - CheckTextIsWS()
    - CheckValueTokenBounds()
    - GetXsdKatmaiTokenLength()
    - XsdKatmaiTimeScaleToValueLength()
    - ValueAsLong()
    - ValueAsULong()
    - ValueAsDecimal()
    - ValueAsDouble()
    - ValueAsDateTime()
    - ValueAsDateTimeOffset()
    - ValueAsDateTimeString()
    - ValueAsString()
    - ValueAsObject()
    - GetValueConverter()
    - ValueAs()
    - GetInt16()
    - GetUInt16()
    - GetInt32()
    - GetUInt32()
    - GetInt64()
    - GetUInt64()
    - GetSingle()
    - GetDouble()
    - ThrowUnexpectedToken()
    - ThrowXmlException()
    - ThrowXmlException()
    - ThrowNotSupported()
    + GetValueAsync()
    + ReadAsync()
    + ReadContentAsObjectAsync()
    + ReadContentAsAsync()
    + MoveToContentAsync()
    + ReadContentAsStringAsync()
    + ReadContentAsBase64Async()
    + ReadElementContentAsAsync()
    + ReadElementContentAsObjectAsync()
    + ReadElementContentAsBinHexAsync()
    + ReadInnerXmlAsync()
    + ReadOuterXmlAsync()
    + ReadValueChunkAsync()
    + SkipAsync()
    + ReadElementContentAsStringAsync()
}

class "BitStack" {
    + PushBit()
    + PopBit()
    + PeekBit()
    - PushCurr()
    - PopCurr()
}

class "ByteStack" {
    + Push()
    + Pop()
    + Peek()
}

class "CharEntityEncoderFallback" {
    + CreateFallbackBuffer()
    + Reset()
    + CanReplaceAt()
}

class "CharEntityEncoderFallbackBuffer" {
    + Fallback()
    + Fallback()
    + GetNextChar()
    + MovePrevious()
    + Reset()
    - SurrogateCharToUtf32()
}

class "HtmlEncodedRawTextWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteProcessingInstruction()
    + WriteString()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteChars()
    - Init()
    + WriteMetaElement()
    + WriteHtmlElementTextBlock()
    + WriteHtmlAttributeTextBlock()
    - WriteHtmlAttributeText()
    - WriteUriAttributeText()
    - OutputRestAmps()
}

class "HtmlEncodedRawTextWriterIndent" {
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + WriteEndElement()
    + WriteStartAttribute()
    + FlushBuffer()
    - Init()
    - WriteIndent()
}

class "HtmlUtf8RawTextWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteProcessingInstruction()
    + WriteString()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteChars()
    - Init()
    + WriteMetaElement()
    + WriteHtmlElementTextBlock()
    + WriteHtmlAttributeTextBlock()
    - WriteHtmlAttributeText()
    - WriteUriAttributeText()
    - OutputRestAmps()
}

class "HtmlUtf8RawTextWriterIndent" {
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + WriteEndElement()
    + WriteStartAttribute()
    + FlushBuffer()
    - Init()
    - WriteIndent()
}

class "OnRemoveWriter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "IncrementalReadDummyDecoder" {
    + SetNextOutputBuffer()
    + Decode()
    + Decode()
    + Reset()
}

class "IncrementalReadCharsDecoder" {
    + Decode()
    + Decode()
    + Reset()
    + SetNextOutputBuffer()
}

class "QueryOutputWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + StartElementContent()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteStartNamespaceDeclaration()
    + WriteEndNamespaceDeclaration()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteRaw()
    + WriteRaw()
    + Close()
    + Flush()
    - StartCDataSection()
    - EndCDataSection()
}

class "QueryOutputWriterV1" {
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteBase64()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteRaw()
    + WriteRaw()
    + Close()
    + Flush()
    + LookupPrefix()
    - StartCDataSection()
    - EndCDataSection()
}

class "ReadContentAsBinaryHelper" {
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    + Finish()
    + Reset()
    - Init()
    - InitOnElement()
    - InitBase64Decoder()
    - InitBinHexDecoder()
    - ReadContentAsBinary()
    - ReadElementContentAsBinary()
    - MoveToNextContentNode()
    + ReadContentAsBase64Async()
    + ReadContentAsBinHexAsync()
    + ReadElementContentAsBase64Async()
    + ReadElementContentAsBinHexAsync()
    + FinishAsync()
    - InitAsync()
    - InitOnElementAsync()
    - ReadContentAsBinaryAsync()
    - ReadElementContentAsBinaryAsync()
    - MoveToNextContentNodeAsync()
}

class "TernaryTreeReadOnly" {
    + FindCaseInsensitiveString()
}

class "SecureStringHasher" {
    + Equals()
    + GetHashCode()
}

class "HashCodeOfStringDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TextEncodedRawTextWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + StartElementContent()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
}

class "TextUtf8RawTextWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + StartElementContent()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
}

class "ValidatingReaderNodeData" {
    + GetAtomizedNameWPrefix()
    + Clear()
    + ClearName()
    + SetLineInfo()
    + SetLineInfo()
    + SetItemData()
    + SetItemData()
    + SetItemData()
    + SetItemData()
}

class "XmlAutoDetectWriter" {
    + WriteDocType()
    + WriteStartElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteBase64()
    + WriteBinHex()
    + Close()
    + Flush()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteNamespaceDeclaration()
    + WriteStartNamespaceDeclaration()
    + WriteEndNamespaceDeclaration()
    - EnsureWrappedWriter()
    - TextBlockCreatesWriter()
    - CreateWrappedWriter()
}

class "XmlCharCheckingReader" {
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    + ReadAttributeValue()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    - Throw()
    - Throw()
    - CheckWhitespace()
    - ValidateQName()
    - ValidateQName()
    - CheckCharacters()
    - FinishReadBinary()
    + ReadAsync()
    + ReadContentAsBase64Async()
    + ReadContentAsBinHexAsync()
    + ReadElementContentAsBase64Async()
    + ReadElementContentAsBinHexAsync()
    - FinishReadBinaryAsync()
    - <>n__0()
    - <>n__1()
    - <>n__2()
    - <>n__3()
    - <>n__4()
}

class "XmlCharCheckingReaderWithNS" {
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
}

class "XmlCharCheckingWriter" {
    + WriteDocType()
    + WriteStartElement()
    + WriteStartAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteNmToken()
    + WriteName()
    + WriteQualifiedName()
    - CheckCharacters()
    - CheckCharacters()
    - ValidateNCName()
    - ValidateQName()
    - ReplaceNewLines()
    - ReplaceNewLines()
    - InterleaveInvalidChars()
    + WriteDocTypeAsync()
    + WriteStartElementAsync()
    + WriteStartAttributeAsync()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteCharsAsync()
    + WriteNmTokenAsync()
    + WriteNameAsync()
    + WriteQualifiedNameAsync()
}

class "XmlEncodedRawTextWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteStartNamespaceDeclaration()
    + WriteEndNamespaceDeclaration()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + Close()
    + Flush()
    + FlushBuffer()
    - EncodeChars()
    - FlushEncoder()
    + WriteAttributeTextBlock()
    + WriteElementTextBlock()
    + RawText()
    + RawText()
    + WriteRawWithCharChecking()
    + WriteCommentOrPi()
    + WriteCDataSection()
    - InvalidXmlChar()
    + EncodeChar()
    + ChangeTextContentMark()
    - GrowTextContentMarks()
    + WriteNewLine()
    + ValidateContentChars()
    + CheckAsyncCall()
    + WriteXmlDeclarationAsync()
    + WriteXmlDeclarationAsync()
    + WriteDocTypeAsync()
    + WriteStartElementAsync()
    - WriteStartElementAsync_SetAttEndPos()
    + WriteEndElementAsync()
    + WriteFullEndElementAsync()
    + WriteStartAttributeAsync()
    - WriteStartAttribute_SetInAttribute()
    + WriteEndAttributeAsync()
    + WriteNamespaceDeclarationAsync()
    + WriteStartNamespaceDeclarationAsync()
    + WriteEndNamespaceDeclarationAsync()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteCharEntityAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteCharsAsync()
    + WriteRawAsync()
    + WriteRawAsync()
    + FlushAsync()
    + FlushBufferAsync()
    - EncodeCharsAsync()
    - FlushEncoderAsync()
    + WriteAttributeTextBlockNoFlush()
    + WriteAttributeTextBlockNoFlush()
    + WriteAttributeTextBlockNoFlush()
    + WriteAttributeTextBlockAsync()
    + WriteAttributeTextBlockAsync()
    - _WriteAttributeTextBlockAsync()
    + WriteElementTextBlockNoFlush()
    + WriteElementTextBlockNoFlush()
    + WriteElementTextBlockNoFlush()
    + WriteElementTextBlockAsync()
    + WriteElementTextBlockAsync()
    - _WriteElementTextBlockAsync()
    + RawTextNoFlush()
    + RawTextNoFlush()
    + RawTextAsync()
    - _RawTextAsync()
    + WriteRawWithCharCheckingNoFlush()
    + WriteRawWithCharCheckingNoFlush()
    + WriteRawWithCharCheckingNoFlush()
    + WriteRawWithCharCheckingAsync()
    + WriteRawWithCharCheckingAsync()
    + WriteCommentOrPiNoFlush()
    + WriteCommentOrPiAsync()
    + WriteCDataSectionNoFlush()
    + WriteCDataSectionAsync()
}

class "XmlEncodedRawTextWriterIndent" {
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + OnRootElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    - Init()
    - WriteIndent()
    + WriteDocTypeAsync()
    + WriteStartElementAsync()
    + WriteEndElementAsync()
    + WriteFullEndElementAsync()
    + WriteStartAttributeAsync()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteCharEntityAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    + WriteCharsAsync()
    + WriteRawAsync()
    + WriteRawAsync()
    + WriteBase64Async()
    - WriteIndentAsync()
    - <>n__0()
    - <>n__1()
    - <>n__2()
    - <>n__3()
    - <>n__4()
    - <>n__5()
    - <>n__6()
}

class "XmlEventCache" {
    + EndEvents()
    + EventsToWriter()
    + EventsToString()
    + WriteDocType()
    + WriteStartElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteBase64()
    + WriteBinHex()
    + Close()
    + Flush()
    + WriteValue()
    + WriteValue()
    + Dispose()
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteNamespaceDeclaration()
    + WriteEndBase64()
    - AddEvent()
    - AddEvent()
    - AddEvent()
    - AddEvent()
    - AddEvent()
    - AddEvent()
    - NewEvent()
}

class "XmlReaderSettings" {
    + GetXmlResolver()
    + GetXmlResolver_CheckConfig()
    + Reset()
    + Clone()
    + GetEventHandler()
    + CreateReader()
    + CreateReader()
    + CreateReader()
    + CreateReader()
    - CheckReadOnly()
    - Initialize()
    - Initialize()
    + AddValidation()
    - AddValidationAndConformanceWrapper()
    - CreateDtdValidatingReader()
    + AddConformanceWrapper()
}

class "XmlSubtreeReader" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + ReadAttributeValue()
    + Read()
    + Close()
    + Skip()
    + ReadContentAsObject()
    + ReadContentAsBoolean()
    + ReadContentAsDateTime()
    + ReadContentAsDouble()
    + ReadContentAsFloat()
    + ReadContentAsDecimal()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsString()
    + ReadContentAs()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBinHex()
    + ReadValueChunk()
    + LookupNamespace()
    + Dispose()
    - System.Xml.IXmlLineInfo.HasLineInfo()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    - ProcessNamespaces()
    - AddNamespace()
    - RemoveNamespace()
    - MoveToNsAttribute()
    - InitReadElementContentAsBinary()
    - FinishReadElementContentAsBinary()
    - FinishReadContentAsBinary()
    - SetEmptyNode()
    - SetCurrentNode()
    - InitReadContentAsType()
    - FinishReadContentAsType()
    - CheckBuffer()
    + GetValueAsync()
    + ReadAsync()
    + SkipAsync()
    + ReadContentAsObjectAsync()
    + ReadContentAsStringAsync()
    + ReadContentAsAsync()
    + ReadContentAsBase64Async()
    + ReadElementContentAsBase64Async()
    + ReadContentAsBinHexAsync()
    + ReadElementContentAsBinHexAsync()
    + ReadValueChunkAsync()
    - InitReadElementContentAsBinaryAsync()
    - FinishReadElementContentAsBinaryAsync()
    - FinishReadContentAsBinaryAsync()
}

class "NodeData" {
    + Set()
}

class "XmlTextEncoder" {
    + StartAttribute()
    + EndAttribute()
    + WriteSurrogateChar()
    + Write()
    + WriteSurrogateCharEntity()
    + Write()
    + WriteRawWithSurrogateChecking()
    + WriteRaw()
    + WriteRaw()
    + WriteCharEntity()
    + WriteEntityRef()
    + Flush()
    - WriteStringFragment()
    - WriteCharEntityImpl()
    - WriteCharEntityImpl()
    - WriteEntityRefImpl()
}

class "XmlTextReader" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + ReadAttributeValue()
    + Read()
    + Close()
    + Skip()
    + LookupNamespace()
    + ResolveEntity()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBinHex()
    + ReadString()
    + HasLineInfo()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    + GetNamespacesInScope()
    + ResetState()
    + GetRemainder()
    + ReadChars()
    + ReadBase64()
    + ReadBinHex()
}

class "XmlTextReaderImpl" {
    - FinishInitUriString()
    - FinishInitStream()
    - FinishInitTextReader()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    - FinishInit()
    + Read()
    + Close()
    + Skip()
    + LookupNamespace()
    + ReadAttributeValue()
    + ResolveEntity()
    + MoveOffEntityReference()
    + ReadString()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    + ReadValueChunk()
    + HasLineInfo()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    + GetNamespacesInScope()
    + LookupPrefix()
    + ResetState()
    + GetRemainder()
    + ReadChars()
    + ReadBase64()
    + ReadBinHex()
    + DtdParserProxy_OnNewLine()
    + DtdParserProxy_ReadData()
    + DtdParserProxy_ParseNumericCharRef()
    + DtdParserProxy_ParseNamedCharRef()
    + DtdParserProxy_ParsePI()
    + DtdParserProxy_ParseComment()
    - GetTempResolver()
    + DtdParserProxy_PushEntity()
    + DtdParserProxy_PopEntity()
    + DtdParserProxy_PushExternalSubset()
    + DtdParserProxy_PushInternalDtd()
    + DtdParserProxy_Throw()
    + DtdParserProxy_OnSystemId()
    + DtdParserProxy_OnPublicId()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - ReThrow()
    - ThrowWithoutLineInfo()
    - ThrowWithoutLineInfo()
    - ThrowWithoutLineInfo()
    - ThrowInvalidChar()
    - SetErrorState()
    - SendValidationEvent()
    - SendValidationEvent()
    - FinishAttributeValueIterator()
    - InitStreamInput()
    - InitStreamInput()
    - InitStreamInput()
    - InitStreamInput()
    - InitStreamInput()
    - InitTextReaderInput()
    - InitTextReaderInput()
    - InitStringInput()
    - InitFragmentReader()
    - ProcessDtdFromParserContext()
    - OpenUrl()
    - OpenUrlDelegate()
    - DetectEncoding()
    - SetupEncoding()
    - SwitchEncoding()
    - CheckEncoding()
    - UnDecodeChars()
    - SwitchEncodingToUTF8()
    - ReadData()
    - GetChars()
    - InvalidCharRecovery()
    + Close()
    - ShiftBuffer()
    - ParseXmlDeclaration()
    - ParseDocumentContent()
    - ParseElementContent()
    - ThrowUnclosedElements()
    - ParseElement()
    - AddDefaultAttributesAndNormalize()
    - ParseEndElement()
    - ThrowTagMismatch()
    - ParseAttributes()
    - ElementNamespaceLookup()
    - AttributeNamespaceLookup()
    - AttributeDuplCheck()
    - OnDefaultNamespaceDecl()
    - OnNamespaceDecl()
    - OnXmlReservedAttribute()
    - ParseAttributeValueSlow()
    - AddAttributeChunkToList()
    - ParseText()
    - ParseText()
    - FinishPartialValue()
    - FinishOtherValueIterator()
    - SkipPartialTextValue()
    - FinishReadValueChunk()
    - FinishReadContentAsBinary()
    - FinishReadElementContentAsBinary()
    - ParseRootLevelWhitespace()
    - ParseEntityReference()
    - HandleEntityReference()
    - HandleGeneralEntityReference()
    - HandleEntityEnd()
    - SetupEndEntityNodeInContent()
    - SetupEndEntityNodeInAttribute()
    - ParsePI()
    - ParsePI()
    - ParsePIValue()
    - ParseComment()
    - ParseCData()
    - ParseCDataOrComment()
    - ParseCDataOrComment()
    - ParseDoctypeDecl()
    - ParseDtd()
    - SkipDtd()
    - SkipPublicOrSystemIdLiteral()
    - SkipUntil()
    - EatWhitespaces()
    - ParseCharRefInline()
    - ParseNumericCharRef()
    - ParseNumericCharRefInline()
    - ParseNamedCharRef()
    - ParseNamedCharRefInline()
    - ParseName()
    - ParseQName()
    - ParseQName()
    - ReadDataInName()
    - ParseEntityName()
    - AddNode()
    - AllocNode()
    - AddAttributeNoChecks()
    - AddAttribute()
    - AddAttribute()
    - PopElementContext()
    - OnNewLine()
    - OnEof()
    - LookupNamespace()
    - AddNamespace()
    - ResetAttributes()
    - FullAttributeCleanup()
    - PushXmlContext()
    - PopXmlContext()
    - GetWhitespaceType()
    - GetTextNodeType()
    - PushExternalEntityOrSubset()
    - OpenAndPush()
    - PushExternalEntity()
    - PushInternalEntity()
    - PopEntity()
    - RegisterEntity()
    - UnregisterEntity()
    - PushParsingState()
    - PopParsingState()
    - InitIncrementalRead()
    - IncrementalRead()
    - IncrementalRead()
    - FinishIncrementalRead()
    - ParseFragmentAttribute()
    - ParseAttributeValueChunk()
    - ParseXmlDeclarationFragment()
    - ThrowUnexpectedToken()
    - ThrowUnexpectedToken()
    - ThrowUnexpectedToken()
    - ThrowUnexpectedToken()
    - ParseUnexpectedToken()
    - ParseUnexpectedToken()
    - ThrowExpectingWhitespace()
    - GetIndexOfAttributeWithoutPrefix()
    - GetIndexOfAttributeWithPrefix()
    - ZeroEndingStream()
    - ParseDtdFromParserContext()
    - InitReadContentAsBinary()
    - InitReadElementContentAsBinary()
    - MoveToNextContentNode()
    - SetupReadContentAsBinaryState()
    - SetupFromParserContext()
    + SetDtdInfo()
    + ChangeCurrentNodeType()
    + GetResolver()
    - AddDefaultAttributeDtd()
    + AddDefaultAttributeNonDtd()
    - AddDefaultAttributeInternal()
    - ReadContentAsBinary()
    - ReadElementContentAsBinary()
    - InitBase64Decoder()
    - InitBinHexDecoder()
    - UriEqual()
    - RegisterConsumedCharacters()
    - CheckAsyncCall()
    + GetValueAsync()
    - _GetValueAsync()
    - FinishInitAsync()
    - FinishInitUriStringAsync()
    - FinishInitStreamAsync()
    - FinishInitTextReaderAsync()
    + ReadAsync()
    - ReadAsync_SwitchToInteractiveXmlDecl()
    - _ReadAsync_SwitchToInteractiveXmlDecl()
    - ReadAsync_SwitchToInteractiveXmlDecl_Helper()
    + SkipAsync()
    - ReadContentAsBase64_AsyncHelper()
    + ReadContentAsBase64Async()
    + ReadContentAsBinHexAsync()
    - ReadElementContentAsBase64Async_Helper()
    + ReadElementContentAsBase64Async()
    + ReadElementContentAsBinHexAsync()
    + ReadValueChunkAsync()
    + DtdParserProxy_ReadDataAsync()
    + DtdParserProxy_ParseNumericCharRefAsync()
    + DtdParserProxy_ParseNamedCharRefAsync()
    + DtdParserProxy_ParsePIAsync()
    + DtdParserProxy_ParseCommentAsync()
    + DtdParserProxy_PushEntityAsync()
    + DtdParserProxy_PushExternalSubsetAsync()
    - InitStreamInputAsync()
    - InitStreamInputAsync()
    - InitStreamInputAsync()
    - InitTextReaderInputAsync()
    - InitTextReaderInputAsync()
    - ProcessDtdFromParserContextAsync()
    - SwitchEncodingAsync()
    - SwitchEncodingToUTF8Async()
    - ReadDataAsync()
    - ParseXmlDeclarationAsync()
    - ParseDocumentContentAsync()
    - ParseDocumentContentAsync_CData()
    - ParseDocumentContentAsync_ParseEntity()
    - ParseDocumentContentAsync_WhiteSpace()
    - _ParseDocumentContentAsync_WhiteSpace()
    - ParseDocumentContentAsync_ReadData()
    - ParseElementContentAsync()
    - ParseElementContent_ReadData()
    - ParseElementAsync()
    - ParseElementAsync_ContinueWithSetElement()
    - _ParseElementAsync_ContinueWithSetElement()
    - ParseElementAsync_SetElement()
    - ParseElementAsync_NoAttributes()
    - ParseElementAsync_ReadData()
    - ParseEndElementAsync()
    - _ParseEndElmentAsync()
    - ParseEndElmentAsync_PrepareData()
    - ParseEndElementAsync_CheckNameAndParse()
    - ParseEndElementAsync_Finish()
    - ParseEndElementAsync_Finish()
    - ParseEndElementAsync_CheckEndTag()
    - ParseEndElementAsync_ReadData()
    - ThrowTagMismatchAsync()
    - ParseAttributesAsync()
    - ParseAttributeValueSlowAsync()
    - ParseTextAsync()
    - _ParseTextAsync()
    - ParseTextAsync_IgnoreNode()
    - ParseTextAsync()
    - ParseTextAsync_AsyncFunc()
    - ParseTextAsync()
    - ParseTextAsync_ParseEntity()
    - ParseTextAsync_Surrogate()
    - ParseTextAsync_ReadData()
    - ParseTextAsync_NoValue()
    - ParseTextAsync_PartialValue()
    - FinishPartialValueAsync()
    - FinishOtherValueIteratorAsync()
    - SkipPartialTextValueAsync()
    - FinishReadValueChunkAsync()
    - FinishReadContentAsBinaryAsync()
    - FinishReadElementContentAsBinaryAsync()
    - ParseRootLevelWhitespaceAsync()
    - ParseEntityReferenceAsync()
    - HandleEntityReferenceAsync()
    - HandleGeneralEntityReferenceAsync()
    - ParsePIAsync()
    - ParsePIAsync()
    - ParsePIValueAsync()
    - ParseCommentAsync()
    - ParseCDataAsync()
    - ParseCDataOrCommentAsync()
    - ParseCDataOrCommentTupleAsync()
    - ParseDoctypeDeclAsync()
    - ParseDtdAsync()
    - SkipDtdAsync()
    - SkipPublicOrSystemIdLiteralAsync()
    - SkipUntilAsync()
    - EatWhitespacesAsync()
    - ParseNumericCharRefAsync()
    - ParseNamedCharRefAsync()
    - ParseNameAsync()
    - ParseQNameAsync()
    - ParseQNameAsync()
    - ReadDataInNameAsync()
    - ParseEntityNameAsync()
    - PushExternalEntityOrSubsetAsync()
    - OpenAndPushAsync()
    - PushExternalEntityAsync()
    - ZeroEndingStreamAsync()
    - ParseDtdFromParserContextAsync()
    - InitReadContentAsBinaryAsync()
    - InitReadElementContentAsBinaryAsync()
    - MoveToNextContentNodeAsync()
    - ReadContentAsBinaryAsync()
    - ReadElementContentAsBinaryAsync()
}

class "NoNamespaceManager" {
    + PushScope()
    + PopScope()
    + AddNamespace()
    + RemoveNamespace()
    + GetEnumerator()
    + GetNamespacesInScope()
    + LookupNamespace()
    + LookupPrefix()
    + HasNamespace()
}

class "DtdParserProxy" {
    - System.Xml.IDtdParserAdapter.OnNewLine()
    - System.Xml.IDtdParserAdapter.ReadData()
    - System.Xml.IDtdParserAdapter.ParseNumericCharRef()
    - System.Xml.IDtdParserAdapter.ParseNamedCharRef()
    - System.Xml.IDtdParserAdapter.ParsePI()
    - System.Xml.IDtdParserAdapter.ParseComment()
    - System.Xml.IDtdParserAdapter.PushEntity()
    - System.Xml.IDtdParserAdapter.PopEntity()
    - System.Xml.IDtdParserAdapter.PushExternalSubset()
    - System.Xml.IDtdParserAdapter.PushInternalDtd()
    - System.Xml.IDtdParserAdapter.Throw()
    - System.Xml.IDtdParserAdapter.OnSystemId()
    - System.Xml.IDtdParserAdapter.OnPublicId()
    - System.Xml.IDtdParserAdapter.ReadDataAsync()
    - System.Xml.IDtdParserAdapter.ParseNumericCharRefAsync()
    - System.Xml.IDtdParserAdapter.ParseNamedCharRefAsync()
    - System.Xml.IDtdParserAdapter.ParsePIAsync()
    - System.Xml.IDtdParserAdapter.ParseCommentAsync()
    - System.Xml.IDtdParserAdapter.PushEntityAsync()
    - System.Xml.IDtdParserAdapter.PushExternalSubsetAsync()
}

class "NodeData" {
    + TrimSpacesInValue()
    + Clear()
    + ClearName()
    + SetLineInfo()
    + SetLineInfo2()
    + SetValueNode()
    + SetValueNode()
    + SetNamedNode()
    + SetNamedNode()
    + SetValue()
    + SetValue()
    + OnBufferInvalidated()
    + CopyTo()
    + CopyTo()
    + CopyToBinary()
    + AdjustLineInfo()
    + GetNameWPrefix()
    + CreateNameWPrefix()
    - System.IComparable.CompareTo()
}

class "DtdDefaultAttributeInfoToNodeDataComparer" {
    + Compare()
}

class "OnDefaultAttributeUseDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlTextWriter" {
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    + WriteBinHex()
    + Close()
    + Flush()
    + WriteName()
    + WriteQualifiedName()
    + LookupPrefix()
    + WriteNmToken()
    - StartDocument()
    - AutoComplete()
    - AutoCompleteAll()
    - InternalWriteEndElement()
    - WriteEndStartTag()
    - WriteEndAttributeQuote()
    - Indent()
    - PushNamespace()
    - AddNamespace()
    - AddToNamespaceHashtable()
    - PopNamespaces()
    - GeneratePrefix()
    - InternalWriteProcessingInstruction()
    - LookupNamespace()
    - LookupNamespaceInCurrentScope()
    - FindPrefix()
    - InternalWriteName()
    - ValidateName()
    - HandleSpecialAttribute()
    - VerifyPrefixXml()
    - PushStack()
    - FlushEncoders()
}

class "XmlUtf8RawTextWriter" {
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteStartNamespaceDeclaration()
    + WriteEndNamespaceDeclaration()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + Close()
    + Flush()
    + FlushBuffer()
    - FlushEncoder()
    + WriteAttributeTextBlock()
    + WriteElementTextBlock()
    + RawText()
    + RawText()
    + WriteRawWithCharChecking()
    + WriteCommentOrPi()
    + WriteCDataSection()
    - InvalidXmlChar()
    + EncodeChar()
    + WriteNewLine()
    + ValidateContentChars()
    + CheckAsyncCall()
    + WriteXmlDeclarationAsync()
    + WriteXmlDeclarationAsync()
    + WriteDocTypeAsync()
    + WriteStartElementAsync()
    - WriteStartElementAsync_SetAttEndPos()
    + WriteEndElementAsync()
    + WriteFullEndElementAsync()
    + WriteStartAttributeAsync()
    - WriteStartAttribute_SetInAttribute()
    + WriteEndAttributeAsync()
    + WriteNamespaceDeclarationAsync()
    + WriteStartNamespaceDeclarationAsync()
    + WriteEndNamespaceDeclarationAsync()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteCharEntityAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteCharsAsync()
    + WriteRawAsync()
    + WriteRawAsync()
    + FlushAsync()
    + FlushBufferAsync()
    - FlushEncoderAsync()
    + WriteAttributeTextBlockNoFlush()
    + WriteAttributeTextBlockNoFlush()
    + WriteAttributeTextBlockNoFlush()
    + WriteAttributeTextBlockAsync()
    + WriteAttributeTextBlockAsync()
    - _WriteAttributeTextBlockAsync()
    + WriteElementTextBlockNoFlush()
    + WriteElementTextBlockNoFlush()
    + WriteElementTextBlockNoFlush()
    + WriteElementTextBlockAsync()
    + WriteElementTextBlockAsync()
    - _WriteElementTextBlockAsync()
    + RawTextNoFlush()
    + RawTextNoFlush()
    + RawTextAsync()
    - _RawTextAsync()
    + WriteRawWithCharCheckingNoFlush()
    + WriteRawWithCharCheckingNoFlush()
    + WriteRawWithCharCheckingNoFlush()
    + WriteRawWithCharCheckingAsync()
    + WriteRawWithCharCheckingAsync()
    + WriteCommentOrPiNoFlush()
    + WriteCommentOrPiAsync()
    + WriteCDataSectionNoFlush()
    + WriteCDataSectionAsync()
}

class "XmlUtf8RawTextWriterIndent" {
    + WriteDocType()
    + WriteStartElement()
    + StartElementContent()
    + OnRootElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    - Init()
    - WriteIndent()
    + WriteDocTypeAsync()
    + WriteStartElementAsync()
    + WriteEndElementAsync()
    + WriteFullEndElementAsync()
    + WriteStartAttributeAsync()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteCharEntityAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    + WriteCharsAsync()
    + WriteRawAsync()
    + WriteRawAsync()
    + WriteBase64Async()
    - WriteIndentAsync()
    - <>n__0()
    - <>n__1()
    - <>n__2()
    - <>n__3()
    - <>n__4()
    - <>n__5()
    - <>n__6()
}

class "XmlValidatingReader" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + ReadAttributeValue()
    + Read()
    + Close()
    + LookupNamespace()
    + ResolveEntity()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBinHex()
    + ReadString()
    + HasLineInfo()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    + ReadTypedValue()
}

class "XmlValidatingReaderImpl" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    + Close()
    + LookupNamespace()
    + ReadAttributeValue()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    + ResolveEntity()
    + MoveOffEntityReference()
    + ReadString()
    + HasLineInfo()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    + GetNamespacesInScope()
    + LookupPrefix()
    + ReadTypedValue()
    - ParseDtdFromParserContext()
    - ValidateDtd()
    - ResolveEntityInternally()
    - SetupValidation()
    - GetResolver()
    - ProcessCoreReaderEvent()
    + Close()
    + AddDefaultAttribute()
    + ValidateDefaultAttributeOnUse()
    + GetValueAsync()
    + ReadAsync()
    + ReadContentAsBase64Async()
    + ReadContentAsBinHexAsync()
    + ReadElementContentAsBase64Async()
    + ReadElementContentAsBinHexAsync()
    + MoveOffEntityReferenceAsync()
    + ReadTypedValueAsync()
    - ParseDtdFromParserContextAsync()
    - ResolveEntityInternallyAsync()
}

class "ValidationEventHandling" {
    - System.Xml.IValidationEventHandling.SendEvent()
    + AddHandler()
    + RemoveHandler()
}

class "XmlWellFormedWriter" {
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    + Close()
    + Flush()
    + LookupPrefix()
    + WriteQualifiedName()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteBinHex()
    - SetSpecialAttribute()
    - WriteStartDocumentImpl()
    - StartFragment()
    - PushNamespaceImplicit()
    - PushNamespaceExplicit()
    - AddNamespace()
    - AddToNamespaceHashtable()
    - LookupNamespaceIndex()
    - PopNamespaces()
    - AdvanceState()
    - StartElementContent()
    + LookupNamespace()
    - LookupLocalNamespace()
    - GeneratePrefix()
    - CheckNCName()
    - ThrowInvalidStateTransition()
    - AddAttribute()
    - AddToAttrHashTable()
    + WriteStartDocumentAsync()
    + WriteStartDocumentAsync()
    + WriteEndDocumentAsync()
    + WriteDocTypeAsync()
    - TryReturnTask()
    - _TryReturnTask()
    - SequenceRun()
    - _SequenceRun()
    + WriteStartElementAsync()
    - WriteStartElementAsync_NoAdvanceState()
    - WriteStartElementAsync_NoAdvanceState()
    - WriteStartElementAsync_FinishWrite()
    - WriteStartElementAsync_FinishWrite()
    + WriteEndElementAsync()
    - WriteEndElementAsync_NoAdvanceState()
    - WriteEndElementAsync_FinishWrite()
    + WriteFullEndElementAsync()
    - WriteFullEndElementAsync_NoAdvanceState()
    + WriteStartAttributeAsync()
    - WriteStartAttributeAsync_NoAdvanceState()
    - WriteStartAttributeAsync_NoAdvanceState()
    + WriteEndAttributeAsync()
    - WriteEndAttributeAsync_NoAdvance()
    - WriteEndAttributeAsync_SepcialAtt()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteCharEntityAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    - WriteStringAsync_NoAdvanceState()
    - WriteStringAsync_NoAdvanceState()
    + WriteCharsAsync()
    + WriteRawAsync()
    + WriteRawAsync()
    + WriteBase64Async()
    - WriteBase64Async_NoAdvanceState()
    + FlushAsync()
    + WriteQualifiedNameAsync()
    + WriteBinHexAsync()
    - WriteStartDocumentImplAsync()
    - AdvanceStateAsync_ReturnWhenFinish()
    - _AdvanceStateAsync_ReturnWhenFinish()
    - AdvanceStateAsync_ContinueWhenFinish()
    - _AdvanceStateAsync_ContinueWhenFinish()
    - AdvanceStateAsync()
    - StartElementContentAsync_WithNS()
    - StartElementContentAsync()
    - <>n__0()
}

class "NamespaceResolverProxy" {
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
}

class "AttributeValueCache" {
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteValue()
    + Replay()
    + Trim()
    + Clear()
    - StartComplexValue()
    - AddItem()
    + ReplayAsync()
}

class "Item" {
    + Set()
}

class "XmlWrappingReader" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    + Close()
    + Skip()
    + LookupNamespace()
    + ResolveEntity()
    + ReadAttributeValue()
    + HasLineInfo()
    + GetValueAsync()
    + ReadAsync()
    + SkipAsync()
}

class "XmlWrappingWriter" {
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    + Close()
    + Flush()
    + LookupPrefix()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + Dispose()
    + WriteStartDocumentAsync()
    + WriteStartDocumentAsync()
    + WriteEndDocumentAsync()
    + WriteDocTypeAsync()
    + WriteStartElementAsync()
    + WriteEndElementAsync()
    + WriteFullEndElementAsync()
    + WriteStartAttributeAsync()
    + WriteEndAttributeAsync()
    + WriteCDataAsync()
    + WriteCommentAsync()
    + WriteProcessingInstructionAsync()
    + WriteEntityRefAsync()
    + WriteCharEntityAsync()
    + WriteWhitespaceAsync()
    + WriteStringAsync()
    + WriteSurrogateCharEntityAsync()
    + WriteCharsAsync()
    + WriteRawAsync()
    + WriteRawAsync()
    + WriteBase64Async()
    + FlushAsync()
}

class "XmlWriterSettings" {
    + Reset()
    + Clone()
    + CreateWriter()
    + CreateWriter()
    + CreateWriter()
    + CreateWriter()
    - CheckReadOnly()
    - Initialize()
    - AddConformanceWrapper()
    + GetObjectData()
}

class "XsdCachingReader" {
    - Init()
    + Reset()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    + RecordTextNode()
    + SwitchTextNodeAndEndElement()
    + RecordEndElementNode()
    + ReadOriginalContentAsString()
    + Close()
    + Skip()
    + LookupNamespace()
    + ResolveEntity()
    + ReadAttributeValue()
    - System.Xml.IXmlLineInfo.HasLineInfo()
    + SetToReplayMode()
    + GetCoreReader()
    + GetLineInfo()
    - ClearAttributesInfo()
    - AddAttribute()
    - AddContent()
    - RecordAttributes()
    - GetAttributeIndexWithoutPrefix()
    - GetAttributeIndexWithPrefix()
    - CreateDummyTextNode()
    + GetValueAsync()
    + ReadAsync()
    + SkipAsync()
    + SetToReplayModeAsync()
}

class "CachingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AttributePSVIInfo" {
    + Reset()
}

class "XsdValidatingReader" {
    - Init()
    - SetupValidator()
    + ReadContentAsObject()
    + ReadContentAsBoolean()
    + ReadContentAsDateTime()
    + ReadContentAsDouble()
    + ReadContentAsFloat()
    + ReadContentAsDecimal()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsString()
    + ReadContentAs()
    + ReadElementContentAsObject()
    + ReadElementContentAsBoolean()
    + ReadElementContentAsDateTime()
    + ReadElementContentAsDouble()
    + ReadElementContentAsFloat()
    + ReadElementContentAsDecimal()
    + ReadElementContentAsInt()
    + ReadElementContentAsLong()
    + ReadElementContentAsString()
    + ReadElementContentAs()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    + Close()
    + Skip()
    + LookupNamespace()
    + ResolveEntity()
    + ReadAttributeValue()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    + HasLineInfo()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    - GetStringValue()
    - ProcessReaderEvent()
    - ProcessElementEvent()
    - ProcessEndElementEvent()
    - ValidateAttributes()
    - ClearAttributesInfo()
    - GetAttributePSVI()
    - GetAttributePSVI()
    - GetDefaultAttribute()
    - GetDefaultAttribute()
    - AddAttributePSVI()
    - IsXSDRoot()
    - ProcessInlineSchema()
    - InternalReadContentAsObject()
    - InternalReadContentAsObject()
    - InternalReadContentAsObject()
    - InternalReadElementContentAsObject()
    - InternalReadElementContentAsObject()
    - InternalReadElementContentAsObject()
    - ReadTillEndElement()
    - SwitchReader()
    - ReadAheadForMemberType()
    - GetIsDefault()
    - GetMemberType()
    - ReturnBoxedValue()
    - GetCachingReader()
    + CreateDummyTextNode()
    + CachingCallBack()
    - GetOriginalAtomicValueStringOfElement()
    + GetValueAsync()
    + ReadContentAsObjectAsync()
    + ReadContentAsStringAsync()
    + ReadContentAsAsync()
    + ReadElementContentAsObjectAsync()
    + ReadElementContentAsStringAsync()
    + ReadElementContentAsAsync()
    - ReadAsync_Read()
    - _ReadAsync_Read()
    - ReadAsync_ReadAhead()
    - _ReadAsync_ReadAhead()
    + ReadAsync()
    + SkipAsync()
    + ReadContentAsBase64Async()
    + ReadContentAsBinHexAsync()
    + ReadElementContentAsBase64Async()
    + ReadElementContentAsBinHexAsync()
    - ProcessReaderEventAsync()
    - ProcessElementEventAsync()
    - ProcessEndElementEventAsync()
    - ProcessInlineSchemaAsync()
    - InternalReadContentAsObjectAsync()
    - InternalReadContentAsObjectAsync()
    - InternalReadContentAsObjectTupleAsync()
    - InternalReadElementContentAsObjectAsync()
    - InternalReadElementContentAsObjectAsync()
    - InternalReadElementContentAsObjectTupleAsync()
    - ReadTillEndElementAsync()
}

class "DocumentSchemaValidator" {
    + Validate()
    + GetNamespacesInScope()
    + LookupNamespace()
    + LookupPrefix()
    - CreateValidator()
    - ValidateNode()
    - ValidateElement()
    - ValidateAttributes()
    - SetDefaultAttributeSchemaInfo()
    - GetDefaultPrefix()
    - GetNodeValue()
    - FindSchemaInfo()
    - CheckNodeSequenceCapacity()
    - FindSchemaInfo()
    - GetTypeFromAncestors()
    - AncestorTypeHasWildcard()
    - GetComplexType()
    - ValidateSingleElement()
    - ValidateChildrenTillNextAncestor()
    - CreateTypeFinderValidator()
    - TypeFinderCallBack()
    - InternalValidationCallBack()
}

class "DocumentXPathNavigator" {
    + Clone()
    + SetValue()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + GetNamespace()
    + MoveToNamespace()
    + MoveToFirstNamespace()
    + MoveToNextNamespace()
    - PathHasDuplicateNamespace()
    + LookupNamespace()
    + MoveToNext()
    + MoveToPrevious()
    + MoveToFirst()
    + MoveToFirstChild()
    + MoveToParent()
    + MoveToRoot()
    + MoveTo()
    + MoveToId()
    + MoveToChild()
    + MoveToChild()
    + MoveToFollowing()
    + MoveToFollowing()
    + MoveToNext()
    + MoveToNext()
    + IsSamePosition()
    + IsDescendant()
    + CheckValidity()
    - Compare()
    + ComparePosition()
    - System.Xml.IHasXmlNode.GetNode()
    + SelectDescendants()
    + SelectDescendants()
    + PrependChild()
    + AppendChild()
    + InsertAfter()
    + InsertBefore()
    + CreateAttributes()
    + ReplaceRange()
    + DeleteRange()
    + DeleteSelf()
    + ResetPosition()
    - CalibrateText()
    - ParentNode()
    - ParentNodeTail()
    - FirstChild()
    - FirstChildTail()
    - NextSibling()
    - NextSiblingTail()
    - PreviousSibling()
    - PreviousSiblingTail()
    - PreviousText()
    - PreviousTextTail()
    - TextStart()
    - TextEnd()
}

class "DocumentXPathNodeIterator_Empty" {
    + Clone()
    + MoveNext()
}

class "DocumentXPathNodeIterator_AllElemChildren" {
    + Clone()
    + Match()
}

class "DocumentXPathNodeIterator_AllElemChildren_AndSelf" {
    + Clone()
    + MoveNext()
}

class "DocumentXPathNodeIterator_ElemChildren_NoLocalName" {
    + Clone()
    + Match()
}

class "DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName" {
    + Clone()
    + MoveNext()
}

class "DocumentXPathNodeIterator_ElemChildren" {
    + Clone()
    + Match()
}

class "DocumentXPathNodeIterator_ElemChildren_AndSelf" {
    + Clone()
    + MoveNext()
}

class "DocumentXmlWriter" {
    + SetSettings()
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteFullEndElement()
    + StartElementContent()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteStartNamespaceDeclaration()
    + WriteEndNamespaceDeclaration()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + Close()
    + Close()
    - CloseWithAppendAttribute()
    - CloseWithReplaceToFollowingSibling()
    + Flush()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    - AddAttribute()
    - AddChild()
    - StartState()
    - VerifyState()
}

class "DomNameTable" {
    + GetName()
    + AddName()
    - Grow()
}

class "XPathNodeList" {
    - GetNode()
    + ReadUntil()
    + Item()
    + GetEnumerator()
}

class "XmlNodeListEnumerator" {
    + Reset()
    + MoveNext()
}

class "XmlAttribute" {
    + CloneNode()
    + PrepareOwnerElementInElementIdAttrMap()
    + ResetOwnerElementInElementIdAttrMap()
    + AppendChildForLoad()
    + IsValidChildType()
    + InsertBefore()
    + InsertAfter()
    + ReplaceChild()
    + RemoveChild()
    + PrependChild()
    + AppendChild()
    + WriteTo()
    + WriteContentTo()
    + SetParent()
}

class "XmlAttributeCollection" {
    + FindNodeOffset()
    + FindNodeOffsetNS()
    + SetNamedItem()
    + Prepend()
    + Append()
    + InsertBefore()
    + InsertAfter()
    + Remove()
    + RemoveAt()
    + RemoveAll()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
    + AddNode()
    + InsertNodeAt()
    + RemoveNodeAt()
    + Detach()
    + InsertParentIntoElementIdAttrMap()
    + RemoveParentFromElementIdAttrMap()
    + RemoveDuplicateAttribute()
    + PrepareParentInElementIdAttrMap()
    + ResetParentInElementIdAttrMap()
    + InternalAppendAttribute()
}

class "XmlCDataSection" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "XmlChildEnumerator" {
    - System.Collections.IEnumerator.MoveNext()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "XmlChildNodes" {
    + Item()
    + GetEnumerator()
}

class "XmlComment" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "XmlDeclaration" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
    - IsValidXmlVersion()
}

class "XmlDocument" {
    + AddXmlName()
    + GetXmlName()
    + AddAttrXmlName()
    + AddIdInfo()
    - GetIDInfoByElement_()
    + GetIDInfoByElement()
    - GetElement()
    + AddElementWithId()
    + RemoveElementWithId()
    + CloneNode()
    + GetResolver()
    + IsValidChildType()
    - HasNodeTypeInPrevSiblings()
    - HasNodeTypeInNextSiblings()
    + CanInsertBefore()
    + CanInsertAfter()
    + CreateAttribute()
    + SetDefaultNamespace()
    + CreateCDataSection()
    + CreateComment()
    + CreateDocumentType()
    + CreateDocumentFragment()
    + CreateElement()
    + AddDefaultAttributes()
    - GetSchemaElementDecl()
    - PrepareDefaultAttribute()
    + CreateEntityReference()
    + CreateProcessingInstruction()
    + CreateXmlDeclaration()
    + CreateTextNode()
    + CreateSignificantWhitespace()
    + CreateNavigator()
    + CreateNavigator()
    - NormalizeText()
    + CreateWhitespace()
    + GetElementsByTagName()
    + CreateAttribute()
    + CreateElement()
    + GetElementsByTagName()
    + GetElementById()
    + ImportNode()
    - ImportNodeInternal()
    - ImportAttributes()
    - ImportChildren()
    + CreateAttribute()
    + CreateDefaultAttribute()
    + CreateElement()
    + CreateNode()
    + CreateNode()
    + CreateNode()
    + ReadNode()
    + ConvertToNodeType()
    - SetupReader()
    + Load()
    + Load()
    + Load()
    + Load()
    + LoadXml()
    + Save()
    + Save()
    + Save()
    + Save()
    + WriteTo()
    + WriteContentTo()
    + Validate()
    + Validate()
    + GetEventArgs()
    + GetInsertEventArgsForLoad()
    + BeforeEvent()
    + AfterEvent()
    + GetDefaultAttribute()
    + GetEntityNode()
    + SetBaseURI()
    + AppendChildForLoad()
}

class "XmlDocumentFragment" {
    + CloneNode()
    + IsValidChildType()
    + CanInsertAfter()
    + CanInsertBefore()
    + WriteTo()
    + WriteContentTo()
}

class "XmlDocumentType" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "XmlDOMTextWriter" {
    + WriteStartElement()
    + WriteStartAttribute()
}

class "XmlElement" {
    + CloneNode()
    + AppendChildForLoad()
    + IsValidChildType()
    + GetAttribute()
    + SetAttribute()
    + RemoveAttribute()
    + GetAttributeNode()
    + SetAttributeNode()
    + RemoveAttributeNode()
    + GetElementsByTagName()
    + GetAttribute()
    + SetAttribute()
    + RemoveAttribute()
    + GetAttributeNode()
    + SetAttributeNode()
    + RemoveAttributeNode()
    + GetElementsByTagName()
    + HasAttribute()
    + HasAttribute()
    + WriteTo()
    - WriteStartElement()
    + WriteContentTo()
    + RemoveAttributeAt()
    + RemoveAllAttributes()
    + RemoveAll()
    + RemoveAllChildren()
    + SetParent()
    + GetXPAttribute()
}

class "XmlElementList" {
    + Finalize()
    + ConcurrencyCheck()
    - NextElemInPreOrder()
    - PrevElemInPreOrder()
    - IsMatch()
    - GetMatchingNode()
    - GetNthMatchingNode()
    + GetNextNode()
    + Item()
    + GetEnumerator()
    + PrivateDisposeNodeList()
    + Dispose()
}

class "XmlElementListEnumerator" {
    + MoveNext()
    + Reset()
}

class "XmlEmptyElementListEnumerator" {
    + MoveNext()
    + Reset()
}

class "XmlElementListListener" {
    - OnListChanged()
    + Unregister()
}

class "XmlEntity" {
    + CloneNode()
    + IsValidChildType()
    + WriteTo()
    + WriteContentTo()
    + SetBaseURI()
}

class "XmlEntityReference" {
    + CloneNode()
    + SetParent()
    + SetParentForLoad()
    + IsValidChildType()
    + WriteTo()
    + WriteContentTo()
    - ConstructBaseURI()
}

class "XmlImplementation" {
    + HasFeature()
    + CreateDocument()
}

class "XmlLoader" {
    + Load()
    - LoadDocSequence()
    + ReadCurrentNode()
    - LoadNode()
    - LoadAttributeNode()
    - LoadDefaultAttribute()
    - LoadAttributeValue()
    - LoadEntityReferenceNode()
    - LoadDeclarationNode()
    - LoadDocumentTypeNode()
    - LoadNodeDirect()
    - LoadAttributeNodeDirect()
    + ParseDocumentType()
    - ParseDocumentType()
    - LoadDocumentType()
    - GetContext()
    + ParsePartialContent()
    + LoadInnerXmlElement()
    + LoadInnerXmlAttribute()
    - RemoveDuplicateNamespace()
    - EntitizeName()
    + ExpandEntity()
    + ExpandEntityReference()
    - CreateInnerXmlReader()
}

class "XmlName" {
    + Equals()
}

class "XmlNameEx" {
    + SetValidity()
    + SetIsDefault()
    + SetIsNil()
    + Equals()
}

class "XmlNamedNodeMap" {
    + GetNamedItem()
    + SetNamedItem()
    + RemoveNamedItem()
    + Item()
    + GetNamedItem()
    + RemoveNamedItem()
    + GetEnumerator()
    + FindNodeOffset()
    + FindNodeOffset()
    + AddNode()
    + AddNodeForLoad()
    + RemoveNodeAt()
    + ReplaceNodeAt()
    + InsertNodeAt()
}

class "SingleObjectEnumerator" {
    + MoveNext()
    + Reset()
}

class "XmlNodeChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlNodeReaderNavigator" {
    - IsLocalNameEmpty()
    - CheckIndexCondition()
    - InitDecAttr()
    + GetDeclarationAttr()
    + GetDeclarationAttr()
    + GetDecAttrInd()
    - InitDocTypeAttr()
    + GetDocumentTypeAttr()
    + GetDocumentTypeAttr()
    + GetDocTypeAttrInd()
    - GetAttributeFromElement()
    + GetAttribute()
    - GetAttributeFromElement()
    + GetAttribute()
    + GetAttribute()
    + LogMove()
    + RollBackMove()
    + ResetToAttribute()
    + ResetMove()
    + MoveToAttribute()
    - MoveToAttributeFromElement()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToNextAttribute()
    + MoveToParent()
    + MoveToFirstChild()
    - MoveToNextSibling()
    + MoveToNext()
    + MoveToElement()
    + LookupNamespace()
    + DefaultLookupNamespace()
    + LookupPrefix()
    + GetNamespacesInScope()
    + ReadAttributeValue()
}

class "XmlNodeReader" {
    + IsInReadingStates()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    - Read()
    - ReadNextNode()
    - SetEndOfFile()
    - ReadAtZeroLevel()
    - ReadForward()
    - ReSetReadingMarks()
    + Close()
    + Skip()
    + ReadString()
    + LookupNamespace()
    + ResolveEntity()
    + ReadAttributeValue()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    - FinishReadBinary()
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
}

class "XmlNotation" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "XmlProcessingInstruction" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "XmlSignificantWhitespace" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "XmlText" {
    + CloneNode()
    + SplitText()
    + WriteTo()
    + WriteContentTo()
}

class "XmlUnspecifiedAttribute" {
    + CloneNode()
    + InsertBefore()
    + InsertAfter()
    + ReplaceChild()
    + RemoveChild()
    + AppendChild()
    + WriteTo()
    + SetSpecified()
}

class "XmlWhitespace" {
    + CloneNode()
    + WriteTo()
    + WriteContentTo()
}

class "EmptyEnumerator" {
    - System.Collections.IEnumerator.MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "HWStack" {
    + Push()
    + Pop()
    + Peek()
    + AddToTop()
    + Clone()
}

class "PositionInfo" {
    + HasLineInfo()
}

class "ReaderPositionInfo" {
    + HasLineInfo()
}

class "NameTable" {
    + Add()
    + Add()
    + Get()
    + Get()
    - AddEntry()
    - Grow()
}

class "DtdParser" {
    - Initialize()
    - InitializeFreeFloatingDtd()
    - System.Xml.IDtdParser.ParseInternalDtd()
    - System.Xml.IDtdParser.ParseFreeFloatingDtd()
    - Parse()
    - ParseInDocumentDtd()
    - ParseFreeFloatingDtd()
    - ParseInternalSubset()
    - ParseExternalSubset()
    - ParseSubset()
    - ParseAttlistDecl()
    - ParseAttlistType()
    - ParseAttlistDefault()
    - ParseElementDecl()
    - ParseElementOnlyContent()
    - ParseHowMany()
    - ParseElementMixedContent()
    - ParseEntityDecl()
    - ParseNotationDecl()
    - AddUndeclaredNotation()
    - ParseComment()
    - ParsePI()
    - ParseCondSection()
    - ParseExternalId()
    - GetToken()
    - ScanSubsetContent()
    - ScanNameExpected()
    - ScanQNameExpected()
    - ScanNmtokenExpected()
    - ScanDoctype1()
    - ScanDoctype2()
    - ScanClosingTag()
    - ScanElement1()
    - ScanElement2()
    - ScanElement3()
    - ScanElement4()
    - ScanElement5()
    - ScanElement6()
    - ScanElement7()
    - ScanAttlist1()
    - ScanAttlist2()
    - ScanAttlist3()
    - ScanAttlist4()
    - ScanAttlist5()
    - ScanAttlist6()
    - ScanAttlist7()
    - ScanLiteral()
    - ScanEntityName()
    - ScanNotation1()
    - ScanSystemId()
    - ScanEntity1()
    - ScanEntity2()
    - ScanEntity3()
    - ScanPublicId1()
    - ScanPublicId2()
    - ScanCondSection1()
    - ScanCondSection2()
    - ScanCondSection3()
    - ScanName()
    - ScanQName()
    - ScanQName()
    - ReadDataInName()
    - ScanNmtoken()
    - EatPublicKeyword()
    - EatSystemKeyword()
    - GetNameQualified()
    - GetNameString()
    - GetNmtokenString()
    - GetValue()
    - GetValueWithStrippedSpaces()
    - ReadData()
    - LoadParsingBuffer()
    - SaveParsingBuffer()
    - SaveParsingBuffer()
    - HandleEntityReference()
    - HandleEntityReference()
    - HandleEntityEnd()
    - VerifyEntityReference()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - IsAttributeValueType()
    - OnUnexpectedError()
    - Throw()
    - Throw()
    - Throw()
    - Throw()
    - ThrowInvalidChar()
    - ThrowInvalidChar()
    - ThrowUnexpectedToken()
    - ThrowUnexpectedToken()
    - ParseUnexpectedToken()
    - System.Xml.IDtdParser.ParseInternalDtdAsync()
    - System.Xml.IDtdParser.ParseFreeFloatingDtdAsync()
    - ParseAsync()
    - ParseInDocumentDtdAsync()
    - ParseFreeFloatingDtdAsync()
    - ParseInternalSubsetAsync()
    - ParseExternalSubsetAsync()
    - ParseSubsetAsync()
    - ParseAttlistDeclAsync()
    - ParseAttlistTypeAsync()
    - ParseAttlistDefaultAsync()
    - ParseElementDeclAsync()
    - ParseElementOnlyContentAsync()
    - ParseHowManyAsync()
    - ParseElementMixedContentAsync()
    - ParseEntityDeclAsync()
    - ParseNotationDeclAsync()
    - ParseCommentAsync()
    - ParsePIAsync()
    - ParseCondSectionAsync()
    - ParseExternalIdAsync()
    - GetTokenAsync()
    - ScanSubsetContentAsync()
    - ScanNameExpectedAsync()
    - ScanQNameExpectedAsync()
    - ScanNmtokenExpectedAsync()
    - ScanDoctype1Async()
    - ScanElement1Async()
    - ScanElement2Async()
    - ScanElement3Async()
    - ScanAttlist1Async()
    - ScanAttlist2Async()
    - ScanAttlist6Async()
    - ScanLiteralAsync()
    - ScanNotation1Async()
    - ScanSystemIdAsync()
    - ScanEntity1Async()
    - ScanEntity2Async()
    - ScanEntity3Async()
    - ScanPublicId1Async()
    - ScanPublicId2Async()
    - ScanCondSection1Async()
    - ScanCondSection3Async()
    - ScanNameAsync()
    - ScanQNameAsync()
    - ScanQNameAsync()
    - ReadDataInNameAsync()
    - ScanNmtokenAsync()
    - EatPublicKeywordAsync()
    - EatSystemKeywordAsync()
    - ReadDataAsync()
    - HandleEntityReferenceAsync()
    - HandleEntityReferenceAsync()
}

class "XmlDownloadManager" {
    + GetStream()
    - GetNonFileStream()
    + Remove()
    + GetStreamAsync()
    - GetNonFileStreamAsync()
}

class "<>c__DisplayClass4_0" {
    + <GetStreamAsync>b__0()
}

class "XmlRegisteredNonCachedStream" {
    + Finalize()
    + Dispose()
    + BeginRead()
    + BeginWrite()
    + EndRead()
    + EndWrite()
    + Flush()
    + Read()
    + ReadByte()
    + Seek()
    + SetLength()
    + Write()
    + WriteByte()
}

class "UTF16Decoder" {
    + GetCharCount()
    + GetCharCount()
    + GetChars()
    + Convert()
}

class "SafeAsciiDecoder" {
    + GetCharCount()
    + GetChars()
    + Convert()
}

class "Ucs4Encoding" {
    + GetDecoder()
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetMaxByteCount()
    + GetCharCount()
    + GetChars()
    + GetMaxCharCount()
    + GetCharCount()
    + GetEncoder()
}

class "Ucs4Encoding1234" {
    + GetPreamble()
}

class "Ucs4Encoding4321" {
    + GetPreamble()
}

class "Ucs4Encoding2143" {
    + GetPreamble()
}

class "Ucs4Encoding3412" {
    + GetPreamble()
}

class "Ucs4Decoder4321" {
    + GetFullChars()
}

class "Ucs4Decoder1234" {
    + GetFullChars()
}

class "Ucs4Decoder2143" {
    + GetFullChars()
}

class "Ucs4Decoder3412" {
    + GetFullChars()
}

class "XmlException" {
    + GetObjectData()
}

class "XmlNamespaceManager" {
    + PushScope()
    + PopScope()
    + AddNamespace()
    + RemoveNamespace()
    + GetEnumerator()
    + GetNamespacesInScope()
    + LookupNamespace()
    - LookupNamespaceDecl()
    + LookupPrefix()
    + HasNamespace()
    + GetNamespaceDeclaration()
}

class "XmlNullResolver" {
    + GetEntity()
}

class "XmlQualifiedName" {
    + GetHashCode()
    + ToString()
    + Equals()
    + Init()
    + SetNamespace()
    + Verify()
    + Atomize()
    + Clone()
}

class "HashCodeOfStringDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlSecureResolver" {
    + GetEntity()
    + ResolveUri()
    + GetEntityAsync()
}

class "XmlUrlResolver" {
    + GetEntity()
    + ResolveUri()
    + GetEntityAsync()
}

class "XmlXapResolver" {
    + GetEntity()
}

class "XPathDocument" {
    + LoadFromWriter()
    + LoadFromReader()
    + CreateNavigator()
    + GetCollapsedTextNode()
    + SetCollapsedTextNode()
    + GetRootNode()
    + SetRootNode()
    + GetXmlNamespaceNode()
    + SetXmlNamespaceNode()
    + AddNamespace()
    + LookupNamespaces()
    + AddIdElement()
    + LookupIdElement()
    - SetupReader()
}

class "XPathException" {
    + GetObjectData()
}

class "CheckValidityHelper" {
    + ValidationCallback()
}

class "XPathNavigatorKeyComparer" {
    - System.Collections.IEqualityComparer.Equals()
    - System.Collections.IEqualityComparer.GetHashCode()
}

class "XPathNavigatorReader" {
    - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope()
    - System.Xml.IXmlNamespaceResolver.LookupNamespace()
    - System.Xml.IXmlNamespaceResolver.LookupPrefix()
    - GetElemNav()
    - GetElemNav()
    - MoveToAttr()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToAttribute()
    + MoveToElement()
    + ResolveEntity()
    + ReadAttributeValue()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    + LookupNamespace()
    + Read()
    + Close()
    - SetEOF()
}

class "XmlEmptyNavigator" {
    + MoveToFirstChild()
    + MoveToRoot()
    + MoveToNext()
    + MoveToPrevious()
    + MoveToFirst()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToId()
    + GetAttribute()
    + MoveToAttribute()
    + GetNamespace()
    + MoveToNamespace()
    + MoveToFirstNamespace()
    + MoveToNextNamespace()
    + MoveToParent()
    + MoveTo()
    + ComparePosition()
    + IsSamePosition()
    + Clone()
}

class "Enumerator" {
    + MoveNext()
    + Reset()
}

class "CodeGenerator" {
    + BeginMethod()
    + BeginMethod()
    - InitILGeneration()
    + EndMethod()
    + GetArg()
    + GetLocal()
    + GetTempLocal()
    + GetVariableType()
    + GetVariable()
    + TryGetVariable()
    + EnterScope()
    + ExitScope()
    - TryDequeueLocal()
    + DeclareLocal()
    + DeclareOrGetLocal()
    + For()
    + EndFor()
    + If()
    + IfNot()
    - GetBranchCode()
    + If()
    + If()
    + Else()
    + EndIf()
    + BeginExceptionBlock()
    + BeginCatchBlock()
    + EndExceptionBlock()
    + Leave()
    + Call()
    + Call()
    + New()
    + InitObj()
    + NewArray()
    + LoadArrayElement()
    + StoreArrayElement()
    + LoadMember()
    + LoadMember()
    + LoadMemberAddress()
    + StoreMember()
    + Load()
    + LoadAddress()
    + ConvertAddress()
    + ConvertValue()
    + Castclass()
    + Box()
    + Unbox()
    - GetLdindOpCode()
    + Ldobj()
    + Stobj()
    + Ceq()
    + Clt()
    + Cne()
    + Ble()
    + Throw()
    + Ldtoken()
    + Ldc()
    + Ldc()
    + Ldc()
    + Ldc()
    + Ldc()
    + Ldc()
    + Ldstr()
    + LdlocAddress()
    + Ldloc()
    + Ldloc()
    + Stloc()
    + Stloc()
    + Ldloc()
    + Ldloca()
    + LdargAddress()
    + Ldarg()
    + Ldarg()
    + Ldarg()
    + Ldarga()
    + Ldarga()
    + Ldlen()
    - GetLdelemOpCode()
    + Ldelem()
    + Ldelema()
    - GetStelemOpCode()
    + Stelem()
    + DefineLabel()
    + MarkLabel()
    + Nop()
    + Add()
    + Ret()
    + Br()
    + Br_S()
    + Blt()
    + Brfalse()
    + Brtrue()
    + Pop()
    + Dup()
    + Ldftn()
    - InternalIf()
    - GetConvOpCode()
    - InternalConvert()
    - PopIfState()
    + InitElseIf()
    + InitIf()
    + AndIf()
    + AndIf()
    + IsInst()
    + Beq()
    + Bne()
    + GotoMethodEnd()
    + WhileBegin()
    + WhileEnd()
    + WhileBreak()
    + WhileContinue()
    + WhileBeginCondition()
    + WhileEndCondition()
}

class "LocalScope" {
    + Add()
    + ContainsKey()
    + TryGetValue()
    + AddToFreeLocals()
}

class "MethodBuilderInfo" {
    + Validate()
}

class "CaseInsensitiveKeyComparer" {
    - System.Collections.IEqualityComparer.Equals()
    - System.Collections.IEqualityComparer.GetHashCode()
}

class "CodeIdentifiers" {
    + Clear()
    + MakeRightCase()
    + MakeUnique()
    + AddReserved()
    + RemoveReserved()
    + AddUnique()
    + IsInUse()
    + Add()
    + Remove()
    + ToArray()
    + Clone()
}

class "TempAssembly" {
    + InitAssemblyMethods()
    + CanRead()
    - ValidateEncodingStyle()
    + InvokeReader()
    + InvokeWriter()
    + GetReferencedAssembly()
}

class "TempMethodDictionary" {
    + Add()
}

class "TempAssemblyCacheKey" {
    + Equals()
    + GetHashCode()
}

class "TempAssemblyCache" {
    + Add()
}

class "Compiler" {
    + AddImport()
    + AddImport()
    + Close()
    + Compile()
}

class "SchemaObjectCache" {
    + AddItem()
    + Match()
    - GetDependencies()
    - CompositeHash()
    + GenerateSchemaGraph()
    - GetHash()
    - ToString()
}

class "SchemaGraph" {
    + GetItems()
    + AddRef()
    + Depends()
    + Depends()
}

class "ElementAccessor" {
    + Clone()
}

class "AttributeAccessor" {
    + CheckSpecial()
}

class "StructMapping" {
    + FindDeclaringMapping()
    + Declares()
    + SetContentModel()
    + HasExplicitSequence()
    + SetSequence()
}

class "AccessorComparer" {
    + Compare()
}

class "MemberMappingComparer" {
    + Compare()
}

class "MemberMapping" {
    - GetNullableType()
    + Clone()
    + GetTypeName()
}

class "SerializableMapping" {
    + SetBaseMapping()
    + CheckDuplicateElement()
    - Match()
    - RetrieveSerializableSchema()
}

class "ModelScope" {
    + GetTypeModel()
    + GetTypeModel()
    + GetArrayModel()
}

class "StructModel" {
    + GetMemberInfos()
    + GetFieldModel()
    - CheckSupportedMember()
    - GetFieldModel()
    - GetPropertyModel()
}

class "EnumModel" {
    - GetConstantModel()
}

class "NameKey" {
    + Equals()
    + GetHashCode()
}

class "NameTable" {
    + Add()
    + Add()
    + ToArray()
}

class "XmlSerializationPrimitiveWriter" {
    + Write_string()
    + Write_int()
    + Write_boolean()
    + Write_short()
    + Write_long()
    + Write_float()
    + Write_double()
    + Write_decimal()
    + Write_dateTime()
    + Write_unsignedByte()
    + Write_byte()
    + Write_unsignedShort()
    + Write_unsignedInt()
    + Write_unsignedLong()
    + Write_base64Binary()
    + Write_guid()
    + Write_TimeSpan()
    + Write_char()
    + Write_QName()
    + InitCallbacks()
}

class "XmlSerializationPrimitiveReader" {
    + Read_string()
    + Read_int()
    + Read_boolean()
    + Read_short()
    + Read_long()
    + Read_float()
    + Read_double()
    + Read_decimal()
    + Read_dateTime()
    + Read_unsignedByte()
    + Read_byte()
    + Read_unsignedShort()
    + Read_unsignedInt()
    + Read_unsignedLong()
    + Read_base64Binary()
    + Read_guid()
    + Read_TimeSpan()
    + Read_char()
    + Read_QName()
    + InitCallbacks()
    + InitIDs()
}

class "XmlAttributeComparer" {
    + Compare()
}

class "XmlFacetComparer" {
    + Compare()
}

class "QNameComparer" {
    + Compare()
}

class "XmlSchemaObjectComparer" {
    + Compare()
}

class "SchemaObjectWriter" {
    - WriteIndent()
    + WriteAttribute()
    + WriteAttribute()
    + WriteStartElement()
    + WriteEndElement()
    + NewLine()
    + GetString()
    - WriteAttribute()
    - WriteAttributes()
    + WriteXmlSchemaObject()
    - WriteSortedItems()
    - Write1_XmlSchemaAttribute()
    - Write3_XmlSchemaObject()
    - Write5_XmlSchemaAnnotation()
    - Write6_XmlSchemaDocumentation()
    - Write7_XmlSchemaAppInfo()
    - Write9_XmlSchemaSimpleType()
    - Write11_XmlSchemaDerivationMethod()
    - Write12_XmlSchemaSimpleTypeUnion()
    - Write14_XmlSchemaSimpleTypeList()
    - Write15_XmlSchemaSimpleTypeRestriction()
    - WriteFacets()
    - Write_XmlSchemaFacet()
    - Write30_XmlSchemaUse()
    - Write31_XmlSchemaAttributeGroup()
    - Write32_XmlSchemaAttributeGroupRef()
    - Write33_XmlSchemaAnyAttribute()
    - Write34_XmlSchemaContentProcessing()
    - Write35_XmlSchemaComplexType()
    - Write36_XmlSchemaSimpleContent()
    - Write38_XmlSchemaSimpleContentExtension()
    - Write40_XmlSchemaSimpleContentRestriction()
    - Write41_XmlSchemaComplexContent()
    - Write42_XmlSchemaComplexContentExtension()
    - Write43_XmlSchemaAll()
    - Write46_XmlSchemaElement()
    - Write47_XmlSchemaKey()
    - Write48_XmlSchemaIdentityConstraint()
    - Write49_XmlSchemaXPath()
    - Write50_XmlSchemaKeyref()
    - Write51_XmlSchemaUnique()
    - Write52_XmlSchemaChoice()
    - Write53_XmlSchemaAny()
    - Write54_XmlSchemaSequence()
    - Write55_XmlSchemaGroupRef()
    - Write56_XmlSchemaComplexContentRestriction()
    - Write57_XmlSchemaGroup()
}

class "SoapAttributeOverrides" {
    + Add()
    + Add()
}

class "SoapCodeExporter" {
    + ExportTypeMapping()
    + ExportMembersMapping()
    - ExportElement()
    - ExportType()
    - ExportStruct()
    + ExportDerivedStructs()
    + AddMappingMetadata()
    + AddMappingMetadata()
    - AddElementMetadata()
    - AddMemberMetadata()
    - ExportMember()
    - ExportProperty()
    + EnsureTypesExported()
}

class "SoapReflectionImporter" {
    + IncludeTypes()
    - IncludeTypes()
    + IncludeType()
    - IncludeType()
    + ImportTypeMapping()
    + ImportTypeMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    - ReflectionException()
    - GetAttributes()
    - GetAttributes()
    - ImportTypeMapping()
    - ImportTypeMapping()
    - CreateRootMapping()
    - GetRootMapping()
    - GetTypeMapping()
    - CreateNullableMapping()
    - ImportStructLikeMapping()
    - InitializeStructMembers()
    - ImportArrayLikeMapping()
    - SetArrayMappingType()
    - ImportPrimitiveMapping()
    - ImportEnumMapping()
    - ImportConstantMapping()
    - ImportMembersMapping()
    - ImportMemberMapping()
    - ImportFieldMapping()
    - ImportAccessorMapping()
    - GetDefaultValue()
    + XsdTypeName()
    + XsdTypeName()
}

class "SoapSchemaExporter" {
    + ExportTypeMapping()
    + ExportMembersMapping()
    + ExportMembersMapping()
    - CheckScope()
    - CheckForDuplicateType()
    - AddSchemaItem()
    - AddSchemaImport()
    - SchemaContainsItem()
    - FindImport()
    - ExportTypeMapping()
    - ExportNonXsdPrimitiveMapping()
    - ExportPrimitiveMapping()
    - ExportArrayMapping()
    - ExportElementAccessors()
    - ExportElementAccessor()
    - ExportRootMapping()
    - ExportStructMapping()
    - ExportMembersMapping()
    - ExportTypeMembers()
    - ExportDerivedMappings()
    - ExportEnumMapping()
}

class "SoapSchemaImporter" {
    + ImportDerivedTypeMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    - ImportElement()
    - ImportElementType()
    + ImportDerivedTypes()
    - ImportType()
    - ImportType()
    - ImportAnyType()
    - ImportStructType()
    - ImportTypeMembers()
    - ImportGroup()
    - ImportGroupMembers()
    - ImportArray()
    - ImportArrayMapping()
    - ImportElementMember()
    - ImportDataType()
    - ImportEnumeratedDataType()
    - ImportPrimitiveDataType()
    - ImportNonXsdPrimitiveDataType()
    - GetDataTypeSource()
    - FindDataType()
    - FindType()
}

class "SourceInfo" {
    + CastTo()
    + LoadAddress()
    + Load()
    - InternalLoad()
    - Convert()
    - ConvertNullableValue()
    + Equals()
    + GetHashCode()
}

class "<>c" {
    + <.cctor>b__20_0()
}

class "TypeDesc" {
    + ToString()
    + GetNullableTypeDesc()
    + CheckSupported()
    + CheckNeedConstructor()
    + CreateArrayTypeDesc()
    + CreateMappedTypeDesc()
    + IsDerivedFrom()
}

class "TypeScope" {
    + GetTypeDesc()
    + GetTypeDesc()
    + GetTypeDesc()
    + GetTypeDesc()
    + GetTypeDesc()
    + GetTypeDesc()
    + GetTypeDesc()
    + GetArrayTypeDesc()
    + GetTypeMappingFromTypeDesc()
    + GetTypeFromTypeDesc()
    - ImportTypeDesc()
    + AddTypeMapping()
}

class "XmlAnyElementAttributes" {
    + Add()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
}

class "XmlArrayItemAttributes" {
    + Add()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
}

class "XmlAttributeOverrides" {
    + Add()
    + Add()
}

class "XmlCodeExporter" {
    + ExportTypeMapping()
    + ExportMembersMapping()
    - ExportElement()
    - ExportType()
    - ExportType()
    - AddRootMetadata()
    - GetDefaultValueArguments()
    - ImportDefault()
    - ImportDefaultValue()
    - AddDefaultValueAttribute()
    - ExportStruct()
    + ExportDerivedStructs()
    + AddMappingMetadata()
    + AddMappingMetadata()
    + AddMappingMetadata()
    - ExportArrayElements()
    - AddMemberMetadata()
    - ExportMember()
    - ExportProperty()
    - ExportText()
    - ExportAttribute()
    - ExportArrayItem()
    - ExportElement()
    - ExportArray()
    - ExportMetadata()
    - ExportAnyElement()
    - ExportAnyAttribute()
    + EnsureTypesExported()
    - EnsureTypesExported()
}

class "XmlCountingReader" {
    - IncrementCount()
    + Close()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + LookupNamespace()
    + ReadAttributeValue()
    + ResolveEntity()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + ReadSubtree()
    + MoveToContent()
    + Read()
    + Skip()
    + ReadInnerXml()
    + ReadOuterXml()
    + ReadContentAsObject()
    + ReadContentAsBoolean()
    + ReadContentAsDateTime()
    + ReadContentAsDouble()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsString()
    + ReadContentAs()
    + ReadElementContentAsObject()
    + ReadElementContentAsObject()
    + ReadElementContentAsBoolean()
    + ReadElementContentAsBoolean()
    + ReadElementContentAsDateTime()
    + ReadElementContentAsDateTime()
    + ReadElementContentAsDouble()
    + ReadElementContentAsDouble()
    + ReadElementContentAsInt()
    + ReadElementContentAsInt()
    + ReadElementContentAsLong()
    + ReadElementContentAsLong()
    + ReadElementContentAsString()
    + ReadElementContentAsString()
    + ReadElementContentAs()
    + ReadElementContentAs()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBinHex()
    + ReadValueChunk()
    + ReadString()
    + ReadStartElement()
    + ReadStartElement()
    + ReadStartElement()
    + ReadElementString()
    + ReadElementString()
    + ReadElementString()
    + ReadEndElement()
    + ReadToFollowing()
    + ReadToFollowing()
    + ReadToDescendant()
    + ReadToDescendant()
    + ReadToNextSibling()
    + ReadToNextSibling()
    + Dispose()
    - System.Xml.IXmlLineInfo.HasLineInfo()
}

class "XmlElementAttributes" {
    + Add()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
}

class "XmlMemberMapping" {
    + GenerateTypeName()
}

class "XmlReflectionImporter" {
    + IncludeTypes()
    - IncludeTypes()
    + IncludeType()
    - IncludeType()
    + ImportTypeMapping()
    + ImportTypeMapping()
    + ImportTypeMapping()
    + ImportTypeMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    - GetAttributes()
    - GetAttributes()
    - ImportElement()
    - ReconcileLocalAccessor()
    - ReconcileAccessor()
    - CreateReflectionException()
    - CreateTypeReflectionException()
    - CreateMemberReflectionException()
    - ImportTypeMapping()
    - ImportTypeMapping()
    - ImportSpecialMapping()
    + SetBase()
    - CreateRootMapping()
    - CreateNullableMapping()
    - GetRootMapping()
    - GetTypeMapping()
    - ImportStructLikeMapping()
    - InitializeStructMembers()
    + XsdTypeName()
    + XsdTypeName()
    - SetArrayMappingType()
    - ImportArrayLikeMapping()
    - CheckContext()
    - ImportPrimitiveMapping()
    - ImportEnumMapping()
    - ImportConstantMapping()
    - ImportMembersMapping()
    - ImportMemberMapping()
    - ImportFieldMapping()
    - CheckChoiceIdentifierType()
    - GetChoiceIdentifierType()
    - GetChoiceIdentifierType()
    - CreateArrayElementsFromAttributes()
    - ImportAccessorMapping()
    - CheckTopLevelAttributes()
    - CheckAmbiguousChoice()
    - CheckChoiceIdentifierMapping()
    - GetDefaultValue()
}

class "WorkItems" {
    + Add()
    + Contains()
    + IndexOf()
    + RemoveAt()
}

class "XmlSchemaExporter" {
    + ExportTypeMapping()
    + ExportTypeMapping()
    + ExportMembersMapping()
    + ExportMembersMapping()
    + ExportAnyType()
    + ExportAnyType()
    - CheckScope()
    - ExportElement()
    - CheckForDuplicateType()
    - AddSchema()
    - AddSchemaItem()
    - AddSchemaImport()
    - SchemaContainsItem()
    - FindImport()
    - ExportMapping()
    - ExportElementMapping()
    - ExportNonXsdPrimitiveMapping()
    - ExportSpecialMapping()
    - ExportMembersMapping()
    - ExportAnonymousPrimitiveMapping()
    - ExportPrimitiveMapping()
    - ExportArrayMapping()
    - ExportElementAccessors()
    - ExportAttributeAccessor()
    - ExportElementAccessor()
    - ExportRootIfNecessary()
    - ExportStructMapping()
    - ExportTypeMembers()
    - ExportDerivedMappings()
    - ExportEnumMapping()
    - AddXmlnsAnnotation()
}

class "XmlSchemaImporter" {
    + ImportDerivedTypeMapping()
    + GetDefaultMapping()
    + ImportDerivedTypeMapping()
    + ImportSchemaType()
    + ImportSchemaType()
    + ImportSchemaType()
    + ImportTypeMapping()
    + ImportMembersMapping()
    + ImportAnyType()
    + ImportMembersMapping()
    + ImportMembersMapping()
    + ImportMembersMapping()
    - ImportElement()
    - ImportElement()
    - ImportElementType()
    - RunSchemaExtensions()
    - GenerateUniqueTypeName()
    + ImportDerivedTypes()
    - ImportType()
    - ImportType()
    - ImportMembersType()
    - ImportStructType()
    - IsAllGroup()
    - ImportStructDataType()
    - ImportTypeMembers()
    - GetTypeItems()
    - ImportGroup()
    - ImportChoiceGroup()
    - IsNeedXmlSerializationAttributes()
    - GatherGroupChoices()
    - GatherGroupChoices()
    - AddScopeElement()
    - AddScopeElements()
    - ImportGroupMembers()
    - GetTopLevelElement()
    - GetEquivalentElements()
    - ImportSubstitutionGroupMember()
    - ImportTextMember()
    - ImportAnyMember()
    - ImportAny()
    - ImportArray()
    - ImportArrayMapping()
    - IsCyclicReferencedType()
    - ImportAnyMapping()
    - ImportElementMember()
    - ImportAttributeMember()
    - ImportAnyAttributeMember()
    - KeepXmlnsDeclarations()
    - ImportXmlnsDeclarationsMember()
    - ImportAttributeGroupMembers()
    - ImportSpecialAttribute()
    - ImportAttribute()
    - ImportDataType()
    - ImportEnumeratedDataType()
    - ImportEnumeratedChoice()
    - ImportPrimitiveDataType()
    - ImportNonXsdPrimitiveDataType()
    - FindGroup()
    - FindAttributeGroup()
    - GetDataTypeSource()
    - FindDataType()
    - FindType()
    - FindElement()
    - FindAttribute()
    - ElementForm()
    + FindExtendedAnyElement()
    + FindExtendedType()
    + FindExtendedType()
    - AttributeForm()
}

class "ElementComparer" {
    + Compare()
}

class "XmlSchemas" {
    + GetSchemas()
    + Add()
    + Add()
    + Add()
    + Add()
    + AddReference()
    + Insert()
    + IndexOf()
    + Contains()
    + Contains()
    + Remove()
    + CopyTo()
    + OnInsert()
    + OnRemove()
    + OnClear()
    + OnSet()
    - AddName()
    - Prepare()
    - RemoveName()
    + Find()
    + Find()
    - System.Collections.Generic.IEnumerable<System.Xml.Schema.XmlSchema>.GetEnumerator()
    - Merge()
    - AddImport()
    - Merge()
    + Find()
    + Compile()
    + SetCache()
    + IsReference()
}

class "XmlSchemaEnumerator" {
    + Dispose()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "XmlSerializationCodeGen" {
    + GenerateMethod()
    + GenerateReferencedMethods()
    + ReferenceMapping()
    - EnsureArrayIndex()
    + WriteQuotedCSharpString()
    + GenerateHashtableGetBegin()
    + GenerateHashtableGetEnd()
    + GeneratePublicMethods()
    + GenerateSupportedTypes()
    + GenerateBaseSerializer()
    + GenerateTypedSerializer()
    - GenerateTypedSerializers()
    - GenerateGetSerializer()
    + GenerateSerializerContract()
}

class "XmlSerializationILGen" {
    + EnsureMethodBuilder()
    + GetMethodBuilder()
    + GenerateMethod()
    + GenerateReferencedMethods()
    + ReferenceMapping()
    - EnsureArrayIndex()
    + GenerateHashtableGetBegin()
    + GenerateHashtableGetEnd()
    + GeneratePublicMethods()
    + GenerateSupportedTypes()
    + GenerateBaseSerializer()
    + GenerateTypedSerializer()
    - GenerateTypedSerializers()
    - GenerateGetSerializer()
    + GenerateSerializerContract()
    + ILGenLoad()
    + ILGenLoad()
}

class "XmlSerializationFixupCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlSerializationCollectionFixupCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlSerializationReadCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlSerializationReaderCodeGen" {
    + GenerateBegin()
    + GenerateMethod()
    + GenerateEnd()
    + GenerateEnd()
    + GenerateElement()
    - WriteIsStartTag()
    - WriteUnknownNode()
    - GenerateInitCallbacksMethod()
    - GenerateMembersElement()
    - GetChoiceIdentifierSource()
    - GetChoiceIdentifierSource()
    - GenerateLiteralMembersElement()
    - InitializeValueTypes()
    - GenerateEncodedMembersElement()
    - WriteCreateCollection()
    - GenerateTypeElement()
    - NextMethodName()
    - NextIdName()
    - WritePrimitive()
    - MakeUnique()
    - WriteHashtable()
    - WriteEnumMethod()
    - WriteDerivedTypes()
    - WriteEnumAndArrayTypes()
    - WriteNullableMethod()
    - WriteStructMethod()
    - WriteLiteralStructMethod()
    - WriteEncodedStructMethod()
    - WriteFixupMethod()
    - WriteAddCollectionFixup()
    - WriteCreateCollectionMethod()
    - WriteQNameEqual()
    - WriteXmlNodeEqual()
    - WriteID()
    - WriteAttributes()
    - WriteAttribute()
    - WriteMemberFixupBegin()
    - WriteMemberBegin()
    - ExpectedElements()
    - WriteMemberElements()
    - WriteMemberText()
    - WriteText()
    - WriteMemberElementsCheckType()
    - WriteMemberElementsElse()
    - IsSequence()
    - WriteMemberElementsIf()
    - GetArraySource()
    - GetArraySource()
    - WriteMemberEnd()
    - WriteMemberEnd()
    - WriteSourceBeginTyped()
    - WriteSourceBegin()
    - WriteSourceEnd()
    - WriteArray()
    - WriteElement()
    - WriteDerivedSerializable()
    - WriteWhileNotLoopStart()
    - WriteWhileLoopEnd()
    - WriteWhileLoopStartCheck()
    - WriteWhileLoopEndCheck()
    - WriteParamsRead()
    - WriteReadNonRoots()
    - WriteBooleanValue()
    - WriteInitCheckTypeHrefList()
    - WriteHandleHrefList()
    - WriteIfNotSoapRoot()
    - WriteCreateMapping()
    - WriteCatchException()
    - WriteCatchCastException()
    - WriteArrayLocalDecl()
    - WriteCreateInstance()
    - WriteLocalDecl()
}

class "XmlSerializationReaderILGen" {
    + GenerateBegin()
    + GenerateMethod()
    + GenerateEnd()
    + GenerateElement()
    - WriteIsStartTag()
    - WriteUnknownNode()
    - GenerateInitCallbacksMethod()
    - GenerateMembersElement()
    - GetChoiceIdentifierSource()
    - GetChoiceIdentifierSource()
    - GenerateLiteralMembersElement()
    - InitializeValueTypes()
    - GenerateTypeElement()
    - NextMethodName()
    - NextIdName()
    - WritePrimitive()
    - MakeUnique()
    - WriteHashtable()
    - WriteEnumMethod()
    - WriteDerivedTypes()
    - WriteEnumAndArrayTypes()
    - WriteNullableMethod()
    - WriteStructMethod()
    - WriteLiteralStructMethod()
    - WriteQNameEqual()
    - WriteXmlNodeEqual()
    - WriteXmlNodeEqual()
    - WriteID()
    - WriteAttributes()
    - WriteAttribute()
    - WriteMemberBegin()
    - ExpectedElements()
    - WriteMemberElements()
    - WriteMemberText()
    - WriteText()
    - WriteMemberElementsElse()
    - IsSequence()
    - WriteMemberElementsIf()
    - GetArraySource()
    - GetArraySource()
    - WriteMemberEnd()
    - WriteMemberEnd()
    - WriteSourceBeginTyped()
    - WriteSourceBegin()
    - WriteSourceEnd()
    - WriteSourceEnd()
    - WriteArray()
    - WriteElement()
    - WriteDerivedSerializable()
    - WriteWhileNotLoopStart()
    - WriteWhileLoopEnd()
    - WriteWhileLoopStartCheck()
    - WriteWhileLoopEndCheck()
    - WriteParamsRead()
    - WriteCreateMapping()
    - WriteCatchException()
    - WriteCatchCastException()
    - WriteArrayLocalDecl()
    - WriteCreateInstance()
    - WriteLocalDecl()
    - ILGenElseString()
    - ILGenParamsReadSource()
    - ILGenParamsReadSource()
    - ILGenElementElseString()
    - ILGenSet()
}

class "XmlSerializationWriteCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlSerializationWriterCodeGen" {
    + GenerateBegin()
    + GenerateMethod()
    + GenerateEnd()
    + GenerateElement()
    - GenerateInitCallbacksMethod()
    - WriteQualifiedNameElement()
    - WriteEnumValue()
    - WritePrimitiveValue()
    - WritePrimitive()
    - WriteTag()
    - WriteTag()
    - WriteStartElement()
    - WriteEndElement()
    - WriteEndElement()
    - WriteEncodedNullTag()
    - WriteLiteralNullTag()
    - WriteEmptyTag()
    - GenerateMembersElement()
    - GenerateTypeElement()
    - NextMethodName()
    - WriteEnumMethod()
    - WriteDerivedTypes()
    - WriteEnumAndArrayTypes()
    - WriteStructMethod()
    - CanOptimizeWriteListSequence()
    - WriteMember()
    - WriteAttribute()
    - WriteMember()
    - WriteArray()
    - WriteArrayItems()
    - WriteElements()
    - WriteElements()
    - WriteText()
    - WriteElement()
    - WriteElementCall()
    - WriteCheckDefault()
    - WriteChoiceTypeCheck()
    - WriteNullCheckBegin()
    - WriteValue()
    - WriteNamespaces()
    - FindXmlnsIndex()
    - WriteExtraMembers()
    - WriteLocalDecl()
    - WriteArrayLocalDecl()
    - WriteTypeCompare()
    - WriteInstanceOf()
    - WriteArrayTypeCompare()
    - WriteEnumCase()
    - FindChoiceEnumValue()
}

class "ReflectionAwareCodeGen" {
    + WriteReflectionInit()
    - WriteTypeInfo()
    - InitTheFirstTime()
    - WriteMappingInfo()
    - WriteCollectionInfo()
    - WriteAssemblyInfo()
    - WriteMemberInfo()
    - WriteMethodInfo()
    - WriteDefaultIndexerInit()
    - GenerateVariableName()
    + GetReflectionVariable()
    + GetStringForMethodInvoke()
    + GetStringForEnumCompare()
    + GetStringForEnumLongValue()
    + GetStringForTypeof()
    + GetStringForMember()
    + GetStringForEnumMember()
    + GetStringForArrayMember()
    + GetStringForMethod()
    + GetStringForCreateInstance()
    + GetStringForCreateInstance()
    + GetStringForCreateInstance()
    + WriteLocalDecl()
    + WriteCreateInstance()
    + WriteInstanceOf()
    + WriteArrayLocalDecl()
    + WriteEnumCase()
    + WriteTypeCompare()
    + WriteArrayTypeCompare()
    + WriteQuotedCSharpString()
}

class "XmlSerializationWriterILGen" {
    + GenerateBegin()
    + GenerateMethod()
    + GenerateEnd()
    + GenerateElement()
    - GenerateInitCallbacksMethod()
    - WriteQualifiedNameElement()
    - WriteEnumValue()
    - WritePrimitiveValue()
    - WritePrimitive()
    - WriteTag()
    - WriteTag()
    - WriteStartElement()
    - WriteEndElement()
    - WriteEndElement()
    - WriteLiteralNullTag()
    - WriteEmptyTag()
    - GenerateMembersElement()
    - GenerateTypeElement()
    - NextMethodName()
    - WriteEnumMethod()
    - WriteDerivedTypes()
    - WriteEnumAndArrayTypes()
    - WriteStructMethod()
    - CanOptimizeWriteListSequence()
    - WriteMember()
    - WriteAttribute()
    - WriteMember()
    - WriteArray()
    - WriteArrayItems()
    - WriteElements()
    - WriteText()
    - WriteElement()
    - WriteElementCall()
    - WriteCheckDefault()
    - WriteChoiceTypeCheck()
    - WriteNullCheckBegin()
    - WriteNamespaces()
    - FindXmlnsIndex()
    - WriteLocalDecl()
    - WriteArrayLocalDecl()
    - WriteTypeCompare()
    - WriteInstanceOf()
    - WriteArrayTypeCompare()
    - FindChoiceEnumValue()
}

class "ReflectionAwareILGen" {
    + WriteReflectionInit()
    + ILGenForEnumLongValue()
    + GetStringForTypeof()
    + GetStringForMember()
    + GetSourceForMember()
    + GetSourceForMember()
    + ILGenForEnumMember()
    + GetStringForArrayMember()
    + GetStringForMethod()
    + ILGenForCreateInstance()
    + ILGenForCreateInstance()
    + WriteLocalDecl()
    + WriteCreateInstance()
    + WriteInstanceOf()
    + WriteArrayLocalDecl()
    + WriteTypeCompare()
    + WriteArrayTypeCompare()
}

class "XmlSerializer" {
    - DemandForUserLocationOrEvidence()
    + Serialize()
    + Serialize()
    + Serialize()
    + Serialize()
    + Serialize()
    + Serialize()
    + Serialize()
    + Serialize()
    + Deserialize()
    + Deserialize()
    + Deserialize()
    + Deserialize()
    + Deserialize()
    + Deserialize()
    + CanDeserialize()
    + CreateReader()
    + Deserialize()
    + CreateWriter()
    + Serialize()
    + SetTempAssembly()
    - SerializePrimitive()
    - DeserializePrimitive()
}

class "XmlSerializerMappingKey" {
    + Equals()
    + GetHashCode()
}

class "XmlSerializerFactory" {
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    + CreateSerializer()
    - DemandForUserLocationOrEvidence()
}

class "XmlSerializerNamespaces" {
    + Add()
    + AddInternal()
    + ToArray()
    + LookupPrefix()
}

class "XmlAttributeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlElementEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlNodeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UnreferencedObjectEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "IndentedWriter" {
    + Write()
    + Write()
    + WriteLine()
    + WriteLine()
    + WriteIndent()
}

class "TypeAndName" {
    + GetHashCode()
    + Equals()
}

class "TypeTypeConverter" {
    + CanConvertFrom()
    + ConvertFrom()
    + ConvertTo()
}

class "SchemaImporterExtensionElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "SchemaImporterExtensionsSection" {
    + InitializeDefault()
}

class "RootedPathValidator" {
    + CanValidate()
    + Validate()
}

class "SchemaImporterExtensionCollection" {
    + Add()
    + Add()
    + Remove()
    + Clear()
    + Clone()
    + Add()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
}

class "MappedTypeDesc" {
    + ExportTypeDefinition()
}

class "QueryReaderSettings" {
    + CreateReader()
}

class "BigInteger" {
    - AssertValidNoVal()
    - AssertValid()
    - Ensure()
    + InitFromRgu()
    + InitFromDigits()
    + InitFromBigint()
    + InitFromFloatingDecimal()
    + MulAdd()
    + MulPow5()
    + ShiftLeft()
    + ShiftUsRight()
    + ShiftRight()
    + CompareTo()
    + Add()
    + Subtract()
    + DivRem()
}

class "FloatingDecimal" {
    - AdjustDbl()
    - InitFromDouble()
}

class "XmlILCommand" {
    + Evaluate()
    + Execute()
    - Execute()
}

class "ExecuteDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlILGenerator" {
    + Generate()
    - CreateFunctionMetadata()
    - CreateGlobalValueMetadata()
    - GenerateExecuteFunction()
    - CreateHelperFunctions()
    - EvaluateGlobalValues()
    + CreateTypeInitializer()
}

class "XmlQualifiedNameTest" {
    - IsNameSubsetOf()
    - IsNamespaceSubsetOf()
    + IsSubsetOf()
    + HasIntersection()
    + ToString()
}

class "ItemType" {
    + GetObjectData()
}

class "ChoiceType" {
    + GetObjectData()
}

class "SequenceType" {
    + GetObjectData()
}

class "XslTransformException" {
    + FormatDetailedMessage()
    + ToString()
}

class "XslLoadException" {
    + GetObjectData()
    + SetSourceLineInfo()
    + FormatDetailedMessage()
}

class "XslCompiledTransform" {
    - Reset()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    - LoadInternal()
    - CompileXsltToQil()
    - GetFirstError()
    - CompileQilToMsil()
    + Load()
    + Load()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    - CheckCommand()
    - TestCompile()
    - TestGenerate()
    - Transform()
}

class "XslTransform" {
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    + Load()
    - CheckCommand()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    + Transform()
    - Compile()
}

class "DebuggerAddapter" {
    + GetBuiltInTemplatesUri()
    + OnInstructionCompile()
    + OnInstructionExecute()
}

class "XsltMessageEncounteredEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XsltArgumentList" {
    + GetParam()
    + GetExtensionObject()
    + AddParam()
    + AddExtensionObject()
    + RemoveParam()
    + RemoveExtensionObject()
    + Clear()
}

class "XsltException" {
    + GetObjectData()
}

class "XsltCompileException" {
    + GetObjectData()
}

class "ActionFrame" {
    + IncrementCounter()
    + AllocateVariables()
    + GetVariable()
    + SetVariable()
    + SetParameter()
    + ResetParams()
    + GetParameter()
    + InitNodeSet()
    + InitNewNodeSet()
    + SortNewNodeSet()
    + Finished()
    + Inherit()
    - Init()
    + Init()
    + Init()
    + SetAction()
    + SetAction()
    - GetAction()
    + Exit()
    + Execute()
    + NextNode()
    + NewNextNode()
    - System.Xml.Xsl.XsltOld.Debugger.IStackFrame.GetVariablesCount()
    - System.Xml.Xsl.XsltOld.Debugger.IStackFrame.GetVariable()
    - System.Xml.Xsl.XsltOld.Debugger.IStackFrame.GetVariableValue()
}

class "XPathSortArrayIterator" {
    + Clone()
}

class "ApplyImportsAction" {
    + Compile()
    + Execute()
}

class "ApplyTemplatesAction" {
    + Compile()
    + CompileAttribute()
    - CompileContent()
    + Execute()
}

class "AttributeAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "AttributeSetAction" {
    + Compile()
    + CompileAttribute()
    - CompileContent()
    + Merge()
}

class "Avt" {
    + Evaluate()
}

class "AvtEvent" {
    + Output()
    + Evaluate()
}

class "BeginEvent" {
    + ReplaceNamespaceAlias()
    + Output()
}

class "BuilderInfo" {
    + Initialize()
    + Initialize()
    - EnsureTextInfoSize()
    + Clone()
    + ValueAppend()
}

class "CallTemplateAction" {
    + Compile()
    + CompileAttribute()
    - CompileContent()
    + Execute()
}

class "ChooseAction" {
    + Compile()
    - CompileConditions()
}

class "CommentAction" {
    + Compile()
    + Execute()
}

class "Compiler" {
    + Advance()
    + Recurse()
    + ToParent()
    + GetUnicRtfId()
    + Compile()
    + InsertExtensionNamespace()
    + InsertExcludedNamespace()
    + InsertExtensionNamespace()
    + InsertExcludedNamespace()
    + IsExtensionNamespace()
    + IsExcludedNamespace()
    + PushLiteralScope()
    + PushNamespaceScope()
    + PopScope()
    + CloneScopeManager()
    + InsertVariable()
    + AddNamespaceAlias()
    + IsNamespaceAlias()
    + FindNamespaceAlias()
    + ResolveXmlNamespace()
    + ResolveXPathNamespace()
    + InsertKey()
    + AddDecimalFormat()
    - ResolvePrefixes()
    + GetYesNo()
    + GetSingleAttribute()
    + CreateXPathQName()
    + CreateXmlQName()
    - AddDocumentURI()
    - RemoveDocumentURI()
    + IsCircularReference()
    + ResolveUri()
    + ResolveDocument()
    + PushInputDocument()
    + PopInputDocument()
    + PushStylesheet()
    + PopStylesheet()
    + AddAttributeSet()
    + AddTemplate()
    + BeginTemplate()
    + EndTemplate()
    + AddQuery()
    + AddQuery()
    + AddStringQuery()
    + AddBooleanQuery()
    + AddScript()
    - FixCompilerError()
    - ChooseCodeDomProvider()
    - CompileScript()
    - CompileAssembly()
    + GetNsAlias()
    + CompileAvt()
    + CompileAvt()
    + CreateApplyImportsAction()
    + CreateApplyTemplatesAction()
    + CreateAttributeAction()
    + CreateAttributeSetAction()
    + CreateCallTemplateAction()
    + CreateChooseAction()
    + CreateCommentAction()
    + CreateCopyAction()
    + CreateCopyOfAction()
    + CreateElementAction()
    + CreateForEachAction()
    + CreateIfAction()
    + CreateMessageAction()
    + CreateNewInstructionAction()
    + CreateNumberAction()
    + CreateProcessingInstructionAction()
    + CreateRootAction()
    + CreateSortAction()
    + CreateTemplateAction()
    + CreateSingleTemplateAction()
    + CreateTextAction()
    + CreateUseAttributeSetsAction()
    + CreateValueOfAction()
    + CreateVariableAction()
    + CreateWithParamAction()
    + CreateBeginEvent()
    + CreateTextEvent()
    + UnexpectedKeyword()
}

class "ErrorXPathExpression" {
    + Clone()
    + CheckErrors()
}

class "ContainerAction" {
    + Compile()
    + CompileStylesheetAttributes()
    + CompileSingleTemplate()
    + CompileDocument()
    + CompileImport()
    - CompileImports()
    - CompileInclude()
    + CompileNamespaceAlias()
    + CompileKey()
    + CompileDecimalFormat()
    + CheckAttribute()
    + CompileSpace()
    - NameTest()
    + CompileTopLevelElements()
    + CompileTemplate()
    + CompileOnceTemplate()
    - CompileInstruction()
    - CompileLiteral()
    - CompileLiteralAttributesAndNamespaces()
    - CompileOutput()
    + AddAction()
    - EnsureCopyCodeAction()
    + AddEvent()
    + AddEvents()
    - AddScript()
    + Execute()
    + GetAction()
    + CheckDuplicateParams()
    + ReplaceNamespaceAlias()
}

class "CopyAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "CopyAttributesAction" {
    + Execute()
}

class "CopyCodeAction" {
    + AddEvent()
    + AddEvents()
    + ReplaceNamespaceAlias()
    + Execute()
    + GetDbgData()
}

class "CopyNamespacesAction" {
    + Execute()
}

class "CopyNodeSetAction" {
    + Execute()
}

class "CopyOfAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "DbgData" {
    + ReplaceVariables()
}

class "DbgCompiler" {
    - DefineVariable()
    - UnDefineVariables()
    + PopScope()
    + CreateApplyImportsAction()
    + CreateApplyTemplatesAction()
    + CreateAttributeAction()
    + CreateAttributeSetAction()
    + CreateCallTemplateAction()
    + CreateChooseAction()
    + CreateCommentAction()
    + CreateCopyAction()
    + CreateCopyOfAction()
    + CreateElementAction()
    + CreateForEachAction()
    + CreateIfAction()
    + CreateMessageAction()
    + CreateNewInstructionAction()
    + CreateNumberAction()
    + CreateProcessingInstructionAction()
    + CreateRootAction()
    + CreateSortAction()
    + CreateTemplateAction()
    + CreateSingleTemplateAction()
    + CreateTextAction()
    + CreateUseAttributeSetsAction()
    + CreateValueOfAction()
    + CreateVariableAction()
    + CreateWithParamAction()
    + CreateBeginEvent()
    + CreateTextEvent()
}

class "ApplyImportsActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "ApplyTemplatesActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "AttributeActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "AttributeSetActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "CallTemplateActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "CommentActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "CopyActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "CopyOfActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "ElementActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "ForEachActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "IfActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "MessageActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "NewInstructionActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "NumberActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "ProcessingInstructionActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "RootActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "SortActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "TemplateActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "TextActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "UseAttributeSetsActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "ValueOfActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "VariableActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "WithParamActionDbg" {
    + GetDbgData()
    + Compile()
    + Execute()
}

class "BeginEventDbg" {
    + Output()
}

class "TextEventDbg" {
    + Output()
}

class "DocumentScope" {
    + AddNamespace()
    + ResolveAtom()
    + ResolveNonAtom()
}

class "ElementAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "EndEvent" {
    + Output()
}

class "ForEachAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
    + CompileSortElements()
}

class "IfAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "InputScope" {
    + Init()
    + InsertExtensionNamespace()
    + IsExtensionNamespace()
    + InsertExcludedNamespace()
    + IsExcludedNamespace()
    + InsertVariable()
    + GetVeriablesCount()
    + ResolveVariable()
    + ResolveGlobalVariable()
}

class "InputScopeManager" {
    + Clone()
    + PushScope()
    + PopScope()
    + PushNamespace()
    - ResolveNonEmptyPrefix()
    + ResolveXmlNamespace()
    + ResolveXPathNamespace()
    + InsertExtensionNamespaces()
    + IsExtensionNamespace()
    + InsertExcludedNamespaces()
    + IsExcludedNamespace()
}

class "MessageAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "NamespaceDecl" {
    + Init()
}

class "NamespaceEvent" {
    + ReplaceNamespaceAlias()
    + Output()
}

class "NavigatorInput" {
    + Advance()
    + Recurse()
    + ToParent()
    + Close()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToFirstNamespace()
    + MoveToNextNamespace()
    + AssertInput()
}

class "NavigatorOutput" {
    + RecordDone()
    + TheEnd()
}

class "NewInstructionAction" {
    + Compile()
    + CompileSelectiveTemplate()
    + Execute()
}

class "NumberAction" {
    + CompileAttribute()
    + Compile()
    - numberAny()
    - checkFrom()
    - moveToCount()
    - numberCount()
    + Execute()
    - MatchCountKey()
    - BasicNodeType()
    - ParseLetter()
}

class "NumberingFormat" {
    + setNumberingType()
    + setMinLen()
    + setGroupingSeparator()
    + setGroupingSize()
    + FormatItem()
}

class "OutKeywords" {
    - CheckKeyword()
}

class "OutputScope" {
    + Init()
    + FindPrefix()
}

class "OutputScopeManager" {
    + PushNamespace()
    + PushScope()
    + PopScope()
    + ResolveNamespace()
    + ResolveNamespace()
    + FindPrefix()
    + GeneratePrefix()
}

class "PrefixQName" {
    + ClearPrefix()
    + SetQName()
}

class "ProcessingInstructionAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "Processor" {
    + GetNavigator()
    + AddSort()
    + InitSortArray()
    + GetGlobalParameter()
    + GetExtensionObject()
    + GetScriptObject()
    + GetSharedStringBuilder()
    + ReleaseSharedStringBuilder()
    + StartReader()
    + Execute()
    + Execute()
    + Execute()
    + Execute()
    + PushNewFrame()
    + PushActionFrame()
    + PushActionFrame()
    + PushActionFrame()
    + PushTemplateLookup()
    + GetQueryExpression()
    + GetCompiledQuery()
    + GetValueQuery()
    + GetValueQuery()
    - GetValueOfContext()
    - RecycleValueOfContext()
    - GetMatchesContext()
    - RecycleMatchesContext()
    + ValueOf()
    + ValueOf()
    - ElementValueWithoutWS()
    + StartQuery()
    + Evaluate()
    + RunQuery()
    + EvaluateString()
    + EvaluateBoolean()
    + Matches()
    + ResetOutput()
    + BeginEvent()
    + BeginEvent()
    + TextEvent()
    + TextEvent()
    + EndEvent()
    + CopyBeginEvent()
    + CopyTextEvent()
    + CopyEndEvent()
    + PushOutput()
    + PopOutput()
    + SetDefaultOutput()
    + GetVariableValue()
    + SetParameter()
    + ResetParams()
    + GetParameter()
    + PushDebuggerStack()
    + PopDebuggerStack()
    + OnInstructionExecute()
    + GetPrevioseMode()
    + SetCurrentMode()
    - System.Xml.Xsl.XsltOld.Debugger.IXsltProcessor.GetStackFrame()
}

class "ReaderOutput" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + Read()
    + Close()
    + ReadString()
    + ReadInnerXml()
    + ReadOuterXml()
    + LookupNamespace()
    + ResolveEntity()
    + ReadAttributeValue()
    + RecordDone()
    + TheEnd()
    - SetMainNode()
    - SetAttribute()
    - GetBuilderInfo()
    - FindAttribute()
    - FindAttribute()
    - Reset()
    - CheckCurrentInfo()
}

class "XmlEncoder" {
    - Init()
    + AtributeInnerXml()
    + AtributeOuterXml()
}

class "RecordBuilder" {
    - ValueAppend()
    - CanOutput()
    + BeginEvent()
    + TextEvent()
    + EndEvent()
    + Reset()
    + TheEnd()
    - FindAttribute()
    - BeginElement()
    - EndElement()
    - NewAttribute()
    - BeginAttribute()
    - BeginNamespace()
    - BeginProcessingInstruction()
    - BeginComment()
    - AdjustDepth()
    - ResetRecord()
    - PopElementScope()
    - CheckRecordBegin()
    - CheckRecordEnd()
    - SetEmptyFlag()
    - AnalyzeSpaceLang()
    - FixupElement()
    - FixupAttributes()
    - AppendNamespaces()
    - AnalyzeComment()
    - AnalyzeProcessingInstruction()
    - FinalizeRecord()
    - NewNamespace()
    - DeclareNamespace()
    - DeclareNewNamespace()
    + GetPrefixForNamespace()
}

class "Key" {
    + AddKey()
    + GetKeys()
    + Clone()
}

class "RootAction" {
    + Compile()
    + InsertKey()
    + GetAttributeSet()
    + PorcessAttributeSets()
    - MirgeAttributeSets()
    - CheckAttributeSets_RecurceInList()
    - CheckAttributeSets_RecurceInContainer()
    + AddDecimalFormat()
    + GetDecimalFormat()
    + Execute()
}

class "SortAction" {
    - ParseLang()
    - ParseDataType()
    - ParseOrder()
    - ParseCaseOrder()
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "StateMachine" {
    + Reset()
    + BeginOutlook()
    + Begin()
    + EndOutlook()
    + End()
}

class "StringOutput" {
    + Write()
    + Write()
    + Close()
}

class "Stylesheet" {
    + AddSpace()
    + SortWhiteSpace()
    + PreserveWhiteSpace()
    + AddAttributeSet()
    + AddTemplate()
    + ProcessTemplates()
    + ReplaceNamespaceAlias()
    + FindTemplate()
    + FindTemplateImports()
    + FindTemplate()
    + FindTemplate()
    + FindTemplateImports()
}

class "WhitespaceElement" {
    + ReplaceValue()
}

class "TemplateAction" {
    + Compile()
    + CompileSingle()
    + CompileAttribute()
    - AnalyzePriority()
    + CompileParameters()
    - CloneWithoutName()
    + ReplaceNamespaceAlias()
    + Execute()
}

class "TemplateLookupAction" {
    + Initialize()
    + Execute()
    + BuiltInTemplate()
}

class "TemplateLookupActionDbg" {
    + Execute()
}

class "TemplateManager" {
    + AddTemplate()
    + ProcessTemplates()
    + FindTemplate()
}

class "TemplateComparer" {
    + Compare()
}

class "TextAction" {
    + Compile()
    + CompileAttribute()
    - CompileContent()
    + Execute()
}

class "TextEvent" {
    + Output()
    + Evaluate()
}

class "TextOnlyOutput" {
    + RecordDone()
    + TheEnd()
}

class "TextOutput" {
    + Write()
    + Write()
    + Close()
}

class "UseAttributeSetsAction" {
    + Compile()
    + Execute()
}

class "ValueOfAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "BuiltInRuleTextAction" {
    + Execute()
}

class "VariableAction" {
    + Compile()
    + CompileAttribute()
    + Execute()
    - System.Xml.Xsl.IXsltContextVariable.Evaluate()
}

class "WithParamAction" {
    + Compile()
    + Execute()
}

class "WriterOutput" {
    + RecordDone()
    + TheEnd()
    - WriteAttributes()
}

class "XsltCompileContext" {
    + Recycle()
    + Reinitialize()
    + CompareDocument()
    + LookupNamespace()
    + ResolveVariable()
    + EvaluateVariable()
    + PreserveWhitespace()
    - FindBestMethod()
    - GetExtentionMethod()
    + ResolveFunction()
    - ComposeUri()
    - Document()
    - BuildKeyTable()
    - ResolveFormatName()
    - ElementAvailable()
    - FunctionAvailable()
    - Current()
    - SystemProperty()
}

class "FuncCurrent" {
    + Invoke()
}

class "FuncUnEntityUri" {
    + Invoke()
}

class "FuncGenerateId" {
    + Invoke()
}

class "FuncSystemProp" {
    + Invoke()
}

class "FuncElementAvailable" {
    + Invoke()
}

class "FuncFunctionAvailable" {
    + Invoke()
}

class "FuncDocument" {
    + Invoke()
}

class "FuncKey" {
    + Invoke()
}

class "FuncFormatNumber" {
    + Invoke()
}

class "FuncNodeSet" {
    + Invoke()
}

class "FuncExtension" {
    + Invoke()
}

class "XsltOutput" {
    + CreateDerivedOutput()
    + Compile()
    + CompileAttribute()
    + Execute()
}

class "Compiler" {
    + Compile()
    + CreateStylesheet()
    + AddModule()
    + ApplyNsAliases()
    + SetNsAlias()
    - MergeWhitespaceRules()
    - MergeAttributeSets()
    - MergeGlobalVarPars()
    + MergeWithStylesheet()
    + ParseQName()
    + ParseNameTest()
    + ValidatePiName()
    + CreatePhantomNamespace()
    + IsPhantomNamespace()
    + IsPhantomName()
    + EnterForwardsCompatible()
    + ExitForwardsCompatible()
    + CreateError()
    + ReportError()
    + ReportWarning()
    - SortErrors()
}

class "CompilerErrorComparer" {
    + Compare()
}

class "DecimalFormats" {
    + GetKeyForItem()
}

class "CompilerScopeManager`1" {
    + EnterScope()
    + ExitScope()
    + CheckEmpty()
    + EnterScope()
    - AddRecord()
    - AddRecord()
    - SetFlag()
    + AddVariable()
    - LookupNamespace()
    + LookupNamespace()
    + AddNsDeclaration()
    + AddExNamespace()
    + IsExNamespace()
    - SearchVariable()
    + LookupVariable()
    + IsLocalVariable()
    + GetActiveRecords()
    + GetEnumerator()
}

class "<GetActiveRecords>d__34" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Xsl.Xslt.CompilerScopeManager<V>.ScopeRecord>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "InvokeGenerator" {
    + GenerateInvoke()
    - FindActualArg()
    + VisitReference()
    + VisitFunction()
}

class "KeyMatchBuilder" {
    + StartBuild()
    + EndBuild()
    + GetPredicateBuilder()
}

class "PathConvertor" {
    + ConvertReletive2Absolute()
    + Visit()
    + VisitLoop()
    + VisitFilter()
}

class "TemplateMatch" {
    - NipOffTypeNameCheck()
}

class "TemplateMatchComparer" {
    + Compare()
}

class "PatternBag" {
    + Clear()
    + Add()
}

class "MatcherBuilder" {
    - Clear()
    - AddPatterns()
    - CollectPatternsInternal()
    + CollectPatterns()
    - MatchPattern()
    - MatchPatterns()
    - MatchPatterns()
    - IsNoMatch()
    - MatchPatternsWhosePriorityGreater()
    - MatchPatterns()
    + BuildMatcher()
}

class "OutputScopeManager" {
    + Reset()
    + PushScope()
    + PopScope()
    + AddNamespace()
    - AddRecord()
    + InvalidateAllPrefixes()
    + InvalidateNonDefaultPrefixes()
    + LookupNamespace()
}

class "ReferenceReplacer" {
    + Replace()
    + VisitReference()
}

class "QilGenerator" {
    - Compile()
    - InvokeOnCurrentNodeChanged()
    - CheckSingletonFocus()
    - CompileInitializationCode()
    - CompileRootExpression()
    - EnterScope()
    - ExitScope()
    - BuildDebuggerNamespaces()
    - GetCurrentNode()
    - GetCurrentPosition()
    - GetLastPosition()
    - ChooseBestType()
    - GetNsVar()
    - PrecompileProtoTemplatesHeaders()
    - CreateXslParam()
    - CompileProtoTemplate()
    - InstructionList()
    - CompileInstructions()
    - CompileInstructions()
    - CompileInstructions()
    - CompileInstructions()
    - CompileList()
    - CompileNop()
    - AddNsDecl()
    - CompileLiteralElement()
    - CompileElement()
    - CompileLiteralAttribute()
    - CompileAttribute()
    - ExtractText()
    - CompileAvt()
    - CompileStringAvt()
    - CompileTextAvt()
    - CompileText()
    - CompilePI()
    - CompileComment()
    - CompileError()
    - WrapLoopBody()
    - CompileForEach()
    - CompileApplyTemplates()
    - CompileApplyImports()
    - CompileCallTemplate()
    - CompileUseAttributeSet()
    - CompileCopy()
    - CompileCopyOf()
    - CompileValueOf()
    - CompileValueOfDoe()
    - CompileWhen()
    - CompileIf()
    - CompileChoose()
    - CompileMessage()
    - CompileVariable()
    - CompileVarParValue()
    - CompileWithParam()
    - CompileSorts()
    - CompileLangAttribute()
    - CompileLangAttributeToLcid()
    - CompileLangToLcid()
    - CompileDataTypeAttribute()
    - CompileOrderAttribute()
    - CompileSort()
    - MatchPattern()
    - MatchCountPattern()
    - PlaceMarker()
    - PlaceMarkerAny()
    - CompileLetterValueAttribute()
    - CompileGroupingSeparatorAttribute()
    - CompileGroupingSizeAttribute()
    - CompileNumber()
    - CompileAndSortMatches()
    - CompileKeys()
    - CreateGlobalVarPars()
    - CreateGlobalVarPar()
    - CompileGlobalVariables()
    - CompileGlobalVarPar()
    - ReportErrorInXPath()
    - PhantomXPathExpression()
    - PhantomKeyMatch()
    - CompileXPathExpression()
    - CompileNodeSetExpression()
    - CompileXPathExpressionWithinAvt()
    - CompileMatchPattern()
    - CompileNumberPattern()
    - CompileKeyMatch()
    - CompileKeyUse()
    - ResolveQNameDynamic()
    - GenerateApply()
    - SetArg()
    - AddRemoveImplicitArgs()
    - FillupInvokeArgs()
    - InvokeApplyFunction()
    + ReportError()
    + ReportWarning()
    - VerifyXPathQName()
    - ResolvePrefix()
    - SetLineInfoCheck()
    - AddDebugVariable()
    - SetDebugNs()
    - AddCurrentPositionLast()
    - CloneName()
    - SetEnvironmentFlags()
    - System.Xml.Xsl.XPath.IFocus.GetCurrent()
    - System.Xml.Xsl.XPath.IFocus.GetPosition()
    - System.Xml.Xsl.XPath.IFocus.GetLast()
    - System.Xml.Xsl.XPath.IXPathEnvironment.ResolvePrefix()
    - System.Xml.Xsl.XPath.IXPathEnvironment.ResolveVariable()
    - System.Xml.Xsl.XPath.IXPathEnvironment.ResolveFunction()
    - GenerateScriptCall()
    - ResolvePrefixThrow()
    - CompileFnKey()
    - CompileSingleKey()
    - CompileSingleKey()
    - CompileSingleKey()
    - CreateGeneralKeyFunction()
    - CompileFnDocument()
    - CompileSingleDocument()
    - CompileFormatNumber()
    - CompileUnparsedEntityUri()
    - CompileGenerateId()
    - ResolveQNameThrow()
    - CompileSystemProperty()
    - CompileElementAvailable()
    - CompileFunctionAvailable()
    - CompileMsNodeSet()
    - EXslObjectType()
}

class "VariableHelper" {
    + StartVariables()
    + AddVariable()
    + FinishVariables()
    + CheckEmpty()
}

class "QilStrConcatenator" {
    + Reset()
    - FlushBuilder()
    + Append()
    + Append()
    + Append()
    + ToQil()
}

class "ScriptClass" {
    + AddScriptBlock()
}

class "Scripts" {
    + ResolveFunction()
    + GetScriptClass()
    + CompileScripts()
    - CompileAssembly()
    - GetLanguageName()
}

class "Stylesheet" {
    + AddTemplateMatch()
    + SortTemplateMatches()
    + AddWhitespaceRule()
    + AddVarPar()
    + AddTemplate()
}

class "XPathPatternBuilder" {
    + StartBuild()
    + AssertFilter()
    - FixupFilterBinding()
    + EndBuild()
    + Operator()
    + Axis()
    + JoinStep()
    - System.Xml.Xsl.XPath.IXPathBuilder<System.Xml.Xsl.Qil.QilNode>.Predicate()
    + BuildPredicates()
    + Function()
    + String()
    + Number()
    + Variable()
    - UnexpectedToken()
    + GetPredicateBuilder()
}

class "XPathPredicateEnvironment" {
    + ResolveVariable()
    + ResolveFunction()
    + ResolvePrefix()
    + GetCurrent()
    + GetPosition()
    + GetLast()
}

class "XsltFunctionFocus" {
    + GetCurrent()
    + GetPosition()
    + GetLast()
}

class "XPathPatternParser" {
    + Parse()
    - ParsePattern()
    - ParseLocationPathPattern()
    - ParseIdKeyPattern()
    - ParseRelativePathPattern()
    - ParseStepPattern()
    - ParsePredicate()
}

class "XslNode" {
    + SetContent()
    + AddContent()
    + InsertContent()
}

class "AttributeSet" {
    + GetDebugName()
    + AddContent()
    + MergeContent()
}

class "Template" {
    + GetDebugName()
}

class "Keys" {
    + GetKeyForItem()
}

class "Key" {
    + GetDebugName()
}

class "XslAstAnalyzer" {
    + Analyze()
    - AddImportDependencies()
    - FillModeFlags()
    - TraceResults()
    + Visit()
    + VisitChildren()
    + VisitAttributeSet()
    + VisitTemplate()
    + VisitApplyImports()
    + VisitApplyTemplates()
    + VisitAttribute()
    + VisitCallTemplate()
    + VisitComment()
    + VisitCopy()
    + VisitCopyOf()
    + VisitElement()
    + VisitError()
    + VisitForEach()
    + VisitIf()
    + VisitLiteralAttribute()
    + VisitLiteralElement()
    + VisitMessage()
    + VisitNumber()
    + VisitPI()
    + VisitSort()
    + VisitText()
    + VisitUseAttributeSet()
    + VisitValueOf()
    + VisitValueOfDoe()
    + VisitParam()
    + VisitVariable()
    + VisitWithParam()
    - ProcessVarPar()
    - ProcessExpr()
    - ProcessAvt()
    - ProcessPattern()
    - AddApplyTemplatesEdge()
    - PropagateSideEffectsFlag()
    - DepthFirstSearch()
}

class "Graph`1" {
    + GetAdjList()
    + AddEdge()
    + PropagateFlag()
    - DepthFirstSearch()
}

class "XPathAnalyzer" {
    + Analyze()
    + AnalyzeAvt()
    - ResolveVariable()
    - ResolvePrefix()
    + StartBuild()
    + EndBuild()
    + String()
    + Number()
    + Operator()
    + Axis()
    + JoinStep()
    + Predicate()
    + Variable()
    + Function()
}

class "XslAstRewriter" {
    + Rewrite()
    - CheckNodeCost()
    - Refactor()
}

class "XsltInput" {
    - ExtendRecordBuffer()
    + FindStylesheetElement()
    + Finish()
    - FillupRecord()
    - SetRecordEnd()
    - FillupTextRecord()
    - FillupCharacterEntityRecord()
    - ReadAttribute()
    + MoveToFirstChild()
    + MoveToNextSibling()
    + SkipNode()
    - ReadTextNodes()
    - ReadNextSibling()
    - ReadElement()
    + MoveToElement()
    - MoveToAttributeBase()
    + MoveToLiteralAttribute()
    + MoveToXsltAttribute()
    + IsRequiredAttribute()
    + AttributeExists()
    + IsNs()
    + IsKeyword()
    + IsXsltNamespace()
    + IsNullNamespace()
    + IsXsltAttribute()
    + IsXsltKeyword()
    + IsExtensionNamespace()
    - SetVersion()
    - SetVersion()
    + GetAttributes()
    + GetAttributes()
    + GetLiteralAttributes()
    + GetVersionAttribute()
    - InsertExNamespaces()
    - SetXPathDefaultNamespace()
    - SetDefaultCollation()
    + BuildLineInfo()
    + BuildNameLineInfo()
    + BuildReaderLineInfo()
    + LookupXmlNamespace()
    + ReportError()
    + ReportErrorFC()
    + ReportWarning()
    - ReportNYI()
}

class "ContextInfo" {
    + AddNamespace()
    + SaveExtendedLineInfo()
}

class "XsltLoader" {
    + Load()
    - Load()
    - AtomizeAttributes()
    - AtomizeAttributes()
    - ResolveUri()
    - CreateReader()
    - LoadStylesheet()
    - LoadStylesheet()
    - LoadDocument()
    - LoadSimplifiedStylesheet()
    - LoadRealStylesheet()
    - LoadImport()
    - LoadInclude()
    - LoadStripSpace()
    - LoadPreserveSpace()
    - LoadOutput()
    - ProcessOutputSettings()
    - CheckUseAttrubuteSetInList()
    - CheckAttributeSetsDfs()
    - LoadKey()
    - LoadDecimalFormat()
    - LoadNamespaceAlias()
    - LoadAttributeSet()
    - LoadGlobalVariableOrParameter()
    - LoadTemplate()
    - LoadMsScript()
    - LoadMsAssembly()
    - LoadMsUsing()
    - LoadInstructions()
    - LoadInstructions()
    - LoadInstructions()
    - LoadInstructions()
    - LoadWithParams()
    - XslApplyImports()
    - XslApplyTemplates()
    - XslCallTemplate()
    - XslCopy()
    - XslCopyOf()
    - XslFallback()
    - XslIf()
    - XslChoose()
    - XslOtherwise()
    - XslForEach()
    - XslMessage()
    - XslNumber()
    - XslValueOf()
    - XslVarPar()
    - XslComment()
    - LoadContent()
    - XslProcessingInstruction()
    - XslText()
    - XslElement()
    - XslAttribute()
    - XslSort()
    - LoadLiteralResultElement()
    - CheckWithParam()
    - LoadEndTag()
    - LoadUnknownXsltInstruction()
    - LoadFallbacks()
    - ParseModeAttribute()
    - ParseModeListAttribute()
    - ParseCollationAttribute()
    - ResolveQName()
    - ParseQNameAttribute()
    - ParseNCNameAttribute()
    - CreateXPathQName()
    - ResolveQName()
    - ParseWhitespaceRules()
    - ParseOutputMethod()
    - AddUseAttributeSets()
    - ParseUseCharacterMaps()
    - ParseStringAttribute()
    - ParseCharAttribute()
    - ParseYesNoAttribute()
    - ParseTypeAttribute()
    - ParseValidationAttribute()
    - ParseInputTypeAnnotationsAttribute()
    - CheckNoContent()
    - SkipEmptyContent()
    + ReportError()
    + ReportWarning()
    - ReportNYI()
    + CheckError()
}

class "XsltQilFactory" {
    + CheckXsltType()
    + CheckQName()
    + DefaultValueMarker()
    + IsDefaultValueMarker()
    + InvokeIsSameNodeSort()
    + InvokeSystemProperty()
    + InvokeElementAvailable()
    + InvokeCheckScriptNamespace()
    + InvokeFunctionAvailable()
    + InvokeBaseUri()
    + InvokeOnCurrentNodeChanged()
    + InvokeLangToLcid()
    + InvokeNumberFormat()
    + InvokeRegisterDecimalFormat()
    + InvokeRegisterDecimalFormatter()
    + InvokeFormatNumberStatic()
    + InvokeFormatNumberDynamic()
    + InvokeOuterXml()
    + InvokeMsFormatDateTime()
    + InvokeMsStringCompare()
    + InvokeMsUtc()
    + InvokeMsNumber()
    + InvokeMsLocalName()
    + InvokeMsNamespaceUri()
    + InvokeEXslObjectType()
}

class "XPathBuilder" {
    - System.Xml.Xsl.XPath.IFocus.GetCurrent()
    - System.Xml.Xsl.XPath.IFocus.GetPosition()
    - System.Xml.Xsl.XPath.IFocus.GetLast()
    - System.Xml.Xsl.XPath.IXPathEnvironment.ResolveVariable()
    - System.Xml.Xsl.XPath.IXPathEnvironment.ResolveFunction()
    - System.Xml.Xsl.XPath.IXPathEnvironment.ResolvePrefix()
    + StartBuild()
    + EndBuild()
    - GetCurrentNode()
    - GetCurrentPosition()
    - GetLastPosition()
    + String()
    + Number()
    + Operator()
    - LogicalOperator()
    - CompareValues()
    - CompareNodeSetAndValue()
    - CompareNodeSetAndNodeSet()
    - EqualityOperator()
    - RelationalOperator()
    - NegateOperator()
    - ArithmeticOperator()
    - UnionOperator()
    - BuildAxisFilter()
    - BuildAxis()
    + Axis()
    + JoinStep()
    + Predicate()
    + Variable()
    + Function()
    - LocalNameOfFirstNode()
    - NamespaceOfFirstNode()
    - NameOf()
    - NameOfFirstNode()
    - Sum()
}

class "FixupVisitor" {
    + Fixup()
    + Fixup()
    + CountUnfixedLast()
    + VisitUnknown()
}

class "FunctionInfo`1" {
    + CastArguments()
}

class "XPathCompileException" {
    + GetObjectData()
    + MarkOutError()
    + FormatDetailedMessage()
}

class "XPathParser`1" {
    + Parse()
    - ParseLocationPath()
    - ParseRelativeLocationPath()
    - ParseStep()
    - ParseNodeTest()
    - ParsePredicate()
    - ParseExpr()
    - ParseSubExpr()
    - ParseUnionExpr()
    - ParsePathExpr()
    - ParseFilterExpr()
    - IsPrimaryExpr()
    - ParsePrimaryExpr()
    - ParseFunctionCall()
    - PushPosInfo()
    - PopPosInfo()
    - PopPosInfo()
}

class "XPathQilFactory" {
    + Error()
    + Error()
    + FirstNode()
    + IsAnyType()
    + CheckAny()
    + CheckNode()
    + CheckNodeSet()
    + CheckNodeNotRtf()
    + CheckString()
    + CheckStringS()
    + CheckDouble()
    + CheckBool()
    + CannotBeNodeSet()
    + SafeDocOrderDistinct()
    + InvokeFormatMessage()
    + InvokeEqualityOperator()
    + InvokeRelationalOperator()
    - ExpectAny()
    + ConvertToType()
    + ConvertToString()
    + ConvertToBoolean()
    + ConvertToNumber()
    + ConvertToNode()
    + ConvertToNodeSet()
    + TryEnsureNodeSet()
    + EnsureNodeSet()
    + InvokeEnsureNodeSet()
    + Id()
    + InvokeStartsWith()
    + InvokeContains()
    + InvokeSubstringBefore()
    + InvokeSubstringAfter()
    + InvokeSubstring()
    + InvokeSubstring()
    + InvokeNormalizeSpace()
    + InvokeTranslate()
    + InvokeLang()
    + InvokeFloor()
    + InvokeCeiling()
    + InvokeRound()
}

class "XPathScanner" {
    - SetSourceIndex()
    - NextChar()
    - SkipSpace()
    + NextLex()
    - CheckOperator()
    - CheckAxis()
    - ScanNumber()
    - ScanString()
    - ScanNCName()
    + PassToken()
    + CheckToken()
    - LexKindToString()
    + CreateException()
}

class "DecimalFormatter" {
    + Format()
}

class "DocumentOrderComparer" {
    + Compare()
    + GetDocumentIndex()
}

class "EarlyBoundInfo" {
    + CreateObject()
    + Equals()
    + GetHashCode()
}

class "RtfTreeNavigator" {
    + CopyToWriter()
    + ToNavigator()
    + Clone()
    + MoveTo()
}

class "RtfTextNavigator" {
    + CopyToWriter()
    + ToNavigator()
    + Clone()
    + MoveTo()
}

class "NavigatorConstructor" {
    + GetNavigator()
    + GetNavigator()
}

class "WhitespaceRuleLookup" {
    + Atomize()
    + ShouldStripSpace()
}

class "InternalWhitespaceRule" {
    + Init()
    + Atomize()
    + GetHashCode()
    + Equals()
}

class "WhitespaceRuleReader" {
    + Read()
}

class "XmlAttributeCache" {
    + Init()
    - SetWrappedWriter()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteNamespaceDeclaration()
    + WriteString()
    + WriteValue()
    + WriteValue()
    + StartElementContent()
    + WriteStartElement()
    + WriteEndElement()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + Close()
    + Flush()
    - FlushAttributes()
    - EnsureAttributeCache()
}

class "XmlCollation" {
    + Equals()
    + GetHashCode()
    + GetObjectData()
    + CreateSortKey()
}

class "XmlExtensionFunctionTable" {
    + Bind()
}

class "XmlExtensionFunction" {
    + Init()
    + GetClrArgumentType()
    + GetXmlArgumentType()
    + CanBind()
    + Bind()
    - Bind()
    + Invoke()
    + Equals()
    + GetHashCode()
    - GetClrType()
    - InferXmlType()
}

class "XmlILIndex" {
    + Add()
    + Lookup()
}

class "XmlNavNameFilter" {
    + MoveToContent()
    + MoveToNextContent()
    + MoveToFollowingSibling()
    + MoveToPreviousSibling()
    + MoveToFollowing()
    + IsFiltered()
}

class "XmlNavTypeFilter" {
    + MoveToContent()
    + MoveToNextContent()
    + MoveToFollowingSibling()
    + MoveToPreviousSibling()
    + MoveToFollowing()
    + IsFiltered()
}

class "XmlNavAttrFilter" {
    + MoveToContent()
    + MoveToNextContent()
    + MoveToFollowingSibling()
    + MoveToPreviousSibling()
    + MoveToFollowing()
    + IsFiltered()
}

class "XmlNavNeverFilter" {
    + MoveToContent()
    + MoveToNextContent()
    + MoveToFollowingSibling()
    + MoveToPreviousSibling()
    + MoveToFollowing()
    + IsFiltered()
}

class "XmlQueryContext" {
    + GetDataSource()
    - ConstructDocument()
    + GetParameter()
    + GetLateBoundObject()
    + LateBoundFunctionExists()
    + InvokeXsltLateBoundFunction()
    + OnXsltMessageEncountered()
}

class "XmlQueryOutput" {
    - SetWrappedWriter()
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteCData()
    + WriteBase64()
    + Close()
    + Flush()
    + LookupPrefix()
    + StartTree()
    + EndTree()
    + WriteStartElementUnchecked()
    + WriteStartElementUnchecked()
    + StartElementContentUnchecked()
    + WriteEndElementUnchecked()
    + WriteEndElementUnchecked()
    + WriteStartAttributeUnchecked()
    + WriteStartAttributeUnchecked()
    + WriteEndAttributeUnchecked()
    + WriteNamespaceDeclarationUnchecked()
    + WriteStringUnchecked()
    + WriteRawUnchecked()
    + WriteStartRoot()
    + WriteEndRoot()
    + WriteStartElementLocalName()
    + WriteStartAttributeLocalName()
    + WriteStartElementComputed()
    + WriteStartElementComputed()
    + WriteStartElementComputed()
    + WriteStartElementComputed()
    + WriteStartAttributeComputed()
    + WriteStartAttributeComputed()
    + WriteStartAttributeComputed()
    + WriteStartAttributeComputed()
    + WriteNamespaceDeclaration()
    + WriteStartNamespace()
    + WriteNamespaceString()
    + WriteEndNamespace()
    + WriteStartComment()
    + WriteCommentString()
    + WriteEndComment()
    + WriteStartProcessingInstruction()
    + WriteProcessingInstructionString()
    + WriteEndProcessingInstruction()
    + WriteItem()
    + XsltCopyOf()
    + StartCopy()
    + EndCopy()
    - AddNamespace()
    - WriteString()
    - CopyNode()
    - StartCopy()
    - EndCopy()
    - CopyNamespaces()
    - CopyNamespacesHelper()
    - ConstructWithinContent()
    - ConstructInEnumAttrs()
    - WriteCachedNamespaces()
    - XmlStateToNodeType()
    - CheckAttributePrefix()
    - RemapPrefix()
    - WriteStartComputed()
    - WriteStartComputed()
    - WriteStartComputed()
    - WriteStartComputed()
    - EnsureValidName()
    - PushElementNames()
    - PopElementNames()
    - ThrowInvalidStateError()
}

class "XmlQueryRuntime" {
    + DebugGetGlobalNames()
    + DebugGetGlobalValue()
    + DebugSetGlobalValue()
    + DebugGetXsltValue()
    + GetEarlyBoundObject()
    + EarlyBoundFunctionExists()
    + IsGlobalComputed()
    + GetGlobalValue()
    + SetGlobalValue()
    + GetAtomizedName()
    + GetNameFilter()
    + GetTypeFilter()
    + ParseTagName()
    + ParseTagName()
    + ParseTagName()
    + IsQNameEqual()
    + IsQNameEqual()
    + GetXmlType()
    + ChangeTypeXsltArgument()
    + ChangeTypeXsltArgument()
    + ChangeTypeXsltResult()
    + ChangeTypeXsltResult()
    + MatchesXmlType()
    + MatchesXmlType()
    + MatchesXmlType()
    + MatchesXmlType()
    - CreateXmlType()
    + GetCollation()
    + CreateCollation()
    + ComparePosition()
    + DocOrderDistinct()
    + GenerateId()
    + FindIndex()
    + AddNewIndex()
    + StartSequenceConstruction()
    + EndSequenceConstruction()
    + StartRtfConstruction()
    + EndRtfConstruction()
    + TextRtfConstruction()
    + SendMessage()
    + ThrowException()
}

class "XmlQuerySequence`1" {
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<T>.Add()
    - System.Collections.Generic.ICollection<T>.Clear()
    + Contains()
    + CopyTo()
    - System.Collections.Generic.ICollection<T>.Remove()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<T>.Insert()
    - System.Collections.Generic.IList<T>.RemoveAt()
    + Clear()
    + Add()
    + SortByKeys()
    - EnsureCache()
    + OnItemsChanged()
}

class "XmlQueryItemSequence" {
    + AddClone()
}

class "XmlQueryNodeSequence" {
    + DocOrderDistinct()
    + AddClone()
    + OnItemsChanged()
    - System.Collections.Generic.IEnumerable<System.Xml.XPath.XPathItem>.GetEnumerator()
    - System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Add()
    - System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Clear()
    - System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Contains()
    - System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.CopyTo()
    - System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Remove()
    - System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.IndexOf()
    - System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Insert()
    - System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.RemoveAt()
}

class "XmlQueryStaticData" {
    + GetObjectData()
}

class "XmlQueryDataReader" {
    + ReadInt32Encoded()
    + ReadStringQ()
    + ReadSByte()
}

class "XmlQueryDataWriter" {
    + WriteInt32Encoded()
    + WriteStringQ()
}

class "XmlRawWriterWrapper" {
    + WriteDocType()
    + WriteStartElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + Close()
    + Flush()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + Dispose()
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + StartElementContent()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteNamespaceDeclaration()
}

class "XmlCachedSequenceWriter" {
    + StartTree()
    + EndTree()
    + WriteItem()
}

class "XmlMergeSequenceWriter" {
    + StartTree()
    + EndTree()
    + WriteItem()
    - WriteString()
    - CopyNode()
    - CopyShallowNode()
    - CopyNamespaces()
}

class "XmlEmptySortKey" {
    + CompareTo()
}

class "XmlDecimalSortKey" {
    + CompareTo()
}

class "XmlIntegerSortKey" {
    + CompareTo()
}

class "XmlIntSortKey" {
    + CompareTo()
}

class "XmlStringSortKey" {
    + CompareTo()
}

class "XmlDoubleSortKey" {
    + CompareTo()
}

class "TokenInfo" {
    + AssertSeparator()
}

class "NumberFormatter" {
    + FormatSequence()
    - FormatItem()
}

class "XsltLibrary" {
    + FormatMessage()
    + CheckScriptNamespace()
    + ElementAvailable()
    + FunctionAvailable()
    - FunctionAvailableHelper()
    + RegisterDecimalFormat()
    - CreateDecimalFormat()
    + RegisterDecimalFormatter()
    + FormatNumberStatic()
    + FormatNumberDynamic()
    + NumberFormat()
    + LangToLcid()
    + EqualityOperator()
    + RelationalOperator()
    + IsSameNodeSort()
}

class "GenerateHelper" {
    + MethodBegin()
    + MethodEnd()
    + CallSyncToNavigator()
    + LoadInteger()
    + LoadBoolean()
    + LoadType()
    + DeclareLocal()
    + LoadQueryRuntime()
    + LoadQueryContext()
    + LoadXsltLibrary()
    + LoadQueryOutput()
    + LoadParameter()
    + SetParameter()
    + BranchAndMark()
    + TestAndBranch()
    + ConvBranchToBool()
    + TailCall()
    - TraceCall()
    + Call()
    + CallToken()
    + Construct()
    + CallConcatStrings()
    + TreatAs()
    + ConstructLiteralDecimal()
    + ConstructLiteralQName()
    + CallArithmeticOp()
    + CallCompareEquals()
    + CallCompare()
    + CallStartRtfConstruction()
    + CallEndRtfConstruction()
    + CallStartSequenceConstruction()
    + CallEndSequenceConstruction()
    + CallGetEarlyBoundObject()
    + CallGetAtomizedName()
    + CallGetNameFilter()
    + CallGetTypeFilter()
    + CallParseTagName()
    + CallGetGlobalValue()
    + CallSetGlobalValue()
    + CallGetCollation()
    - EnsureWriter()
    + CallGetParameter()
    + CallStartTree()
    + CallEndTree()
    + CallWriteStartRoot()
    + CallWriteEndRoot()
    + CallWriteStartElement()
    + CallWriteEndElement()
    + CallStartElementContent()
    + CallWriteStartAttribute()
    + CallWriteEndAttribute()
    + CallWriteNamespaceDecl()
    + CallWriteString()
    + CallWriteStartPI()
    + CallWriteEndPI()
    + CallWriteStartComment()
    + CallWriteEndComment()
    + CallCacheCount()
    + CallCacheItem()
    + CallValueAs()
    + AddSortKey()
    + DebugStartScope()
    + DebugEndScope()
    + DebugSequencePoint()
    - GetFileName()
    - MarkSequencePoint()
    + DefineLabel()
    + MarkLabel()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + Emit()
    + EmitUnconditionalBranch()
}

class "IteratorDescriptor" {
    - Init()
    + GetLabelNext()
    + SetIterator()
    + SetIterator()
    + LoopToEnd()
    + CacheCount()
    + EnsureNoCache()
    + SetBranching()
    + PushValue()
    + EnsureStack()
    + EnsureNoStack()
    + EnsureLocal()
    + EnsureLocal()
    + DiscardStack()
    + EnsureStackNoCache()
    + EnsureNoStackNoCache()
    + EnsureLocalNoCache()
    + EnsureLocalNoCache()
    + EnsureItemStorageType()
}

class "OptimizerPatterns" {
    + AddArgument()
    + GetArgument()
    + AddPattern()
    + MatchesPattern()
    + ToString()
}

class "UniqueList`1" {
    + Add()
    + ToArray()
}

class "StaticDataManager" {
    + DeclareName()
    + DeclareNameFilter()
    + DeclarePrefixMappings()
    + DeclareGlobalValue()
    + DeclareEarlyBound()
    + DeclareXmlType()
    + DeclareCollation()
}

class "XmlILConstructInfo" {
    + ToString()
}

class "XmlILStateAnalyzer" {
    + Analyze()
    + AnalyzeContent()
    + AnalyzeLoop()
    + AnalyzeSequence()
    + AnalyzeConditional()
    + AnalyzeChoice()
    + AnalyzeCopy()
    - StartLoop()
    - EndLoop()
    - MaybeAttrNmsp()
    - MaybeContent()
}

class "XmlILElementAnalyzer" {
    + Analyze()
    + AnalyzeLoop()
    + AnalyzeCopy()
    - AnalyzeAttributeCtor()
    - CheckAttributeNamespaceConstruct()
}

class "XmlILNamespaceAnalyzer" {
    + Analyze()
    - AnalyzeContent()
    - CheckNamespaceInScope()
}

class "XmlILModule" {
    + DefineMethod()
    + FindMethod()
    + DefineInitializedData()
    + DefineField()
    + DefineTypeInitializer()
    + AddSourceDocument()
    + BakeMethods()
    + CreateDelegate()
}

class "XmlILOptimizerVisitor" {
    + Optimize()
    + Visit()
    + VisitReference()
    + AllowReplace()
    + Replace()
    + NoReplace()
    + RecalculateType()
    + VisitQilExpression()
    + VisitOptimizeBarrier()
    + VisitDataSource()
    + VisitNop()
    + VisitError()
    + VisitWarning()
    + VisitLet()
    + VisitPositionOf()
    + VisitAnd()
    + VisitOr()
    + VisitNot()
    + VisitConditional()
    + VisitChoice()
    + VisitLength()
    + VisitSequence()
    + VisitUnion()
    + VisitIntersection()
    + VisitDifference()
    + VisitAverage()
    + VisitSum()
    + VisitMinimum()
    + VisitMaximum()
    + VisitNegate()
    + VisitAdd()
    + VisitSubtract()
    + VisitMultiply()
    + VisitDivide()
    + VisitModulo()
    + VisitStrLength()
    + VisitStrConcat()
    + VisitStrParseQName()
    + VisitNe()
    + VisitEq()
    + VisitGt()
    + VisitGe()
    + VisitLt()
    + VisitLe()
    + VisitIs()
    + VisitAfter()
    + VisitBefore()
    + VisitLoop()
    + VisitFilter()
    + VisitSort()
    + VisitSortKey()
    + VisitDocOrderDistinct()
    + VisitFunction()
    + VisitInvoke()
    + VisitContent()
    + VisitAttribute()
    + VisitParent()
    + VisitRoot()
    + VisitDescendant()
    + VisitDescendantOrSelf()
    + VisitAncestor()
    + VisitAncestorOrSelf()
    + VisitPreceding()
    + VisitFollowingSibling()
    + VisitPrecedingSibling()
    + VisitNodeRange()
    + VisitDeref()
    + VisitElementCtor()
    + VisitAttributeCtor()
    + VisitCommentCtor()
    + VisitPICtor()
    + VisitTextCtor()
    + VisitRawTextCtor()
    + VisitDocumentCtor()
    + VisitNamespaceDecl()
    + VisitRtfCtor()
    + VisitNameOf()
    + VisitLocalNameOf()
    + VisitNamespaceUriOf()
    + VisitPrefixOf()
    + VisitTypeAssert()
    + VisitIsType()
    + VisitIsEmpty()
    + VisitXPathNodeValue()
    + VisitXPathFollowing()
    + VisitXPathPreceding()
    + VisitXPathNamespace()
    + VisitXsltGenerateId()
    + VisitXsltCopy()
    + VisitXsltCopyOf()
    + VisitXsltConvert()
    - DependsOn()
    + NonPositional()
    - Subs()
    - IsGlobalVariable()
    - IsGlobalValue()
    - IsPrimitiveNumeric()
    - MatchesContentTest()
    - IsConstructedExpression()
    - IsLiteral()
    - AreLiteralArgs()
    - ExtractLiteralValue()
    - HasNestedSequence()
    - AllowJoinAndDod()
    - AllowDodReverse()
    - CanFoldXsltConvert()
    - CanFoldXsltConvertNonLossy()
    - FoldXsltConvert()
    - FoldComparison()
    - CanFoldArithmetic()
    - FoldArithmetic()
    - AddStepPattern()
    - IsDocOrderDistinct()
    - IsStepPattern()
    - IsStepPattern()
}

class "NodeCounter" {
    + Count()
    + Visit()
    + VisitReference()
}

class "NodeFinder" {
    + Find()
    + Visit()
    + VisitReference()
    + OnFound()
}

class "PositionOfFinder" {
    + OnFound()
}

class "EqualityIndexVisitor" {
    + Scan()
    + VisitReference()
    + VisitRoot()
}

class "XmlILVisitor" {
    + Visit()
    - PrepareGlobalValues()
    - VisitGlobalValues()
    - Function()
    + Visit()
    + VisitChildren()
    - NestedConstruction()
    - CopySequence()
    + VisitDataSource()
    + VisitNop()
    + VisitOptimizeBarrier()
    + VisitError()
    + VisitWarning()
    + VisitTrue()
    + VisitFalse()
    + VisitLiteralString()
    + VisitLiteralInt32()
    + VisitLiteralInt64()
    + VisitLiteralDouble()
    + VisitLiteralDecimal()
    + VisitLiteralQName()
    + VisitAnd()
    - StartConjunctiveTests()
    - StartLastConjunctiveTest()
    - EndConjunctiveTests()
    + VisitOr()
    + VisitNot()
    + VisitConditional()
    - ConditionalBranch()
    + VisitChoice()
    + VisitLength()
    + VisitSequence()
    - VisitEmpty()
    - Sequence()
    + VisitUnion()
    + VisitIntersection()
    + VisitDifference()
    - CreateSetIterator()
    + VisitAverage()
    + VisitSum()
    + VisitMinimum()
    + VisitMaximum()
    - CreateAggregator()
    + VisitNegate()
    + VisitAdd()
    + VisitSubtract()
    + VisitMultiply()
    + VisitDivide()
    + VisitModulo()
    - ArithmeticOp()
    + VisitStrLength()
    + VisitStrConcat()
    - GenerateConcat()
    + VisitStrParseQName()
    - VisitStrParseQName()
    + VisitNe()
    + VisitEq()
    + VisitGt()
    + VisitGe()
    + VisitLt()
    + VisitLe()
    - Compare()
    + VisitIs()
    + VisitBefore()
    + VisitAfter()
    - ComparePosition()
    + VisitFor()
    + VisitLet()
    + VisitParameter()
    + VisitLoop()
    + VisitFilter()
    - HandleFilterPatterns()
    - StartBinding()
    - StartForBinding()
    + StartLetBinding()
    - EndBinding()
    + VisitPositionOf()
    + VisitSort()
    - VisitSortKey()
    + VisitDocOrderDistinct()
    - HandleDodPatterns()
    + VisitInvoke()
    + VisitContent()
    + VisitAttribute()
    + VisitParent()
    + VisitRoot()
    + VisitXmlContext()
    + VisitDescendant()
    + VisitDescendantOrSelf()
    + VisitAncestor()
    + VisitAncestorOrSelf()
    + VisitPreceding()
    + VisitFollowingSibling()
    + VisitPrecedingSibling()
    + VisitNodeRange()
    + VisitDeref()
    + VisitElementCtor()
    + VisitAttributeCtor()
    + VisitCommentCtor()
    + VisitPICtor()
    + VisitTextCtor()
    + VisitRawTextCtor()
    - VisitTextCtor()
    + VisitDocumentCtor()
    + VisitNamespaceDecl()
    + VisitRtfCtor()
    + VisitNameOf()
    + VisitLocalNameOf()
    + VisitNamespaceUriOf()
    + VisitPrefixOf()
    - VisitNodeProperty()
    + VisitTypeAssert()
    + VisitIsType()
    - MatchesNodeKinds()
    + VisitIsEmpty()
    + VisitXPathNodeValue()
    + VisitXPathFollowing()
    + VisitXPathPreceding()
    + VisitXPathNamespace()
    + VisitXsltGenerateId()
    + VisitXsltInvokeLateBound()
    + VisitXsltInvokeEarlyBound()
    + VisitXsltCopy()
    + VisitXsltCopyOf()
    + VisitXsltConvert()
    - GetXsltConvertMethod()
    - SyncToNavigator()
    - CreateSimpleIterator()
    - CreateFilteredIterator()
    - CreateContainerIterator()
    - GenerateSimpleIterator()
    - GenerateContainerIterator()
    - LoadNameAndType()
    - TryZeroCompare()
    - TryNameCompare()
    - ClrCompare()
    - ZeroCompare()
    - StartWriterLoop()
    - EndWriterLoop()
    - MightHaveNamespacesAfterAttributes()
    - ElementCachesAttributes()
    - BeforeStartChecks()
    - AfterEndChecks()
    - CheckWithinContent()
    - CheckEnumAttrs()
    - QilXmlToXPathNodeType()
    - QilConstructorToNodeType()
    - LoadSelectFilter()
    - StartNestedIterator()
    - StartNestedIterator()
    - EndNestedIterator()
    - NestedVisit()
    - NestedVisit()
    - NestedVisit()
    - NestedVisitEnsureStack()
    - NestedVisitEnsureStack()
    - NestedVisitEnsureStack()
    - NestedVisitEnsureLocal()
    - NestedVisitWithBranch()
    - NestedVisitEnsureCache()
    - CachesResult()
    - GetStorageType()
    - GetStorageType()
    - GetItemStorageType()
    - GetItemStorageType()
}

class "QilCloneVisitor" {
    + Clone()
    + Visit()
    + VisitChildren()
    + VisitReference()
    + BeginScope()
    + EndScope()
    + FindClonedReference()
}

class "QilFactory" {
    + QilExpression()
    + ActualParameterList()
    + FormalParameterList()
    + BranchList()
    + Sequence()
    + Parameter()
    + StrConcat()
    + LiteralQName()
    + TypeAssert()
    + IsType()
    + XsltConvert()
    + Function()
    + FunctionList()
    + GlobalVariableList()
    + GlobalParameterList()
    + ActualParameterList()
    + FormalParameterList()
    + SortKeyList()
    + BranchList()
    + OptimizeBarrier()
    + Unknown()
    + DataSource()
    + Nop()
    + Error()
    + Warning()
    + For()
    + Let()
    + Parameter()
    + PositionOf()
    + True()
    + False()
    + LiteralString()
    + LiteralInt32()
    + LiteralInt64()
    + LiteralDouble()
    + LiteralDecimal()
    + LiteralQName()
    + LiteralType()
    + LiteralObject()
    + And()
    + Or()
    + Not()
    + Conditional()
    + Choice()
    + Length()
    + Sequence()
    + Union()
    + Intersection()
    + Difference()
    + Sum()
    + Negate()
    + Add()
    + Subtract()
    + Multiply()
    + Divide()
    + Modulo()
    + StrLength()
    + StrConcat()
    + StrParseQName()
    + Ne()
    + Eq()
    + Gt()
    + Ge()
    + Lt()
    + Le()
    + Is()
    + Before()
    + Loop()
    + Filter()
    + Sort()
    + SortKey()
    + DocOrderDistinct()
    + Function()
    + Invoke()
    + Content()
    + Attribute()
    + Parent()
    + Root()
    + XmlContext()
    + Descendant()
    + DescendantOrSelf()
    + Ancestor()
    + AncestorOrSelf()
    + Preceding()
    + FollowingSibling()
    + PrecedingSibling()
    + NodeRange()
    + Deref()
    + ElementCtor()
    + AttributeCtor()
    + CommentCtor()
    + PICtor()
    + TextCtor()
    + RawTextCtor()
    + DocumentCtor()
    + NamespaceDecl()
    + RtfCtor()
    + NameOf()
    + LocalNameOf()
    + NamespaceUriOf()
    + PrefixOf()
    + TypeAssert()
    + IsType()
    + IsEmpty()
    + XPathNodeValue()
    + XPathFollowing()
    + XPathPreceding()
    + XPathNamespace()
    + XsltGenerateId()
    + XsltInvokeLateBound()
    + XsltInvokeEarlyBound()
    + XsltCopy()
    + XsltCopyOf()
    + XsltConvert()
    + TraceNode()
}

class "QilList" {
    + ShallowClone()
    + Insert()
    + RemoveAt()
}

class "QilName" {
    + GetHashCode()
    + Equals()
    + ToString()
}

class "QilNode" {
    + DeepClone()
    + ShallowClone()
    + Insert()
    + RemoveAt()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Add()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + IndexOf()
}

class "QilPatternFactory" {
    + String()
    + Int32()
    + Double()
    + QName()
    + QName()
    + QName()
    + Unknown()
    + QilExpression()
    + FunctionList()
    + GlobalVariableList()
    + GlobalParameterList()
    + ActualParameterList()
    + ActualParameterList()
    + ActualParameterList()
    + FormalParameterList()
    + FormalParameterList()
    + FormalParameterList()
    + BranchList()
    + OptimizeBarrier()
    + DataSource()
    + Nop()
    + Error()
    + Warning()
    + For()
    + Let()
    + Parameter()
    + Parameter()
    + PositionOf()
    + True()
    + False()
    + Boolean()
    + And()
    + Or()
    + Not()
    + Conditional()
    + Choice()
    + Length()
    + Sequence()
    + Sequence()
    + Sequence()
    + Sequence()
    + Union()
    + Sum()
    + Negate()
    + Add()
    + Subtract()
    + Multiply()
    + Divide()
    + Modulo()
    + StrLength()
    + StrConcat()
    + StrConcat()
    + StrConcat()
    + StrParseQName()
    + Ne()
    + Eq()
    + Gt()
    + Ge()
    + Lt()
    + Le()
    + Is()
    + Before()
    + Loop()
    + Filter()
    + Sort()
    + SortKey()
    + DocOrderDistinct()
    + Function()
    + Function()
    + Invoke()
    + Content()
    + Parent()
    + Root()
    + XmlContext()
    + Descendant()
    + DescendantOrSelf()
    + Ancestor()
    + AncestorOrSelf()
    + Preceding()
    + FollowingSibling()
    + PrecedingSibling()
    + NodeRange()
    + Deref()
    + ElementCtor()
    + AttributeCtor()
    + CommentCtor()
    + PICtor()
    + TextCtor()
    + RawTextCtor()
    + DocumentCtor()
    + NamespaceDecl()
    + RtfCtor()
    + NameOf()
    + LocalNameOf()
    + NamespaceUriOf()
    + PrefixOf()
    + TypeAssert()
    + IsType()
    + IsEmpty()
    + XPathNodeValue()
    + XPathFollowing()
    + XPathNamespace()
    + XPathPreceding()
    + XsltGenerateId()
    + XsltInvokeEarlyBound()
    + XsltInvokeLateBound()
    + XsltCopy()
    + XsltCopyOf()
    + XsltConvert()
}

class "QilPatterns" {
    + Clone()
    + ClearAll()
    + Add()
    + IsSet()
}

class "QilScopedVisitor" {
    + BeginScope()
    + EndScope()
    + BeforeVisit()
    + AfterVisit()
    + Visit()
}

class "QilTypeChecker" {
    + Check()
    + CheckQilExpression()
    + CheckFunctionList()
    + CheckGlobalVariableList()
    + CheckGlobalParameterList()
    + CheckActualParameterList()
    + CheckFormalParameterList()
    + CheckSortKeyList()
    + CheckBranchList()
    + CheckOptimizeBarrier()
    + CheckUnknown()
    + CheckDataSource()
    + CheckNop()
    + CheckError()
    + CheckWarning()
    + CheckFor()
    + CheckLet()
    + CheckParameter()
    + CheckPositionOf()
    + CheckTrue()
    + CheckFalse()
    + CheckLiteralString()
    + CheckLiteralInt32()
    + CheckLiteralInt64()
    + CheckLiteralDouble()
    + CheckLiteralDecimal()
    + CheckLiteralQName()
    + CheckLiteralType()
    + CheckLiteralObject()
    + CheckAnd()
    + CheckOr()
    + CheckNot()
    + CheckConditional()
    + CheckChoice()
    + CheckLength()
    + CheckSequence()
    + CheckUnion()
    + CheckIntersection()
    + CheckDifference()
    + CheckAverage()
    + CheckSum()
    + CheckMinimum()
    + CheckMaximum()
    + CheckNegate()
    + CheckAdd()
    + CheckSubtract()
    + CheckMultiply()
    + CheckDivide()
    + CheckModulo()
    + CheckStrLength()
    + CheckStrConcat()
    + CheckStrParseQName()
    + CheckNe()
    + CheckEq()
    + CheckGt()
    + CheckGe()
    + CheckLt()
    + CheckLe()
    + CheckIs()
    + CheckAfter()
    + CheckBefore()
    + CheckLoop()
    + CheckFilter()
    + CheckSort()
    + CheckSortKey()
    + CheckDocOrderDistinct()
    + CheckFunction()
    + CheckInvoke()
    + CheckContent()
    + CheckAttribute()
    + CheckParent()
    + CheckRoot()
    + CheckXmlContext()
    + CheckDescendant()
    + CheckDescendantOrSelf()
    + CheckAncestor()
    + CheckAncestorOrSelf()
    + CheckPreceding()
    + CheckFollowingSibling()
    + CheckPrecedingSibling()
    + CheckNodeRange()
    + CheckDeref()
    + CheckElementCtor()
    + CheckAttributeCtor()
    + CheckCommentCtor()
    + CheckPICtor()
    + CheckTextCtor()
    + CheckRawTextCtor()
    + CheckDocumentCtor()
    + CheckNamespaceDecl()
    + CheckRtfCtor()
    + CheckNameOf()
    + CheckLocalNameOf()
    + CheckNamespaceUriOf()
    + CheckPrefixOf()
    + CheckTypeAssert()
    + CheckIsType()
    + CheckIsEmpty()
    + CheckXPathNodeValue()
    + CheckXPathFollowing()
    + CheckXPathPreceding()
    + CheckXPathNamespace()
    + CheckXsltGenerateId()
    + CheckXsltInvokeLateBound()
    + CheckXsltInvokeEarlyBound()
    + CheckXsltCopy()
    + CheckXsltCopyOf()
    + CheckXsltConvert()
    - Check()
    - CheckLiteralValue()
    - CheckClass()
    - CheckClassAndNodeType()
    - CheckXmlType()
    - CheckNumericX()
    - CheckNumericXS()
    - CheckAtomicX()
    - CheckNotDisjoint()
    - DistinctType()
    - FindFilterType()
}

class "QilDepthChecker" {
    - Check()
}

class "QilXmlWriter" {
    + ToXml()
    + WriteAnnotations()
    + WriteLineInfo()
    + WriteXmlType()
    + VisitChildren()
    + VisitReference()
    + VisitQilExpression()
    + VisitLiteralType()
    + VisitLiteralQName()
    + BeginScope()
    + EndScope()
    + BeforeVisit()
    + AfterVisit()
}

class "ForwardRefFinder" {
    + Find()
    + Visit()
    + VisitReference()
}

class "NameGenerator" {
    + NextName()
    + NameOf()
    + ClearName()
}

class "SubstitutionList" {
    + AddSubstitutionPair()
    + RemoveLastSubstitutionPair()
    + FindReplacement()
}

class "WhitespaceRule" {
    + Init()
    + GetObjectData()
}

class "AxisElement" {
    + SetDepth()
    + MoveToParent()
    + MoveToChild()
}

class "AxisStack" {
    + Push()
    + Pop()
    + MoveToParent()
    + MoveToChild()
    + MoveToAttribute()
}

class "ActiveAxis" {
    + Reactivate()
    + MoveToStartElement()
    + EndElement()
    + MoveToAttribute()
}

class "Asttree" {
    + CompileXPath()
    - SetURN()
}

class "AutoValidator" {
    + Validate()
    + CompleteValidation()
    + FindId()
    - DetectValidationType()
}

class "BaseProcessor" {
    + AddToTable()
    - IsValidAttributeGroupRedefine()
    - IsValidGroupRedefine()
    - IsValidTypeRedefine()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEventNoThrow()
}

class "BaseValidator" {
    + Validate()
    + CompleteValidation()
    + FindId()
    + ValidateText()
    + ValidateWhitespace()
    - SaveTextValue()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
    + SendValidationEvent()
}

class "BitSet" {
    + Clear()
    + Clear()
    + Set()
    + Get()
    + NextSet()
    + And()
    + Or()
    + GetHashCode()
    + Equals()
    + Clone()
    + Intersects()
    - Subscript()
    - EnsureLength()
}

class "ChameleonKey" {
    + GetHashCode()
    + Equals()
}

class "LocatedActiveAxis" {
    + Reactivate()
}

class "SelectorActiveAxis" {
    + EndElement()
    + PushKS()
    + PopKS()
}

class "TypedObject" {
    + ToString()
    + SetDecimal()
    - ListDValueEquals()
    + Equals()
}

class "KeySequence" {
    + IsQualified()
    + GetHashCode()
    + Equals()
    + ToString()
}

class "SymbolsDictionary" {
    + AddName()
    + AddNamespaceList()
    - AddWildcard()
    + GetNamespaceListSymbols()
    + Exists()
    + GetParticle()
    + NameOf()
}

class "Positions" {
    + Add()
}

class "LeafNode" {
    + ExpandTree()
    + Clone()
    + ConstructPos()
}

class "NamespaceListNode" {
    + Clone()
    + GetResolvedSymbols()
    + ExpandTree()
    + ConstructPos()
}

class "SequenceNode" {
    + ConstructPos()
    + ExpandTree()
}

class "ChoiceNode" {
    + ConstructPos()
    + ExpandTree()
}

class "PlusNode" {
    + ConstructPos()
}

class "QmarkNode" {
    + ConstructPos()
}

class "StarNode" {
    + ConstructPos()
}

class "LeafRangeNode" {
    + Clone()
    + ExpandTree()
}

class "ContentValidator" {
    + InitValidation()
    + ValidateElement()
    + CompleteValidation()
    + ExpectedElements()
    + ExpectedParticles()
}

class "ParticleContentValidator" {
    + InitValidation()
    + ValidateElement()
    + CompleteValidation()
    + Start()
    + OpenGroup()
    + CloseGroup()
    + Exists()
    + AddName()
    + AddNamespaceList()
    - AddLeafNode()
    + AddChoice()
    + AddSequence()
    + AddStar()
    + AddPlus()
    + AddQMark()
    + AddLeafRange()
    - Closure()
    + Finish()
    + Finish()
    - CalculateTotalFollowposForRangeNodes()
    - CheckCMUPAWithLeafRangeNodes()
    - GetApplicableMinMaxFollowPos()
    - CheckUniqueParticleAttribution()
    - CheckUniqueParticleAttribution()
    - BuildTransitionTable()
}

class "DfaContentValidator" {
    + InitValidation()
    + ValidateElement()
    + CompleteValidation()
    + ExpectedElements()
    + ExpectedParticles()
}

class "NfaContentValidator" {
    + InitValidation()
    + ValidateElement()
    + CompleteValidation()
    + ExpectedElements()
    + ExpectedParticles()
}

class "RangeContentValidator" {
    + InitValidation()
    + ValidateElement()
    + CompleteValidation()
    + ExpectedElements()
    + ExpectedParticles()
}

class "AllElementsContentValidator" {
    + AddElement()
    + InitValidation()
    + ValidateElement()
    + CompleteValidation()
    + ExpectedElements()
    + ExpectedParticles()
}

class "SchemaDatatypeMap" {
    + CompareTo()
}

class "Datatype_List" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
    + TryParseValue()
}

class "Datatype_union" {
    + CreateValueConverter()
    + Compare()
    + HasAtomicMembers()
    + IsUnionBaseOf()
    + TryParseValue()
    + TryParseValue()
}

class "Datatype_anySimpleType" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_anyAtomicType" {
    + CreateValueConverter()
}

class "Datatype_untypedAtomicType" {
    + CreateValueConverter()
}

class "Datatype_string" {
    + CreateValueConverter()
    + TryParseValue()
}

class "Datatype_boolean" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_float" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_double" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_decimal" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_duration" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_yearMonthDuration" {
    + TryParseValue()
}

class "Datatype_dayTimeDuration" {
    + TryParseValue()
}

class "Datatype_dateTimeBase" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_hexBinary" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_base64Binary" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_anyURI" {
    + CreateValueConverter()
    + Compare()
    + TryParseValue()
}

class "Datatype_QName" {
    + CreateValueConverter()
    + TryParseValue()
}

class "Datatype_NCName" {
    + TryParseValue()
}

class "Datatype_NOTATION" {
    + CreateValueConverter()
    + TryParseValue()
    + VerifySchemaValid()
}

class "Datatype_integer" {
    + TryParseValue()
}

class "Datatype_long" {
    + Compare()
    + TryParseValue()
}

class "Datatype_int" {
    + Compare()
    + TryParseValue()
}

class "Datatype_short" {
    + Compare()
    + TryParseValue()
}

class "Datatype_byte" {
    + Compare()
    + TryParseValue()
}

class "Datatype_unsignedLong" {
    + Compare()
    + TryParseValue()
}

class "Datatype_unsignedInt" {
    + Compare()
    + TryParseValue()
}

class "Datatype_unsignedShort" {
    + Compare()
    + TryParseValue()
}

class "Datatype_unsignedByte" {
    + Compare()
    + TryParseValue()
}

class "Datatype_doubleXdr" {
    + ParseValue()
}

class "Datatype_floatXdr" {
    + ParseValue()
}

class "Datatype_QNameXdr" {
    + ParseValue()
}

class "Datatype_char" {
    + Compare()
    + ParseValue()
    + TryParseValue()
}

class "Datatype_fixed" {
    + ParseValue()
    + TryParseValue()
}

class "Datatype_uuid" {
    + Compare()
    + ParseValue()
    + TryParseValue()
}

class "DtdValidator" {
    - Init()
    + Validate()
    - MeetsStandAloneConstraint()
    - ValidatePIComment()
    - ValidateElement()
    - ValidateChildElement()
    - ValidateStartElement()
    - ValidateEndStartElement()
    - ProcessElement()
    + CompleteValidation()
    - ValidateEndElement()
    - ProcessTokenizedType()
    - CheckValue()
    + AddID()
    + FindId()
    - GenEntity()
    - GetEntity()
    - CheckForwardRefs()
    - Push()
    - Pop()
}

class "NamespaceManager" {
    + LookupNamespace()
}

class "Numeric10FacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + CheckValueFacets()
    + CheckValueFacets()
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    + MatchEnumeration()
    + CheckTotalAndFractionDigits()
}

class "Numeric2FacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    - MatchEnumeration()
}

class "DurationFacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    - MatchEnumeration()
}

class "DateTimeFacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    - MatchEnumeration()
}

class "StringFacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    - MatchEnumeration()
    - CheckBuiltInFacets()
}

class "QNameFacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    - MatchEnumeration()
}

class "BinaryFacetsChecker" {
    + CheckValueFacets()
    + CheckValueFacets()
    + MatchEnumeration()
    - MatchEnumeration()
}

class "ListFacetsChecker" {
    + CheckValueFacets()
    + MatchEnumeration()
}

class "UnionFacetsChecker" {
    + CheckValueFacets()
    + MatchEnumeration()
}

class "XmlSchemaInference" {
    + InferSchema()
    + InferSchema()
    + InferSchema1()
    - AddAttribute()
    - CreateXmlSchema()
    - AddElement()
    + InferElement()
    - CheckSimpleContentExtension()
    - GetEffectiveSchemaType()
    + FindMatchingElement()
    + ProcessAttributes()
    - MoveAttributes()
    - MoveAttributes()
    + FindAttribute()
    + FindGlobalElement()
    + FindElement()
    + FindAttributeRef()
    + FindElementRef()
    + MakeExistingAttributesOptional()
    - SwitchUseToOptional()
    + RefineSimpleType()
    - CreateNewElementforChoice()
    + SetMinMaxOccurs()
}

class "XmlSchemaInferenceException" {
    + GetObjectData()
}

class "NamespaceList" {
    + Clone()
    + Allows()
    + Allows()
    + ToString()
    - CompareSetToOther()
    - RemoveNamespace()
    + IsEmpty()
}

class "NamespaceListV1Compat" {
    + Allows()
}

class "Parser" {
    + Parse()
    + StartParsing()
    - CheckSchemaRoot()
    + FinishParsing()
    + ParseReaderNode()
    - ProcessAppInfoDocMarkup()
    - LoadElementNode()
    - CreateXmlNsAttribute()
    - LoadAttributeNode()
    - LoadEntityReferenceInAttribute()
    + ParseAsync()
    + StartParsingAsync()
}

class "Preprocessor" {
    + Execute()
    - Cleanup()
    - CleanupRedefine()
    - BuildSchemaList()
    - LoadExternals()
    - BuildRefNamespaces()
    - ParseUri()
    - Preprocess()
    - CopyIncludedComponents()
    - PreprocessRedefine()
    - GetIncludedSet()
    - SetSchemaDefaults()
    - CountGroupSelfReference()
    - CheckRefinedGroup()
    - CheckRefinedAttributeGroup()
    - CheckRefinedSimpleType()
    - CheckRefinedComplexType()
    - PreprocessAttribute()
    - PreprocessLocalAttribute()
    - PreprocessAttributeContent()
    - PreprocessAttributeGroup()
    - PreprocessElement()
    - PreprocessLocalElement()
    - PreprocessElementContent()
    - PreprocessIdentityConstraint()
    - PreprocessSimpleType()
    - PreprocessComplexType()
    - PreprocessGroup()
    - PreprocessNotation()
    - PreprocessParticle()
    - PreprocessAttributes()
    - ValidateIdAttribute()
    - ValidateNameAttribute()
    - ValidateQNameAttribute()
    - ResolveSchemaLocationUri()
    - GetSchemaEntity()
    - GetChameleonSchema()
    - SetParent()
    - PreprocessAnnotation()
    - PreprocessAnnotation()
}

class "SchemaAttDef" {
    + CheckXmlSpace()
    + Clone()
}

class "SchemaCollectionCompiler" {
    + Execute()
    - Prepare()
    - Cleanup()
    - Compile()
    - Output()
    - CompileSubstitutionGroup()
    - CheckSubstitutionGroup()
    - CompileGroup()
    - CompileSimpleType()
    - CompileBaseMemberTypes()
    - CheckUnionType()
    - CompileComplexType()
    - CompileSimpleContentExtension()
    - CompileSimpleContentRestriction()
    - CompileComplexContentExtension()
    - CompileComplexContentRestriction()
    - CheckParticleDerivation()
    - CompileContentTypeParticle()
    - CannonicalizeParticle()
    - CannonicalizeElement()
    - CannonicalizeGroupRef()
    - CannonicalizeAll()
    - CannonicalizeChoice()
    - CannonicalizeSequence()
    - IsValidRestriction()
    - IsElementFromElement()
    - IsElementFromAny()
    - IsAnyFromAny()
    - IsGroupBaseFromAny()
    - IsElementFromGroupBase()
    - IsGroupBaseFromGroupBase()
    - IsSequenceFromAll()
    - IsSequenceFromChoice()
    - CalculateSequenceRange()
    - IsValidOccurrenceRangeRestriction()
    - IsValidOccurrenceRangeRestriction()
    - GetMappingParticle()
    - IsParticleEmptiable()
    - CalculateEffectiveTotalRange()
    - PushComplexType()
    - GetSchemaContentType()
    - CompileAttributeGroup()
    - CompileLocalAttributes()
    - CompileAnyAttributeUnion()
    - CompileAnyAttributeIntersection()
    - CompileAttribute()
    - CompileIdentityConstraint()
    - CompileElement()
    - CompileComplexContent()
    - BuildParticleContentModel()
    - CompileParticleElements()
    - CompileCompexTypeElements()
    - GetSimpleType()
    - GetComplexType()
    - GetAnySchemaType()
}

class "SchemaCollectionPreprocessor" {
    + Execute()
    - Cleanup()
    - LoadExternals()
    - BuildRefNamespaces()
    - Preprocess()
    - PreprocessRedefine()
    - CountGroupSelfReference()
    - CheckRefinedGroup()
    - CheckRefinedAttributeGroup()
    - CheckRefinedSimpleType()
    - CheckRefinedComplexType()
    - PreprocessAttribute()
    - PreprocessLocalAttribute()
    - PreprocessAttributeContent()
    - PreprocessAttributeGroup()
    - PreprocessElement()
    - PreprocessLocalElement()
    - PreprocessElementContent()
    - PreprocessIdentityConstraint()
    - PreprocessSimpleType()
    - PreprocessComplexType()
    - PreprocessGroup()
    - PreprocessNotation()
    - PreprocessParticle()
    - PreprocessAttributes()
    - ValidateIdAttribute()
    - ValidateNameAttribute()
    - ValidateQNameAttribute()
    - SetParent()
    - PreprocessAnnotation()
    - ResolveSchemaLocationUri()
    - GetSchemaEntity()
}

class "SchemaElementDecl" {
    - System.Xml.IDtdAttributeListInfo.LookupAttribute()
    - System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes()
    - System.Xml.IDtdAttributeListInfo.LookupIdAttribute()
    + Clone()
    + AddAttDef()
    + GetAttDef()
    + CheckAttributes()
}

class "SchemaInfo" {
    + GetElementDecl()
    + GetTypeDecl()
    + GetElement()
    + GetAttribute()
    + GetType()
    + HasSchema()
    + Contains()
    + GetAttributeXdr()
    + GetAttributeXsd()
    + GetAttributeXsd()
    + Add()
    + Finish()
    - System.Xml.IDtdInfo.LookupAttributeList()
    - System.Xml.IDtdInfo.GetAttributeLists()
    - System.Xml.IDtdInfo.LookupEntity()
}

class "<System-Xml-IDtdInfo-GetAttributeLists>d__60" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.IDtdAttributeListInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "SchemaNames" {
    + CreateTokenToQNameTable()
    + SchemaTypeFromRoot()
    + IsXSDRoot()
    + IsXDRRoot()
    + GetName()
}

class "SchemaNamespaceManager" {
    + LookupNamespace()
    + LookupPrefix()
}

class "Compiler" {
    + Execute()
    + Prepare()
    - UpdateSForSSimpleTypes()
    - Output()
    + ImportAllCompiledSchemas()
    + Compile()
    - CleanupAttribute()
    - CleanupAttributeGroup()
    - CleanupComplexType()
    - CleanupSimpleType()
    - CleanupElement()
    - CleanupAttributes()
    - CleanupGroup()
    - CleanupParticle()
    - ProcessSubstitutionGroups()
    - CompileSubstitutionGroup()
    - RecursivelyCheckRedefinedGroups()
    - RecursivelyCheckRedefinedAttributeGroups()
    - CompileGroup()
    - CompileSimpleType()
    - CompileBaseMemberTypes()
    - CheckUnionType()
    - CompileComplexType()
    - CompileSimpleContentExtension()
    - CompileSimpleContentRestriction()
    - CompileComplexContentExtension()
    - CompileComplexContentRestriction()
    - CheckParticleDerivation()
    - CheckParticleDerivation()
    - CompileContentTypeParticle()
    - CannonicalizeParticle()
    - CannonicalizeElement()
    - CannonicalizeGroupRef()
    - CannonicalizeAll()
    - CannonicalizeChoice()
    - CannonicalizeSequence()
    - CannonicalizePointlessRoot()
    - IsValidRestriction()
    - IsElementFromElement()
    - IsElementFromAny()
    - IsAnyFromAny()
    - IsGroupBaseFromAny()
    - IsElementFromGroupBase()
    - IsChoiceFromChoiceSubstGroup()
    - IsGroupBaseFromGroupBase()
    - IsSequenceFromAll()
    - IsSequenceFromChoice()
    - IsValidOccurrenceRangeRestriction()
    - IsValidOccurrenceRangeRestriction()
    - GetMappingParticle()
    - IsParticleEmptiable()
    - CalculateEffectiveTotalRange()
    - PushComplexType()
    - GetSchemaContentType()
    - CompileAttributeGroup()
    - CompileLocalAttributes()
    - CheckAtrributeGroupRestriction()
    - IsProcessContentsRestricted()
    - CompileAnyAttributeUnion()
    - CompileAnyAttributeIntersection()
    - CompileAttribute()
    - SetDefaultFixed()
    - CompileIdentityConstraint()
    - CompileElement()
    - CompileComplexContent()
    - BuildParticleContentModel()
    - CompileParticleElements()
    - CompileParticleElements()
    - CompileComplexTypeElements()
    - GetSimpleType()
    - GetComplexType()
    - GetAnySchemaType()
    - CopyPosition()
    - IsFixedEqual()
}

class "ValidationEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XdrBuilder" {
    + ProcessElement()
    + ProcessAttribute()
    - LoadSchema()
    + IsContentParsed()
    + ProcessMarkup()
    + ProcessCData()
    + StartChildren()
    + EndChildren()
    - Push()
    - Pop()
    - PushGroupInfo()
    - PopGroupInfo()
    - GetNextState()
    - IsSkipableElement()
    - IsSkipableAttribute()
    - GetOrder()
    - AddOrder()
    - XDR_CheckAttributeDefault()
    - SetAttributePresence()
    - GetContent()
    - GetModel()
    - CheckDatatype()
    - CheckDefaultAttValue()
    - IsGlobal()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
}

class "DeclBaseInfo" {
    + Reset()
}

class "XdrBuildFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XdrInitFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XdrBeginChildFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XdrEndChildFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XdrValidator" {
    - Init()
    + Validate()
    - ValidateElement()
    - ValidateChildElement()
    - ProcessInlineSchema()
    - ProcessElement()
    - ValidateEndElement()
    - ThoroughGetElementDecl()
    - ValidateStartElement()
    - ValidateEndStartElement()
    - LoadSchemaFromLocation()
    - LoadSchema()
    - ProcessTokenizedType()
    + CompleteValidation()
    - CheckValue()
    + AddID()
    + FindId()
    - Push()
    - Pop()
    - CheckForwardRefs()
    - QualifiedName()
}

class "XmlAtomicValue" {
    + Clone()
    - System.ICloneable.Clone()
    + ValueAs()
    + ToString()
    - GetPrefixFromQName()
}

class "NamespacePrefixForQName" {
    + LookupNamespace()
    + LookupPrefix()
    + GetNamespacesInScope()
}

class "XmlSchema" {
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Write()
    + Compile()
    + Compile()
    + CompileSchema()
    + CompileSchemaInSet()
    + Clone()
    + DeepClone()
    + SetIsCompiled()
    + SetUnhandledAttributes()
    + AddAnnotation()
    + GetExternalSchemasList()
}

class "XmlSchemaAll" {
    + SetItems()
}

class "XmlSchemaAnnotated" {
    + SetUnhandledAttributes()
    + AddAnnotation()
}

class "XmlSchemaAnnotation" {
    + SetUnhandledAttributes()
}

class "XmlSchemaAny" {
    + BuildNamespaceList()
    + BuildNamespaceListV1Compat()
    + Allows()
}

class "XmlSchemaAnyAttribute" {
    + BuildNamespaceList()
    + BuildNamespaceListV1Compat()
    + Allows()
}

class "XmlSchemaAttribute" {
    + Validate()
    + SetQualifiedName()
    + SetAttributeType()
    + Clone()
}

class "XmlSchemaAttributeGroup" {
    + SetQualifiedName()
    + Clone()
}

class "XmlSchemaChoice" {
    + SetItems()
}

class "XmlSchemaCollection" {
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + Contains()
    + Contains()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
    + GetSchemaInfo()
    + GetSchemaNames()
    + Add()
    - Add()
    - Add()
    - SendValidationEvent()
}

class "XmlSchemaCollectionEnumerator" {
    - System.Collections.IEnumerator.Reset()
    - System.Collections.IEnumerator.MoveNext()
    + MoveNext()
}

class "XmlSchemaComplexContentExtension" {
    + SetAttributes()
}

class "XmlSchemaComplexContentRestriction" {
    + SetAttributes()
}

class "XmlSchemaComplexType" {
    + SetContentTypeParticle()
    + SetBlockResolved()
    + SetAttributeWildcard()
    + SetAttributes()
    + ContainsIdAttribute()
    + Clone()
    + Clone()
    - ClearCompiledState()
}

class "XmlSchemaElement" {
    + Validate()
    + SetQualifiedName()
    + SetElementType()
    + SetBlockResolved()
    + SetFinalResolved()
    + Clone()
    + Clone()
}

class "XmlSchemaException" {
    + GetObjectData()
    + SetSource()
    + SetSchemaObject()
    + SetSource()
    + SetResourceId()
}

class "XmlSchemaGroup" {
    + SetQualifiedName()
    + Clone()
    + Clone()
}

class "XmlSchemaGroupRef" {
    + SetParticle()
}

class "XmlSchemaIdentityConstraint" {
    + SetQualifiedName()
}

class "XmlSchemaImport" {
    + AddAnnotation()
}

class "XmlSchemaInclude" {
    + AddAnnotation()
}

class "XmlSchemaInfo" {
    + Clear()
}

class "XmlSchemaObjectCollection" {
    + GetEnumerator()
    + Add()
    + Insert()
    + IndexOf()
    + Contains()
    + Remove()
    + CopyTo()
    + OnInsert()
    + OnSet()
    + OnClear()
    + OnRemove()
    + Clone()
    - Add()
}

class "XmlSchemaObjectEnumerator" {
    + Reset()
    + MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.IEnumerator.MoveNext()
}

class "XmlSchemaObjectTable" {
    + Add()
    + Insert()
    + Replace()
    + Clear()
    + Remove()
    - FindIndexByValue()
    + Contains()
    + GetEnumerator()
}

class "NamesCollection" {
    + CopyTo()
    + GetEnumerator()
}

class "ValuesCollection" {
    + CopyTo()
    + GetEnumerator()
}

class "XSOEnumerator" {
    + MoveNext()
    + Reset()
}

class "XmlSchemaRedefine" {
    + AddAnnotation()
}

class "XmlSchemaSequence" {
    + SetItems()
}

class "XmlSchemaSet" {
    + Add()
    + Add()
    + Add()
    + Add()
    + Remove()
    + RemoveRecursive()
    + Contains()
    + Contains()
    + Compile()
    + Reprocess()
    + CopyTo()
    + Schemas()
    + Schemas()
    - Add()
    + Add()
    + FindSchemaByNSAndUrl()
    - SetDtdProcessing()
    - AddSchemaToSet()
    - ProcessNewSubstitutionGroups()
    - ResolveSubstitutionGroup()
    + Remove()
    - ClearTables()
    + PreprocessSchema()
    + ParseSchema()
    + CopyFromCompiledSet()
    + GetResolver()
    + GetEventHandler()
    + GetSchemaNames()
    + IsSchemaLoaded()
    + GetSchemaByUri()
    + GetTargetNamespace()
    - RemoveSchemaFromCaches()
    - RemoveSchemaFromGlobalTables()
    - AddToTable()
    - VerifyTables()
    - InternalValidationCallback()
    - SendValidationEvent()
}

class "XmlSchemaSimpleContentExtension" {
    + SetAttributes()
}

class "XmlSchemaSimpleContentRestriction" {
    + SetAttributes()
}

class "XmlSchemaSimpleType" {
    + Clone()
}

class "XmlSchemaSimpleTypeList" {
    + Clone()
}

class "XmlSchemaSimpleTypeRestriction" {
    + Clone()
}

class "XmlSchemaSimpleTypeUnion" {
    + SetBaseMemberTypes()
    + Clone()
}

class "XmlSchemaType" {
    + Validate()
    + SetQualifiedName()
    + SetFinalResolved()
    + SetBaseSchemaType()
    + SetDerivedBy()
    + SetDatatype()
    + SetContentType()
}

class "XmlSchemaValidationException" {
    + GetObjectData()
    + SetSourceObject()
}

class "XmlValueGetter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlSchemaValidator" {
    - Init()
    - Reset()
    + AddSchema()
    + Initialize()
    + Initialize()
    + ValidateElement()
    + ValidateElement()
    + ValidateAttribute()
    + ValidateAttribute()
    - ValidateAttribute()
    + GetUnspecifiedDefaultAttributes()
    + ValidateEndOfAttributes()
    + ValidateText()
    + ValidateText()
    - ValidateText()
    + ValidateWhitespace()
    + ValidateWhitespace()
    - ValidateWhitespace()
    + ValidateEndElement()
    + ValidateEndElement()
    + SkipToEndElement()
    + EndValidation()
    + GetExpectedParticles()
    + GetExpectedAttributes()
    + GetUnspecifiedDefaultAttributes()
    + SetDtdSchemaInfo()
    + GetConcatenatedValue()
    - InternalValidateEndElement()
    - ProcessSchemaLocations()
    - ValidateElementContext()
    - GetSubstitutionGroupHead()
    - ValidateAtomicValue()
    - ValidateAtomicValue()
    - GetTypeName()
    - SaveTextValue()
    - Push()
    - Pop()
    - AddXsiAttributes()
    - FastGetElementDecl()
    - CheckXsiTypeAndNil()
    - ThrowDeclNotFoundWarningOrError()
    - CheckElementProperties()
    - ValidateStartElementIdentityConstraints()
    - CheckIsXmlAttribute()
    - AddXmlNamespaceSchema()
    + CheckMixedValueConstraint()
    - LoadSchema()
    + RecompileSchemaSet()
    - ProcessTokenizedType()
    - CheckAttributeValue()
    - CheckElementValue()
    - CheckTokenizedTypes()
    - FindId()
    - CheckForwardRefs()
    - CheckStateTransition()
    - ClearPSVI()
    - CheckRequiredAttributes()
    - GetSchemaElement()
    + GetDefaultAttributePrefix()
    - AddIdentityConstraints()
    - ElementIdentityConstraints()
    - AttributeIdentityConstraints()
    - EndElementIdentityConstraints()
    - ProcessEntity()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
}

class "XmlNumeric10Converter" {
    + ToDecimal()
    + ToDecimal()
    + ToDecimal()
    + ToDecimal()
    + ToDecimal()
    + ToInt32()
    + ToInt32()
    + ToInt32()
    + ToInt32()
    + ToInt32()
    + ToInt64()
    + ToInt64()
    + ToInt64()
    + ToInt64()
    + ToInt64()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    - ChangeTypeWildcardDestination()
    - ChangeTypeWildcardSource()
}

class "XmlNumeric2Converter" {
    + ToDouble()
    + ToDouble()
    + ToDouble()
    + ToDouble()
    + ToSingle()
    + ToSingle()
    + ToSingle()
    + ToSingle()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
}

class "XmlDateTimeConverter" {
    + ToDateTime()
    + ToDateTime()
    + ToDateTime()
    + ToDateTime()
    + ToDateTimeOffset()
    + ToDateTimeOffset()
    + ToDateTimeOffset()
    + ToDateTimeOffset()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
}

class "XmlBooleanConverter" {
    + ToBoolean()
    + ToBoolean()
    + ToBoolean()
    + ToString()
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
    + ChangeType()
}

class "XmlMiscConverter" {
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
    - ChangeTypeWildcardDestination()
    - ChangeTypeWildcardSource()
}

class "XmlStringConverter" {
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
}

class "XmlUntypedConverter" {
    + ToBoolean()
    + ToBoolean()
    + ToDateTime()
    + ToDateTime()
    + ToDateTimeOffset()
    + ToDateTimeOffset()
    + ToDecimal()
    + ToDecimal()
    + ToDouble()
    + ToDouble()
    + ToInt32()
    + ToInt32()
    + ToInt64()
    + ToInt64()
    + ToSingle()
    + ToSingle()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ToString()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    - ChangeTypeWildcardDestination()
    - ChangeTypeWildcardSource()
    + ChangeListType()
    - SupportsType()
}

class "XmlNodeConverter" {
    + ChangeType()
}

class "XmlAnyConverter" {
    + ToBoolean()
    + ToDateTime()
    + ToDateTimeOffset()
    + ToDecimal()
    + ToDouble()
    + ToInt32()
    + ToInt64()
    + ToSingle()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    + ChangeType()
    - ChangeTypeWildcardDestination()
    - ChangeTypeWildcardSource()
    - ToNavigator()
}

class "XmlAnyListConverter" {
    + ChangeType()
}

class "XmlListConverter" {
    + ChangeType()
    + ChangeListType()
    - IsListType()
    - ToArray()
    - ToList()
    - StringAsList()
    - ListAsString()
    - CreateInvalidClrMappingException()
}

class "XmlUnionConverter" {
    + ChangeType()
}

class "XsdBuilder" {
    + ProcessElement()
    + ProcessAttribute()
    + IsContentParsed()
    + ProcessMarkup()
    + ProcessCData()
    + StartChildren()
    + EndChildren()
    - Push()
    - Pop()
    - GetContainer()
    - SetContainer()
    - AddAttribute()
    - AddParticle()
    - GetNextState()
    - IsSkipableElement()
    - SetMinOccurs()
    - SetMaxOccurs()
    - ParseBoolean()
    - ParseEnum()
    - ParseQName()
    - ParseBlockFinalEnum()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - SendValidationEvent()
    - RecordPosition()
}

class "XsdBuildFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XsdInitFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XsdEndChildFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BuilderNamespaceManager" {
    + LookupNamespace()
}

class "XsdValidator" {
    - Init()
    + Validate()
    + CompleteValidation()
    - ProcessInlineSchema()
    - ValidateElement()
    - ValidateChildElement()
    - ProcessElement()
    - ProcessXsiAttributes()
    - ValidateEndElement()
    - FastGetElementDecl()
    - ThoroughGetElementDecl()
    - ValidateStartElement()
    - ValidateEndStartElement()
    - LoadSchemaFromLocation()
    - LoadSchema()
    - ProcessTokenizedType()
    - CheckValue()
    + AddID()
    + FindId()
    + IsXSDRoot()
    - Push()
    - Pop()
    - CheckForwardRefs()
    - ValidateStartElementIdentityConstraints()
    - AddIdentityConstraints()
    - ElementIdentityConstraints()
    - AttributeIdentityConstraints()
    - UnWrapUnion()
    - EndElementIdentityConstraints()
}

class "XmlPreloadedResolver" {
    + ResolveUri()
    + GetEntity()
    + SupportsType()
    + Add()
    + Add()
    + Add()
    + Add()
    + Remove()
    - Add()
    - AddKnownDtd()
    + GetEntityAsync()
}

class "XmlKnownDtdData" {
    + AsStream()
}

class "ByteArrayChunk" {
    + AsStream()
}

class "StringData" {
    + AsStream()
    + AsTextReader()
    + SupportsType()
}

class "AbsoluteQuery" {
    + Evaluate()
    + MatchNode()
    + Clone()
}

class "AttributeQuery" {
    + Reset()
    + Advance()
    + MatchNode()
    + Clone()
}

class "BooleanExpr" {
    + SetXsltContext()
    + Evaluate()
    + Clone()
}

class "BooleanFunctions" {
    + SetXsltContext()
    + Evaluate()
    + toBoolean()
    - Not()
    - Lang()
    + Clone()
}

class "CacheChildrenQuery" {
    + Reset()
    + Advance()
    - DecideNextNode()
    - GetNextInput()
    + Clone()
}

class "ChildrenQuery" {
    + Reset()
    + Advance()
    + MatchNode()
    + Clone()
}

class "ClonableStack`1" {
    + Push()
    + Pop()
    + Peek()
    + Clone()
}

class "CompiledXpathExpr" {
    + CheckErrors()
    + AddSort()
    + AddSort()
    + Clone()
    + SetContext()
    + SetContext()
}

class "UndefinedXsltContext" {
    + LookupNamespace()
    + ResolveVariable()
    + ResolveFunction()
    + PreserveWhitespace()
    + CompareDocument()
}

class "XPathComparerHelper" {
    + Compare()
}

class "ContextQuery" {
    + Reset()
    + Evaluate()
    + Advance()
    + MatchNode()
    + Clone()
}

class "DescendantQuery" {
    + Reset()
    + Advance()
    + Clone()
}

class "DescendantOverDescendantQuery" {
    + Reset()
    + Advance()
    - MoveToFirstChild()
    - MoveUpUntilNext()
    + Clone()
}

class "DocumentOrderQuery" {
    + Evaluate()
    + MatchNode()
    + Clone()
}

class "EmptyQuery" {
    + Advance()
    + Clone()
    + Evaluate()
    + Reset()
}

class "FilterQuery" {
    + Reset()
    + SetXsltContext()
    + Advance()
    + EvaluatePredicate()
    + MatchNode()
    + Clone()
}

class "FollSiblingQuery" {
    + Reset()
    - Visited()
    - FetchInput()
    + Advance()
    + Clone()
}

class "FollowingQuery" {
    + Reset()
    + Advance()
    + Clone()
}

class "ForwardPositionQuery" {
    + Evaluate()
    + MatchNode()
    + Clone()
}

class "FunctionQuery" {
    + SetXsltContext()
    + Evaluate()
    + MatchNode()
    + Clone()
}

class "GroupQuery" {
    + Advance()
    + Evaluate()
    + Clone()
}

class "IDQuery" {
    + Evaluate()
    - ProcessIds()
    + MatchNode()
    + Clone()
}

class "IteratorFilter" {
    + Clone()
    + MoveNext()
}

class "LogicalExpr" {
    + SetXsltContext()
    + Evaluate()
    + Clone()
}

class "cmpXslt" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "MergeFilterQuery" {
    + SetXsltContext()
    + Evaluate()
    + MatchNode()
    + Clone()
}

class "NamespaceQuery" {
    + Reset()
    + Advance()
    + matches()
    + Clone()
}

class "NodeFunctions" {
    + SetXsltContext()
    - EvaluateArg()
    + Evaluate()
    + Clone()
}

class "NumberFunctions" {
    + SetXsltContext()
    + Evaluate()
    - Number()
    - Sum()
    - Floor()
    - Ceiling()
    - Round()
    + Clone()
}

class "NumericExpr" {
    + SetXsltContext()
    + Evaluate()
    + Clone()
}

class "OperandQuery" {
    + Evaluate()
    + Clone()
}

class "ParentQuery" {
    + Evaluate()
    + Clone()
}

class "PreSiblingQuery" {
    + Evaluate()
    + Clone()
}

class "PrecedingQuery" {
    + Reset()
    + Advance()
    + Clone()
}

class "QueryBuilder" {
    - Reset()
    - ProcessAxis()
    - ProcessFilter()
    - ProcessOperator()
    - ProcessVariable()
    - ProcessFunction()
    - ProcessArguments()
    - ProcessNode()
    - Build()
    + Build()
    + Build()
    + BuildPatternQuery()
    + BuildPatternQuery()
}

class "ReversePositionQuery" {
    + Clone()
}

class "SortQuery" {
    + Reset()
    + SetXsltContext()
    - BuildResultsList()
    + Evaluate()
    + Advance()
    + AddSort()
    + Clone()
}

class "XPathSortComparer" {
    + AddSort()
    + Expression()
    - System.Collections.Generic.IComparer<MS.Internal.Xml.XPath.SortKey>.Compare()
    + Clone()
}

class "StringFunctions" {
    + SetXsltContext()
    + Evaluate()
    - toString()
    - Concat()
    - StartsWith()
    - Contains()
    - SubstringBefore()
    - SubstringAfter()
    - Substring()
    - StringLength()
    - Normalize()
    - Translate()
    + Clone()
}

class "UnionExpr" {
    + Reset()
    + SetXsltContext()
    + Evaluate()
    - ProcessSamePosition()
    - ProcessBeforePosition()
    - ProcessAfterPosition()
    + Advance()
    + MatchNode()
    + Clone()
}

class "VariableQuery" {
    + SetXsltContext()
    + Evaluate()
    + Clone()
}

class "XPathAncestorIterator" {
    + MoveNext()
    + Clone()
}

class "XPathAncestorQuery" {
    + Evaluate()
    + Clone()
}

class "XPathArrayIterator" {
    + Clone()
    + MoveNext()
    + Reset()
    + GetEnumerator()
}

class "XPathChildIterator" {
    + Clone()
    + MoveNext()
}

class "XPathDescendantIterator" {
    + Clone()
    + MoveNext()
}

class "XPathEmptyIterator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "XPathMultyIterator" {
    - Init()
    - Advance()
    - SiftItem()
    + Reset()
    + Clone()
    + MoveNext()
}

class "XPathParser" {
    - ParseExpression()
    - ParseOrExpr()
    - ParseAndExpr()
    - ParseEqualityExpr()
    - ParseRelationalExpr()
    - ParseAdditiveExpr()
    - ParseMultiplicativeExpr()
    - ParseUnaryExpr()
    - ParseUnionExpr()
    - ParsePathExpr()
    - ParseFilterExpr()
    - ParsePredicate()
    - ParseLocationPath()
    - ParseRelativeLocationPath()
    - ParseStep()
    - ParseNodeTest()
    - ParsePrimaryExpr()
    - ParseMethod()
    - ParsePattern()
    - ParseLocationPathPattern()
    - ParseIdKeyPattern()
    - ParseRelativePathPattern()
    - ParseStepPattern()
    - CheckToken()
    - PassToken()
    - NextLex()
    - TestOp()
    - CheckNodeSet()
    - GetAxis()
}

class "XPathScanner" {
    - NextChar()
    - SkipSpace()
    + NextLex()
    - ScanNumber()
    - ScanFraction()
    - ScanString()
    - ScanName()
}

class "XPathSelectionIterator" {
    + Reset()
    + MoveNext()
    + Clone()
}

class "XPathSelfQuery" {
    + Advance()
    + Clone()
}

class "XPathSingletonIterator" {
    + Clone()
    + MoveNext()
    + Reset()
}

class "XPathDocumentBuilder" {
    + Initialize()
    + WriteDocType()
    + WriteStartElement()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteProcessingInstruction()
    + WriteWhitespace()
    + WriteString()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteString()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteSurrogateCharEntity()
    + Close()
    + Flush()
    + WriteXmlDeclaration()
    + WriteXmlDeclaration()
    + StartElementContent()
    + WriteNamespaceDeclaration()
    + CreateIdTables()
    - LinkSimilarElements()
    - NewNamespaceNode()
    - NewNode()
    - ComputeLineInfo()
    - AddSibling()
    - CachedTextNode()
}

class "XPathDocumentElementChildIterator" {
    + Clone()
    + MoveNext()
}

class "XPathDocumentKindChildIterator" {
    + Clone()
    + MoveNext()
}

class "XPathDocumentElementDescendantIterator" {
    + Clone()
    + MoveNext()
}

class "XPathDocumentKindDescendantIterator" {
    + Clone()
    + MoveNext()
}

class "XPathDocumentNavigator" {
    + Clone()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToAttribute()
    + MoveToFirstNamespace()
    + MoveToNextNamespace()
    + MoveToNext()
    + MoveToPrevious()
    + MoveToFirstChild()
    + MoveToParent()
    + MoveTo()
    + MoveToId()
    + IsSamePosition()
    + MoveToRoot()
    + MoveToChild()
    + MoveToNext()
    + MoveToChild()
    + MoveToNext()
    + MoveToFollowing()
    + MoveToFollowing()
    + SelectChildren()
    + SelectChildren()
    + SelectDescendants()
    + SelectDescendants()
    + ComparePosition()
    + IsDescendant()
    - GetPrimaryLocation()
    - GetSecondaryLocation()
    + HasLineInfo()
    + GetPositionHashCode()
    + IsElementMatch()
    + IsKindMatch()
    - GetFollowingEnd()
}

class "XPathNodeInfoAtom" {
    + Init()
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "XPathNodeInfoTable" {
    + Create()
    - Atomize()
    - AddInfo()
    + ToString()
}

class "CertificateCallbackMapper" {
    - <.ctor>b__2_0()
}

class "ConnectEventArgs" {
    + Initialize()
    + Clear()
    + OnCompleted()
}

class "<>c" {
    + <ConnectAsync>b__2_0()
    + <EstablishSslConnectionAsyncCore>b__5_0()
}

class "<>c__DisplayClass4_0" {
    + <EstablishSslConnectionAsync>b__0()
}

class "HttpClientHandler" {
    + Dispose()
    - ThrowForModifiedManagedSslOptionsIfStarted()
    + SetWebRequestTimeout()
    + SendAsync()
    - <set_ClientCertificateOptions>b__23_0()
}

class "<>c" {
    + <set_ClientCertificateOptions>b__23_1()
}

class "MonoWebRequestHandler" {
    + EnsureModifiability()
    + Dispose()
    + Dispose()
    - GetConnectionKeepAlive()
    + CreateWebRequest()
    - CreateResponseMessage()
    + SendAsync()
    - System.Net.Http.IMonoHttpClientHandler.SetWebRequestTimeout()
}

class "<>c" {
    + <GetConnectionKeepAlive>b__95_0()
    + <CreateWebRequest>b__96_0()
    + <SendAsync>b__99_0()
}

class "ByteArrayContent" {
    + CreateContentReadStreamAsync()
    + SerializeToStreamAsync()
    + TryComputeLength()
}

class "HttpClient" {
    + CancelPendingRequests()
    + Dispose()
    + DeleteAsync()
    + DeleteAsync()
    + DeleteAsync()
    + DeleteAsync()
    + GetAsync()
    + GetAsync()
    + GetAsync()
    + GetAsync()
    + GetAsync()
    + GetAsync()
    + GetAsync()
    + GetAsync()
    + PostAsync()
    + PostAsync()
    + PostAsync()
    + PostAsync()
    + PutAsync()
    + PutAsync()
    + PutAsync()
    + PutAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    + SendAsync()
    - SendAsyncWorker()
    + GetByteArrayAsync()
    + GetByteArrayAsync()
    + GetStreamAsync()
    + GetStreamAsync()
    + GetStringAsync()
    + GetStringAsync()
    + PatchAsync()
    + PatchAsync()
    + PatchAsync()
    + PatchAsync()
    - <>n__0()
}

class "FixedMemoryStream" {
    - CheckOverflow()
    + WriteByte()
    + Write()
}

class "HttpMessageInvoker" {
    + Dispose()
    + Dispose()
    + SendAsync()
}

class "HttpMethod" {
    + Equals()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "HttpRequestMessage" {
    + Dispose()
    + Dispose()
    + SetIsUsed()
    + ToString()
}

class "HttpResponseMessage" {
    + Dispose()
    + Dispose()
    + EnsureSuccessStatusCode()
    + ToString()
}

class "MultipartContent" {
    + Add()
    + Dispose()
    + SerializeToStreamAsync()
    + TryComputeLength()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "MultipartFormDataContent" {
    + Add()
    + Add()
    + Add()
    - AddContentDisposition()
}

class "StreamContent" {
    + CreateContentReadStreamAsync()
    + Dispose()
    + SerializeToStreamAsync()
    + TryComputeLength()
}

class "ReadOnlyMemoryContent" {
    + SerializeToStreamAsync()
    + TryComputeLength()
}

class "AuthenticationHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "CacheControlHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ElementTryParser`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ContentDispositionHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    - FindParameter()
    - GetDateValue()
    + GetHashCode()
    - SetDateValue()
    - SetValue()
    + ToString()
}

class "ContentRangeHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "EntityTagHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "TryParseDelegate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TryParseListDelegate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HeaderTypeInfo`2" {
    + AddToCollection()
    + CreateCollection()
    + ToStringCollection()
    + TryParse()
}

class "CollectionHeaderTypeInfo`2" {
    + TryParse()
}

class "HttpHeaderValueCollection`1" {
    + Add()
    + AddRange()
    + AddInvalidValue()
    + Clear()
    + Contains()
    + CopyTo()
    + ParseAdd()
    + Remove()
    + ToString()
    + TryParseAdd()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Find()
    + Remove()
}

class "HeaderBucket" {
    + ParsedToString()
}

class "<GetEnumerator>d__19" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "HttpRequestHeaders" {
    + AddHeaders()
}

class "<>c" {
    + <get_ConnectionClose>b__19_0()
    + <get_ConnectionKeepAlive>b__22_0()
    + <get_ExpectContinue>b__29_0()
    + <set_ExpectContinue>b__30_0()
    + <get_TransferEncodingChunked>b__71_0()
    + <set_TransferEncodingChunked>b__72_0()
}

class "<>c" {
    + <set_Age>b__5_0()
    + <get_ConnectionClose>b__12_0()
    + <get_TransferEncodingChunked>b__37_0()
    + <set_TransferEncodingChunked>b__38_0()
}

class "Lexer" {
    + GetStringValue()
    + GetStringValue()
    + GetQuotedStringValue()
    + GetRemainingStringValue()
    + IsStarStringValue()
    + TryGetNumericValue()
    + TryGetNumericValue()
    + TryGetTimeSpanValue()
    + TryGetDateValue()
    + TryGetDoubleValue()
    + EatChar()
    + PeekChar()
    + ScanCommentOptional()
    + ScanCommentOptional()
    + Scan()
}

class "MediaTypeHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>c" {
    + <get_CharSet>b__6_0()
}

class "NameValueHeaderValue" {
    - System.ICloneable.Clone()
    + GetHashCode()
    + Equals()
    + ToString()
}

class "NameValueWithParametersHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>c" {
    + <.cctor>b__2_0()
}

class "<>c" {
    + <.cctor>b__2_0()
}

class "ProductHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ProductInfoHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>c" {
    + <GetValue>b__0_0()
}

class "RangeConditionHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "RangeHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "RangeItemHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "RetryConditionHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "StringWithQualityHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "TransferCodingHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ViaHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "WarningHeaderValue" {
    - System.ICloneable.Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "BooleanArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "BooleanArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "Int16ArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "Int16ArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "Int32ArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "Int32ArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "Int64ArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "Int64ArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "SingleArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "SingleArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "DoubleArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "DoubleArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "DecimalArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "DecimalArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "DateTimeArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "DateTimeArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "GuidArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "GuidArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "TimeSpanArrayHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "TimeSpanArrayHelperWithDictionaryString" {
    + ReadArray()
    + WriteArray()
}

class "EncodingStreamWrapper" {
    - SetReadDocumentEncoding()
    - ReadBOMEncoding()
    - FillBuffer()
    - EnsureBuffers()
    - EnsureByteBuffer()
    + Close()
    + Flush()
    + ReadByte()
    + Read()
    - CleanupCharBreak()
    + Seek()
    + WriteByte()
    + Write()
    + SetLength()
}

class "PrefixHandle" {
    + SetValue()
    + SetValue()
    + SetValue()
    + TryGetShortPrefix()
    + GetString()
    + GetString()
    + GetString()
    + CompareTo()
    - Equals2()
    - Equals2()
    - Equals2()
    + Equals()
    + ToString()
    + GetHashCode()
}

class "StringHandle" {
    + SetValue()
    + SetConstantValue()
    + SetValue()
    + SetValue()
    + SetValue()
    + ToPrefixHandle()
    + GetString()
    + GetString()
    + GetString()
    + TryGetDictionaryString()
    + ToString()
    - Equals2()
    - Equals2()
    - Equals2()
    - Equals2()
    - Equals2()
    + CompareTo()
    + Equals()
    + GetHashCode()
}

class "UniqueId" {
    - UnsafeDecode()
    - UnsafeEncode()
    - UnsafeParse()
    + ToCharArray()
    + TryGetGuid()
    + TryGetGuid()
    + ToString()
    + Equals()
    + GetHashCode()
    - UnsafeGetInt64()
    - UnsafeGetInt32()
    - UnsafeSetInt64()
    - UnsafeSetInt32()
}

class "ValueHandle" {
    + SetConstantValue()
    + SetValue()
    + SetDictionaryValue()
    + SetCharValue()
    + SetQNameValue()
    + SetValue()
    + IsWhitespace()
    + ToType()
    + ToBoolean()
    + ToInt()
    + ToLong()
    + ToULong()
    + ToSingle()
    + ToDouble()
    + ToDecimal()
    + ToDateTime()
    + ToUniqueId()
    + ToTimeSpan()
    + ToGuid()
    + ToString()
    + ToByteArray()
    + GetString()
    + Equals2()
    + Sign()
    + ToList()
    + ToObject()
    + TryReadBase64()
    + TryReadChars()
    - TryReadUnicodeChars()
    + TryGetDictionaryString()
    + TryGetByteArrayLength()
    - GetCharsText()
    - GetUnicodeCharsText()
    - GetEscapedCharsText()
    - GetCharText()
    - GetChar()
    - GetInt8()
    - GetInt16()
    - GetInt32()
    - GetInt64()
    - GetUInt64()
    - GetSingle()
    - GetDouble()
    - GetDecimal()
    - GetUniqueId()
    - GetGuid()
    - GetBase64()
    - GetDictionaryString()
    - GetQNameDictionaryText()
}

class "XmlNode" {
    + IsLocalName()
    + IsLocalName()
    + IsNamespaceUri()
    + IsNamespaceUri()
    + IsLocalNameAndNamespaceUri()
    + IsLocalNameAndNamespaceUri()
    + IsPrefixAndLocalName()
    + TryGetLocalNameAsDictionaryString()
    + TryGetNamespaceUriAsDictionaryString()
    + TryGetValueAsDictionaryString()
}

class "AttributeSorter" {
    + Sort()
    + GetIndeces()
    + Close()
    - Sort()
    - IsSorted()
    + Compare()
    + CompareQNameType()
}

class "NamespaceManager" {
    + Close()
    + Clear()
    + EnterScope()
    + ExitScope()
    + Sign()
    + AddLangAttribute()
    + AddSpaceAttribute()
    - AddAttribute()
    + Register()
    + AddNamespace()
    + LookupNamespace()
    + LookupNamespace()
    + LookupNamespace()
    - TryGetShortPrefix()
}

class "Namespace" {
    + Clear()
    + IsUri()
    + IsUri()
}

class "QuotaNameTable" {
    + Get()
    + Get()
    - Add()
    + Add()
    + Add()
}

class "Element" {
    + Clear()
}

class "NamespaceManager" {
    + Clear()
    + Close()
    + DeclareNamespaces()
    + EnterScope()
    + ExitScope()
    + AddLangAttribute()
    + AddSpaceAttribute()
    - AddAttribute()
    + AddNamespace()
    + AddNamespaceIfNotDeclared()
    + AddNamespace()
    + LookupPrefix()
    + LookupAttributePrefix()
    + LookupNamespace()
    + Sign()
}

class "XmlAttribute" {
    + Clear()
}

class "Namespace" {
    + Clear()
}

class "XmlBinaryReader" {
    + SetInput()
    + SetInput()
    - MoveToInitial()
    + Close()
    + ReadElementContentAsString()
    + ReadElementContentAsBoolean()
    + ReadElementContentAsInt()
    - CanOptimizeReadElementContent()
    + ReadElementContentAsFloat()
    + ReadElementContentAsDouble()
    + ReadElementContentAsDecimal()
    + ReadElementContentAsDateTime()
    + ReadElementContentAsTimeSpan()
    + ReadElementContentAsGuid()
    + ReadElementContentAsUniqueId()
    + TryGetBase64ContentLength()
    - ReadTextWithEndElement()
    - MoveToAtomicTextWithEndElement()
    + Read()
    - ReadNode()
    - VerifyWhitespace()
    - ReadAttributes()
    - ReadAttributes2()
    - ReadText()
    - ReadBinaryText()
    - ReadPartialUTF8Text()
    - ReadUnicodeText()
    - ReadPartialUnicodeText()
    - ReadPartialBinaryText()
    - InsertNode()
    - ReadAttributeText()
    - ReadName()
    - ReadName()
    - ReadName()
    - ReadDictionaryName()
    - GetNodeType()
    - SkipNodeType()
    - ReadDictionaryKey()
    - ReadMultiByteUInt31()
    - ReadUInt8()
    - ReadUInt16()
    - ReadUInt31()
    - IsValidArrayType()
    - ReadArray()
    - MoveToArrayElement()
    - SkipArrayElements()
    + IsStartArray()
    + TryGetArrayLength()
    - IsStartArray()
    - IsStartArray()
    - CheckArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    - ReadArray()
    + ReadArray()
    + ReadArray()
    + CreateSigningNodeWriter()
}

class "XmlBinaryReaderSession" {
    + Add()
    + TryLookup()
    + TryLookup()
    + TryLookup()
    + Clear()
}

class "XmlBinaryNodeWriter" {
    + SetOutput()
    - WriteNode()
    - WroteAttributeValue()
    - WriteTextNode()
    - GetTextNodeBuffer()
    - WriteTextNodeWithLength()
    - WriteTextNodeWithInt64()
    + WriteDeclaration()
    + WriteStartElement()
    - WritePrefixNode()
    + WriteStartElement()
    + WriteEndStartElement()
    + WriteEndElement()
    - WriteEndElement()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    - TryGetKey()
    - WriteDictionaryString()
    - WriteName()
    - UnsafeWriteName()
    - WriteMultiByteInt32()
    + WriteComment()
    + WriteCData()
    - WriteEmptyText()
    + WriteBoolText()
    + WriteInt32Text()
    + WriteInt64Text()
    + WriteUInt64Text()
    - WriteInt64()
    + WriteBase64Text()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteText()
    - UnsafeWriteText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteCharEntity()
    + WriteFloatText()
    + WriteDoubleText()
    + WriteDecimalText()
    + WriteDateTimeText()
    + WriteUniqueIdText()
    + WriteGuidText()
    + WriteTimeSpanText()
    + WriteStartListText()
    + WriteListSeparator()
    + WriteEndListText()
    + WriteArrayNode()
    - WriteArrayInfo()
    + UnsafeWriteArray()
    - UnsafeWriteArray()
    + WriteDateTimeArray()
    + WriteGuidArray()
    + WriteTimeSpanArray()
    + WriteQualifiedName()
    + FlushBuffer()
    + Close()
}

class "XmlBinaryWriter" {
    + SetOutput()
    + CreateSigningNodeWriter()
    + WriteTextNode()
    - WriteStartArray()
    - WriteStartArray()
    - WriteEndArray()
    - UnsafeWriteArray()
    - UnsafeWriteArray()
    - CheckArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
}

class "XmlBinaryWriterSession" {
    + TryAdd()
    - Add()
    - AddKeys()
    + Reset()
    + TryLookup()
}

class "PriorityDictionary`2" {
    + Clear()
    + TryGetValue()
    + Add()
    - DecreaseAll()
}

class "XmlBufferReader" {
    + SetBuffer()
    + SetBuffer()
    - SetBuffer()
    + Close()
    + GetByte()
    + SkipByte()
    - GetByteHard()
    + GetBuffer()
    + GetBuffer()
    + GetBuffer()
    - GetBufferHard()
    - EnsureByte()
    - TryEnsureByte()
    - EnsureBytes()
    - TryEnsureBytes()
    + Advance()
    + InsertBytes()
    + SetWindow()
    + ReadBytes()
    + ReadMultiByteUInt31()
    + ReadUInt8()
    + ReadInt8()
    + ReadUInt16()
    + ReadInt16()
    + ReadInt32()
    + ReadUInt31()
    + ReadInt64()
    + ReadSingle()
    + ReadDouble()
    + ReadDecimal()
    + ReadUniqueId()
    + ReadDateTime()
    + ReadTimeSpan()
    + ReadGuid()
    + ReadUTF8String()
    + UnsafeReadArray()
    - UnsafeReadArray()
    - GetCharBuffer()
    - GetChars()
    - GetChars()
    + GetString()
    + GetUnicodeString()
    + GetString()
    + GetEscapedChars()
    - IsAttrChar()
    + GetEscapedString()
    + GetEscapedString()
    - GetLessThanCharEntity()
    - GetGreaterThanCharEntity()
    - GetQuoteCharEntity()
    - GetAmpersandCharEntity()
    - GetApostropheCharEntity()
    - GetDecimalCharEntity()
    - GetHexCharEntity()
    + GetCharEntity()
    + IsWhitespaceKey()
    + IsWhitespaceUTF8()
    + IsWhitespaceUnicode()
    + Equals2()
    + Equals2()
    + Equals2()
    + Equals2()
    + Equals2()
    + Equals2()
    + Compare()
    + GetByte()
    + GetInt8()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetUInt64()
    + GetSingle()
    + GetDouble()
    + GetDecimal()
    + GetUniqueId()
    + GetGuid()
    + GetBase64()
    + GetNodeType()
    + SkipNodeType()
    + GetList()
    + GetDictionaryString()
    + ReadDictionaryKey()
    + ReadValue()
    - ReadValue()
    - ReadUnicodeValue()
    - ReadList()
    + ReadQName()
    + GetRows()
}

class "XmlCanonicalWriter" {
    + SetOutput()
    + Flush()
    + Close()
    + WriteDeclaration()
    + WriteComment()
    - StartElement()
    - EndElement()
    + WriteStartElement()
    + WriteStartElement()
    - IsInclusivePrefix()
    + WriteEndStartElement()
    + WriteEndElement()
    - EnsureXmlnsBuffer()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCharEntity()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteText()
    - ThrowIfClosed()
    - ThrowClosed()
    - WriteXmlnsAttribute()
    - SortAttributes()
    - AddAttribute()
    - AddXmlnsAttribute()
    - ResolvePrefix()
    - ResolvePrefix()
    - ResolvePrefixes()
    - Compare()
    - Compare()
    - Compare()
    - Compare()
    - Equals()
}

class "AttributeSorter" {
    + Sort()
    + Compare()
}

class "XmlDictionary" {
    + Add()
    + TryLookup()
    + TryLookup()
    + TryLookup()
}

class "EmptyDictionary" {
    + TryLookup()
    + TryLookup()
    + TryLookup()
}

class "OnXmlDictionaryReaderClose" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlWrappedReader" {
    + Close()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + IsStartElement()
    + IsStartElement()
    + LookupNamespace()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToElement()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + Read()
    + ReadAttributeValue()
    + ReadElementString()
    + ReadElementString()
    + ReadInnerXml()
    + ReadOuterXml()
    + ReadStartElement()
    + ReadStartElement()
    + ReadEndElement()
    + ReadString()
    + ResolveEntity()
    + ReadElementContentAsBase64()
    + ReadContentAsBase64()
    + ReadElementContentAsBinHex()
    + ReadContentAsBinHex()
    + ReadValueChunk()
    + ReadContentAsBoolean()
    + ReadContentAsDateTime()
    + ReadContentAsDecimal()
    + ReadContentAsDouble()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsFloat()
    + ReadContentAsString()
    + ReadContentAs()
    + HasLineInfo()
}

class "XmlDictionaryReaderQuotas" {
    + CopyTo()
    + InternalCopyTo()
    + MakeReadOnly()
}

class "XmlDictionaryString" {
    + ToUTF8()
    + ToString()
}

class "EmptyStringDictionary" {
    + TryLookup()
    + TryLookup()
    + TryLookup()
}

class "XmlWrappedWriter" {
    + Close()
    + Flush()
    + LookupPrefix()
    + WriteAttributes()
    + WriteBase64()
    + WriteBinHex()
    + WriteCData()
    + WriteCharEntity()
    + WriteChars()
    + WriteComment()
    + WriteDocType()
    + WriteEndAttribute()
    + WriteEndDocument()
    + WriteEndElement()
    + WriteEntityRef()
    + WriteFullEndElement()
    + WriteName()
    + WriteNmToken()
    + WriteNode()
    + WriteProcessingInstruction()
    + WriteQualifiedName()
    + WriteRaw()
    + WriteRaw()
    + WriteStartAttribute()
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteStartElement()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteXmlnsAttribute()
}

class "XmlMtomReader" {
    - SetReadEncodings()
    - CheckContentType()
    + SetInput()
    + SetInput()
    - Initialize()
    - ReadMessageMimeVersionHeader()
    - ReadMessageContentTypeHeader()
    - ReadRootContentTypeHeader()
    - CheckContentTransferEncodingOnRoot()
    - CheckContentTransferEncodingOnBinaryPart()
    - GetStartUri()
    + Read()
    - ReadMimePart()
    - ReadRootMimePart()
    - AdvanceToContentOnElement()
    + Close()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + IsLocalName()
    + IsLocalName()
    + IsNamespaceUri()
    + IsNamespaceUri()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + LookupNamespace()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToElement()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + ReadAttributeValue()
    + ReadContentAs()
    + ReadContentAsBase64()
    + ReadValueAsBase64()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadElementContentAsBinHex()
    + ReadContentAsBinHex()
    + ReadContentAsBoolean()
    + ReadContentAsChars()
    + ReadContentAsDateTime()
    + ReadContentAsDecimal()
    + ReadContentAsDouble()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsObject()
    + ReadContentAsFloat()
    + ReadContentAsString()
    + ReadInnerXml()
    + ReadOuterXml()
    + ReadValueChunk()
    + ResolveEntity()
    + Skip()
    + HasLineInfo()
}

class "MimePart" {
    + GetBuffer()
    + Release()
}

class "XopIncludeReader" {
    + Read()
    + ReadValueAsBase64()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadValueChunk()
    + ReadContentAsString()
    + Close()
    - CloseStreams()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + IsLocalName()
    + IsLocalName()
    + IsNamespaceUri()
    + IsNamespaceUri()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + LookupNamespace()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToElement()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + ReadAttributeValue()
    + ReadInnerXml()
    + ReadOuterXml()
    + ResolveEntity()
    + Skip()
    - System.Xml.IXmlLineInfo.HasLineInfo()
}

class "MimeMessageReader" {
    + GetContentStream()
    + ReadHeaders()
}

class "MimeReader" {
    + Close()
    + GetContentStream()
    + ReadNextPart()
    + ReadHeaders()
    - BlockRead()
}

class "DelimittedStreamReader" {
    + Close()
    - Close()
    + GetNextStream()
    - MatchDelimitter()
    - ProcessRead()
    - Read()
    - MatchRemainder()
    + Push()
}

class "DelimittedReadStream" {
    + BeginWrite()
    + Close()
    + EndWrite()
    + Flush()
    + Read()
    + Seek()
    + SetLength()
    + Write()
}

class "MimeHeaders" {
    + Add()
    + Add()
    + Release()
}

class "ContentTypeHeader" {
    - ParseValue()
}

class "ContentTransferEncodingHeader" {
    - ParseValue()
}

class "MimeVersionHeader" {
    - ParseValue()
}

class "MimeHeaderReader" {
    + Close()
    + Read()
    - ProcessBuffer()
    - BufferEnd()
    + Reset()
    - AppendValue()
    - AppendName()
}

class "BufferedReadStream" {
    + BeginRead()
    + BeginWrite()
    + Close()
    + EndRead()
    + EndWrite()
    + Flush()
    + Read()
    + ReadByte()
    + ReadBlock()
    + Push()
    + Seek()
    + SetLength()
    + Write()
}

class "XmlMtomWriter" {
    + SetOutput()
    - Initialize()
    - Initialize()
    + WriteStartElement()
    + WriteStartElement()
    - ThrowIfElementIsXOPInclude()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteValue()
    + WriteBase64()
    - WriteBase64InlineIfPresent()
    - WriteBase64Inline()
    - WriteXOPInclude()
    - WriteXOPBinaryParts()
    - WriteMimeHeaders()
    + Close()
    - CheckIfStartContentTypeAttribute()
    - CheckIfEndContentTypeAttribute()
    + Flush()
    + LookupPrefix()
    + WriteAttributes()
    + WriteBinHex()
    + WriteCData()
    + WriteCharEntity()
    + WriteChars()
    + WriteComment()
    + WriteDocType()
    + WriteEndAttribute()
    + WriteEndDocument()
    + WriteEntityRef()
    + WriteName()
    + WriteNmToken()
    + WriteTextNode()
    + WriteNode()
    + WriteProcessingInstruction()
    + WriteQualifiedName()
    + WriteRaw()
    + WriteRaw()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteString()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteWhitespace()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
}

class "MimeWriter" {
    + GetBoundarySize()
    + StartPreface()
    + StartPart()
    + Close()
    - Flush()
    + WriteHeader()
    + GetContentStream()
}

class "BufferedWrite" {
    - EnsureBuffer()
    + GetBuffer()
    + Reset()
    + Write()
    + Write()
    + Write()
    + Write()
}

class "XmlNullNodeWriter" {
    + Flush()
    + Close()
    + WriteDeclaration()
    + WriteComment()
    + WriteCData()
    + WriteStartElement()
    + WriteStartElement()
    + WriteStartElement()
    + WriteEndStartElement()
    + WriteEndElement()
    + WriteEndElement()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCharEntity()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteInt32Text()
    + WriteInt64Text()
    + WriteBoolText()
    + WriteUInt64Text()
    + WriteFloatText()
    + WriteDoubleText()
    + WriteDecimalText()
    + WriteDateTimeText()
    + WriteUniqueIdText()
    + WriteTimeSpanText()
    + WriteGuidText()
    + WriteStartListText()
    + WriteListSeparator()
    + WriteEndListText()
    + WriteBase64Text()
    + WriteQualifiedName()
}

class "XmlSigningNodeWriter" {
    + SetOutput()
    + Flush()
    + Close()
    + WriteDeclaration()
    + WriteComment()
    + WriteCData()
    + WriteStartElement()
    + WriteStartElement()
    + WriteStartElement()
    + WriteEndStartElement()
    + WriteEndElement()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCharEntity()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteInt32Text()
    + WriteInt64Text()
    + WriteBoolText()
    + WriteUInt64Text()
    + WriteFloatText()
    + WriteDoubleText()
    + WriteDecimalText()
    + WriteDateTimeText()
    + WriteUniqueIdText()
    + WriteTimeSpanText()
    + WriteGuidText()
    + WriteStartListText()
    + WriteListSeparator()
    + WriteEndListText()
    + WriteBase64Text()
    - WriteBase64Text()
    + WriteQualifiedName()
}

class "XmlUTF8TextReader" {
    + SetInput()
    + SetInput()
    - MoveToInitial()
    + Close()
    - SkipWhitespace()
    - ReadDeclaration()
    - VerifyNCName()
    - ReadQualifiedName()
    - ReadAttributeText()
    - ReadAttributes()
    - ReadNonFFFE()
    - IsNextCharacterNonFFFE()
    - BufferElement()
    - ReadStartElement()
    - ReadEndElement()
    - ReadComment()
    - ReadCData()
    - ReadCharRef()
    - ReadWhitespace()
    - ReadWhitespace()
    - ReadText()
    - ReadTextAndWatchForInvalidCharacters()
    - BreakText()
    - ReadText()
    - ReadEscapedText()
    + Read()
    + CreateSigningNodeWriter()
    + HasLineInfo()
    - GetPosition()
}

class "XmlUTF8TextWriter" {
    + SetOutput()
    + CreateSigningNodeWriter()
}

class "XmlUTF8NodeWriter" {
    + SetOutput()
    - GetCharEntityBuffer()
    - GetCharBuffer()
    + WriteDeclaration()
    + WriteCData()
    - WriteStartComment()
    - WriteEndComment()
    + WriteComment()
    + WriteStartElement()
    + WriteStartElement()
    + WriteStartElement()
    + WriteEndStartElement()
    + WriteEndElement()
    + WriteEndElement()
    - WriteStartXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteStartAttribute()
    + WriteEndAttribute()
    - WritePrefix()
    - WritePrefix()
    - WriteLocalName()
    - WriteLocalName()
    + WriteEscapedText()
    + WriteEscapedText()
    + WriteEscapedText()
    - UnsafeWriteEscapedText()
    + WriteEscapedText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteText()
    + WriteLessThanCharEntity()
    + WriteGreaterThanCharEntity()
    + WriteAmpersandCharEntity()
    + WriteApostropheCharEntity()
    + WriteQuoteCharEntity()
    - WriteHexCharEntity()
    + WriteCharEntity()
    - ToBase16()
    + WriteBoolText()
    + WriteDecimalText()
    + WriteDoubleText()
    + WriteFloatText()
    + WriteDateTimeText()
    + WriteUniqueIdText()
    + WriteInt32Text()
    + WriteInt64Text()
    + WriteUInt64Text()
    + WriteGuidText()
    + WriteBase64Text()
    - InternalWriteBase64Text()
    + WriteBase64TextAsync()
    + BeginWriteBase64Text()
    + EndWriteBase64Text()
    - BeginInternalWriteBase64Text()
    - EndInternalWriteBase64Text()
    + WriteTimeSpanText()
    + WriteStartListText()
    + WriteListSeparator()
    + WriteEndListText()
    + WriteQualifiedName()
}

class "Base64Encoding" {
    + GetMaxByteCount()
    - IsValidLeadBytes()
    - IsValidTailBytes()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetMaxCharCount()
    + GetCharCount()
    + GetChars()
    + GetChars()
}

class "BinHexEncoding" {
    + GetMaxByteCount()
    + GetByteCount()
    + GetBytes()
    + GetMaxCharCount()
    + GetCharCount()
    + GetChars()
}

class "Attributes" {
    + Read()
    + Reset()
    - ReadId()
    - ReadRef()
    - ReadXsiNil()
    - ReadArraySize()
    - ReadXsiType()
    - ReadFactoryType()
}

class "ClassDataContract" {
    - InitClassDataContract()
    + GetISerializableConstructor()
    + GetNonAttributedTypeConstructor()
    - CreateChildElementNamespaces()
    - EnsureMethodsImported()
    + WriteXmlValue()
    + ReadXmlValue()
    + BindGenericParameters()
    + Equals()
    - IsEveryDataMemberOptional()
    + GetHashCode()
}

class "ClassDataContractCriticalHelper" {
    - EnsureIsReferenceImported()
    - ImportDataMembers()
    - SetIfGetOnlyCollection()
    - SetIfMembersHaveConflict()
    - GetStableNameAndSetHasDataContract()
    - SetIsNonAttributedType()
    + EnsureMethodsImported()
    - IsValidExtensionDataSetMethod()
    + GetISerializableConstructor()
    + GetNonAttributedTypeConstructor()
}

class "DataMemberConflictComparer" {
    + Compare()
}

class "DataMemberComparer" {
    + Compare()
}

class "CodeExporter" {
    - AddReferencedAssembly()
    - TryGetReferencedType()
    + Export()
    - ExportClassDataContractHierarchy()
    - InvokeProcessImportedType()
    + GetCodeTypeReference()
    - GetCodeTypeReference()
    + GetElementTypeReference()
    - GetContractCodeDomInfo()
    - GenerateType()
    - GetNestedType()
    - GetReferencedType()
    - GetReferencedCollectionType()
    - HasDefaultCollectionNames()
    - TryGetReferencedDictionaryType()
    - TryGetReferencedListType()
    - GetSurrogatedTypeReference()
    - GetReferencedGenericType()
    - NamespaceContainsType()
    - GlobalTypeNameConflicts()
    - AddGlobalTypeName()
    - TypeContainsNestedType()
    - GetNameForAttribute()
    - AddSerializableAttribute()
    - ExportClassDataContract()
    - CanDeclareAssemblyAttribute()
    - NeedsExplicitNamespace()
    + GetKnownTypeReferences()
    - GetKnownTypeContracts()
    - GetKnownTypeContracts()
    - AddKnownTypeContracts()
    - AddKnownTypes()
    - WrapNullable()
    - AddExtensionData()
    - AddPropertyChangedNotifier()
    - ThrowIfReferencedBaseTypeSealed()
    - ExportEnumDataContract()
    - ExportISerializableDataContract()
    - GenerateKeyValueType()
    - ExportCollectionDataContract()
    - ExportXmlDataContract()
    - GetCodeNamespace()
    - GetMemberName()
    - AddBaseMemberNames()
    - GetClrNamespace()
    - AddNamespacePair()
    - AddImportStatement()
    - CreateProperty()
    - CreateProperty()
}

class "CollectionDataContract" {
    - InitCollectionDataContract()
    - InitSharedTypeContract()
    - GetSharedTypeContract()
    + BindGenericParameters()
    + GetValidContract()
    - ThrowIfInvalid()
    + GetValidContract()
    - CheckConstructor()
    + IsValidContract()
    + Equals()
    + GetHashCode()
    + WriteXmlValue()
    + ReadXmlValue()
}

class "CollectionDataContractCriticalHelper" {
    - Init()
}

class "DictionaryEnumerator" {
    + Dispose()
    + MoveNext()
    + Reset()
}

class "GenericDictionaryEnumerator`2" {
    + Dispose()
    + MoveNext()
    + Reset()
}

class "ContractCodeDomInfo" {
    + GetMemberNames()
}

class "DataContractCriticalHelper" {
    - SetTypeForInitialization()
    + WriteRootElement()
    + SetDataContractName()
    + SetDataContractName()
    + ThrowInvalidDataContractException()
}

class "GenericNameProvider" {
    + GetParameterCount()
    + GetNestedParameterCounts()
    + GetParameterName()
    + GetNamespaces()
    + GetGenericTypeName()
    - GetStableName()
}

class "GenericInfo" {
    + Add()
    + AddToLevel()
    + GetExpandedStableName()
    + GetStableNamespace()
    + GetParameterCount()
    + GetNestedParameterCounts()
    + GetParameterName()
    + GetNamespaces()
    + GetGenericTypeName()
}

class "DataContractPairKey" {
    + Equals()
    + GetHashCode()
}

class "TypeHandleRefEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "DataContractSerializer" {
    - Initialize()
    - Initialize()
    + InternalWriteObject()
    + InternalWriteObject()
    + WriteObject()
    + WriteStartObject()
    + WriteObjectContent()
    + WriteEndObject()
    + WriteStartObject()
    + WriteObjectContent()
    + WriteEndObject()
    + WriteObject()
    + ReadObject()
    + ReadObject()
    + IsStartObject()
    + ReadObject()
    + IsStartObject()
    + ReadObject()
    + InternalWriteStartObject()
    + InternalWriteObjectContent()
    + InternalWriteObjectContent()
    + SetDataContractSurrogate()
    + InternalWriteEndObject()
    + InternalReadObject()
    + InternalReadObject()
    + InternalIsStartObject()
    + GetSerializeType()
    + GetDeserializeType()
}

class "DataContractSet" {
    + Add()
    - Add()
    + Add()
    + InternalAdd()
    - AddClassDataContract()
    - AddCollectionDataContract()
    - AddXmlDataContract()
    - AddKnownDataContracts()
    + GetStableName()
    + GetDataContract()
    + GetMemberTypeDataContract()
    + GetItemTypeDataContract()
    + GetSurrogateData()
    + SetSurrogateData()
    + Remove()
    + GetEnumerator()
    + IsContractProcessed()
    + SetContractProcessed()
    + GetContractCodeDomInfo()
    + SetContractCodeDomInfo()
    - GetReferencedTypes()
    - GetReferencedCollectionTypes()
    - AddReferencedType()
    + TryGetReferencedType()
    + TryGetReferencedCollectionType()
    - TryGetReferencedType()
}

class "DataMember" {
    + BindGenericParameters()
    + Equals()
    + GetHashCode()
}

class "EnumDataContract" {
    + WriteEnumValue()
    + ReadEnumValue()
    - ReadEnumValue()
    + GetStringFromEnumValue()
    + GetEnumValueFromString()
    + Equals()
    + GetHashCode()
    + WriteXmlValue()
    + ReadXmlValue()
}

class "EnumDataContractCriticalHelper" {
    - ImportBaseType()
    - ImportDataMembers()
}

class "ExportOptions" {
    + GetSurrogate()
}

class "DataNode`1" {
    + GetValue()
    + GetData()
    + Clear()
    + AddQualifiedNameAttribute()
}

class "ClassDataNode" {
    + Clear()
}

class "CollectionDataNode" {
    + GetData()
    + Clear()
}

class "XmlDataNode" {
    + Clear()
}

class "ISerializableDataNode" {
    + GetData()
    + Clear()
}

class "ExtensionDataReader" {
    + SetDeserializedValue()
    + GetCurrentNode()
    + SetDataNode()
    + Reset()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToElement()
    - SetElement()
    + LookupNamespace()
    + Skip()
    - IsElementNode()
    + Close()
    + Read()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + ResolveEntity()
    + ReadAttributeValue()
    - MoveNext()
    - SetNextElement()
    - AddDeserializedDataNode()
    - CheckIfNodeHandled()
    - MoveNextInClass()
    - MoveNextInCollection()
    - MoveNextInISerializable()
    - MoveNextInXml()
    - MoveToDeserializedObject()
    - MoveToText()
    - PushElement()
    - PopElement()
    - GrowElementsIfNeeded()
    - GetNextElement()
}

class "ElementData" {
    + AddAttribute()
    - GrowAttributesIfNeeded()
}

class "GenericParameterDataContract" {
    + BindGenericParameters()
}

class "HybridObjectCache" {
    + Add()
    + Remove()
    + GetObject()
    + IsObjectReferenced()
}

class "KnownTypeDataContractResolver" {
    + TryResolveType()
    + ResolveName()
}

class "NetDataContractSerializer" {
    - Initialize()
    - Initialize()
    + Serialize()
    + Deserialize()
    + InternalWriteObject()
    + WriteObject()
    + WriteStartObject()
    + WriteObjectContent()
    + WriteEndObject()
    + WriteStartObject()
    + InternalWriteStartObject()
    - InternalWriteStartObject()
    + WriteObjectContent()
    + InternalWriteObjectContent()
    - InternalWriteObjectContent()
    + WriteEndObject()
    + InternalWriteEndObject()
    + ReadObject()
    + ReadObject()
    + IsStartObject()
    + ReadObject()
    + IsStartObject()
    + InternalReadObject()
    + InternalIsStartObject()
    + GetDataContract()
    + GetDataContract()
    + GetDataContract()
}

class "ObjectToIdCache" {
    + GetId()
    + ReassignId()
    - FindElement()
    - RemoveAt()
    - ComputeStartPosition()
    - Rehash()
}

class "CharDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "BooleanDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "SignedByteDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "UnsignedByteDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "ShortDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "UnsignedShortDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "IntDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "UnsignedIntDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "LongDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "UnsignedLongDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "FloatDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "DoubleDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "DecimalDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "DateTimeDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "StringDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "ByteArrayDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "ObjectDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "TimeSpanDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "GuidDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "UriDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
}

class "QNameDataContract" {
    + WriteXmlValue()
    + ReadXmlValue()
    + WriteRootElement()
}

class "SchemaExporter" {
    + Export()
    - ExportSerializationSchema()
    - ExportDataContract()
    - ExportTopLevelElement()
    - ExportClassDataContract()
    - AddReferenceAttributes()
    - SetElementType()
    - CheckIfMemberHasConflict()
    - ExportEmitDefaultValue()
    - ExportActualType()
    - ExportGenericInfo()
    - ExportSurrogateData()
    - ExportCollectionDataContract()
    - ExportIsDictionary()
    - ExportEnumDataContract()
    - ExportISerializableDataContract()
    - CreateTypeContent()
    - ExportXmlDataContract()
    - GetSchemaAnnotation()
    - GetAnnotationMarkup()
    - GetSchema()
}

class "SchemaImporter" {
    + Import()
    - ImportKnownTypes()
    - ImportKnownTypesForObject()
    + CreateSchemaObjects()
    - GetBaseTypeName()
    - CreateRedefineList()
    - ImportAnonymousGlobalElement()
    - ImportAnonymousElement()
    - ImportType()
    - ImportType()
    - ImportType()
    - RemoveFailedContract()
    - CheckIfEnum()
    - CheckIfCollection()
    - CheckIfISerializable()
    - RemoveOptionalUnknownSerializationElements()
    - ImportType()
    - ImportClass()
    - ImportXmlDataType()
    - ImportSpecialXmlDataType()
    - IsXmlAnyElementType()
    - IsXmlAnyType()
    - IsValueType()
    - ImportISerializable()
    - CheckISerializableBase()
    - IsISerializableDerived()
    - ImportBaseContract()
    - ImportTopLevelElement()
    - ImportClassMember()
    - ImportEmitDefaultValue()
    - ImportCollection()
    - GetGenericInfoForDataMember()
    - IsDictionary()
    - ImportFlagsEnum()
    - ImportEnum()
    - ImportSimpleTypeRestriction()
    - ImportDataContractExtension()
    - ImportGenericInfo()
    - ImportGenericInfo()
    - ImportSurrogateData()
    - CheckComplexType()
    - CheckIfElementUsesUnsupportedConstructs()
    - ImportAttributes()
    - TryCheckIfAttribute()
    - AddDataContract()
    - GetInnerText()
}

class "SurrogateDataContract" {
    + WriteXmlValue()
    - SerializationSurrogateSetObjectData()
    - GetUninitializedObject()
    - SerializationSurrogateGetObjectData()
    + ReadXmlValue()
}

class "ExportContext" {
    + WriteChildToContext()
    + SetNamespace()
}

class "<GetDataMembers>d__6" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Runtime.Serialization.DataMember>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "CreateXmlSerializableDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlDataContract" {
    - GetConstructor()
    + SetTopLevelElementName()
    + Equals()
    + GetHashCode()
    + WriteXmlValue()
    + ReadXmlValue()
    + GenerateCreateXmlSerializableDelegate()
    - <GenerateCreateXmlSerializableDelegate>b__39_0()
}

class "XmlFormatClassReaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlFormatCollectionReaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlFormatGetOnlyCollectionReaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlFormatReaderGenerator" {
    + GenerateClassReader()
    + GenerateCollectionReader()
    + GenerateGetOnlyCollectionReader()
}

class "CriticalHelper" {
    + GenerateClassReader()
    + GenerateCollectionReader()
    + GenerateGetOnlyCollectionReader()
}

class "<>c__DisplayClass0_0" {
    + <GenerateClassReader>b__0()
}

class "<>c__DisplayClass1_0" {
    + <GenerateCollectionReader>b__0()
}

class "<>c__DisplayClass2_0" {
    + <GenerateGetOnlyCollectionReader>b__0()
}

class "XmlFormatClassWriterDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlFormatCollectionWriterDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlFormatWriterGenerator" {
    + GenerateClassWriter()
    + GenerateCollectionWriter()
}

class "CriticalHelper" {
    + GenerateClassWriter()
    + GenerateCollectionWriter()
}

class "<>c__DisplayClass0_0" {
    + <GenerateClassWriter>b__0()
}

class "<>c__DisplayClass1_0" {
    + <GenerateCollectionWriter>b__0()
}

class "XmlObjectSerializerContext" {
    + DemandSerializationFormatterPermission()
    + DemandMemberAccessPermission()
    + GetStreamingContext()
    + IncrementItemCount()
    + GetDataContract()
    + GetDataContract()
    + GetDataContractSkipValidation()
    + GetDataContract()
    + CheckIfTypeSerializable()
    + GetSurrogatedType()
    - GetDataContractFromSerializerKnownTypes()
    + IsKnownType()
    + IsKnownType()
    - ResolveDataContractFromKnownTypes()
    - ResolveDataContractFromDataContractResolver()
    + ResolveNameFromKnownTypes()
    + ResolveDataContractFromKnownTypes()
    + ResolveDataContractFromRootDataContract()
}

class "XmlObjectSerializerReadContext" {
    + GetCollectionMember()
    + StoreCollectionMemberInfo()
    + InternalDeserialize()
    + InternalDeserialize()
    + InternalDeserialize()
    + TryHandleNullOrRef()
    + InternalDeserialize()
    - ReplaceScopedKnownTypesTop()
    + GetMemberIndex()
    + GetMemberIndexWithRequiredMembers()
    + HandleMemberNotFound()
    + HandleUnknownElement()
    + SkipUnknownElement()
    + ReadIfNullOrRef()
    + ReadAttributes()
    + ResetAttributes()
    + GetObjectId()
    + GetArraySize()
    + AddNewObject()
    + AddNewObjectWithId()
    + ReplaceDeserializedObject()
    + GetExistingObject()
    - GetExistingObjectOrExtensionData()
    + GetRealObject()
    - DeserializeFromExtensionData()
    + CheckEndOfArray()
    + ReadIXmlSerializable()
    + ReadSerializationInfo()
    + ResolveDataContractFromTypeName()
    - ReadExtensionDataMember()
    + ReadExtensionDataValue()
    + StartReadExtensionDataValue()
    - ReadExtensionDataValue()
    + ReadPrimitiveExtensionDataValue()
    + InitializeExtensionDataNode()
    - ReadUnknownPrimitiveData()
    - ReadUnknownClassData()
    - ReadUnknownCollectionData()
    - ReadUnknownISerializableData()
    - ReadUnknownXmlData()
    - ReadAndResolveUnknownXmlData()
    - IsContentNode()
    + CreateReaderOverChildNodes()
    - AddNamespaceDeclaration()
    + ReadDataContractValue()
    + CreateReaderDelegatorForReader()
    + IsReadingCollectionExtensionData()
    + IsReadingClassExtensionData()
}

class "XmlObjectSerializerReadContextComplex" {
    + GetDataContract()
    + GetDataContract()
    + InternalDeserialize()
    + InternalDeserialize()
    + InternalDeserialize()
    - InternalDeserializeInSharedTypeMode()
    - InternalDeserializeWithSurrogate()
    - ResolveDataContractTypeInSharedTypeMode()
    - ResolveDataContractInSharedTypeMode()
    + ResolveDataContractFromTypeName()
    - CheckIfTypeSerializableForSharedTypeMode()
    + CheckIfTypeSerializable()
    + GetSurrogatedType()
    + GetArraySize()
}

class "TopLevelAssemblyTypeResolver" {
    + ResolveType()
}

class "XmlObjectDataContractTypeKey" {
    + Equals()
    + GetHashCode()
}

class "XmlObjectSerializerWriteContext" {
    + StoreIsGetOnlyCollection()
    + InternalSerializeReference()
    + InternalSerialize()
    + SerializeWithoutXsiType()
    + SerializeWithXsiTypeAtTopLevel()
    + SerializeWithXsiType()
    + OnHandleIsReference()
    + SerializeAndVerifyType()
    + WriteClrTypeInfo()
    + WriteClrTypeInfo()
    + WriteClrTypeInfo()
    + WriteAnyType()
    + WriteString()
    + WriteString()
    + WriteBase64()
    + WriteBase64()
    + WriteUri()
    + WriteUri()
    + WriteQName()
    + WriteQName()
    + HandleGraphAtTopLevel()
    + OnHandleReference()
    + OnEndHandleReference()
    + WriteNull()
    + WriteNull()
    + IncrementArrayCount()
    + IncrementCollectionCount()
    + IncrementCollectionCountGeneric()
    - IncrementCollectionCount()
    + WriteArraySize()
    + WriteIXmlSerializable()
    + GetObjectData()
    + WriteISerializable()
    + WriteSerializationInfo()
    + WriteExtensionData()
    - WriteExtensionDataMember()
    + WriteExtensionDataTypeInfo()
    + WriteExtensionDataValue()
    + TryWriteDeserializedExtensionData()
    - WriteExtensionClassData()
    - WriteExtensionCollectionData()
    - WriteExtensionISerializableData()
    - WriteExtensionXmlData()
    + WriteDataContractValue()
    + WriteNull()
    - WriteResolvedTypeInfo()
    - ResolveType()
    + WriteTypeInfo()
    + WriteTypeInfo()
    + WriteTypeInfo()
}

class "XmlObjectSerializerWriteContextComplex" {
    + GetDataContract()
    + GetDataContract()
    + GetDataContractSkipValidation()
    + WriteClrTypeInfo()
    + WriteClrTypeInfo()
    + WriteClrTypeInfo()
    + WriteAnyType()
    + WriteString()
    + WriteString()
    + WriteBase64()
    + WriteBase64()
    + WriteUri()
    + WriteUri()
    + WriteQName()
    + WriteQName()
    + InternalSerialize()
    + OnHandleReference()
    + OnEndHandleReference()
    - CheckIfTypeSerializableForSharedTypeMode()
    + CheckIfTypeSerializable()
    + GetSurrogatedType()
    - InternalSerializeWithSurrogate()
    + WriteArraySize()
}

class "XmlReaderDelegator" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + IsNamespaceURI()
    + IsLocalName()
    + IsNamespaceUri()
    + IsLocalName()
    + IndexOfLocalName()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToElement()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + Read()
    + MoveToContent()
    + ReadAttributeValue()
    + ReadEndElement()
    - CreateInvalidPrimitiveTypeException()
    + ReadElementContentAsAnyType()
    + ReadContentAsAnyType()
    + ReadExtensionData()
    - ThrowConversionException()
    - ThrowNotAtElement()
    + ReadElementContentAsChar()
    + ReadContentAsChar()
    - ToChar()
    + ReadElementContentAsString()
    + ReadContentAsString()
    + ReadElementContentAsBoolean()
    + ReadContentAsBoolean()
    + ReadElementContentAsFloat()
    + ReadContentAsSingle()
    + ReadElementContentAsDouble()
    + ReadContentAsDouble()
    + ReadElementContentAsDecimal()
    + ReadContentAsDecimal()
    + ReadElementContentAsBase64()
    + ReadContentAsBase64()
    + ReadContentAsBase64()
    + ReadElementContentAsDateTime()
    + ReadContentAsDateTime()
    + ReadElementContentAsInt()
    + ReadContentAsInt()
    + ReadElementContentAsLong()
    + ReadContentAsLong()
    + ReadElementContentAsShort()
    + ReadContentAsShort()
    - ToShort()
    + ReadElementContentAsUnsignedByte()
    + ReadContentAsUnsignedByte()
    - ToByte()
    + ReadElementContentAsSignedByte()
    + ReadContentAsSignedByte()
    - ToSByte()
    + ReadElementContentAsUnsignedInt()
    + ReadContentAsUnsignedInt()
    - ToUInt32()
    + ReadElementContentAsUnsignedLong()
    + ReadContentAsUnsignedLong()
    + ReadElementContentAsUnsignedShort()
    + ReadContentAsUnsignedShort()
    - ToUInt16()
    + ReadElementContentAsTimeSpan()
    + ReadContentAsTimeSpan()
    + ReadElementContentAsGuid()
    + ReadContentAsGuid()
    + ReadElementContentAsUri()
    + ReadContentAsUri()
    + ReadElementContentAsQName()
    + ReadContentAsQName()
    - ParseQualifiedName()
    - CheckExpectedArrayLength()
    + GetArrayLengthQuota()
    - CheckActualArrayLength()
    + TryReadBooleanArray()
    + TryReadDateTimeArray()
    + TryReadDecimalArray()
    + TryReadInt32Array()
    + TryReadInt64Array()
    + TryReadSingleArray()
    + TryReadDoubleArray()
    + GetNamespacesInScope()
    + HasLineInfo()
    + LookupNamespace()
    + Skip()
}

class "XmlSerializableReader" {
    + BeginRead()
    + EndRead()
    + Read()
    + Close()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + LookupNamespace()
    + ReadAttributeValue()
    + ResolveEntity()
    + IsStartElement()
    + IsStartElement()
    + IsStartElement()
    + MoveToContent()
    + ReadContentAsObject()
    + ReadContentAsBoolean()
    + ReadContentAsDateTime()
    + ReadContentAsDouble()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadContentAsString()
    + ReadContentAs()
    + ReadContentAsBase64()
    + ReadContentAsBinHex()
    + ReadValueChunk()
    + ReadString()
    - System.Xml.IXmlLineInfo.HasLineInfo()
}

class "XmlSerializableWriter" {
    + BeginWrite()
    + EndWrite()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteStartDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + Close()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    + WriteBinHex()
    + Flush()
    + WriteName()
    + WriteQualifiedName()
    + LookupPrefix()
    + WriteNmToken()
}

class "XmlWriterDelegator" {
    + Flush()
    + LookupPrefix()
    - WriteEndAttribute()
    + WriteEndElement()
    + WriteRaw()
    + WriteRaw()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    - WriteStartAttribute()
    - WriteStartAttribute()
    + WriteAttributeString()
    + WriteAttributeString()
    - WriteAttributeStringValue()
    + WriteAttributeString()
    - WriteAttributeStringValue()
    + WriteAttributeInt()
    - WriteAttributeIntValue()
    + WriteAttributeBool()
    - WriteAttributeBoolValue()
    + WriteAttributeQualifiedName()
    - WriteAttributeQualifiedNameValue()
    + WriteAttributeQualifiedName()
    - WriteAttributeQualifiedNameValue()
    + WriteStartElement()
    + WriteStartElement()
    + WriteStartElement()
    + WriteStartElement()
    + WriteStartElementPrimitive()
    + WriteEndElementPrimitive()
    + WriteNamespaceDecl()
    - CreateInvalidPrimitiveTypeException()
    + WriteAnyType()
    + WriteAnyType()
    + WriteExtensionData()
    + WriteString()
    + WriteBoolean()
    + WriteBoolean()
    + WriteDateTime()
    + WriteDateTime()
    + WriteDecimal()
    + WriteDecimal()
    + WriteDouble()
    + WriteDouble()
    + WriteInt()
    + WriteInt()
    + WriteLong()
    + WriteLong()
    + WriteFloat()
    + WriteFloat()
    + WriteBase64()
    + WriteShort()
    + WriteShort()
    + WriteUnsignedByte()
    + WriteUnsignedByte()
    + WriteSignedByte()
    + WriteSignedByte()
    + WriteUnsignedInt()
    + WriteUnsignedInt()
    + WriteUnsignedLong()
    + WriteUnsignedLong()
    + WriteUnsignedShort()
    + WriteUnsignedShort()
    + WriteChar()
    + WriteChar()
    + WriteTimeSpan()
    + WriteTimeSpan()
    + WriteGuid()
    + WriteGuid()
    + WriteUri()
    + WriteQName()
    + WriteQualifiedName()
    + WriteQualifiedName()
    + WriteBooleanArray()
    + WriteDateTimeArray()
    + WriteDecimalArray()
    + WriteInt32Array()
    + WriteInt64Array()
    + WriteSingleArray()
    + WriteDoubleArray()
}

class "XsdDataContractExporter" {
    - GetSchemaSet()
    - TraceExportBegin()
    - TraceExportEnd()
    - TraceExportError()
    + Export()
    + Export()
    + Export()
    + GetSchemaTypeName()
    + GetSchemaType()
    + GetRootElementName()
    - GetSurrogatedType()
    - CheckAndAddType()
    - AddType()
    - Export()
    - AddKnownTypes()
    + CanExport()
    + CanExport()
    + CanExport()
}

class "XsdDataContractImporter" {
    - GetCodeCompileUnit()
    + Import()
    + Import()
    + Import()
    + Import()
    + CanImport()
    + CanImport()
    + CanImport()
    + CanImport()
    + GetCodeTypeReference()
    + GetCodeTypeReference()
    + FindDataContract()
    + GetKnownTypeReferences()
    - InternalImport()
    - TraceImportError()
    - InternalCanImport()
}

class "BitFlagsGenerator" {
    + Store()
    + Load()
    + LoadArray()
    + GetLocalCount()
    + GetBitCount()
    + GetLocal()
}

class "SurrogateProviderAdapter" {
    + GetCustomDataToExport()
    + GetCustomDataToExport()
    + GetDataContractType()
    + GetDeserializedObject()
    + GetKnownCustomDataTypes()
    + GetObjectToSerialize()
    + GetReferencedTypeOnImport()
    + ProcessImportedType()
}

class "XmlDataContractInterpreter" {
    + CreateXmlSerializable()
    - GetConstructor()
}

class "XmlFormatReaderInterpreter" {
    + ReadFromXml()
    + ReadCollectionFromXml()
    + ReadGetOnlyCollectionFromXml()
    - CreateObject()
    - InvokeOnDeserializing()
    - InvokeOnDeserialized()
    - HasFactoryMethod()
    - InvokeFactoryMethod()
    - ReadISerializable()
    - ReadClass()
    - ReadMembers()
    - ReadMembers()
    - GetRequiredMembers()
    - GetRequiredMembers()
    - ReadValue()
    - InternalDeserialize()
    - WrapNullableObject()
    - ReadCollection()
    - ReadGetOnlyCollection()
    - TryReadPrimitiveArray()
    - ReadCollectionItem()
    - StoreCollectionValue()
    - HandleUnexpectedItemInCollection()
    - IsStartElement()
    - IsStartElement()
    - IsEndElement()
}

class "XmlFormatWriterInterpreter" {
    + WriteToXml()
    + WriteCollectionToXml()
    - InitArgs()
    - InvokeOnSerializing()
    - InvokeOnSerialized()
    - WriteClass()
    - WriteCollection()
    - WriteMembers()
    + IsDefaultValue()
    + GetDefaultValue()
    - CheckIfMemberHasConflict()
    - CheckIfConflictingMembersHaveDifferentTypes()
    - NeedsPrefix()
    - WriteStartElement()
    - WriteEndElement()
    - WriteValue()
    - UnwrapNullableObject()
    - TryWritePrimitive()
    - TryWritePrimitiveArray()
    - LoadMemberValue()
    - <WriteCollection>b__24_0()
}

class "<>c__DisplayClass24_0" {
    + <WriteCollection>b__1()
}

class "<>c__DisplayClass25_0" {
    + <WriteMembers>b__0()
}

class "<>c__DisplayClass33_0" {
    + <WriteValue>b__0()
}

class "ByteArrayHelperWithString" {
    + WriteArray()
    + ReadArray()
    + WriteArray()
    - ThrowConversionException()
    - ToByte()
}

class "DataContractJsonSerializer" {
    + IsStartObject()
    + IsStartObject()
    + ReadObject()
    + ReadObject()
    + ReadObject()
    + ReadObject()
    + ReadObject()
    + WriteEndObject()
    + WriteEndObject()
    + WriteObject()
    + WriteObject()
    + WriteObject()
    + WriteObjectContent()
    + WriteObjectContent()
    + WriteStartObject()
    + WriteStartObject()
    + GetDeserializeType()
    + GetSerializeType()
    + InternalIsStartObject()
    + InternalReadObject()
    + InternalWriteEndObject()
    + InternalWriteObject()
    + InternalWriteObjectContent()
    + InternalWriteStartObject()
    - AddCollectionItemTypeToKnownTypes()
    - Initialize()
    - Initialize()
}

class "JsonByteArrayDataContract" {
    + ReadJsonValueCore()
}

class "JsonClassDataContract" {
    + ReadJsonValueCore()
    + WriteJsonValueCore()
}

class "JsonClassDataContractCriticalHelper" {
    - CopyMembersAndCheckDuplicateNames()
}

class "JsonCollectionDataContract" {
    + ReadJsonValueCore()
    + WriteJsonValueCore()
}

class "JsonDataContract" {
    + ReadJsonValue()
    + ReadJsonValueCore()
    + WriteJsonValue()
    + WriteJsonValueCore()
    + PopKnownDataContracts()
    + PushKnownDataContracts()
}

class "JsonDataContractCriticalHelper" {
    - AddCollectionItemContractsToKnownDataContracts()
}

class "JsonEncodingStreamWrapper" {
    + Close()
    + Flush()
    + Read()
    + ReadByte()
    + Seek()
    + SetLength()
    + Write()
    + WriteByte()
    - CleanupCharBreak()
    - EnsureBuffers()
    - EnsureByteBuffer()
    - FillBuffer()
    - InitForReading()
    - InitForWriting()
    - ReadEncoding()
}

class "JsonEnumDataContract" {
    + ReadJsonValueCore()
    + WriteJsonValueCore()
}

class "JsonFormatClassReaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "JsonFormatCollectionReaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "JsonFormatGetOnlyCollectionReaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "JsonFormatReaderGenerator" {
    + GenerateClassReader()
    + GenerateCollectionReader()
    + GenerateGetOnlyCollectionReader()
}

class "CriticalHelper" {
    + GenerateClassReader()
    + GenerateCollectionReader()
    + GenerateGetOnlyCollectionReader()
}

class "<>c__DisplayClass0_0" {
    + <GenerateClassReader>b__0()
}

class "<>c__DisplayClass1_0" {
    + <GenerateCollectionReader>b__0()
}

class "<>c__DisplayClass2_0" {
    + <GenerateGetOnlyCollectionReader>b__0()
}

class "JsonFormatClassWriterDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "JsonFormatCollectionWriterDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "JsonFormatWriterGenerator" {
    + GenerateClassWriter()
    + GenerateCollectionWriter()
}

class "CriticalHelper" {
    + GenerateClassWriter()
    + GenerateCollectionWriter()
}

class "<>c__DisplayClass0_0" {
    + <GenerateClassWriter>b__0()
}

class "<>c__DisplayClass1_0" {
    + <GenerateCollectionWriter>b__0()
}

class "JsonObjectDataContract" {
    + ReadJsonValueCore()
    + WriteJsonValueCore()
}

class "JsonQNameDataContract" {
    + ReadJsonValueCore()
}

class "JsonReaderDelegator" {
    + ReadContentAsChar()
    + ReadContentAsQName()
    + ReadElementContentAsChar()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadContentAsDateTime()
    + ReadElementContentAsDateTime()
    + TryReadJsonDateTimeArray()
    + ReadContentAsUnsignedLong()
    + ReadElementContentAsUnsignedLong()
}

class "DateTimeArrayJsonHelperWithString" {
    + ReadArray()
    + WriteArray()
}

class "JsonStringDataContract" {
    + ReadJsonValueCore()
}

class "JsonUriDataContract" {
    + ReadJsonValueCore()
}

class "JsonWriterDelegator" {
    + WriteChar()
    + WriteBase64()
    + WriteQName()
    + WriteUnsignedLong()
    + WriteDecimal()
    + WriteDouble()
    + WriteFloat()
    + WriteLong()
    + WriteSignedByte()
    + WriteUnsignedInt()
    + WriteUnsignedShort()
    + WriteUnsignedByte()
    + WriteShort()
    + WriteBoolean()
    + WriteInt()
    + WriteJsonBooleanArray()
    + WriteJsonDateTimeArray()
    + WriteJsonDecimalArray()
    + WriteJsonInt32Array()
    + WriteJsonInt64Array()
    + WriteDateTime()
    - WriteDateTimeInDefaultFormat()
    + WriteJsonSingleArray()
    + WriteJsonDoubleArray()
    + WriteStartElement()
}

class "JsonXmlDataContract" {
    + ReadJsonValueCore()
    + WriteJsonValueCore()
    - GetKnownTypesFromContext()
}

class "XmlJsonReader" {
    + Close()
    + EndCanonicalization()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + Read()
    + ReadContentAsDecimal()
    + ReadContentAsInt()
    + ReadContentAsLong()
    + ReadValueAsBase64()
    + ReadValueChunk()
    + SetInput()
    + SetInput()
    + StartCanonicalization()
    + CreateSigningNodeWriter()
    - BufferElement()
    - EnterJsonScope()
    - ExitJsonScope()
    - MoveToEndElement()
    - MoveToInitial()
    - ParseAndSetLocalName()
    - ParseStartElement()
    - ReadAttributes()
    - ReadEscapedCharacter()
    - ReadNonExistentElementName()
    - ReadNonFFFE()
    - ReadNumericalText()
    - ReadQuotedText()
    - ReadServerTypeAttribute()
    - ResetState()
    - SetJsonNameWithMapping()
    - SkipExpectedByteInBufferReader()
    - SkipWhitespaceInBufferReader()
    - TryGetByte()
    - UnescapeJsonString()
}

class "XmlJsonWriter" {
    + Close()
    + Flush()
    + LookupPrefix()
    + SetOutput()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteArray()
    + WriteBase64()
    + WriteBinHex()
    + WriteCData()
    + WriteCharEntity()
    + WriteChars()
    + WriteComment()
    + WriteDocType()
    + WriteEndAttribute()
    + WriteEndDocument()
    + WriteEndElement()
    + WriteEntityRef()
    + WriteFullEndElement()
    + WriteProcessingInstruction()
    + WriteQualifiedName()
    + WriteRaw()
    + WriteRaw()
    + WriteStartAttribute()
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteStartElement()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteValue()
    + WriteWhitespace()
    + WriteXmlAttribute()
    + WriteXmlAttribute()
    + WriteXmlnsAttribute()
    + WriteXmlnsAttribute()
    - CheckText()
    - EnterScope()
    - ExitScope()
    - InitializeWriter()
    - StartText()
    - ThrowIfServerTypeWritten()
    - ThrowInvalidAttributeContent()
    - TrySetWritingNameWithMapping()
    - WriteDataTypeServerType()
    - WriteEscapedJsonString()
    - WriteIndent()
    - WriteNewLine()
    - WriteJsonElementName()
    - WriteJsonQuote()
    - WritePrimitiveValue()
    - WriteServerTypeAttribute()
    - WriteValue()
    - WriteValue()
}

class "JsonNodeWriter" {
    + WriteChars()
}

class "XmlObjectSerializerReadContextComplexJson" {
    + StartReadExtensionDataValue()
    + ReadPrimitiveExtensionDataValue()
    - ReadNumericalPrimitiveExtensionDataValue()
    + GetArraySize()
    + ReadDataContractValue()
    + ReadAttributes()
    + GetJsonMemberIndex()
    + IsReadingCollectionExtensionData()
    + IsReadingClassExtensionData()
    + CreateReaderDelegatorForReader()
    + GetDataContract()
    + GetDataContractSkipValidation()
    + GetDataContract()
    + ResolveDataContractFromRootDataContract()
}

class "XmlObjectSerializerWriteContextComplexJson" {
    + WriteClrTypeInfo()
    + WriteClrTypeInfo()
    + WriteArraySize()
    + WriteTypeInfo()
    - WriteTypeInfo()
    + WriteTypeInfo()
    + WriteJsonISerializable()
    + WriteDataContractValue()
    + WriteNull()
    + WriteExtensionDataTypeInfo()
    + SerializeWithXsiType()
    - HandleCollectionAssignedToObject()
    + SerializeWithXsiTypeAtTopLevel()
    - VerifyType()
    + GetDataContract()
    + GetDataContractSkipValidation()
    + GetDataContract()
    + ResolveDataContractFromRootDataContract()
}

class "JsonFormatReaderInterpreter" {
    + ReadFromJson()
    + ReadCollectionFromJson()
    + ReadGetOnlyCollectionFromJson()
    - CreateObject()
    - InvokeOnDeserializing()
    - InvokeOnDeserialized()
    - HasFactoryMethod()
    - InvokeFactoryMethod()
    - ReadISerializable()
    - ReadClass()
    - ReadMembers()
    - ReadMembers()
    - CheckRequiredElements()
    - SetRequiredElements()
    - SetExpectedElements()
    - ResetExpectedElements()
    - ReadValue()
    - InternalDeserialize()
    - WrapNullableObject()
    - ReadCollection()
    - ReadSimpleDictionary()
    - ReadGetOnlyCollection()
    - TryReadPrimitiveArray()
    - ReadCollectionItem()
    - StoreCollectionValue()
    - HandleUnexpectedItemInCollection()
    - IsStartElement()
    - IsStartElement()
    - IsEndElement()
    - ThrowUnexpectedStateException()
    - ThrowSerializationException()
}

class "JsonFormatWriterInterpreter" {
    + WriteToJson()
    + WriteCollectionToJson()
    - InitArgs()
    - InvokeOnSerializing()
    - InvokeOnSerialized()
    - WriteClass()
    - WriteCollection()
    - WriteMembers()
    + IsDefaultValue()
    + GetDefaultValue()
    - WriteStartElement()
    - WriteEndElement()
    - WriteArrayAttribute()
    - WriteObjectAttribute()
    - WriteValue()
    - InternalSerialize()
    - UnwrapNullableObject()
    - TryWritePrimitive()
    - TryWritePrimitiveArray()
    - LoadMemberValue()
    - <WriteCollection>b__22_0()
}

class "<>c__DisplayClass22_0" {
    + <WriteCollection>b__1()
}

class "<>c__DisplayClass23_0" {
    + <WriteMembers>b__0()
}

class "<>c__DisplayClass30_0" {
    + <WriteValue>b__0()
    + <WriteValue>b__1()
    + <WriteValue>b__2()
}

class "DeclaredTypeElement" {
    + PostDeserialize()
}

class "DeclaredTypeElementCollection" {
    + Add()
    + Clear()
    + Contains()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + Remove()
    + RemoveAt()
}

class "DeclaredTypeValidator" {
    + CanValidate()
    + Validate()
}

class "ParameterElement" {
    + PostDeserialize()
    + PreSerialize()
    - Validate()
    + GetType()
}

class "ParameterElementCollection" {
    + Add()
    + Clear()
    + Contains()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + RemoveAt()
}

class "TypeElement" {
    + Reset()
    + GetType()
}

class "TypeElementCollection" {
    + Add()
    + Clear()
    + CreateNewElement()
    + GetElementKey()
    + IndexOf()
    + Remove()
    + RemoveAt()
}

class "BackoffTimeoutHelper" {
    - Reset()
    + IsExpired()
    + WaitAndBackoff()
    + WaitAndBackoff()
    - WaitTimeWithDrift()
    - Backoff()
}

class "BufferedOutputStream" {
    + Reinitialize()
    + Reinitialize()
    - AllocNextChunk()
    + BeginRead()
    + EndRead()
    + BeginWrite()
    + EndWrite()
    + Clear()
    + Close()
    + Flush()
    + Read()
    + ReadByte()
    + Seek()
    + SetLength()
    + ToMemoryStream()
    + ToArray()
    + Skip()
    + Write()
    + CreateQuotaExceededException()
    - WriteCore()
    + WriteByte()
}

class "DuplicateDetector`1" {
    + AddIfNotDuplicate()
    - Add()
    + Remove()
    + Clear()
}

class "ExceptionTrace" {
    + AsInformation()
    + AsWarning()
    + AsError()
    + AsError()
    + AsError()
    + AsError()
    + AsError()
    + Argument()
    + ArgumentNull()
    + ArgumentNull()
    + ArgumentNullOrEmpty()
    + ArgumentOutOfRange()
    + ObjectDisposed()
    + TraceUnhandledException()
    + TraceHandledException()
    + TraceEtwException()
    - TraceException()
    - TraceException()
    - BreakOnException()
    + TraceFailFast()
    + TraceFailFast()
}

class "IOThreadCancellationTokenSource" {
    + Dispose()
    - Cancel()
}

class "IOThreadScheduler" {
    - ScheduleCallbackHelper()
    - ScheduleCallbackLowPriHelper()
    - CompletionCallback()
    - TryCoalesce()
    + Finalize()
    - Cleanup()
}

class "IOThreadTimer" {
    + Cancel()
    + Set()
    + Set()
    + SetAt()
}

class "InputQueue`1" {
    + BeginDequeue()
    + BeginWaitForItem()
    + Close()
    + Dequeue()
    + Dequeue()
    + Dispatch()
    + EndDequeue()
    + EndDequeue()
    + EndWaitForItem()
    + EnqueueAndDispatch()
    + EnqueueAndDispatch()
    + EnqueueAndDispatch()
    + EnqueueAndDispatch()
    + EnqueueWithoutDispatch()
    + EnqueueWithoutDispatch()
    + Shutdown()
    + Shutdown()
    + WaitForItem()
    + Dispose()
    - DisposeItem()
    - EnqueueAndDispatch()
    - EnqueueWithoutDispatch()
    - GetWaiters()
    - RemoveReader()
}

class "MruCache`2" {
    + Add()
    + Clear()
    + Remove()
    + OnSingleItemRemoved()
    + OnItemAgedOutOfCache()
    + TryGetValue()
}

class "ReadOnlyDictionaryInternal`2" {
    - CreateReadOnlyException()
    + Add()
    + Add()
    + Clear()
    + Contains()
    + ContainsKey()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
    + Remove()
    + TryGetValue()
}

class "SignalGate" {
    + Signal()
    + Unlock()
    - ThrowInvalidSignalGateState()
}

class "SignalGate`1" {
    + Signal()
    + Unlock()
}

class "SynchronizedPool`1" {
    + Clear()
    - HandlePromotionFailure()
    - PromoteThread()
    - RecordReturnToGlobalPool()
    - RecordTakeFromGlobalPool()
    + Return()
    - ReturnToPerThreadPool()
    - ReturnToGlobalPool()
    + Take()
    - TakeFromPerThreadPool()
    - TakeFromGlobalPool()
}

class "ThreadNeutralSemaphore" {
    + EnterAsync()
    + TryEnter()
    + Enter()
    + TryEnter()
    - CreateObjectAbortedException()
    - RemoveWaiter()
    - EnterCore()
    + Exit()
    + Abort()
}

class "SafeEventLogWriteHandle" {
    + ReleaseHandle()
}

class "DiagnosticTraceSource" {
    + GetSupportedAttributes()
}

class "DictionaryTraceRecord" {
    + WriteTo()
}

class "EtwDiagnosticTrace" {
    + SetEnd2EndActivityTracingEnabled()
    + SetAnnotation()
    + ShouldTrace()
    + ShouldTraceToEtw()
    + Event()
    + Event()
    + SetAndTraceTransfer()
    + TraceTransfer()
    + WriteTraceSource()
    + GetSerializedPayload()
    + GetSerializedPayload()
    + IsEtwEventEnabled()
    + IsEtwEventEnabled()
    - CreateTraceSource()
    - CreateEtwProvider()
    + OnShutdownTracing()
    - ShutdownTraceSource()
    - ShutdownEtwProvider()
    + IsEnabled()
    + TraceEventLogEvent()
    + OnUnhandledException()
}

class "EtwProvider" {
    + OnControllerCommand()
    + SetEnd2EndActivityTracingEnabled()
    + WriteEvent()
    + WriteTransferEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
    + WriteEvent()
}

class "EventLogger" {
    + UnsafeLogEvent()
    + LogEvent()
    + LogEvent()
    - SafeLogEvent()
    - SafeSetLogSourceName()
    - SetLogSourceName()
    - IsInPartialTrust()
    - UnsafeWriteEventLog()
    - UnsafeGetProcessName()
    - UnsafeGetProcessId()
}

class "EventTraceActivity" {
    + SetActivityId()
    - SetActivityIdOnThread()
}

class "StringTraceRecord" {
    + WriteTo()
}

class "TraceRecord" {
    + WriteTo()
    + BuildEventId()
    + XmlEncode()
}

class "HopperCache" {
    + Add()
    + GetValue()
}

class "NullableKeyDictionary`2" {
    + Add()
    + ContainsKey()
    + Remove()
    + TryGetValue()
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ObjectCache`2" {
    + Add()
    + Take()
    + Take()
    - InternalAdd()
    - Return()
    - StartTimerIfNecessary()
    - ShouldPurgeItem()
    - GatherExpiredItems()
    - PurgeCache()
    + Dispose()
}

class "ObjectCacheSettings" {
    + Clone()
}

class "OrderedDictionary`2" {
    + Add()
    + Add()
    + Clear()
    + Contains()
    + ContainsKey()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Remove()
    + Remove()
    + TryGetValue()
    - System.Collections.IDictionary.Add()
    - System.Collections.IDictionary.Clear()
    - System.Collections.IDictionary.Contains()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.ICollection.CopyTo()
}

class "ValidatingCollection`1" {
    - OnAdd()
    - OnMutate()
    + ClearItems()
    + InsertItem()
    + RemoveItem()
    + SetItem()
}

class "DefaultActionItem" {
    + Invoke()
    - TraceAndInvoke()
}

class "ActionThunk`1" {
    - UnhandledExceptionFrame()
}

class "WaitThunk" {
    - UnhandledExceptionFrame()
}

class "TimerThunk" {
    - UnhandledExceptionFrame()
}

class "WaitOrTimerThunk" {
    - UnhandledExceptionFrame()
}

class "SendOrPostThunk" {
    - UnhandledExceptionFrame()
}

class "IOCompletionThunk" {
    - UnhandledExceptionFrame()
}

class "<>c" {
    + <InitializeTracing>b__8_0()
}

class "ScheduledOverlapped" {
    - IOCallback()
    + Post()
    + Cleanup()
}

class "TimerManager" {
    + Set()
    + Cancel()
    - EnsureWaitScheduled()
    - GetOtherTimerGroup()
    - OnWaitCallback()
    - ReactivateWaitableTimers()
    - ReactivateWaitableTimer()
    - ScheduleElapsedTimers()
    - ScheduleElapsedTimers()
    - ScheduleWait()
    - ScheduleWaitIfAnyTimersLeft()
    - UpdateWaitableTimer()
}

class "TimerQueue" {
    + DeleteMinTimer()
    + DeleteTimer()
    + InsertTimer()
    + UpdateTimer()
    - DeleteMinTimerCore()
}

class "WaitableTimer" {
    + Set()
}

class "ItemQueue" {
    + DequeueAnyItem()
    + DequeueAvailableItem()
    + EnqueueAvailableItem()
    + EnqueuePendingItem()
    + MakePendingItemAvailable()
    - DequeueItemCore()
    - EnqueueItemCore()
}

class "WaitQueueReader" {
    + Set()
    + Wait()
}

class "WaitQueueWaiter" {
    + Set()
    + Wait()
}

class "PooledBufferManager" {
    + Clear()
    - ChangeQuota()
    - DecreaseQuota()
    - FindMostExcessivePool()
    - FindMostStarvedPool()
    - FindPool()
    - IncreaseQuota()
    + ReturnBuffer()
    + TakeBuffer()
    - TuneQuotas()
}

class "GCBufferManager" {
    + Clear()
    + TakeBuffer()
    + ReturnBuffer()
}

class "GlobalPool" {
    + DecrementMaxCount()
    + Take()
    + Return()
    + Clear()
}

class "<>c__DisplayClass0_0`1" {
    + <AsAsyncResult>b__0()
}

class "<>c__DisplayClass1_0" {
    + <AsAsyncResult>b__0()
}

class "<GetCompatibleTypes>d__24" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "UrlDecoder" {
    - FlushBytes()
    + AddChar()
    + AddByte()
    + GetString()
}

class "HttpValueCollection" {
    + FillFromString()
    + ToString()
    - ToString()
}

class "EtwEnableCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NullKeyDictionaryKeyCollection`2" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "NullKeyDictionaryValueCollection`2" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + Remove()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__24" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "Item" {
    + TryAddReference()
    + ReleaseReference()
    + InternalAddReference()
    + InternalReleaseReference()
    + LockedDispose()
    + Dispose()
    + LocalDispose()
}

class "<GetEnumerator>d__20" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<GetEnumerator>d__11" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<GetEnumerator>d__11" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "SynchronizedBufferPool" {
    + OnClear()
    + Take()
    + Return()
}

class "LargeBufferPool" {
    + OnClear()
    + Take()
    + Return()
}

class "XNodeNavigator" {
    - GetLocalName()
    - GetNamespaceURI()
    - GetPrefix()
    + Clone()
    + IsSamePosition()
    + MoveTo()
    + MoveToAttribute()
    + MoveToChild()
    + MoveToChild()
    + MoveToFirstAttribute()
    + MoveToFirstChild()
    + MoveToFirstNamespace()
    + MoveToId()
    + MoveToNamespace()
    + MoveToNext()
    + MoveToNext()
    + MoveToNext()
    + MoveToNextAttribute()
    + MoveToNextNamespace()
    + MoveToParent()
    + MoveToPrevious()
    + ReadSubtree()
    - System.Xml.IXmlLineInfo.HasLineInfo()
}

class "<EvaluateIterator>d__1`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "XDocumentNavigable" {
    + CreateNavigator()
}

class "XNodeValidator" {
    + Validate()
    - GetDefaultAttributeSchemaInfo()
    - GetDefaultValue()
    - GetDefaultValue()
    - ReplaceSchemaInfo()
    - PushAncestorsAndSelf()
    - PushElement()
    - SaveLineInfo()
    - RestoreLineInfo()
    - ValidateAttribute()
    - ValidateAttributes()
    - ValidateElement()
    - ValidateNodes()
    - ValidationCallback()
}

class "XmlSchemaInfoEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "<NodesIterator>d__7`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<DocumentOrderIterator>d__17`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAttributes>d__20" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAncestors>d__21`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetDescendantNodes>d__22`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetDescendants>d__23`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetElements>d__24`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "XAttribute" {
    + Remove()
    + SetValue()
    + ToString()
    + GetDeepHashCode()
    + GetPrefixOfNamespace()
}

class "XCData" {
    + WriteTo()
    + WriteToAsync()
    + CloneNode()
}

class "XComment" {
    + WriteTo()
    + WriteToAsync()
    + CloneNode()
    + DeepEquals()
    + GetDeepHashCode()
}

class "ContentReader" {
    + ReadContentFrom()
    + ReadContentFrom()
}

class "<Nodes>d__18" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetDescendantNodes>d__37" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetDescendants>d__38" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetElements>d__39" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "XDeclaration" {
    + ToString()
}

class "XDocument" {
    + Save()
    + Save()
    + SaveAsync()
    + Save()
    + Save()
    + Save()
    + SaveAsync()
    + Save()
    + SaveAsync()
    + Save()
    + WriteTo()
    + WriteToAsync()
    - WriteToAsyncInternal()
    + AddAttribute()
    + AddAttributeSkipNotify()
    + CloneNode()
    + DeepEquals()
    + GetDeepHashCode()
    - GetFirstNode()
    + ValidateNode()
    - ValidateDocument()
    + ValidateString()
}

class "XDocumentType" {
    + WriteTo()
    + WriteToAsync()
    + CloneNode()
    + DeepEquals()
    + GetDeepHashCode()
}

class "XElement" {
    + Save()
    + Save()
    + AncestorsAndSelf()
    + AncestorsAndSelf()
    + Attribute()
    + Attributes()
    + Attributes()
    + DescendantNodesAndSelf()
    + DescendantsAndSelf()
    + DescendantsAndSelf()
    + GetDefaultNamespace()
    + GetNamespaceOfPrefix()
    + GetPrefixOfNamespace()
    + RemoveAll()
    + RemoveAttributes()
    + ReplaceAll()
    + ReplaceAll()
    + ReplaceAttributes()
    + ReplaceAttributes()
    + Save()
    + Save()
    + SaveAsync()
    + Save()
    + Save()
    + SaveAsync()
    + Save()
    + SaveAsync()
    - SaveAsyncInternal()
    + SetAttributeValue()
    + SetElementValue()
    + SetValue()
    + WriteTo()
    + WriteToAsync()
    - System.Xml.Serialization.IXmlSerializable.GetSchema()
    - System.Xml.Serialization.IXmlSerializable.ReadXml()
    - System.Xml.Serialization.IXmlSerializable.WriteXml()
    + AddAttribute()
    + AddAttributeSkipNotify()
    + AppendAttribute()
    + AppendAttributeSkipNotify()
    - AttributesEqual()
    + CloneNode()
    + DeepEquals()
    - GetAttributes()
    - GetNamespaceOfPrefixInScope()
    + GetDeepHashCode()
    - ReadElementFrom()
    - ReadElementFromAsync()
    - ReadElementFromImpl()
    + RemoveAttribute()
    - RemoveAttributesSkipNotify()
    + SetEndElementLineInfo()
    + ValidateNode()
}

class "<GetAttributes>d__115" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "XHashtable`1" {
    + TryGetValue()
    + Add()
}

class "ExtractKeyDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XHashtableState" {
    + Resize()
    + TryGetValue()
    + TryAdd()
    - FindEntry()
}

class "XName" {
    + ToString()
    + Equals()
    + GetHashCode()
    - System.IEquatable<System.Xml.Linq.XName>.Equals()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "XNamespace" {
    + GetName()
    + ToString()
    + Equals()
    + GetHashCode()
    + GetName()
}

class "<NodesAfterSelf>d__21" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<NodesBeforeSelf>d__22" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAncestors>d__43" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetElementsAfterSelf>d__44" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetElementsBeforeSelf>d__45" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "XNodeBuilder" {
    + Dispose()
    + Close()
    + Flush()
    + LookupPrefix()
    + WriteBase64()
    + WriteCData()
    + WriteCharEntity()
    + WriteChars()
    + WriteComment()
    + WriteDocType()
    + WriteEndAttribute()
    + WriteEndDocument()
    + WriteEndElement()
    + WriteEntityRef()
    + WriteFullEndElement()
    + WriteProcessingInstruction()
    + WriteRaw()
    + WriteRaw()
    + WriteStartAttribute()
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteStartElement()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteValue()
    + WriteWhitespace()
    - Add()
    - AddNode()
    - AddString()
}

class "XNodeDocumentOrderComparer" {
    + Compare()
    - System.Collections.IComparer.Compare()
}

class "XNodeEqualityComparer" {
    + Equals()
    + GetHashCode()
    - System.Collections.IEqualityComparer.Equals()
    - System.Collections.IEqualityComparer.GetHashCode()
}

class "XNodeReader" {
    - GetLocalName()
    - GetNamespaceURI()
    - GetPrefix()
    + Dispose()
    + Close()
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + LookupNamespace()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToElement()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + Read()
    + ReadAttributeValue()
    + ReadToDescendant()
    + ReadToFollowing()
    + ReadToNextSibling()
    + ResolveEntity()
    + Skip()
    - System.Xml.IXmlLineInfo.HasLineInfo()
    - GetElementInAttributeScope()
    - GetElementInScope()
    - Read()
    - ReadIntoDocument()
    - ReadIntoElement()
    - ReadIntoAttribute()
    - ReadOverAttribute()
    - ReadOverNode()
    - ReadOverText()
    - ReadToEnd()
    - IsDuplicateNamespaceAttribute()
    - IsDuplicateNamespaceAttributeInner()
    - GetFirstNonDuplicateNamespaceAttribute()
}

class "<AnnotationsIterator>d__16" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<Annotations>d__17`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "XProcessingInstruction" {
    + WriteTo()
    + WriteToAsync()
    + CloneNode()
    + DeepEquals()
    + GetDeepHashCode()
}

class "XStreamingElement" {
    + Add()
    + Add()
    + Save()
    + Save()
    + Save()
    + Save()
    + Save()
    + Save()
    + Save()
    + ToString()
    + ToString()
    + WriteTo()
    - GetXmlString()
}

class "XText" {
    + WriteTo()
    + WriteToAsync()
    + AppendText()
    + CloneNode()
    + DeepEquals()
    + GetDeepHashCode()
}

class "IPCConnection" {
    + EnvironmentVarsForStartingProcess()
    + Dispose()
}

class "NPath" {
    + Combine()
    + Combine()
    + Combine()
    + Combine()
    + RelativeTo()
    + ChangeExtension()
    + HasDirectory()
    + Exists()
    + DirectoryExists()
    + FileExists()
    - HasSameUNCServerName()
    - HasSameDriveLetter()
    + InQuotes()
    + ToString()
    + ToString()
    + Equals()
    + Equals()
    + GetHashCode()
    + CompareTo()
    + HasExtension()
    + HasExtension()
    + Files()
    + Files()
    + Files()
    + Contents()
    + Contents()
    + Directories()
    + Directories()
    + CreateFile()
    + CreateFile()
    + CreateDirectory()
    + CreateDirectory()
    + CreateSymbolicLink()
    + Copy()
    + Copy()
    + MakeAbsolute()
    - CopyWithDeterminedDestination()
    + Delete()
    + DeleteIfExists()
    + DeleteContents()
    + Move()
    - ThrowIfRoot()
    + EnsureDirectoryExists()
    + EnsureParentDirectoryExists()
    + FileMustExist()
    + DirectoryMustExist()
    + IsChildOf()
    + IsSameAsOrChildOf()
    + ParentContaining()
    + WriteAllText()
    + ReplaceAllText()
    + WriteAllBytes()
    + ReadAllText()
    + ReadAllBytes()
    + WriteAllLines()
    + ReadAllLines()
    + CopyFiles()
    + MoveFiles()
    + SetLastWriteTimeUtc()
    + GetLastWriteTimeUtc()
    + GetFileSize()
    + ResolveWithFileSystem()
    + InQuotesResolved()
}

class "TinyProfiler2" {
    + SetupNewTrack()
    + AddExternalTraceEventsFile()
    + AddExternalTraceEventsFile()
    + Write()
    + WriteChromeTrace()
    + WriteChromeTraceEvents()
    + WriteChromeTrace()
    + WriteChromeTraceEvents()
    - <.ctor>b__29_0()
}

class "Track" {
    + CreateEvent()
    + CreateEvent()
    + CreateEvent()
    + SetEventDuration()
    + SetEventDurationBasedOnCurrentTime()
    + SetEventDurationBasedOnEndTime()
}

class "TraceEventsData" {
    + Create()
    + SetDurationSubtractStartTime()
    + SetDuration()
}

class "ObjectsToDisk" {
    + Add()
    + Add()
    + Write()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ObjectsFromDisk" {
    + Get()
    + TryGet()
    + TryGet()
    + Get()
}

class "StatusProvider" {
    + Provide()
    + SetStatusMessage()
}

class "BeeDriverResult" {
    + ToString()
    + WriteSummary()
}

class "BuildRequest" {
    + RegisterRPCCallback()
}

class "DataForBuildProgram" {
    + Add()
    + Add()
    + GetEnumerator()
}

class "SystemProcessRunnableProgram" {
    + StartImpl()
}

class "TemporarilyBlockAllSchedulingToSynchronizationContext" {
    + Post()
    + Send()
    - Throw()
    + Dispose()
}

class "WrappedNamedServerStream" {
    + WaitForConnectionAsync()
    + WriteAsync()
    + ReadAsync()
    + AsStream()
    + Disconnect()
    + Dispose()
}

class "<>c" {
    + <.cctor>b__19_0()
}

class "SetCurrentDirectoryOnDispose" {
    + Dispose()
}

class "WindowsFileSystem" {
    + File_GetSize()
    + File_Exists()
    + File_Delete()
    - InternalFileDelete()
    + File_Copy()
    + File_Move()
    + Directory_Exists()
    + Directory_CreateDirectory()
    - InternalCreateDirectory()
    + Directory_Delete()
    + Directory_Move()
    + IsSymbolicLink()
    + CreateSymbolicLink()
    + File_GetAttributes()
    + File_SetAttributes()
    + Directory_GetFiles()
    + Directory_GetDirectories()
    + File_WriteAllText()
    + File_WriteAllLines()
    + File_WriteAllBytes()
    + File_ReadAllText()
    + File_ReadAllLines()
    + File_ReadAllBytes()
    + File_SetLastWriteTimeUtc()
    + File_GetLastWriteTimeUtc()
    + Directory_SetCurrentDirectory()
    + Directory_GetCurrentDirectory()
}

class "PosixFileSystem" {
    + IsSymbolicLink()
    + CreateSymbolicLink()
    + File_SetAttributes()
}

class "WithFileSystemHelper" {
    + Dispose()
}

class "<>c" {
    + <Copy>b__78_0()
}

class "<>c__DisplayClass104_0" {
    + <ParentContaining>b__0()
}

class "<>c__DisplayClass112_0" {
    + <CopyFiles>b__0()
}

class "<>c__DisplayClass113_0" {
    + <MoveFiles>b__0()
}

class "<>c__DisplayClass66_0" {
    + <Files>b__0()
}

class "<get_RecursiveParents>d__103" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<NiceIO.NPath>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <ToNPaths>b__5_0()
    + <ResolveWithFileSystem>b__6_0()
    + <InQuotesResolved>b__7_0()
}

class "<>c__DisplayClass0_0" {
    + <Copy>b__0()
}

class "<>c__DisplayClass1_0" {
    + <Move>b__0()
}

class "<>c__DisplayClass3_0" {
    + <InQuotes>b__0()
}

class "<InCompletionOrder>d__13`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <EntryPoint>b__3_1()
    + <WaitForAndApplyScriptUpdaters>b__5_0()
    + <WaitForAndApplyScriptUpdaters>b__5_1()
}

class "<>c__DisplayClass0_0" {
    + <BuildAsync>g__WriteData|0()
    + <BuildAsync>b__1()
}

class "<>c__DisplayClass1_0" {
    + <ReadBuildProgramOutputAsync>b__0()
}

class "<>c__DisplayClass3_1" {
    + <EntryPoint>g__NodeFinishedCallback|0()
}

class "<>c__DisplayClass3_2" {
    + <EntryPoint>b__2()
}

class "<>c__DisplayClass4_0" {
    + <MakeWriteProfilerOutputTask>b__0()
}

class "<ExtractDriverMessagesFromStdout>d__8" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Bee.BeeDriver.BeeDriverResult.Message>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass5_0" {
    + <SetStatusMessage>b__0()
}

class "Message" {
    + ToString()
}

class "<>c" {
    + <ToString>b__29_0()
    + <WriteSummary>b__31_0()
    + <WriteSummary>b__31_1()
}

class "<>c" {
    + <RunBackend>b__0_2()
    + <DisplayNameOfMostRecentlyStartedNodeWhichHasNotYetFinished>b__4_0()
    + <DisplayNameOfMostRecentlyStartedNodeWhichHasNotYetFinished>b__4_1()
}

class "<>c__DisplayClass0_0" {
    + <RunBackend>b__0()
    + <RunBackend>b__1()
}

class "<>c__DisplayClass1_0" {
    + <ProcessRPCRequest>b__0()
}

class "<>c__DisplayClass2_0" {
    + <ReadEntireBinlogFromIpcAsync>b__0()
    + <ReadEntireBinlogFromIpcAsync>b__1()
    + <ReadEntireBinlogFromIpcAsync>b__2()
    + <ReadEntireBinlogFromIpcAsync>b__3()
    + <ReadEntireBinlogFromIpcAsync>b__4()
    + <ReadEntireBinlogFromIpcAsync>b__5()
    + <ReadEntireBinlogFromIpcAsync>b__6()
}

class "<BackendArgumentsFor>d__5" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass63_0`1" {
    + <RegisterRPCCallback>b__0()
}

class "<>c__DisplayClass3_0" {
    + <Add>b__0()
}

class "<>c__DisplayClass3_0" {
    + <ProcessUpdaterResultsAsync>b__0()
}

class "SystemProcessRunningProgram" {
    - CloseProcessAndSetResult()
    - SetResult()
    + WaitForExitAsync()
    + HasExited()
    - <SetResult>g__MakeOutput|8_0()
}

class "<>c__0`1" {
    + <WithCancellation>b__0_0()
}

class "<>c__DisplayClass6_0" {
    + <.ctor>b__3()
    + <.ctor>b__4()
}

class "<>c__DisplayClass6_1" {
    + <.ctor>b__0()
    + <.ctor>g__MakeFailureMessage|2()
}

class "BinLogReader" {
    + GetString()
    + UpdateFromStream()
    + ReadStreamUntilEndAsync()
    - NodeInfoMessageRawFor()
    - NodeInfoFor()
    - Peek()
    - CanPeek()
    - CanPeek()
    - ProcessMessages()
    - ProcessMessage()
    - ProcessStart()
    - ProcessUpToDate()
    - ProcessNodeStarted()
    - ProcessNodeFinished()
    - ProcessBuildFinished()
    - ProcessRPCAction()
    - ProcessNodeInfo()
    - ProcessEnqueue()
}

class "BinLogStorage" {
    + GetSpan()
    - GetSpanForChunkOverlappingRequest()
    + CanPeekAt()
    + PeekAt()
    + GetWriteSpan()
    + Advance()
}

class "BinLogReaderEvent`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SimpleController_UsingActionAsset" {
    + Awake()
    + OnEnable()
    + OnDisable()
    + OnGUI()
    + Update()
    - Move()
    - Look()
    - BurstFire()
    - Fire()
    - <Awake>b__7_0()
    - <Awake>b__7_1()
    - <Awake>b__7_2()
}

class "SimpleController_UsingActions" {
    + Awake()
    + OnEnable()
    + OnDisable()
    + OnGUI()
    + Update()
    - Move()
    - Look()
    - BurstFire()
    - Fire()
    - <Awake>b__9_0()
    - <Awake>b__9_1()
    - <Awake>b__9_2()
}

class "SimpleController_UsingPlayerInput" {
    + OnMove()
    + OnLook()
    + OnFire()
    + OnGUI()
    + Update()
    - Move()
    - Look()
    - BurstFire()
    - Fire()
}

class "SimpleController_UsingState" {
    + Update()
    - Move()
    - Look()
    - Fire()
}

class "SimpleControls" {
    + Dispose()
    + Contains()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Enable()
    + Disable()
    + FindAction()
    + FindBinding()
}

class "BulletCollisionEvent" {
    + Awake()
    + OnCustomCollisionEnter()
    + OnCustomCollisionStay()
    + OnCustomCollisionExit()
}

class "BulletComponentManager" {
    + CreateComponents()
}

class "BulletObjectPoolManager" {
    + Create()
    + GetBulletObject()
}

class "PoolableBullet" {
    - Awake()
    + Initialize()
    + ReturnToPool()
}

class "BulletMove" {
    - FixedUpdate()
    + AddForce()
    - OnEnable()
}

class "CollisionManager2D" {
    + Awake()
    + OnDestroy()
    + OnApplicationQuit()
    - Update()
    + RegisterCollider()
    + UnregisterCollider()
    - CheckCollisions()
    - IsColliding()
    - CheckPolygonCollision()
    - CheckCirclePolygonCollision()
    - HasSeparatingAxis()
    - PointToLineSegmentDistanceSq()
    - IsPointInPolygon()
}

class "SimpleShapeCollider2D" {
    - OnEnable()
    - OnDisable()
    + OnCollisionEnter2DInternal()
    + OnCollisionStay2DInternal()
    + OnCollisionExit2DInternal()
    - OnDrawGizmos()
    - DrawRotatedRect()
    + GetSquareCorners()
}

class "DebrisCollisionEvent" {
    + OnCustomCollisionEnter()
    + OnCustomCollisionStay()
    + OnCustomCollisionExit()
}

class "DebrisComponentManager" {
    + CreateComponents()
}

class "DebrisHP" {
    + DegreeHP()
}

class "DebrisMove" {
    - FixedUpdate()
    + ResolvePenetration()
    + BouncedPlayer()
    + BouncedDebris()
    + OnDebrisCollisionRecoil()
}

class "DebrisObjectPoolManager" {
    + Create()
    + Awake()
}

class "PoolableDebris" {
    + Initialize()
    + ReturnToPool()
}

class "CircleCollider" {
    + CheckCollision()
}

class "FPSCounter" {
    - Awake()
    - Update()
}

class "Multicpu" {
    - Start()
    - OnApplicationQuit()
    + Thread_1()
    - <Thread_1>b__3_0()
}

class "PerformanceTest" {
    - Start()
    - TestGetComponent()
    - TestComponentManager()
    - TestFindObjectsByType()
    - OnDestroy()
}

class "Player" {
    - Start()
    - Update()
}

class "UMLCombiner" {
    - Start()
    - GeneratePlantUMLCode()
    - ShouldIncludeType()
    - GenerateUMLDiagrams()
    - <GeneratePlantUMLCode>b__3_2()
}

class "NoiseBasedPlacer" {
    + PlaceObjects()
    - GetRandomPosition()
    - IsValidPosition()
    - PlaceObject()
    - ClearExistingObjects()
    - OnDrawGizmosSelected()
}

class "PlayerCollisionEvent" {
    + Awake()
    + OnCustomCollisionEnter()
    + OnCustomCollisionStay()
    + OnCustomCollisionExit()
}

class "PlayerFire" {
    - Awake()
    - Update()
    - FireBullet()
    + OnFire()
}

class "PlayerHP" {
    + OnDebirsDamage()
}

class "PlayerMove" {
    - Awake()
    - FixedUpdate()
    - UpdateVelocityAndPosition()
    + ReduceVelocityOnDebrisHit()
    + ReduceVelocityOnEnemyHit()
    + AddRecoilForce()
    + OnMove()
    - OnDrawGizmos()
}

class "PlayerTurretRotation" {
    - Start()
    - Update()
}

class "ChatController" {
    - OnEnable()
    - OnDisable()
    - AddToChatOutput()
}

class "DropdownSample" {
    + OnButtonClick()
}

class "EnvMapAnimator" {
    - Awake()
    - Start()
}

class "<BurstFire>d__14" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<BurstFire>d__16" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<BurstFire>d__15" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<>c__DisplayClass7_0" {
    + <UnregisterCollider>b__0()
}

class "<>c" {
    + <GeneratePlantUMLCode>b__3_0()
    + <GeneratePlantUMLCode>b__3_1()
    + <GeneratePlantUMLCode>b__3_3()
}

class "<>c__DisplayClass4_0" {
    + <ShouldIncludeType>b__0()
    + <ShouldIncludeType>b__1()
}

class "<GenerateUMLDiagrams>d__5" {
    - MoveNext()
    - SetStateMachine()
}

class "<Start>d__2" {
    - MoveNext()
    - SetStateMachine()
}

class "<Start>d__4" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "AnimatorParamTest" {
    - TestLog()
}

class "AnimatorParamNest2" {
    - GetAnimator2()
}

class "ButtonTest" {
    - IncrementMyInt()
    - DecrementMyInt()
    - LogMyInt()
    - IncrementMyIntCoroutine()
}

class "DisableIfNest2" {
    + GetDisable1()
    + GetDisable2()
    + GetEnum1()
    + GetEnum2()
}

class "DropdownNest2" {
    - GetVectorValues()
}

class "EnableIfNest2" {
    + GetEnable1()
    + GetEnable2()
    + GetEnum1()
    + GetEnum2()
}

class "HideIfNest2" {
    + GetHide1()
    + GetHide2()
    + GetEnum1()
    + GetEnum2()
}

class "InputAxisTest" {
    - LogInputAxis0()
}

class "LayerTest" {
    + DebugLog()
}

class "OnValueChangedTest" {
    - OnValueChangedMethod1()
    - OnValueChangedMethod2()
}

class "OnValueChangedNest1" {
    - OnValueChangedMethod()
}

class "OnValueChangedNest2" {
    - OnValueChangedMethod()
}

class "ShowIfNest2" {
    + GetShow1()
    + GetShow2()
    + GetEnum1()
    + GetEnum2()
}

class "SortingLayerTest" {
    + DebugLog()
}

class "TagTest" {
    - LogTag0()
}

class "ValidateInputTest" {
    - NotZero0()
}

class "ValidateInputNest1" {
    - NotZero1()
}

class "ValidateInputNest2" {
    - NotZero2()
}

class "<IncrementMyIntCoroutine>d__4" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "DropdownList`1" {
    + Add()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ImageResources" {
    + Get()
    + Set()
}

class "ChannelList" {
    + ToIdArray()
    + GetId()
    + ContainsId()
}

class "Channel" {
    + Cleanup()
    + LoadPixelData()
    + DecodeImageData()
}

class "Layer" {
    + CreateMissingChannels()
}

class "LoadContext" {
    + OnLoadLayersHeader()
    + OnLoadLayerHeader()
}

class "PsdBinaryReader" {
    + ReadByte()
    + ReadBytes()
    + ReadBoolean()
    + ReadInt16()
    + ReadInt32()
    + ReadDouble()
    + ReadInt64()
    + ReadUInt16()
    + ReadUInt32()
    + ReadUInt64()
    + ReadPadding()
    + ReadRectangle()
    + ReadAsciiChars()
    + ReadPascalString()
    + ReadUnicodeString()
    + Dispose()
    + Dispose()
}

class "PsdFile" {
    - Load()
    - CheckDimension()
    - LoadHeader()
    - LoadColorModeData()
    - LoadImageResources()
    - LoadLayerAndMaskInfo()
    + LoadLayers()
    + Cleanup()
    - DecompressImages()
    - VerifyInfoLayers()
    + VerifyLayerSections()
    + SetVersionInfo()
    - LoadGlobalLayerMask()
    - LoadImage()
}

class "RleReader" {
    + Read()
}

class "RleWriter" {
    + Write()
    - ClearPacket()
    - WriteRepeatPacket()
    - WriteLiteralPacket()
    - WritePacket()
    - StartPacket()
    - ExtendPacketAndRun()
    - ExtendPacketStartNewRun()
    - EncodeToStream()
}

class "EndianReverser" {
    + Read()
    + ReadCompressed()
}

class "RawImage" {
    + Read()
    + ReadCompressed()
}

class "RleImage" {
    + Read()
    + ReadCompressed()
}

class "ZipImage" {
    - InitCompress()
    - InitDecompress()
    + Read()
    + ReadCompressed()
}

class "ZipPredict16Image" {
    + Read()
    + ReadCompressed()
    - Predict()
    - Unpredict()
}

class "ZipPredict32Image" {
    + Read()
    + ReadCompressed()
    - Predict()
    - Unpredict()
}

class "DocumentLoadContext" {
    + OnLoadLayersHeader()
    + OnLoadLayerHeader()
}

class "BitmapLayer" {
    + Dispose()
    + AddChildLayer()
}

class "Document" {
    + Dispose()
}

class "Surface" {
    + Dispose()
}

class "<>c__DisplayClass1_0" {
    + <Get>b__0()
}

class "<>c__DisplayClass2_0" {
    + <Set>b__0()
}

class "<>c" {
    + <ToIdArray>b__0_0()
}

class "<>c__DisplayClass2_0" {
    + <GetId>b__0()
}

class "<>c__DisplayClass3_0" {
    + <ContainsId>b__0()
}

class "<>c" {
    + <VerifyInfoLayers>b__61_0()
    + <VerifyLayerSections>b__62_0()
}

class "<>c" {
    + <get_Total>b__5_0()
}

class "DecodeContext" {
    + Cleanup()
    - GetMaskContext()
}

class "MaskDecodeContext" {
    + IsRowEmpty()
}

class "DecodeDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <ApplyLayerSections>b__4_0()
}

class "DisableUnityMatrixDrawerAttributeDrawer" {
    + Initialize()
}

class "Bool2Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Bool3Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Bool4Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Float2Drawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Float3Drawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Float4Drawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Double2Drawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Double3Drawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Double4Drawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Int2Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Int3Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Int4Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "UInt2Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "UInt3Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "UInt4Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
}

class "<>c__DisplayClass4_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass5_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
}

class "<>c__DisplayClass4_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass5_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
}

class "<>c__DisplayClass4_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass5_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
}

class "<>c__DisplayClass4_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass5_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
}

class "<>c__DisplayClass4_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass5_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
}

class "<>c__DisplayClass4_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass5_0" {
    + <NormalizeEntries>b__0()
}

class "HorizontalLineDecoratorDrawer" {
    + GetHeight()
    + OnGUI()
}

class "InfoBoxDecoratorDrawer" {
    + GetHeight()
    + OnGUI()
    - GetHelpBoxHeight()
    - DrawInfoBox()
}

class "NaughtyInspector" {
    + OnEnable()
    + OnDisable()
    + OnInspectorGUI()
    + GetSerializedProperties()
    + DrawSerializedProperties()
    + DrawNonSerializedFields()
    + DrawNativeProperties()
    + DrawButtons()
}

class "AllowNestingPropertyDrawer" {
    + OnGUI_Internal()
}

class "AnimatorParamPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
}

class "CurveRangePropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
}

class "DropdownPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetValues()
    - AreValuesValid()
    - GetElementType()
}

class "EnumFlagsPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
}

class "ExpandablePropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - DrawChildProperties()
}

class "InputAxisPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
}

class "LayerPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetLayers()
}

class "MinMaxSliderPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
}

class "ProgressBarPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetMaxValue()
    - DrawBar()
    - IsNumber()
    - IsNumber()
    - CastToFloat()
}

class "ResizableTextAreaPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetNumberOfLines()
    - GetTextAreaHeight()
}

class "ScenePropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetScenes()
    - GetSceneOptions()
}

class "ShowAssetPreviewPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetAssetPreview()
    - GetAssetPreviewSize()
}

class "SortingLayerPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    - GetLayers()
}

class "TagPropertyDrawer" {
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
}

class "ReorderableListPropertyDrawer" {
    - GetLabelStyle()
    - GetPropertyKeyName()
    + GetPropertyHeight_Internal()
    + OnGUI_Internal()
    + ClearCache()
    - GetAssignableObject()
    - HandleDragAndDrop()
}

class "MaxValuePropertyValidator" {
    + ValidateProperty()
}

class "MinValuePropertyValidator" {
    + ValidateProperty()
}

class "RequiredPropertyValidator" {
    + ValidateProperty()
}

class "ValidateInputPropertyValidator" {
    + ValidateProperty()
}

class "<>c" {
    + <OnEnable>b__5_0()
    + <OnEnable>b__5_1()
    + <OnEnable>b__5_2()
    + <OnInspectorGUI>b__7_0()
    + <DrawSerializedProperties>b__9_0()
    + <DrawSerializedProperties>b__9_1()
    + <GetNonGroupedProperties>b__13_0()
    + <GetGroupedProperties>b__14_0()
    + <GetGroupedProperties>b__14_1()
    + <GetFoldoutProperties>b__15_0()
    + <GetFoldoutProperties>b__15_1()
}

class "<>c" {
    + <GetScenes>b__6_0()
    + <GetScenes>b__6_1()
    + <GetSceneOptions>b__7_0()
}

class "<>c__DisplayClass6_0" {
    + <OnGUI_Internal>b__1()
    + <OnGUI_Internal>b__2()
}

class "<>c__DisplayClass6_1" {
    + <OnGUI_Internal>b__0()
}

class "PropertyFieldFunction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <Button>b__13_0()
    + <Button>b__13_1()
}

class "<>c__DisplayClass3_0" {
    + <GetField>b__0()
}

class "<>c__DisplayClass4_0" {
    + <GetProperty>b__0()
}

class "<>c__DisplayClass5_0" {
    + <GetMethod>b__0()
}

class "<GetAllFields>d__0" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.FieldInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllMethods>d__2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllProperties>d__1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "SetVertical`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SetHorizontal`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CalcWidth`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CalcHeight`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CustomGUILayoutEntry`1" {
    + CalcHeight()
    + CalcWidth()
    + SetHorizontal()
    + SetVertical()
    + ApplyStyleSettings()
}

class "ColumnGUILayoutGroup" {
    + CalcHeight()
    + SetVertical()
    + SetHorizontal()
}

class "RowGUILayoutGroup" {
    + SetVertical()
    + SetHorizontal()
}

class "<get_ScrollViewStates>d__1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Reflection.Editor.ScrollViewState_Internal>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetEnumerator>d__44" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<System-Collections-IEnumerable-GetEnumerator>d__45" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<>c" {
    + <.cctor>b__7_1()
    + <.cctor>b__7_3()
}

class "<>c__DisplayClass7_0" {
    + <.cctor>b__0()
    + <.cctor>b__2()
}

class "<>c__DisplayClass8_0" {
    + <ShowObjectSelector>b__0()
}

class "<get_LayoutGroups>d__1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Reflection.Editor.GUILayoutGroup_Internal>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "Lazy`1" {
    - InitValue()
    + ToString()
}

class "ConcurrentQueue`1" {
    + Enqueue()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd()
    + TryDequeue()
    + TryPeek()
    + Clear()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - InternalGetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + CopyTo()
    + ToArray()
    - System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake()
}

class "LongLivedMarshalByRefObject" {
    + InitializeLifetimeService()
}

class "SingleThreadedAttribute" {
    + ApplyToContext()
}

class "OrderAttribute" {
    + ApplyToTest()
}

class "RetryAttribute" {
    + Wrap()
}

class "ParallelizableAttribute" {
    + ApplyToContext()
}

class "TestFixtureSourceAttribute" {
    + BuildFrom()
    + GetParametersFor()
    - GetTestFixtureSource()
}

class "TestFixtureData" {
    + Explicit()
    + Explicit()
    + Ignore()
}

class "TestDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AssertionHelper" {
    + Expect()
    + Expect()
    + Expect()
    + Expect()
    + Expect()
    + Map()
}

class "CategoryAttribute" {
    + ApplyToTest()
}

class "CultureAttribute" {
    + ApplyToTest()
    - IsCultureSupported()
    + IsCultureSupported()
    + IsCultureSupported()
}

class "ExplicitAttribute" {
    + ApplyToTest()
}

class "IgnoreAttribute" {
    + ApplyToTest()
}

class "MaxTimeAttribute" {
    - NUnit.Framework.Interfaces.ICommandWrapper.Wrap()
}

class "PlatformAttribute" {
    + ApplyToTest()
}

class "PropertyAttribute" {
    + ApplyToTest()
}

class "RandomAttribute" {
    + GetData()
    - WeConvert()
}

class "RepeatAttribute" {
    + Wrap()
}

class "RequiresThreadAttribute" {
    - NUnit.Framework.Interfaces.IApplyToTest.ApplyToTest()
}

class "SetCultureAttribute" {
    - NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext()
}

class "SetUICultureAttribute" {
    - NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext()
}

class "SetUpFixtureAttribute" {
    + BuildFrom()
    - IsValidFixtureType()
}

class "TestAttribute" {
    + ApplyToTest()
    + BuildFrom()
}

class "TestCaseAttribute" {
    - GetParametersForTestCase()
    + BuildFrom()
}

class "TestCaseSourceAttribute" {
    + BuildFrom()
    - GetTestCasesFor()
    - GetTestCaseSource()
}

class "TestFixtureAttribute" {
    + BuildFrom()
}

class "TimeoutAttribute" {
    - NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext()
}

class "ValuesAttribute" {
    + GetData()
    - GetData()
}

class "ValueSourceAttribute" {
    + GetData()
    - GetDataSource()
}

class "ListMapper" {
    + Property()
}

class "TestCaseData" {
    + Returns()
    + SetName()
    + SetDescription()
    + SetCategory()
    + SetProperty()
    + SetProperty()
    + SetProperty()
    + Explicit()
    + Explicit()
    + Ignore()
}

class "TestParameters" {
    + Exists()
    + Get()
    + Get()
    + Get()
    + Add()
}

class "InternalTraceWriter" {
    + Write()
    + Write()
    + WriteLine()
    + Dispose()
    + Flush()
}

class "Logger" {
    + Error()
    + Error()
    + Warning()
    + Warning()
    + Info()
    + Info()
    + Debug()
    + Debug()
    - Log()
    - Log()
    - WriteLog()
}

class "MethodWrapper" {
    + GetParameters()
    + GetGenericArguments()
    + MakeGenericMethod()
    + GetCustomAttributes()
    + IsDefined()
    + Invoke()
    + ToString()
}

class "ParameterWrapper" {
    + GetCustomAttributes()
    + IsDefined()
}

class "TestNameGenerator" {
    + GetDisplayName()
    + GetDisplayName()
}

class "TypeWrapper" {
    + IsType()
    + GetDisplayName()
    + GetDisplayName()
    + MakeGenericType()
    + GetGenericTypeDefinition()
    + GetCustomAttributes()
    + IsDefined()
    + HasMethodWithAttribute()
    + GetMethods()
    + GetConstructor()
    + HasConstructor()
    + Construct()
    + ToString()
}

class "TextMessageWriter" {
    + WriteMessageLine()
    + DisplayDifferences()
    + DisplayDifferences()
    + DisplayDifferences()
    + DisplayStringDifferences()
    + WriteActualValue()
    + WriteValue()
    + WriteCollectionElements()
    - WriteExpectedLine()
    - WriteExpectedLine()
    - WriteExpectedLine()
    - WriteActualLine()
    - WriteActualLine()
    - WriteCaretLine()
}

class "GenericMethodHelper" {
    + GetTypeArguments()
    - TryApplyArgType()
    - ApplyArgType()
    - IsAssignableToGenericType()
}

class "Randomizer" {
    + NextUInt()
    + NextUInt()
    + NextUInt()
    + NextShort()
    + NextShort()
    + NextShort()
    + NextUShort()
    + NextUShort()
    + NextUShort()
    + NextLong()
    + NextLong()
    + NextLong()
    + NextULong()
    + NextULong()
    + NextULong()
    + NextByte()
    + NextByte()
    + NextByte()
    + NextSByte()
    + NextSByte()
    + NextSByte()
    + NextBool()
    + NextBool()
    + NextDouble()
    + NextDouble()
    + NextFloat()
    + NextFloat()
    + NextFloat()
    + NextEnum()
    + NextEnum()
    + GetString()
    + GetString()
    + GetString()
    + NextDecimal()
    + NextDecimal()
    + NextDecimal()
    - RawUInt()
    - RawUShort()
    - RawULong()
    - RawLong()
    - RawDecimal()
}

class "CultureDetector" {
    + IsCultureSupported()
    + IsCultureSupported()
    + IsCultureSupported()
}

class "PlatformHelper" {
    + IsPlatformSupported()
    + IsPlatformSupported()
    + IsPlatformSupported()
    - IsPlatformSupported()
    + IsPlatformSupported()
    - IsRuntimeSupported()
    - IsRuntimeSupported()
}

class "PropertyBag" {
    + Add()
    + Set()
    + Get()
    + ContainsKey()
    + ToXml()
    + AddToXml()
}

class "RuntimeFramework" {
    - InitFromFrameworkVersion()
    - InitFromClrVersion()
    + ToString()
    + Supports()
}

class "TestExecutionContext" {
    + UpdateContextFromEnvironment()
    + EstablishExecutionEnvironment()
    + IncrementAssertCount()
    + IncrementAssertCount()
    + AddFormatter()
    + InitializeLifetimeService()
}

class "TestListener" {
    + TestStarted()
    + TestFinished()
    + TestOutput()
}

class "TestProgressReporter" {
    + TestStarted()
    + TestFinished()
    + TestOutput()
}

class "TestMethod" {
    + MakeTestResult()
    + AddToXml()
}

class "TestSuite" {
    + Sort()
    + Add()
    + MakeTestResult()
    + AddToXml()
    + CheckSetUpTearDownMethods()
}

class "TestSuiteResult" {
    + AddResult()
}

class "SetUpTearDownItem" {
    + RunSetUp()
    + RunTearDown()
    - RunSetUpOrTearDownMethod()
    - RunNonAsyncMethod()
}

class "TestActionCommand" {
    + Execute()
}

class "TestActionItem" {
    + BeforeTest()
    + AfterTest()
}

class "ApplyChangesToContextCommand" {
    + ApplyChanges()
    + Execute()
}

class "MaxTimeCommand" {
    + Execute()
}

class "OneTimeSetUpCommand" {
    + Execute()
}

class "OneTimeTearDownCommand" {
    + Execute()
}

class "SetUpTearDownCommand" {
    + Execute()
}

class "SkipCommand" {
    + Execute()
    - GetSkipReason()
    - GetProviderStackTrace()
}

class "TestMethodCommand" {
    + Execute()
    - RunTestMethod()
    - RunNonAsyncTestMethod()
}

class "TheoryResultCommand" {
    + Execute()
}

class "PropertyFilter" {
    + Match()
    + AddToXml()
}

class "TestNameFilter" {
    + Match()
}

class "ClassNameFilter" {
    + Match()
}

class "MethodNameFilter" {
    + Match()
}

class "IdFilter" {
    + Match()
}

class "AndFilter" {
    + Pass()
    + Match()
    + IsExplicitMatch()
}

class "CategoryFilter" {
    + Match()
}

class "NotFilter" {
    + Pass()
    + Match()
    + IsExplicitMatch()
    + AddToXml()
}

class "OrFilter" {
    + Pass()
    + Match()
    + IsExplicitMatch()
}

class "FullNameFilter" {
    + Match()
}

class "EventListenerTextWriter" {
    + Write()
    + Write()
    + WriteLine()
    - TrySendToListener()
}

class "SimpleWorkItemDispatcher" {
    + Dispatch()
    - RunnerThreadProc()
    + CancelRun()
}

class "TextCapture" {
    + Write()
    + Write()
    + WriteLine()
}

class "CompositeWorkItem" {
    + PerformWork()
    - CheckForCancellation()
    - InitializeSetUpAndTearDownCommands()
    - PerformOneTimeSetUp()
    - RunChildren()
    - CreateChildWorkItems()
    - SortChildren()
    - SkipFixture()
    - SkipChildren()
    - PerformOneTimeTearDown()
    - GetSkipReason()
    - GetProviderStackTrace()
    - OnChildCompleted()
    - CountDownChildTest()
    + Cancel()
}

class "CountdownEvent" {
    + Signal()
    + Wait()
}

class "SimpleWorkItem" {
    + PerformWork()
}

class "ParameterDataProvider" {
    + HasDataFor()
    + GetDataFor()
}

class "DefaultSuiteBuilder" {
    + CanBuildFrom()
    + BuildFrom()
    - BuildMultipleFixtures()
    - GetFixtureBuilderAttributes()
    - HasArguments()
}

class "NUnitTestCaseBuilder" {
    + BuildTestMethod()
}

class "NamespaceTreeBuilder" {
    + Add()
    + Add()
    - BuildFromNameSpace()
    - AddSetUpFixture()
}

class "CombinatorialStrategy" {
    + GetTestCases()
}

class "DatapointProvider" {
    + HasDataFor()
    + GetDataFor()
    - GetTypeFromMemberInfo()
    - GetElementTypeFromMemberInfo()
}

class "DefaultTestCaseBuilder" {
    + CanBuildFrom()
    + BuildFrom()
    + CanBuildFrom()
    + BuildFrom()
    - BuildParameterizedMethodSuite()
    - BuildSingleTestMethod()
}

class "NUnitTestFixtureBuilder" {
    + BuildFrom()
    + BuildFrom()
    - AddTestCasesToFixture()
    - BuildTestCase()
}

class "PairwiseStrategy" {
    + GetTestCases()
    - CreateValueSet()
    - CreateDimensions()
}

class "ParameterDataSourceProvider" {
    + HasDataFor()
    + GetDataFor()
}

class "SequentialStrategy" {
    + GetTestCases()
}

class "TestOutput" {
    + ToString()
    + ToXml()
}

class "ResultState" {
    + WithSite()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "TNode" {
    + AddElement()
    + AddElement()
    + AddElementWithCDATA()
    + AddAttribute()
    + SelectSingleNode()
    + SelectNodes()
    + WriteTo()
    - WriteCDataTo()
}

class "CollectionSupersetConstraint" {
    + Matches()
    + Using()
}

class "DictionaryContainsValueConstraint" {
    + Matches()
}

class "EqualConstraintResult" {
    + WriteMessageTo()
    - DisplayDifferences()
    - DisplayStringDifferences()
    - DisplayStreamDifferences()
    - DisplayCollectionDifferences()
    - DisplayTypesAndSizes()
    - DisplayFailurePoint()
    - DisplayEnumerableDifferences()
}

class "ExceptionNotThrownConstraint" {
    + ApplyTo()
}

class "FileOrDirectoryExistsConstraint" {
    + ApplyTo()
    - CheckString()
}

class "AllOperator" {
    + ApplyPrefix()
}

class "NoneOperator" {
    + ApplyPrefix()
}

class "SomeOperator" {
    + ApplyPrefix()
}

class "SubPathConstraint" {
    + Matches()
}

class "ThrowsExceptionConstraint" {
    + ApplyTo()
    + GetTestObject()
}

class "AllItemsConstraint" {
    + ApplyTo()
}

class "AndConstraint" {
    + ApplyTo()
}

class "AssignableFromConstraint" {
    + Matches()
}

class "AssignableToConstraint" {
    + Matches()
}

class "AttributeConstraint" {
    + ApplyTo()
    + GetStringRepresentation()
}

class "AttributeExistsConstraint" {
    + ApplyTo()
}

class "BinarySerializableConstraint" {
    + ApplyTo()
    + GetStringRepresentation()
}

class "CollectionContainsConstraint" {
    + Matches()
    + Using()
}

class "CollectionEquivalentConstraint" {
    + Matches()
    + Using()
}

class "CollectionOrderedConstraint" {
    + Using()
    + Using()
    + Using()
    + By()
    + Matches()
    + GetStringRepresentation()
    - CreateNextStep()
}

class "CollectionSubsetConstraint" {
    + Matches()
    + Using()
}

class "CollectionTally" {
    - ItemsEqual()
    + TryRemove()
    + TryRemove()
}

class "ActualValueDelegate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ConstraintBuilder" {
    + Append()
    + Append()
    - SetTopOperatorRightContext()
    - ReduceOperatorStack()
    + Resolve()
}

class "ConstraintExpression" {
    + ToString()
    + Append()
    + Append()
    + Append()
    + Exactly()
    + Property()
    + Attribute()
    + Attribute()
    + Matches()
    + Matches()
    + EqualTo()
    + SameAs()
    + GreaterThan()
    + GreaterThanOrEqualTo()
    + AtLeast()
    + LessThan()
    + LessThanOrEqualTo()
    + AtMost()
    + TypeOf()
    + TypeOf()
    + InstanceOf()
    + InstanceOf()
    + AssignableFrom()
    + AssignableFrom()
    + AssignableTo()
    + AssignableTo()
    + EquivalentTo()
    + SubsetOf()
    + SupersetOf()
    + Member()
    + Contains()
    + Contains()
    + Contain()
    + StringContaining()
    + ContainsSubstring()
    + StartWith()
    + StartsWith()
    + StringStarting()
    + EndWith()
    + EndsWith()
    + StringEnding()
    + Match()
    + Matches()
    + StringMatching()
    + SamePath()
    + SubPathOf()
    + SamePathOrUnder()
    + InRange()
}

class "ConstraintFactory" {
    + Property()
    + Attribute()
    + Attribute()
    + EqualTo()
    + SameAs()
    + GreaterThan()
    + GreaterThanOrEqualTo()
    + AtLeast()
    + LessThan()
    + LessThanOrEqualTo()
    + AtMost()
    + TypeOf()
    + TypeOf()
    + InstanceOf()
    + InstanceOf()
    + AssignableFrom()
    + AssignableFrom()
    + AssignableTo()
    + AssignableTo()
    + EquivalentTo()
    + SubsetOf()
    + SupersetOf()
    + Member()
    + Contains()
    + Contains()
    + StringContaining()
    + ContainsSubstring()
    + DoesNotContain()
    + StartWith()
    + StartsWith()
    + StringStarting()
    + DoesNotStartWith()
    + EndWith()
    + EndsWith()
    + StringEnding()
    + DoesNotEndWith()
    + Match()
    + Matches()
    + StringMatching()
    + DoesNotMatch()
    + SamePath()
    + SubPathOf()
    + SamePathOrUnder()
    + InRange()
}

class "ContainsConstraint" {
    + ApplyTo()
}

class "DelayedConstraint" {
    + ApplyTo()
    + ApplyTo()
    + ApplyTo()
    + GetStringRepresentation()
}

class "DictionaryContainsKeyConstraint" {
    + Matches()
}

class "EmptyCollectionConstraint" {
    + Matches()
}

class "EmptyConstraint" {
    + ApplyTo()
}

class "EmptyDirectoryConstraint" {
    + ApplyTo()
}

class "EmptyStringConstraint" {
    + Matches()
}

class "EndsWithConstraint" {
    + Matches()
}

class "EqualConstraint" {
    + Within()
    + Using()
    + Using()
    + Using()
    + Using()
    + Using()
    + ApplyTo()
    - AdjustArgumentIfNeeded()
}

class "ExactTypeConstraint" {
    + Matches()
}

class "FalseConstraint" {
    + ApplyTo()
}

class "ConstraintResult" {
    + WriteMessageTo()
    + WriteActualValueTo()
}

class "InstanceOfTypeConstraint" {
    + Matches()
}

class "ValueFormatter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValueFormatterFactory" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NaNConstraint" {
    + ApplyTo()
}

class "NoItemConstraint" {
    + ApplyTo()
}

class "NotConstraint" {
    + ApplyTo()
}

class "NullConstraint" {
    + ApplyTo()
}

class "NUnitComparer" {
    + Compare()
}

class "NUnitEqualityComparer" {
    + AreEqual()
    - GetExternalComparer()
    - ArraysEqual()
    - DictionariesEqual()
    - DictionaryEntriesEqual()
    - CollectionsEqual()
    - StringsEqual()
    - CharsEqual()
    - EnumerablesEqual()
    - StreamsEqual()
}

class "AndOperator" {
    + ApplyOperator()
}

class "AttributeOperator" {
    + Reduce()
}

class "NotOperator" {
    + ApplyPrefix()
}

class "OrOperator" {
    + ApplyOperator()
}

class "PropOperator" {
    + Reduce()
}

class "ThrowsOperator" {
    + Reduce()
}

class "WithOperator" {
    + ApplyPrefix()
}

class "OrConstraint" {
    + ApplyTo()
}

class "PredicateConstraint`1" {
    + ApplyTo()
}

class "PropertyConstraint" {
    + ApplyTo()
    + GetStringRepresentation()
}

class "PropertyExistsConstraint" {
    + ApplyTo()
    + GetStringRepresentation()
}

class "RangeConstraint" {
    + ApplyTo()
    + Using()
    + Using()
    + Using()
}

class "RegexConstraint" {
    + Matches()
}

class "ResolvableConstraintExpression" {
    - NUnit.Framework.Constraints.IResolveConstraint.Resolve()
}

class "ReusableConstraint" {
    + ToString()
    + Resolve()
}

class "SameAsConstraint" {
    + ApplyTo()
}

class "SamePathConstraint" {
    + Matches()
}

class "SamePathOrUnderConstraint" {
    + Matches()
}

class "SomeItemsConstraint" {
    + ApplyTo()
}

class "StartsWithConstraint" {
    + Matches()
}

class "SubstringConstraint" {
    + Matches()
}

class "ThrowsConstraint" {
    + ApplyTo()
    + ApplyTo()
}

class "ThrowsNothingConstraint" {
    + ApplyTo()
    + ApplyTo()
}

class "Tolerance" {
    - CheckLinearAndNumeric()
}

class "TrueConstraint" {
    + ApplyTo()
}

class "UniqueItemsConstraint" {
    + Matches()
}

class "XmlSerializableConstraint" {
    + ApplyTo()
    + GetStringRepresentation()
}

class "ExactCountConstraint" {
    + ApplyTo()
}

class "ExactCountOperator" {
    + ApplyPrefix()
}

class "ExceptionTypeConstraint" {
    + ApplyTo()
}

class "FrameworkController" {
    - Initialize()
    + LoadTests()
    + ExploreTests()
    + RunTests()
    + RunTests()
    - RunAsync()
    + StopRun()
    + CountTests()
    - LoadTests()
    - ExploreTests()
    - RunTests()
    - RunAsync()
    - StopRun()
    - CountTests()
}

class "NUnitTestAssemblyRunner" {
    + Load()
    + Load()
    + CountTestCases()
    + Run()
    + RunAsync()
    + WaitForCompletion()
    + StopRun()
    - StartRun()
    - CreateTestExecutionContext()
    - OnRunCompleted()
    - CountTestCases()
}

class "DefaultTestAssemblyBuilder" {
    + Build()
    + Build()
    - Build()
    - GetFixtures()
    - GetCandidateFixtureTypes()
    - BuildTestAssembly()
}

class "<InternalGetEnumerator>d__13" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<>c__DisplayClass2_0" {
    + <IsCastableFrom>b__0()
}

class "RetryCommand" {
    + Execute()
}

class "<BuildFrom>d__17" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "RandomDataConverter" {
    + GetData()
}

class "IntDataSource" {
    + GetNext()
    + GetNext()
}

class "UIntDataSource" {
    + GetNext()
    + GetNext()
}

class "LongDataSource" {
    + GetNext()
    + GetNext()
}

class "ULongDataSource" {
    + GetNext()
    + GetNext()
}

class "ShortDataSource" {
    + GetNext()
    + GetNext()
}

class "UShortDataSource" {
    + GetNext()
    + GetNext()
}

class "DoubleDataSource" {
    + GetNext()
    + GetNext()
}

class "FloatDataSource" {
    + GetNext()
    + GetNext()
}

class "ByteDataSource" {
    + GetNext()
    + GetNext()
}

class "SByteDataSource" {
    + GetNext()
    + GetNext()
}

class "EnumDataSource" {
    + GetData()
}

class "DecimalDataSource" {
    + GetNext()
    + GetNext()
}

class "RepeatedTestCommand" {
    + Execute()
}

class "<BuildFrom>d__63" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestMethod>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<BuildFrom>d__21" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestMethod>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<BuildFrom>d__48" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass58_0`1" {
    + <AddFormatter>b__0()
}

class "<>c__DisplayClass58_1`1" {
    + <AddFormatter>b__1()
}

class "TestIDFragment" {
    + GetText()
    + GetText()
}

class "FixedTextFragment" {
    + GetText()
}

class "MethodNameFragment" {
    + GetText()
}

class "NamespaceFragment" {
    + GetText()
}

class "MethodFullNameFragment" {
    + GetText()
}

class "ClassNameFragment" {
    + GetText()
}

class "ClassFullNameFragment" {
    + GetText()
}

class "ArgListFragment" {
    + GetText()
}

class "ArgumentFragment" {
    + GetText()
}

class "<>c__DisplayClass36_0" {
    + <GetConstructor>b__0()
}

class "<>c" {
    + <.cctor>b__1_0()
}

class "<>c" {
    + <.cctor>b__92_0()
}

class "BaseTypesFirstComparer" {
    + Compare()
}

class "<>c__DisplayClass9_0" {
    + <InvokeMethod>b__0()
}

class "<>c__DisplayClass29_0" {
    + <IsRuntimeTypeName>b__0()
}

class "<>c" {
    + <.cctor>b__32_0()
}

class "<>c" {
    + <.ctor>b__9_0()
}

class "EmptyFilter" {
    + Match()
    + Pass()
    + IsExplicitMatch()
    + AddToXml()
}

class "<>c__DisplayClass3_0" {
    + <Execute>b__0()
}

class "WorkItemOrderComparer" {
    + Compare()
}

class "<GetDataFor>d__3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "FleaRand" {
    + Next()
    - Batch()
}

class "TestCaseInfo" {
    + IsTupleCovered()
}

class "PairwiseTestCaseGenerator" {
    + GetTestCases()
    - GetNextRandomNumber()
    - CreateAllTuples()
    - CreateTuples()
    - GetNextTuple()
    - CreateTestCase()
    - CreateRandomTestCase()
    - MaximizeCoverage()
    - GetMutableDimensions()
    - ScrambleDimensions()
    - MaximizeCoverageForDimension()
    - CountTuplesCoveredByTest()
    - RemoveTuplesCoveredByTest()
    - SelfTest()
    - IsTupleCovered()
}

class "CacheEntry" {
    + Equals()
    + GetHashCode()
}

class "NodeFilter" {
    + Pass()
}

class "<>c" {
    + <EscapeInvalidXmlCharacters>b__38_0()
}

class "<>c__DisplayClass7_0`2" {
    + <Using>b__0()
}

class "ThrowsExceptionConstraintResult" {
    + WriteActualValueTo()
}

class "<>c__DisplayClass3_0`1" {
    + <GetTestObject>b__0()
}

class "AndConstraintResult" {
    + WriteActualValueTo()
}

class "<>c__DisplayClass10_0`2" {
    + <Using>b__0()
}

class "ComparerAdapter" {
    + Compare()
}

class "ComparerAdapter`1" {
    + Compare()
}

class "ComparisonAdapterForComparison`1" {
    + Compare()
}

class "OperatorStack" {
    + Push()
    + Pop()
}

class "ConstraintStack" {
    + Push()
    + Pop()
}

class "ComparerAdapter" {
    + AreEqual()
}

class "EqualityComparerAdapter" {
    + AreEqual()
}

class "PredicateEqualityAdapter`2" {
    + CanCompare()
    + AreEqual()
}

class "EqualityComparerAdapter`1" {
    + AreEqual()
}

class "ComparerAdapter`1" {
    + AreEqual()
}

class "ComparisonAdapter`1" {
    + AreEqual()
}

class "<>c__DisplayClass14_0" {
    + <.cctor>b__11()
}

class "<>c__DisplayClass14_1" {
    + <.cctor>b__12()
}

class "<>c__DisplayClass14_2" {
    + <.cctor>b__13()
}

class "<>c__DisplayClass14_3" {
    + <.cctor>b__14()
}

class "<>c__DisplayClass14_4" {
    + <.cctor>b__15()
}

class "<>c__DisplayClass14_5" {
    + <.cctor>b__16()
}

class "<>c__DisplayClass14_6" {
    + <.cctor>b__17()
}

class "<>c__DisplayClass14_7" {
    + <.cctor>b__18()
}

class "<>c__DisplayClass14_8" {
    + <.cctor>b__19()
}

class "<>c__DisplayClass14_9" {
    + <.cctor>b__20()
}

class "<>c" {
    + <.cctor>b__14_0()
    + <.cctor>b__14_1()
    + <.cctor>b__14_2()
    + <.cctor>b__14_3()
    + <.cctor>b__14_4()
    + <.cctor>b__14_5()
    + <.cctor>b__14_6()
    + <.cctor>b__14_7()
    + <.cctor>b__14_8()
    + <.cctor>b__14_9()
    + <.cctor>b__14_10()
}

class "ThrowsConstraintResult" {
    + WriteActualValueTo()
}

class "GenericInvocationDescriptor`1" {
    + Invoke()
}

class "VoidInvocationDescriptor" {
    + Invoke()
}

class "ExceptionTypeConstraintResult" {
    + WriteActualValueTo()
}

class "ActionCallback" {
    + GetCallbackResult()
    + RaiseCallbackEvent()
}

class "<>c" {
    + <Initialize>b__6_0()
    + <Initialize>b__6_1()
}

class "<GetData>d__7" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetData>d__2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetData>d__2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>f__AnonymousType0`2" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "BinaryDataReader" {
    + Dispose()
    + PeekEntry()
    + EnterArray()
    + EnterNode()
    + ExitArray()
    + ExitNode()
    + ReadPrimitiveArray()
    + ReadBoolean()
    + ReadSByte()
    + ReadByte()
    + ReadInt16()
    + ReadUInt16()
    + ReadInt32()
    + ReadUInt32()
    + ReadInt64()
    + ReadUInt64()
    + ReadChar()
    + ReadSingle()
    + ReadDouble()
    + ReadDecimal()
    + ReadExternalReference()
    + ReadGuid()
    + ReadExternalReference()
    + ReadExternalReference()
    + ReadNull()
    + ReadInternalReference()
    + ReadString()
    + PrepareNewSerializationSession()
    + GetDataDump()
    - ReadStringValue()
    - SkipStringValue()
    - SkipPeekedEntryContent()
    - SkipBuffer()
    - ReadTypeEntry()
    - MarkEntryContentConsumed()
    + PeekEntry()
    + ReadToNextEntry()
    - UNSAFE_Read_1_Byte()
    - UNSAFE_Read_1_SByte()
    - UNSAFE_Read_2_Int16()
    - UNSAFE_Read_2_UInt16()
    - UNSAFE_Read_2_Char()
    - UNSAFE_Read_4_Int32()
    - UNSAFE_Read_4_UInt32()
    - UNSAFE_Read_4_Float32()
    - UNSAFE_Read_8_Int64()
    - UNSAFE_Read_8_UInt64()
    - UNSAFE_Read_8_Float64()
    - UNSAFE_Read_16_Decimal()
    - UNSAFE_Read_16_Guid()
    - HasBufferData()
    - ReadEntireStreamToBuffer()
}

class "BinaryDataWriter" {
    + BeginArrayNode()
    + BeginReferenceNode()
    + BeginStructNode()
    + Dispose()
    + EndArrayNode()
    + EndNode()
    + WritePrimitiveArray()
    + WriteBoolean()
    + WriteByte()
    + WriteChar()
    + WriteDecimal()
    + WriteDouble()
    + WriteGuid()
    + WriteExternalReference()
    + WriteExternalReference()
    + WriteExternalReference()
    + WriteInt32()
    + WriteInt64()
    + WriteNull()
    + WriteInternalReference()
    + WriteSByte()
    + WriteInt16()
    + WriteSingle()
    + WriteString()
    + WriteUInt32()
    + WriteUInt64()
    + WriteUInt16()
    + PrepareNewSerializationSession()
    + GetDataDump()
    - WriteType()
    - WriteStringFast()
    + FlushToStream()
    - UNSAFE_WriteToBuffer_2_Char()
    - UNSAFE_WriteToBuffer_2_Int16()
    - UNSAFE_WriteToBuffer_2_UInt16()
    - UNSAFE_WriteToBuffer_4_Int32()
    - UNSAFE_WriteToBuffer_4_UInt32()
    - UNSAFE_WriteToBuffer_4_Float32()
    - UNSAFE_WriteToBuffer_8_Int64()
    - UNSAFE_WriteToBuffer_8_UInt64()
    - UNSAFE_WriteToBuffer_8_Float64()
    - UNSAFE_WriteToBuffer_16_Decimal()
    - UNSAFE_WriteToBuffer_16_Guid()
    - EnsureBufferSpace()
    - TryEnsureBufferSpace()
}

class "JsonDataReader" {
    + Dispose()
    + PeekEntry()
    + EnterNode()
    + ExitNode()
    + EnterArray()
    + ExitArray()
    + ReadPrimitiveArray()
    + ReadBoolean()
    + ReadInternalReference()
    + ReadExternalReference()
    + ReadExternalReference()
    + ReadExternalReference()
    + ReadChar()
    + ReadString()
    + ReadGuid()
    + ReadSByte()
    + ReadInt16()
    + ReadInt32()
    + ReadInt64()
    + ReadByte()
    + ReadUInt16()
    + ReadUInt32()
    + ReadUInt64()
    + ReadDecimal()
    + ReadSingle()
    + ReadDouble()
    + ReadNull()
    + PrepareNewSerializationSession()
    + GetDataDump()
    + PeekEntry()
    + ReadToNextEntry()
    - MarkEntryConsumed()
    - ReadAnyIntReference()
    - <.ctor>b__7_0()
    - <.ctor>b__7_1()
    - <.ctor>b__7_2()
    - <.ctor>b__7_3()
    - <.ctor>b__7_4()
    - <.ctor>b__7_5()
    - <.ctor>b__7_6()
    - <.ctor>b__7_7()
    - <.ctor>b__7_8()
    - <.ctor>b__7_9()
    - <.ctor>b__7_10()
    - <.ctor>b__7_11()
    - <.ctor>b__7_12()
    - <.ctor>b__7_13()
}

class "JsonDataWriter" {
    + MarkJustStarted()
    + FlushToStream()
    + BeginReferenceNode()
    + BeginStructNode()
    + EndNode()
    + BeginArrayNode()
    + EndArrayNode()
    + WritePrimitiveArray()
    + WriteBoolean()
    + WriteByte()
    + WriteChar()
    + WriteDecimal()
    + WriteDouble()
    + WriteInt32()
    + WriteInt64()
    + WriteNull()
    + WriteInternalReference()
    + WriteSByte()
    + WriteInt16()
    + WriteSingle()
    + WriteString()
    + WriteGuid()
    + WriteUInt32()
    + WriteUInt64()
    + WriteExternalReference()
    + WriteExternalReference()
    + WriteExternalReference()
    + WriteUInt16()
    + Dispose()
    + PrepareNewSerializationSession()
    + GetDataDump()
    - WriteEntry()
    - WriteEntry()
    - WriteTypeEntry()
    - StartNewLine()
    - EnsureBufferSpace()
    - Buffer_WriteString_WithEscape()
}

class "JsonTextReader" {
    + Reset()
    + Dispose()
    + ReadToNextEntry()
    - ParseEntryFromBuffer()
    - IsHex()
    - ParseSingleChar()
    - ParseHexChar()
    - ReadCharIntoBuffer()
    - GuessPrimitiveType()
    - PeekChar()
    - SkipChar()
    - ConsumeChar()
}

class "SerializationNodeDataReader" {
    + Dispose()
    + PrepareNewSerializationSession()
    + PeekEntry()
    + EnterArray()
    + EnterNode()
    + ExitArray()
    + ExitNode()
    + ReadBoolean()
    + ReadByte()
    + ReadChar()
    + ReadDecimal()
    + ReadDouble()
    + ReadExternalReference()
    + ReadExternalReference()
    + ReadExternalReference()
    + ReadGuid()
    + ReadInt16()
    + ReadInt32()
    + ReadInt64()
    + ReadInternalReference()
    + ReadNull()
    + ReadPrimitiveArray()
    + ReadSByte()
    + ReadSingle()
    + ReadString()
    + ReadUInt16()
    + ReadUInt32()
    + ReadUInt64()
    + GetDataDump()
    - ConsumeCurrentEntry()
    + PeekEntry()
    + ReadToNextEntry()
    - <.ctor>b__6_0()
    - <.ctor>b__6_1()
    - <.ctor>b__6_2()
    - <.ctor>b__6_3()
    - <.ctor>b__6_4()
    - <.ctor>b__6_5()
    - <.ctor>b__6_6()
    - <.ctor>b__6_7()
    - <.ctor>b__6_8()
    - <.ctor>b__6_9()
    - <.ctor>b__6_10()
    - <.ctor>b__6_11()
    - <.ctor>b__6_12()
    - <.ctor>b__6_13()
}

class "SerializationNodeDataWriter" {
    + BeginArrayNode()
    + BeginReferenceNode()
    + BeginStructNode()
    + Dispose()
    + EndArrayNode()
    + EndNode()
    + PrepareNewSerializationSession()
    + WriteBoolean()
    + WriteByte()
    + WriteChar()
    + WriteDecimal()
    + WriteSingle()
    + WriteDouble()
    + WriteExternalReference()
    + WriteExternalReference()
    + WriteExternalReference()
    + WriteGuid()
    + WriteInt16()
    + WriteInt32()
    + WriteInt64()
    + WriteInternalReference()
    + WriteNull()
    + WritePrimitiveArray()
    + WriteSByte()
    + WriteString()
    + WriteUInt16()
    + WriteUInt32()
    + WriteUInt64()
    + FlushToStream()
    + GetDataDump()
}

class "ArrayFormatterLocator" {
    + TryGetFormatter()
}

class "DelegateFormatterLocator" {
    + TryGetFormatter()
}

class "GenericCollectionFormatterLocator" {
    + TryGetFormatter()
}

class "ISerializableFormatterLocator" {
    + TryGetFormatter()
}

class "SelfFormatterLocator" {
    + TryGetFormatter()
}

class "TypeFormatterLocator" {
    + TryGetFormatter()
}

class "ArrayFormatter`1" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakArrayFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "ArrayListFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "DateTimeFormatter" {
    + Read()
    + Write()
}

class "DateTimeOffsetFormatter" {
    + Read()
    + Write()
}

class "DelegateFormatter`1" {
    + DeserializeImplementation()
    + SerializeImplementation()
    + GetUninitializedObject()
}

class "DerivedDictionaryFormatter`3" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "DictionaryFormatter`2" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakDictionaryFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "DoubleLookupDictionaryFormatter`3" {
    + GetUninitializedObject()
    + SerializeImplementation()
    + DeserializeImplementation()
}

class "WeakDoubleLookupDictionaryFormatter" {
    + GetUninitializedObject()
    + SerializeImplementation()
    + DeserializeImplementation()
}

class "EmptyTypeFormatter`1" {
    + ReadDataEntry()
    + WriteDataEntries()
}

class "GenericCollectionFormatter`2" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakGenericCollectionFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "HashSetFormatter`1" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakHashSetFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "KeyValuePairFormatter`2" {
    + SerializeImplementation()
    + DeserializeImplementation()
}

class "WeakKeyValuePairFormatter" {
    + SerializeImplementation()
    + DeserializeImplementation()
}

class "ListFormatter`1" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakListFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "MethodInfoFormatter`1" {
    + DeserializeImplementation()
    + SerializeImplementation()
    + GetUninitializedObject()
}

class "MultiDimensionalArrayFormatter`2" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
    - IterateArrayWrite()
    - IterateArrayWrite()
    - IterateArrayRead()
    - IterateArrayRead()
}

class "WeakMultiDimensionalArrayFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
    - IterateArrayWrite()
    - IterateArrayWrite()
    - IterateArrayRead()
    - IterateArrayRead()
}

class "NullableFormatter`1" {
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakNullableFormatter" {
    + DeserializeImplementation()
    + SerializeImplementation()
    + GetUninitializedObject()
}

class "PrimitiveArrayFormatter`1" {
    + GetUninitializedObject()
    + Read()
    + Write()
}

class "WeakPrimitiveArrayFormatter" {
    + GetUninitializedObject()
    + Read()
    + Write()
}

class "QueueFormatter`2" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakQueueFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "ReflectionFormatter`1" {
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakReflectionFormatter" {
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "SelfFormatterFormatter`1" {
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakSelfFormatterFormatter" {
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "SerializableFormatter`1" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
    - ReadSerializationInfo()
    - WriteSerializationInfo()
}

class "WeakSerializableFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
    - ReadSerializationInfo()
    - WriteSerializationInfo()
}

class "StackFormatter`2" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "WeakStackFormatter" {
    + GetUninitializedObject()
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "TimeSpanFormatter" {
    + Read()
    + Write()
}

class "TypeFormatter" {
    + Read()
    + Write()
    + GetUninitializedObject()
}

class "VersionFormatter" {
    + GetUninitializedObject()
    + Read()
    + Write()
}

class "Buffer`1" {
    + Free()
    + Dispose()
}

class "CachedMemoryStream" {
    + OnFreed()
    + OnClaimed()
}

class "CustomSerializationPolicy" {
    + ShouldSerializeMember()
}

class "DefaultSerializationBinder" {
    + BindToName()
    + ContainsType()
    + BindToType()
    - ParseTypeName()
    - ParseGenericAndOrArrayType()
}

class "DeserializationContext" {
    + RegisterInternalReference()
    + GetInternalReference()
    + GetExternalObject()
    + GetExternalObject()
    + GetExternalObject()
    + Reset()
    - Sirenix.Serialization.Utilities.ICacheNotificationReceiver.OnFreed()
    - Sirenix.Serialization.Utilities.ICacheNotificationReceiver.OnClaimed()
}

class "PrefabModification" {
    + Apply()
    - ApplyValue()
    - ApplyListLength()
    - ApplyDictionaryModifications()
}

class "SerializationConfig" {
    + ResetToDefault()
}

class "DebugContext" {
    + LogWarning()
    + LogError()
    + LogException()
    + ResetToDefault()
}

class "SerializationContext" {
    + TryGetInternalReferenceId()
    + TryRegisterInternalReference()
    + TryRegisterExternalReference()
    + TryRegisterExternalReference()
    + TryRegisterExternalReference()
    + ResetInternalReferences()
    + ResetToDefault()
    - Sirenix.Serialization.Utilities.ICacheNotificationReceiver.OnFreed()
    - Sirenix.Serialization.Utilities.ICacheNotificationReceiver.OnClaimed()
}

class "AnySerializer" {
    + ReadValueWeak()
    + WriteValueWeak()
    - GetBaseFormatter()
}

class "BooleanSerializer" {
    + ReadValue()
    + WriteValue()
}

class "ByteSerializer" {
    + ReadValue()
    + WriteValue()
}

class "CharSerializer" {
    + ReadValue()
    + WriteValue()
}

class "ComplexTypeSerializer`1" {
    + ReadValue()
    + WriteValue()
}

class "DecimalSerializer" {
    + ReadValue()
    + WriteValue()
}

class "DoubleSerializer" {
    + ReadValue()
    + WriteValue()
}

class "EnumSerializer`1" {
    + ReadValue()
    + WriteValue()
}

class "GuidSerializer" {
    + ReadValue()
    + WriteValue()
}

class "Int16Serializer" {
    + ReadValue()
    + WriteValue()
}

class "Int32Serializer" {
    + ReadValue()
    + WriteValue()
}

class "Int64Serializer" {
    + ReadValue()
    + WriteValue()
}

class "IntPtrSerializer" {
    + ReadValue()
    + WriteValue()
}

class "SByteSerializer" {
    + ReadValue()
    + WriteValue()
}

class "SingleSerializer" {
    + ReadValue()
    + WriteValue()
}

class "StringSerializer" {
    + ReadValue()
    + WriteValue()
}

class "UInt16Serializer" {
    + ReadValue()
    + WriteValue()
}

class "UInt32Serializer" {
    + ReadValue()
    + WriteValue()
}

class "UInt64Serializer" {
    + ReadValue()
    + WriteValue()
}

class "UIntPtrSerializer" {
    + ReadValue()
    + WriteValue()
}

class "Vector2DictionaryKeyPathProvider" {
    + Compare()
    + GetKeyFromPathString()
    + GetPathStringFromKey()
}

class "Vector3DictionaryKeyPathProvider" {
    + Compare()
    + GetKeyFromPathString()
    + GetPathStringFromKey()
}

class "Vector4DictionaryKeyPathProvider" {
    + Compare()
    + GetKeyFromPathString()
    + GetPathStringFromKey()
}

class "AnimationCurveFormatter" {
    + GetUninitializedObject()
    + Read()
    + Write()
}

class "BoundsFormatter" {
    + Read()
    + Write()
}

class "Color32Formatter" {
    + Read()
    + Write()
}

class "ColorBlockFormatterLocator" {
    + TryGetFormatter()
}

class "ColorBlockFormatter`1" {
    + Read()
    + Write()
}

class "WeakColorBlockFormatter" {
    + DeserializeImplementation()
    + SerializeImplementation()
}

class "ColorFormatter" {
    + Read()
    + Write()
}

class "CoroutineFormatter" {
    - Sirenix.Serialization.IFormatter.Deserialize()
    + Deserialize()
    + Serialize()
    + Serialize()
}

class "GradientAlphaKeyFormatter" {
    + Read()
    + Write()
}

class "GradientColorKeyFormatter" {
    + Read()
    + Write()
}

class "GradientFormatter" {
    + GetUninitializedObject()
    + Read()
    + Write()
}

class "KeyframeFormatter" {
    + Read()
    + Write()
}

class "LayerMaskFormatter" {
    + Read()
    + Write()
}

class "QuaternionFormatter" {
    + Read()
    + Write()
}

class "RectFormatter" {
    + Read()
    + Write()
}

class "UnityEventFormatter`1" {
    + GetUninitializedObject()
}

class "WeakUnityEventFormatter" {
    + GetUninitializedObject()
}

class "Vector2Formatter" {
    + Read()
    + Write()
}

class "Vector3Formatter" {
    + Read()
    + Write()
}

class "Vector4Formatter" {
    + Read()
    + Write()
}

class "Vector2IntFormatter" {
    + Read()
    + Write()
}

class "Vector3IntFormatter" {
    + Read()
    + Write()
}

class "UnityReferenceResolver" {
    + GetReferencedUnityObjects()
    + SetReferencedUnityObjects()
    + CanReference()
    + TryResolveReference()
    + Reset()
    - Sirenix.Serialization.Utilities.ICacheNotificationReceiver.OnFreed()
    - Sirenix.Serialization.Utilities.ICacheNotificationReceiver.OnClaimed()
}

class "Cache`1" {
    + Release()
    - System.IDisposable.Dispose()
}

class "DoubleLookupDictionary`3" {
    + InnerCount()
    + TotalInnerCount()
    + ContainsKeys()
    + TryGetInnerValue()
    + AddInner()
    + RemoveInner()
    + RemoveWhere()
}

class "WeakValueGetter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WeakValueSetter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WeakValueGetter`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WeakValueSetter`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValueGetter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValueSetter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FastTypeComparer" {
    + Equals()
    + GetHashCode()
}

class "ImmutableList" {
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<System.Object>.RemoveAt()
    - System.Collections.Generic.IList<System.Object>.Insert()
    - System.Collections.Generic.ICollection<System.Object>.Add()
    - System.Collections.Generic.ICollection<System.Object>.Clear()
    - System.Collections.Generic.ICollection<System.Object>.Remove()
}

class "ImmutableList`1" {
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<T>.Add()
    - System.Collections.Generic.ICollection<T>.Clear()
    - System.Collections.Generic.ICollection<T>.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.Generic.IList<T>.Insert()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<T>.RemoveAt()
}

class "ImmutableList`2" {
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<TElement>.Add()
    - System.Collections.Generic.ICollection<TElement>.Clear()
    - System.Collections.Generic.ICollection<TElement>.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.Generic.IList<TElement>.Insert()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<TElement>.RemoveAt()
}

class "MemberAliasFieldInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetValue()
    + SetValue()
}

class "MemberAliasMethodInfo" {
    + GetBaseDefinition()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetMethodImplementationFlags()
    + GetParameters()
    + Invoke()
    + IsDefined()
}

class "MemberAliasPropertyInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetAccessors()
    + GetGetMethod()
    + GetIndexParameters()
    + GetSetMethod()
    + GetValue()
    + SetValue()
}

class "ReferenceEqualityComparer`1" {
    + Equals()
    + GetHashCode()
}

class "AOTSupportScanner" {
    + BeginScan()
    + ScanPreloadedAssets()
    + ScanAssetBundle()
    + ScanAllAssetBundles()
    + ScanAllAddressables()
    + ScanAllResources()
    + ScanBuildScenes()
    + ScanScenes()
    + ScanAsset()
    + ScanObject()
    + EndScan()
    + Dispose()
    - OnLocatedEmitType()
    - OnSerializedType()
    - OnLocatedFormatter()
}

class "<>c" {
    + <get_IsSerializationEnabled>b__5_0()
}

class "<>c" {
    + <.cctor>b__64_0()
    + <.cctor>b__64_1()
    + <.cctor>b__64_2()
    + <.cctor>b__64_3()
}

class "<>c" {
    + <.cctor>b__72_0()
    + <.cctor>b__72_1()
    + <.cctor>b__72_2()
    + <.cctor>b__72_3()
}

class "<>c" {
    + <.cctor>b__15_0()
    + <.cctor>b__15_1()
}

class "<GetAllPossibleMissingAOTTypes>d__23" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "SerializationCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass11_0" {
    + <CreateCallback>b__0()
}

class "<>c__DisplayClass11_1" {
    + <CreateCallback>b__1()
}

class "SerializationCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass14_0" {
    + <CreateCallback>b__0()
    + <CreateCallback>b__1()
}

class "<>c" {
    + <DeserializeImplementation>b__8_0()
    + <DeserializeImplementation>b__8_1()
}

class "ReadDataEntryMethodDelegate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WriteDataEntriesMethodDelegate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RuntimeEmittedFormatter`1" {
    + ReadDataEntry()
    + WriteDataEntries()
}

class "<>c" {
    + <EmitAOTFormatter>b__14_0()
    + <EmitAOTFormatter>b__14_2()
    + <CreateGenericFormatter>b__15_0()
    + <CreateGenericFormatter>b__15_2()
    + <BuildHelperType>b__16_0()
}

class "<>c__DisplayClass14_0" {
    + <EmitAOTFormatter>b__1()
}

class "<>c__DisplayClass14_1" {
    + <EmitAOTFormatter>b__3()
}

class "<>c__DisplayClass15_0" {
    + <CreateGenericFormatter>b__1()
}

class "<>c__DisplayClass15_1" {
    + <CreateGenericFormatter>b__3()
}

class "<>c__DisplayClass16_0" {
    + <BuildHelperType>b__1()
}

class "<>c__DisplayClass17_0" {
    + <EmitReadMethodContents>b__0()
}

class "<>c" {
    + <DeserializeImplementation>b__3_0()
    + <DeserializeImplementation>b__3_1()
}

class "<>c__DisplayClass6_0" {
    + <DeserializeImplementation>b__0()
}

class "<>c__DisplayClass7_0" {
    + <SerializeImplementation>b__0()
}

class "<>c__DisplayClass7_0" {
    + <DeserializeImplementation>b__0()
}

class "<>c__DisplayClass8_0" {
    + <SerializeImplementation>b__0()
}

class "<>c__DisplayClass2_0" {
    + <.cctor>b__0()
}

class "<>c__DisplayClass2_0" {
    + <.ctor>b__0()
}

class "<>c" {
    + <.cctor>b__10_0()
}

class "<>c" {
    + <FindSerializableMembersMap>b__15_0()
    + <FindSerializableMembersMap>b__15_1()
    + <FindSerializableMembers>b__16_0()
}

class "<>c__DisplayClass16_0" {
    + <FindSerializableMembers>b__1()
}

class "<>c" {
    + <GetInstanceOfStep>b__13_0()
    + <TrySetInstanceOfStep>b__16_0()
}

class "<>c" {
    + <get_Everything>b__6_0()
    + <get_Strict>b__10_0()
}

class "<>c__DisplayClass8_0" {
    + <get_Unity>b__0()
}

class "UnityObjectKeyComparer`1" {
    + Compare()
}

class "FallbackKeyComparer`1" {
    + Compare()
}

class "KeyComparer`1" {
    + Compare()
}

class "<>c" {
    + <.cctor>b__12_0()
    + <.cctor>b__12_1()
}

class "<>c__DisplayClass12_0" {
    + <.cctor>b__2()
}

class "<GetPersistentPathKeyTypes>d__14" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <SetUnityObjectModifications>b__40_0()
    + <SerializePrefabModifications>b__49_0()
}

class "<>c__66`1" {
    + <ConvertDelegate>b__66_0()
}

class "<>c__DisplayClass39_0" {
    + <SerializeUnityObject>b__0()
}

class "<>c__DisplayClass40_0" {
    + <SetUnityObjectModifications>b__1()
}

class "<>c__DisplayClass45_0" {
    + <DeserializeUnityObject>b__0()
}

class "<>c__DisplayClass48_0" {
    + <DeserializeUnityObject>b__0()
}

class "<>c__DisplayClass56_0" {
    + <GetCachedUnityMemberGetter>b__0()
}

class "<>c__DisplayClass57_0" {
    + <GetCachedUnityMemberSetter>b__0()
}

class "<Append>d__2`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__37`1" {
    + <GetEqualityComparerDelegate>b__37_0()
    + <GetEqualityComparerDelegate>b__37_1()
}

class "<>c__DisplayClass31_0" {
    + <GetCastMethodDelegate>b__0()
}

class "<>c__DisplayClass47_0" {
    + <GetOperatorMethod>b__0()
}

class "<>c__DisplayClass48_0" {
    + <GetOperatorMethods>b__0()
}

class "<GetAllMembers>d__49" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllMembers>d__50" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllMembers>d__51`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetBaseClasses>d__55" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetCustomAttributes>d__64`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "InstanceRefMethodCaller`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "InstanceRefMethodCaller`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass10_0`1" {
    + <CreateWeakInstanceFieldGetter>b__0()
}

class "<>c__DisplayClass11_0" {
    + <CreateWeakInstanceFieldGetter>b__0()
}

class "<>c__DisplayClass12_0`2" {
    + <CreateInstanceFieldSetter>b__0()
}

class "<>c__DisplayClass13_0`1" {
    + <CreateWeakInstanceFieldSetter>b__0()
}

class "<>c__DisplayClass14_0" {
    + <CreateWeakInstanceFieldSetter>b__0()
}

class "<>c__DisplayClass15_0" {
    + <CreateWeakInstancePropertyGetter>b__0()
}

class "<>c__DisplayClass16_0" {
    + <CreateWeakInstancePropertySetter>b__0()
}

class "<>c__DisplayClass17_0`1" {
    + <CreateStaticPropertySetter>b__0()
}

class "<>c__DisplayClass18_0`1" {
    + <CreateStaticPropertyGetter>b__0()
}

class "<>c__DisplayClass19_0`2" {
    + <CreateInstancePropertySetter>b__0()
}

class "<>c__DisplayClass20_0`2" {
    + <CreateInstancePropertyGetter>b__0()
}

class "<>c__DisplayClass23_0`1" {
    + <CreateWeakInstanceMethodCaller>b__0()
}

class "<>c__DisplayClass24_0" {
    + <CreateWeakInstanceMethodCaller>b__0()
}

class "<>c__DisplayClass25_0`2" {
    + <CreateWeakInstanceMethodCaller>b__0()
}

class "<>c__DisplayClass26_0`1" {
    + <CreateWeakInstanceMethodCallerFunc>b__0()
}

class "<>c__DisplayClass27_0`2" {
    + <CreateWeakInstanceMethodCallerFunc>b__0()
}

class "<>c__DisplayClass32_0`1" {
    + <CreateInstanceRefMethodCaller>b__0()
}

class "<>c__DisplayClass33_0`2" {
    + <CreateInstanceRefMethodCaller>b__0()
}

class "<>c__DisplayClass5_0`1" {
    + <CreateStaticFieldGetter>b__0()
}

class "<>c__DisplayClass5_1`1" {
    + <CreateStaticFieldGetter>b__1()
}

class "<>c__DisplayClass6_0" {
    + <CreateWeakStaticFieldGetter>b__0()
}

class "<>c__DisplayClass7_0`1" {
    + <CreateStaticFieldSetter>b__0()
}

class "<>c__DisplayClass8_0" {
    + <CreateWeakStaticFieldSetter>b__0()
}

class "<>c__DisplayClass9_0`2" {
    + <CreateInstanceFieldGetter>b__0()
}

class "<System-Collections-Generic-IEnumerable<System-Object>-GetEnumerator>d__25" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<>c" {
    + <.cctor>b__8_0()
    + <.cctor>b__8_1()
    + <.cctor>b__8_3()
}

class "<>c__DisplayClass8_0" {
    + <.cctor>b__2()
}

class "<>c" {
    + <ScanBuildScenes>b__15_0()
    + <ScanBuildScenes>b__15_1()
    + <IsEditorOnlyAssembly>b__25_0()
}

class "<>c" {
    + <OnSelectionChanged>b__4_0()
    + <OnSelectionChanged>b__4_1()
}

class "Comparer`1" {
    + IsFastComparisonEnabled()
    + SupportsFastComparison()
    + EnableFastComparison()
    + DisableFastComparison()
    - System.Collections.Generic.IComparer<TC>.Compare()
}

class "BoolComparer" {
    + Compare()
}

class "RepositoryComparer" {
    + Compare()
}

class "RepositoryNameComparer" {
    - System.Collections.Generic.IComparer<Codice.CM.Common.RepositoryInfo>.Compare()
    - System.Collections.IComparer.Compare()
}

class "BranchComparer" {
    + Compare()
}

class "PositiveLongComparer" {
    + Compare()
}

class "PathSearchResultComparer" {
    + Compare()
}

class "SecurityMemberComparer" {
    + Compare()
}

class "SeidComparer" {
    + Compare()
}

class "DateTimeComparer" {
    + Compare()
}

class "ConfigurationTreeNodeItemComparer" {
    + Compare()
}

class "ConfigurationTreeNodeStatusComparer" {
    + Compare()
}

class "CreateWorkspaceDialogUserAssistant" {
    + RepositoryChanged()
    + RepositoryAndBranchChanged()
    - GetRepNameOnly()
    + GetProposedWorkspaceName()
    + GetProposedWorkspacePath()
    - UpdateWorkspaceName()
    - UpdateWorkspacePath()
    - IsWkNameEditedByUser()
    - IsWkPathEditedByUser()
}

class "ExpandedPathsCache" {
    + Fill()
    + GetExpandedPaths()
    + AddExpandedPath()
    + RemoveExpandedPath()
    + Clear()
}

class "Filter" {
    + SameFilter()
    + IsMatch()
    + MatchParameter()
    + MatchFull()
    - IsFullMatch()
    - IsFilterParameterized()
    - Parse()
    - SplitFilterString()
    - ExtractParam()
}

class "KqueueMonitor" {
    + Dispose()
    + Start()
    + Stop()
    - CleanUp()
    - DoMonitor()
    - Setup()
    - Monitor()
    - OnChanged()
    - GetPathData()
    - CreateChangeKevent()
    - <Start>b__1()
}

class "AfterDownload" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NavigationList`1" {
    + CanNavigate()
    + CanNavigateBack()
    + CanNavigateForward()
    + Clear()
    + NavigateBack()
    + NavigateForward()
    + AddHistory()
}

class "PlasticAPI" {
    + GetWorkingMode()
    + CheckCredentials()
    + GetWorkspaceFromPath()
    + GetWorkspaceFromPathOnCache()
    + GetWorkspaceFromId()
    + GetAllWorkspaces()
    + GetAllWorkspacesArray()
    + AddExistingWorkspace()
    + GetServerWebPortAndProtocol()
    + GetAllRepositories()
    + GetAllRepositories()
    + DoGetAllRepositories()
    + GetCurrentUser()
    + ResolveUserNamesOnServer()
    + GetUserName()
    + GetUserNames()
    + GetUsers()
    + GetGroups()
    + GetSecurityMembers()
    + GetSecurityMemberFromName()
    + GetSeidFromName()
    + GetOidcSignInUrl()
    + GetSamlSignInUrl()
    + GetAllRepositories()
    + GetRepositorySpec()
    + CheckServerConnection()
    + CheckRepositoryExists()
    + CreateRepository()
    + UndeleteRepository()
    + RenameRepository()
    + RemoveRepository()
    + CreateWorkspace()
    + CreateDynamicWorkspace()
    + CreateTemporaryWorkspace()
    + RenameWorkspace()
    + RemoveWorkspace()
    + FindQuery()
    + FindQuery()
    + FindQuery()
    + FindGuids()
    + SwitchWorkspaceSelector()
    + SetSelector()
    + IsFsReaderWatchLimitReached()
    + GetChanges()
    + GetChanges()
    + SearchMatches()
    + IsIncomingChangesInProgress()
    + CreateCheckInOperation()
    + Add()
    + Checkout()
    + Checkout()
    + ShelveChanges()
    + UndoShelvedChanges()
    + UndoCheckout()
    + UndoCheckout()
    + ApplyLocalChanges()
    + ChangeRevisionType()
    + ApplyPartialShelveset()
    + UndoCheckout()
    + UndoUnchanged()
    + GetWorkspaceTree()
    + GetWorkspaceTree()
    + GetWorkspaceTreeNode()
    + GetRevisionMerges()
    + DeleteLabel()
    + MoveChangeset()
    + DeleteChangeset()
    + RenameLabel()
    + IsCopied()
    + CheckLabelExists()
    + MkLabel()
    + MkLabelInAllXlinkedRepositories()
    + ApplyLabelToWorkspace()
    + GetMainBranch()
    + GetMainBranch()
    + DeleteBranch()
    + WorkspaceHasChanges()
    + GetChangesetInfoFromId()
    + GetLoadedChangeset()
    + RenameBranch()
    + GetBranchInfo()
    + GetBranchInfos()
    + GetBranchInfos()
    + GetChangesetInfoFromId()
    + GetChangesetInfoFromId()
    + GetBranchInfo()
    + GetBranchInfo()
    + GetMarkerInfo()
    + GetMarkerInfoByName()
    + GetChangesetInfo()
    - PlasticGui.IPlasticAPI.GetChangesetInfos()
    + UpdateObjectComment()
    + GetReplicationSources()
    + GetReplicationSyncStatus()
    + RunReplica()
    + GetObjectGuid()
    + MkBranch()
    + CheckBranchExists()
    + IsBranchEmpty()
    + UpdateBranchHead()
    + CreateChildBranch()
    + CreateChildBranch()
    + CreateChildBranchFromChangeset()
    + CreateChildBranchFromChangeset()
    + MarkTaskAsOpen()
    + LoadTasks()
    + GetIssueTracker()
    + GetIssueTracker()
    + GetExtensionFactoryFromConfigLoader()
    + GetAllReposIssueTrackerConfig()
    + GetSingleRepoIssueTrackerConfig()
    + Update()
    + UpdateToLatest()
    + SelectiveUpdate()
    + PartialUpdate()
    - PlasticGui.IPlasticAPI.GetPendingChangesBeforeSwitchAction()
    + SwitchToBranch()
    + SwitchToChangeset()
    + SwitchToLabel()
    + SwitchToBranch()
    + UpdateCheckoutBranch()
    + GetCurrentChangesetOnWorkspace()
    + GetPendingMergeLinks()
    + GetInProgressMergeLinks()
    + HasWorkspaceMergeChanges()
    + GetDiffInfo()
    + GetDiffInfo()
    + GetDiffInfo()
    + GetDiffInfo()
    + GetDiffInfo()
    + GetDiffInfo()
    + LaunchDifferences()
    + BuildDiffInfoForDiffWithPrevious()
    + GetBranchDifferences()
    + GetBranchDifferencesWithoutMergeTracking()
    + GetParentBranchCommonAncestorId()
    + GetParentChangesetIdForBranch()
    + GetChangesetDifferences()
    + GetChangesetDifferences()
    + GetChangesetsDifferences()
    + GetChangesetsDifferences()
    + GetWorkingBranch()
    + GetCheckoutBranch()
    + GetRemoteRevInfo()
    + GetWorkingChangeset()
    + GetSelectorUserInformation()
    + UndeleteRevision()
    + UndeleteClientDiff()
    + GetRevisionInfo()
    + GetRevisionsInfo()
    + GetObjectInfoFromSpec()
    + Move()
    + DeleteControlled()
    + IsOnChangedTree()
    + GetXlinkTypeString()
    + GetXLinksInChangesetTree()
    + GetWorkspaceXLinks()
    + GetHistory()
    + GetRevisionHistory()
    + RevertToThisRevision()
    + RevertToClientDiffRevisions()
    + GetItemHandler()
    + GetRootRepositoryInfo()
    + GetRevisionDataToFile()
    + GetRevisionDataToFile()
    + GetSortedReplicationLogsFromBranch()
    + GetSortedReplicationLogsFromRepository()
    + GetHumanReadableXlinkDataGenerator()
    + GetRepositoryInfo()
    + GetTargetRepInfo()
    + GetRepositoryInfo()
    + IsStackTraceEnabled()
    + IsReadOnlyFilesPreferenceEnabled()
    + SetReadonlyFilesPreference()
    + GetAddedDiffInfo()
    + GetRevisionChildren()
    + GetChangedNodeForPath()
    + IsMovedChangedDifference()
    + GetChangedForMovedDifference()
    + GetChangesetGuid()
    + GetTreeContent()
    + GetTreeContent()
    + GetLockRule()
    + AddLockRule()
    + GetLicenseData()
    + SendLicense()
    + CalculateOutOfDateItems()
    + GetLoadedRevisionId()
    + IsWorkingChangesetDeleted()
    + DownloadFileFromPath()
    - PlasticGui.IPlasticAPI.GetDiffViewerDataProvider()
    - PlasticGui.IPlasticAPI.GetObjectsData()
    - PlasticGui.IPlasticAPI.IsCloud()
    - PlasticGui.IPlasticAPI.SetCredsToSolveCloudOrg()
    - PlasticGui.IPlasticAPI.CleanCredsToSolveCloudOrg()
    - PlasticGui.IPlasticAPI.ResolveServerFromUserInput()
    - PlasticGui.IPlasticAPI.SetUnityOrganizationsSlugData()
    - PlasticGui.IPlasticAPI.GetRepositoryServerInfo()
    - PlasticGui.IPlasticAPI.UpdateSecuredPath()
    - PlasticGui.IPlasticAPI.CreateSecuredPath()
    - PlasticGui.IPlasticAPI.DeleteSecuredPath()
    - PlasticGui.IPlasticAPI.CalculateAcl()
    - PlasticGui.IPlasticAPI.GetOwner()
    - PlasticGui.IPlasticAPI.GetAllSecuredPaths()
    - PlasticGui.IPlasticAPI.GetSecuredPaths()
    - PlasticGui.IPlasticAPI.GetSecuredPaths()
    - PlasticGui.IPlasticAPI.SetPermissions()
    - PlasticGui.IPlasticAPI.RemovePermissions()
    - PlasticGui.IPlasticAPI.BuildWebApiTokenForCloudEditionDefaultUser()
    - PlasticGui.IPlasticAPI.BuildWebApiTokenForCloudEditionForUser()
    - PlasticGui.IPlasticAPI.SaveToken()
    - PlasticGui.IPlasticAPI.GetSeidFromProfile()
    - PlasticGui.IPlasticAPI.GetRemoteSeidForServer()
    - PlasticGui.IPlasticAPI.IsAdmin()
    - GetChangesetInfos()
    - GetChangesetInfosFromQuery()
    - AddToTypedList()
    - GetDeletedDiffInfo()
    - GetXLinkCoreString()
    - LabelChangeset()
    - SetSelectorForWorkspace()
    - GetSymbolicDiffName()
    - GetRevSpec()
    - GetBranchFromWorkingLabel()
    - SetSelectorForWorkspace()
    - GetSpecResolver()
    - GetBranchResolver()
    - GetRevisionSpecResolver()
    - GetBaseCommandsImpl()
    + GetAnnotations()
    + GetParentRevision()
    + GetParentChangeset()
    + GetRevisionAtChangeset()
    + CheckAttributeExists()
    + CreateAttribute()
    + EditAttributeComment()
    + RenameAttribute()
    + DeleteAttribute()
    + GetAttributeRealizations()
    + DeleteAttributeFromObject()
    + GetAttribute()
    + GetValuesForAttribute()
    + SetAttribute()
    + FindAttributeTypes()
    + GetAttributeIdForRepository()
    + GetBranchExplorerLayout()
    + GetBranchExplorerLayout()
    + GetBranchExplorerLayout()
    + CreateReview()
    + UpdateReview()
    + DeleteReview()
    + GetReviewComments()
    + GetReviewComment()
    + GetReviewCommentsFromReviewIds()
    + CreateComment()
    + UpdateComment()
    + DeleteComment()
    + GetReview()
    + GetReviewers()
    + AddReviewer()
    + RemoveReviewer()
    + UpdateReviewer()
    + EditReviewTitle()
    - GetReviewCommentsFromQuery()
    - PlasticGui.IPlasticAPI.IsGluonWorkspace()
    - PlasticGui.IPlasticAPI.SetAsGluonWorkspace()
    - PlasticGui.IPlasticAPI.GetConfigurationTree()
    - PlasticGui.IPlasticAPI.GetConfigurationTreeNodeChildren()
    - PlasticGui.IPlasticAPI.GetLocalConfigurationTree()
    - PlasticGui.IPlasticAPI.CalculateConfigurationTreeStatus()
    - PlasticGui.IPlasticAPI.GetHeadConfigurationTree()
    - PlasticGui.IPlasticAPI.GetChangesTree()
    - PlasticGui.IPlasticAPI.SetSelectorAndUpdate()
    - PlasticGui.IPlasticAPI.GetCheckIncomingChangesCalculateIncomingChanges()
    - PlasticGui.IPlasticAPI.ListLocks()
    - PlasticGui.IPlasticAPI.ReleaseLocks()
    - PlasticGui.IPlasticAPI.RemoveLocks()
    - PlasticGui.IPlasticAPI.GetLocksForRepoByItemId()
}

class "PlasticArguments" {
    + HasToLaunchDiff()
    + HasToLaunchCodeReview()
    + HasToLaunchGluon()
    + HasToHandlePlasticLink()
    - ReadArguments()
    + HasToShowMerge()
    - ProcessApplicationArgument()
    - ProcessPlasticLinkArgument()
    - ReadArgumentKey()
    - ReadArgumentValue()
    - IsKeyValueArgument()
    - IsUsageArgument()
}

class "PlasticConfigAPI" {
    + SaveDefaultWorkspace()
    + SaveDefaultWorkspaceRoot()
    + SaveLastOpenedWorkspace()
    + CreateSyncView()
    + ReadSyncViews()
    + GetClientConfServer()
}

class "PlasticGuiConfig" {
    + Save()
}

class "PlasticNotifier" {
    + SetProgressElement()
    + NotifyProgress()
    + SetProgressTotalWork()
    - Codice.Client.Commands.ICmdNotifier.SetEncoding()
    - Codice.Client.Commands.ICmdNotifier.NotifyMessage()
    - Codice.Client.Commands.ICmdNotifier.NotifyMessageWrite()
    - Codice.Client.Commands.ICmdNotifier.NotifyRawMessage()
    - Codice.Client.Commands.ICmdNotifier.NotifyError()
    - Codice.Client.Commands.ICmdNotifier.NotifyRawError()
    - Codice.Client.Commands.ICmdNotifier.DisplayObject()
    - Codice.Client.Commands.ICmdNotifier.NotifyException()
}

class "InternalProcess" {
    + Start()
}

class "ResolveChangeset" {
    - PlasticGui.IResolveChangeset.GetChangesetInfo()
    - PlasticGui.IResolveChangeset.ResolveChangesetsIfNeeded()
    - PlasticGui.IResolveChangeset.Clear()
    - GetRepositoryCache()
}

class "RepositoryChangesetsCache" {
    + AddChangeset()
    + TryGetChangeset()
    + ContainsChangeset()
}

class "SaveGuiClientConfig" {
    + OnComparisonMethodChanged()
}

class "SelectorInformation" {
    + GetObjectName()
    + GetObjectSpec()
    + GetPrefixedObjectSpec()
}

class "WorkspaceDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WorkspaceChangedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WorkspaceRenamedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WorkspacesRefresh" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WorkspaceServerManager" {
    + LoadWorkspaces()
    + IsInitialized()
    + GetDefaultServer()
    + GetDefaultWorkspace()
    - GetStoredDefaultWorkspace()
    + SetDefaultWorkspace()
    + SetDefaultWorkspace()
    - ChangeDefaultWorkspace()
    - InitWorkspaceList()
    + GetWorkspacesForCurrentSession()
    + IsWorkspaceForCurrentSession()
    + AddWorkspace()
    + DeleteWorkspace()
    + RenameWorkspace()
    + SetSelectorForWorkspace()
    + SetSelectorForWorkspace()
    + GetBaseCommands()
    + GetWorkspaceSelector()
    + GetNumRepositoriesFromCurrentSelector()
    + GetRepositoriesFromCurrentSelector()
    + CheckSelector()
    - OnWorkspaceRenamed()
    + OnWorkspaceUpdated()
    - OnDefaultWorkspaceChanged()
    - OnWorkspaceAdded()
    - OnWorkspaceDeleted()
    - OnWorkspaceRefresh()
}

class "WorkingObjectInfo" {
    + GetChangesetId()
    + EqualsTo()
}

class "GetCloudSsoProviders" {
    - PlasticGui.Configuration.OAuth.GetOauthProviders.IGetProviders.FromServer()
}

class "GetOnPremOidcProviders" {
    + FromServer()
}

class "OAuthSignIn" {
    + ForConfigure()
    + ForSSO()
    + ForProfile()
    + ForCredentials()
    + ForHomeView()
    + Cancel()
    + SignInForProvider()
    - WaitForLoginValidation()
}

class "Browser" {
    - PlasticGui.Configuration.OAuth.OAuthSignIn.IOpenBrowser.TryOpen()
}

class "SaveConfiguration" {
    - PlasticGui.Configuration.OAuth.OAuthSignIn.ISaveConfiguration.WriteToTokensConf()
    - PlasticGui.Configuration.OAuth.OAuthSignIn.ISaveConfiguration.WriteToClientConf()
}

class "GetSamlProviders" {
    + FromServer()
}

class "SamlSignOn" {
    + ForCredentials()
    + SignInForProvider()
    - WaitForLoginValidation()
}

class "SaveCloudEditionCreds" {
    - PlasticGui.Configuration.CloudEdition.ISaveCloudEditionCreds.ToClientConf()
}

class "ConfigurationDialogUserAssistant" {
    + OnServerChanged()
    + OnSslChanged()
    + GetProposedServer()
    + IsSslServer()
    - ExtractPort()
    - GetServerAddressWithoutProtocolAndPort()
    - RemoveProtocolFromServerSpec()
}

class "Data" {
    + Configured()
}

class "DiffViewEntryChangeInfoCache" {
    + GetDiffViewEntry()
    + Clear()
}

class "DiffViewEntryClientDiffCache" {
    + GetDiffViewEntry()
    + SetClientDiffs()
    + Clear()
    + SetFileTypeChecker()
    - AdaptDifference()
}

class "DiffViewEntryDescriptor" {
    + Equals()
}

class "DiffViewEntryHistoryRevisionCache" {
    + GetDiffViewEntry()
    + Clear()
}

class "DiffViewerDataProvider" {
    + GetDiffViewerInfo()
    + GetDiffViewerInfo()
    + GetDiffViewerInfo()
    + GetCachedDiffViewEntry()
    + Clear()
    + SetClientDiffs()
    + GetDiffViewerInfo()
    - GetContent()
    - GetFileContent()
    - GetPurgedContent()
    - GetDirectoryContent()
    - GetXlinkContent()
    - GetFileDiff()
    - GetDirectoryDiff()
    - GetDefaultEncoding()
    - GenerateDirectoryContent()
    - CreateFileTypeChecker()
}

class "DiffViewDifferencesSet" {
    + CreateCodeReviewEntryFromDiff()
    + AddChanged()
    + AddAdded()
    + AddDeleted()
    + AddMoved()
    + AddMerged()
    + AddMergeAdded()
    + CalculateReplaceMoved()
    + AddMergeChanged()
    + AddMerged()
    + AddMergeMoved()
    + AddMergeDeleted()
    + GetFirstRepositorySpec()
    + CreateCopy()
    - System.Collections.IEnumerable.GetEnumerator()
    - GetMergedDiffSet()
    - OnlyFsProtectionChanged()
}

class "DiffBranchAnnotateLoader" {
    + LoadAnnotations()
    + FillXlinksTargets()
    - AddXlinkTargetBranch()
}

class "DiffChangesetAnnotateLoader" {
    + LoadAnnotations()
    + FillXlinksTargets()
    - AddXlinkTargetChangeset()
}

class "ViewHost" {
    - PlasticGui.IRefreshView.ForType()
    + AddRefreshableView()
    + RemoveRefreshableView()
    + GetRefreshableView()
    + RefreshView()
    + GetAllViews()
    + SetGlobalProgressSpinner()
    + ShowGlobalProgress()
    + HideGlobalProgress()
}

class "IsRunningToken" {
    + TrySetRunning()
    + SetCompleted()
}

class "CalculateIncomingChanges" {
    - PlasticGui.Gluon.WorkspaceWindow.CheckIncomingChanges.ICalculateIncomingChanges.CalculateOutOfDateItems()
}

class "NewIncomingChangesUpdater" {
    + Start()
    + Stop()
    + Dispose()
    + Update()
    - UpdateNow()
    - PlasticGui.Gluon.WorkspaceWindow.CheckIncomingChanges.IDisableAutoUpdateIfExceptionHappens.Disable()
}

class "ConfigurationTreeNodeSizeComparer" {
    + Compare()
}

class "ConfigurationTreeNodeDateComparer" {
    + Compare()
}

class "ConfigurationTreeNodeChangesetComparer" {
    + Compare()
}

class "BranchInfoDateComparer" {
    + Compare()
}

class "OutOfDateUpdater" {
    + Execute()
}

class "CheckinUIOperation" {
    + Checkin()
    + CheckinWithLocalChanges()
    - PerformCheckin()
    - RunFileMerges()
    - AfterCheckinOperation()
    - Finish()
    - RefreshCheckinViews()
    - SaveCheckinComment()
    - UndoChangesAndFinish()
}

class "CheckoutUIOperation" {
    + Checkout()
    - PerformCheckoutOperation()
}

class "DependenciesHandler" {
    + SearchDependencies()
    + IncludeDependencies()
    + AddDependenciesToSelectedItems()
    - GetChangesDependencies()
    - SetChangesDependencies()
}

class "ChangeInfoInvertedPathComparer" {
    + Compare()
}

class "UndoUIOperation" {
    + Undo()
    - UndoWithDependencies()
    - Undo()
    - PerformUndo()
}

class "HistoryDescriptor" {
    + GetHashCode()
    + Equals()
}

class "CheckedStateManager" {
    + GetCheckedValue()
    + Update()
}

class "IncomingChangeCategory" {
    + GetChildrenCount()
    + GetCheckedChangesText()
    + GetChanges()
    + SetChanges()
    + SortChildren()
    + UpdateCheckedState()
    + GetHeaderText()
    + GetKey()
    + UpdateCheckedElementsCount()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - PlasticGui.ICheckablePlasticTreeCategory.UpdateCheckedState()
    - PlasticGui.ICheckablePlasticTreeCategory.GetHeaderText()
    - PlasticGui.ICheckablePlasticTreeCategory.GetCheckedChangesCount()
    - GetCheckedChangesCount()
}

class "IncomingChangeInfo" {
    + SetCategory()
    + GetColumnText()
    + IsXLink()
    + GetMount()
    + GetBaseRevision()
    + GetRevision()
    + GetPath()
    + GetMoveSrcPath()
    + GetPathString()
    + GetMovedColors()
    + ResetMovedColors()
    + GetLastEditedBy()
    + GetComment()
    + GetSize()
    + GetSizeString()
    + GetModifiedDate()
    + GetDateModifiedString()
    + GetKey()
    + SetLastEditedBy()
    + SetComment()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - PlasticGui.ICheckablePlasticTreeNode.UpdateCheckedState()
    - PlasticGui.ICheckablePlasticTreeNode.IsChecked()
    - PlasticGui.ICheckablePlasticTreeNode.IsChangedNode()
}

class "IncomingChangeInfoComparer" {
    + SetupSorting()
    + Compare()
    - GetReturnValue()
}

class "IncomingChangesTree" {
    + IsEmpty()
    + GetNodes()
    + Sort()
    - PlasticGui.IPlasticTree.GetNodesCount()
    - PlasticGui.IPlasticTree.GetNodes()
    - PlasticGui.IPlasticTree.Filter()
    - GetStandardComparer()
    - GetFastComparer()
}

class "IncomingChangesViewLogic" {
    + GetCheckedChanges()
    + GetProcessMergesButtonText()
    + Cancel()
    + AutoRefresh()
    + Refresh()
    + ProcessMergesForItems()
    + ProcessMergesForConflicts()
    + SetWorkingBranchForTesting()
    - IsOperationRunning()
}

class "ApplyGluonWorkspaceLocalChanges" {
    + ApplyForCalculation()
    + ApplyForProcessing()
    + FilterAppliedLocalChangesToKeep()
}

class "OutOfDateItemsOperations" {
    - PlasticGui.Gluon.WorkspaceWindow.Views.IncomingChanges.IncomingChangesViewLogic.IOutOfDateItemsOperations.GetItems()
    - PlasticGui.Gluon.WorkspaceWindow.Views.IncomingChanges.IncomingChangesViewLogic.IOutOfDateItemsOperations.FilterItemsThatCannotBeCheckedout()
    - PlasticGui.Gluon.WorkspaceWindow.Views.IncomingChanges.IncomingChangesViewLogic.IOutOfDateItemsOperations.MergeItems()
    - PlasticGui.Gluon.WorkspaceWindow.Views.IncomingChanges.IncomingChangesViewLogic.IOutOfDateItemsOperations.MergeConflicts()
}

class "ResolveUserName" {
    - PlasticGui.Gluon.WorkspaceWindow.Views.IncomingChanges.IncomingChangesViewLogic.IResolveUserName.GetUserNameFromSEID()
}

class "GetWorkingBranch" {
    - PlasticGui.Gluon.WorkspaceWindow.Views.IncomingChanges.IncomingChangesViewLogic.IGetWorkingBranch.GetWorkingBranch()
}

class "ErrorMessageComparer" {
    - System.Collections.Generic.IComparer<Codice.CM.Common.ErrorMessage>.Compare()
}

class "ItemPathExists" {
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.ProcessFilePlasticLink.IItemPathExists.ForPath()
}

class "TreeExplorerFsReader" {
    + GetFsReader()
    + RefreshFsReader()
}

class "WkExplorerCalculatedFields" {
    + GetConfigurationMode()
    + GetStatusLoader()
    + GetCalculatedSizes()
}

class "ConfigurationTreeComparer" {
    + Compare()
    - CompareOwner()
}

class "ConfigurationTreeModel" {
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.Explorer.UpdateExplorerOperation.IModelOperations.RefreshModel()
    + Refresh()
    + CalculateCheckedItemSizeAndCount()
    + ShowHelp()
    + Update()
    + GetUpdateProgress()
    + Toggle()
    - UpdateTreeSizes()
    - SaveSettings()
    - BuildWorkspaceConfigurator()
    - IsLoaded()
    + GetCalculatedSizes()
    - SetCalculatedSizes()
    - <Refresh>b__5()
    - <UpdateTreeSizes>b__a()
}

class "ConfigurationUpdater" {
    + SetConfigurationResult()
    + Execute()
}

class "CalculatedFieldsUpdater" {
    + UpdateStatusAndSize()
}

class "ExplorerTreeModel" {
    + Refresh()
    + ShowHelp()
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.Explorer.UpdateExplorerOperation.IModelOperations.RefreshModel()
    + GetChildren()
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.Explorer.UpdateExplorerOperation.IModelOperations.Update()
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.Explorer.UpdateExplorerOperation.IModelOperations.GetUpdateProgress()
    + GetChild()
    + BuildCalculatedFields()
    + HidePrivateItems()
    + ShowPrivateItems()
    + RecalculateSizes()
    - <Refresh>b__0()
}

class "UndoChangesOperation" {
    + UndoChanges()
    - UndoChangesInWorkspaceTransaction()
    - DoUndoChanges()
    - AfterUndoChanges()
    - GetUndoChangesErrorMessage()
}

class "UpdateForcedOperation" {
    + UpdateForced()
    - UndoChanges()
    - PerformUpdate()
    - DisplayErrorDialog()
}

class "UpdateOperation" {
    + Update()
    - DoUpdate()
    - CalculateOutOfDateItems()
    - AfterUpdate()
    - BuildSelectedCache()
    - ShowUpdateReportDialog()
}

class "UpdateReportResult" {
    + IsUpdateForcedRequested()
}

class "StatusLoader" {
    + SetCalculatedStatus()
    + GetStatus()
    + GetStatusStr()
    - GetCalculatedStatus()
}

class "CalculatedStatus" {
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.Explorer.StatusLoader.ICalculatedStatus.GetStatus()
    - GluonGui.WorkspaceWindow.Views.WorkspaceExplorer.Explorer.StatusLoader.ICalculatedStatus.GetErrorMessage()
}

class "CalculatedSizes" {
    + GetSize()
    + GetSizeStr()
}

class "SizeCache" {
    + TryGetDirectorySize()
    + TryGetFileSize()
    + SaveDirectorySize()
    + SaveFileSize()
}

class "LocalConfigurationTreeNodeSearcher" {
    + StartSearch()
    + GetRoot()
    + GetChildren()
    - SearchRecurse()
    - NotifySearchResult()
    - IsMatch()
    - IsFullPathMatch()
    - IsPathMatch()
    - GetWorkspaceRelativePath()
}

class "ConfigurationTreeNodeSearcher" {
    + GetRoot()
}

class "GuiHelp" {
    + GetEntryFromHelpButton()
    + GetEntryFromView()
    + NotifyPossibleFrustration()
    - GetGeneralHelpForPlasticView()
    - GetGeneralHelpForGluonView()
}

class "FrustrationDetection" {
    + NotifyPossibleFrustration()
    + GetFrustrations()
}

class "Rule" {
    + Evaluate()
}

class "GuiHelpEvents" {
    + AddGuiEvent()
    + AddWorkspaceCondition()
    + GetEventCount()
    + GetEventLastTimestamp()
    + GetWorkspaceCondition()
    + GetWorkspaceConditionLastTimestamp()
}

class "SaveGuiHelpEvents" {
    + Stop()
    - Timer_Tick()
}

class "ExistFile" {
    - PlasticGui.PreferencesWindow.ToolCommandParser.IExistFile.ForPath()
}

class "ExecutionStatus" {
    + TrySetRunning()
    + SetAsCompleted()
    + GetTotalTicksToComplete()
    + GetEndTicks()
}

class "CalculateIncomingChanges" {
    - PlasticGui.WorkspaceWindow.CheckIncomingChanges.ICalculateIncomingChanges.AreNewChangesAvailable()
    - PlasticGui.WorkspaceWindow.CheckIncomingChanges.ICalculateIncomingChanges.GetChangesetsCount()
    - PlasticGui.WorkspaceWindow.CheckIncomingChanges.ICalculateIncomingChanges.AreConflictsInvolved()
}

class "FilterManager" {
    + GetIgnoredFilter()
    + GetCloakedFilter()
    + GetHiddenChangesFilter()
    + Reload()
    + ReloadWithoutDownloadingGlobalConfig()
    - ReloadFilters()
}

class "NewIncomingChangesUpdater" {
    + GetCurrentExecutionStatusForTesting()
    + SetAutoRefreshIncomingChangesView()
    + SetWorkspace()
    + Start()
    + Stop()
    + Dispose()
    + DisableOnce()
    + AutoUpdate()
    + Update()
    - UpdateNow()
    - PlasticGui.WorkspaceWindow.CheckIncomingChanges.IDisableAutoUpdateIfExceptionHappens.Disable()
}

class "RefreshableViews" {
    + Add()
    + Remove()
    + RefreshView()
}

class "WorkspaceModeNotificationUpdater" {
    + SetWorkspace()
    + Start()
    + Dispose()
    - Update()
    - IsCurrentWorkspacePartial()
    - PlasticGui.WorkspaceWindow.IWorkspaceModeNotificationUpdater.Update()
}

class "RecentWorkspacesList" {
    + RenameWorkspace()
    + Save()
    + AsList()
    + Add()
    + DeleteWorkspace()
    - <AsList>b__0()
}

class "TasksLoadedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RequestTaskDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CustomFilterData" {
    + GetDisplayText()
    - GetSelectedBranchNamesText()
    - GetGuidList()
}

class "ExplainMergeData" {
    + IsEmpty()
    + GetMaxNumberOfBases()
}

class "RepositoryExplainMergeData" {
    + BuildFilter()
    - CalculateGuids()
}

class "BrowseRepositoryTreeNode" {
    + GetChild()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
}

class "BrowseRepositoryTreeNodeComparer" {
    - System.Collections.Generic.IComparer<PlasticGui.WorkspaceWindow.BrowseRepository.BrowseRepositoryTreeNode>.Compare()
}

class "BrowseRepositoryViewComparer" {
    + Compare()
    - CompareItem()
    - CompareSize()
    + CompareNodeType()
    + CompareBranchName()
    + CompareChangeset()
    + CompareOwner()
    + CompareTimeStampUtc()
    + CompareRepository()
}

class "OpenedCodeReviewWindows" {
    + Add()
    + Update()
    + Remove()
}

class "CodeReviewCommentDateComparer" {
    - System.Collections.Generic.IComparer<Codice.CM.Common.CodeReviewCommentInfo>.Compare()
}

class "CommentSummaryData" {
    + IsEmpty()
    + GetNumOfPendingChanges()
    + GetNumOfPendingQuestions()
    + GetEntireBranchChangesCount()
    + GetEntireBranchQuestionsCount()
    + GetEntireBranchCommentsCount()
    + HasPendingComments()
    - HasPendingChanges()
    - HasPendingQuestions()
}

class "WorkspaceUIConfiguration" {
    + Save()
}

class "AnnotateController`1" {
    + GetAnnotateStatus()
    + TryRemoveCalculatedAnnotate()
    + GetAnnotations()
    + CalculateAnnotations()
}

class "AnnotateSpec" {
    + Equals()
    + Equals()
    + GetHashCode()
}

class "CategoryGroup" {
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    + GetParent()
    + GetChildrenCount()
    + GetChild()
    + GetChildPosition()
    + AddDiff()
    + AddCategory()
    + SortChildren()
    + ApplyFilter()
    + GetHeaderText()
    + GetKey()
    - GetCategoryNameSingular()
    - GetCategoryNamePlural()
    - GetCurrentCategories()
    - GetDiffsCount()
    - GetCategoryName()
    - GetDiffType()
}

class "ChangeCategory" {
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    + GetParent()
    + GetChildrenCount()
    + GetChild()
    + GetChildPosition()
    + AddDiffViewEntry()
    + SortChildren()
    + ApplyFilter()
    + GetHeaderText()
    + RemoveDiffAt()
    + GetKey()
    - GetCurrentDiffs()
    - UpdateHash()
}

class "ChangeCategoryComparer" {
    + Compare()
}

class "ClientDiffInfo" {
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    + GetParent()
    + GetChildrenCount()
    + GetChild()
    + GetChildPosition()
    - PlasticGui.Filter.IFilterableRow.GetColumnText()
    + GetPathString()
    + GetMovedColors()
    + ResetMovedColors()
    + GetUserName()
    + GetLocalRevisionDateTime()
    + GetRepositorySpec()
    + GetKey()
}

class "ClientDiffInfoComparer" {
    + Initialize()
    + Compare()
    - GetReturnValue()
}

class "ContentAnnotateLoader" {
    + LoadAnnotations()
    - GetRevisionSpec()
}

class "DiffTree" {
    + GetNodes()
    + Sort()
    + Filter()
    + BuildCategories()
    - PlasticGui.IPlasticTree.GetNodesCount()
    - PlasticGui.IPlasticTree.GetNodes()
    - PlasticGui.IPlasticTree.Filter()
    - GetMergeString()
    - GetComparer()
}

class "DiffWindowCloseEvent" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ViewedDiffs" {
    + Clean()
    + Add()
    + Contains()
}

class "ExternalTool" {
    + AppliesTo()
    + GetFormattedArgs()
}

class "HistoryRevisionList" {
    + GetCount()
    + GetRevisions()
    + GetRevision()
    + GetRevision()
    + GetRow()
    + Sort()
    + Filter()
    - IsFilterMatch()
    - IsBranchFilterMatch()
    - IsFullMatch()
    - IsFilterParameterized()
}

class "HistoryViewComparer" {
    + Compare()
}

class "HistoryViewLogic" {
    + RefreshForItem()
    - BuildBranchesAndChangesetsDictionary()
    - GetLastChangesetsFromBranches()
    - LoadBranchesCache()
}

class "FillLocksTable" {
    + FillTable()
}

class "LockInfoList" {
    + GetCount()
    + GetLocks()
    + Sort()
    + Filter()
    - IsFilterMatch()
    - IsFullMatch()
    - IsFilterParameterized()
}

class "LocksViewComparer" {
    + Compare()
}

class "LockInfoByDateComparer" {
    + Compare()
}

class "RepositoryWithWorkspaces" {
    + MatchesFilter()
}

class "UserAccount" {
    + ToString()
}

class "UserAccountComparer" {
    - System.Collections.Generic.IComparer<PlasticGui.WorkspaceWindow.Home.UserAccount>.Compare()
    - CompareProfiles()
}

class "WorkspaceGuiEntry" {
    + MatchesFilter()
}

class "WorkspaceOperations" {
    + CreateWorkspace()
    + RenameWorkspace()
    + DeleteWorkspace()
}

class "FillRepositoriesTable" {
    + FillTable()
    - NotifyRefreshListener()
}

class "SaveLastUsedServer" {
    - PlasticGui.WorkspaceWindow.Home.Repositories.FillRepositoriesTable.ISaveLastUsedServer.Save()
}

class "LocalRepositoriesProvider" {
    - PlasticGui.WorkspaceWindow.Home.Repositories.IRepositoriesProvider.GetRepositories()
}

class "CloudRepositoriesProvider" {
    - PlasticGui.WorkspaceWindow.Home.Repositories.IRepositoriesProvider.GetRepositories()
}

class "FilterableRepo" {
    + SetRepositoryToCheck()
    - PlasticGui.Filter.IFilterableRow.GetColumnText()
}

class "RepositoryOperations" {
    + CreateSyncView()
    + CreateWorkspace()
    + DownloadRepository()
    + CreateRepository()
    + RenameRepository()
    + DeleteRepository()
    + UndeleteRepository()
    + CreateRepositoryAndWorkspace()
}

class "CreateXlinkDialogUserAssistant" {
    + RepositoryChanged()
    + GetProposedXlinkName()
    - UpdateXlinkName()
    - GetNonExistingXlinkName()
    - GetValidRepositoryName()
    - IsXlinkNameEditedByUser()
    - IsNameAlreadyUsed()
}

class "ExpandedNodesComparer" {
    + Compare()
}

class "ExpandedTree" {
    + Reload()
    + GetRootNode()
    + GetChild()
    + GetChild()
    + ExpandNodeIfNotExpanded()
    + ReloadNode()
    + QueueBranchLoadIfNecessary()
    + GetChildrenCount()
    + GetNodeFromRelativePath()
    + GetFullPath()
    + GetDiffInfoForDiffWithPrevious()
    + GetSelectedGroupInfo()
    + IsRootNode()
    + GetRelativePath()
    + Sort()
    + GetNodeFromRelativePathWithoutExpansionForTesting()
    - PlasticGui.IPlasticTree.GetNodesCount()
    - PlasticGui.IPlasticTree.GetNodes()
    - PlasticGui.IPlasticTree.Filter()
    - CreateRootNode()
    - ExpandNode()
    - ExpandSymlinkDirectoryNode()
    - ExpandControlledDirectoryNode()
    - ExpandDirectoryNode()
    - CalculateVfsSizes()
    - Sort()
    - Sort()
    - IsCheckedin()
    - GetFullPath()
    - <CalculateVfsSizes>b__2()
}

class "ExpandedTreeNode" {
    + Expanded()
    + GetFullPath()
    + GetChildrenCount()
    + GetChild()
    + GetChild()
    + AddControlledChildren()
    + ClearChildren()
    + AddFSNodes()
    + CompareItem()
    + CompareStatus()
    + CompareSize()
    + CompareNodeType()
    + CompareBranchName()
    + CompareChangeset()
    + CompareOwner()
    + CompareTimeStampUtc()
    + CompareRepository()
    + GetChildren()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - GetRelativePath()
}

class "ExpansionRulesDataConfigurator" {
    + SetRules()
    + AddRule()
    + DeleteRule()
    + DeleteRule()
    + CleanRules()
    + GetExpansionRules()
    + GetSourceBranchRule()
    - GetExpansionRule()
    - IsInvalidIndex()
}

class "WorkspaceSearchResultPathResolver" {
    - PlasticGui.WorkspaceWindow.Items.ISearchResultPathFormatter.GetPath()
}

class "CmSearchResultPathResolver" {
    - PlasticGui.WorkspaceWindow.Items.ISearchResultPathFormatter.GetPath()
}

class "LockStatus" {
    - IsStatusSet()
}

class "LockStatusCache" {
    + FillCache()
    + GetLockStatus()
}

class "CheckExists" {
    - PlasticGui.WorkspaceWindow.Items.NewNameValidation.ICheckExists.Directory()
    - PlasticGui.WorkspaceWindow.Items.NewNameValidation.ICheckExists.File()
}

class "UnavailableServerCache" {
    + IsUnavailable()
    + Add()
    + ClearCache()
    - TryGetUnavailableServer()
}

class "PlasticTaskViewComparer" {
    + Compare()
}

class "PlasticTaskIdComparer" {
    + Compare()
}

class "MergeChangeInfo" {
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - PlasticGui.ICheckablePlasticTreeNode.UpdateCheckedState()
    - PlasticGui.ICheckablePlasticTreeNode.IsChecked()
    - PlasticGui.ICheckablePlasticTreeNode.IsChangedNode()
    - PlasticGui.Filter.IFilterableRow.GetColumnText()
    + GetColumnText()
    + IsXLink()
    + GetMount()
    + GetBaseRevision()
    + GetRevision()
    + GetPath()
    + GetMoveSrcPath()
    + GetPathString()
    + GetMovedColors()
    + ResetMovedColors()
    + GetAuthorString()
    + GetComment()
    + GetSize()
    + GetSizeString()
    + SetAuthor()
    + SetComment()
    + GetDetailsString()
    + GetResolutionString()
    + GetDateString()
    + SetResolutionString()
    + GetKey()
    + SetParent()
    - GetDifference()
}

class "MergeChangeInfoComparer" {
    + SetupSorting()
    + Compare()
    - GetReturnValue()
}

class "MergeChangesCategory" {
    + GetChildrenCount()
    + GetHeaderText()
    + GetCategoryName()
    + GetChildrenCountText()
    + GetChanges()
    + SortChildren()
    + GetKey()
    + ApplyFilter()
    + UpdateCheckedElementsCount()
    - GetCheckedChangesCount()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.ICheckablePlasticTreeCategory.UpdateCheckedState()
    - PlasticGui.ICheckablePlasticTreeCategory.GetHeaderText()
    - PlasticGui.ICheckablePlasticTreeCategory.GetCheckedChangesCount()
    - PlasticGui.IPlasticTreeNode.GetChildren()
}

class "MergeChangesTree" {
    + IsEmpty()
    + IsCheckable()
    + GetCheckedPaths()
    + GetNodes()
    + GetCategory()
    + Sort()
    + Filter()
    - PlasticGui.IPlasticTree.GetNodesCount()
    - PlasticGui.IPlasticTree.GetNodes()
    - PlasticGui.IPlasticTree.Filter()
    + ResolveUserNames()
    + ResolveComments()
    - GetStandardComparer()
    - GetFastComparer()
}

class "ResolveUserName" {
    - PlasticGui.WorkspaceWindow.Merge.MergeChangesTree.IResolveUserName.GetUserNameFromSEID()
}

class "MergeViewLogic" {
    + AutoRefresh()
    + Refresh()
    + ResolveDirectoryConflicts()
    + ProcessMerges()
    + GetConflictResolution()
    + GetConflictsResolution()
    + ShowHelp()
    + Cancel()
    + Dispose()
    + CalculateMergeFromRefresh()
    - CalculateMergeFromAutoRefresh()
    - CalculateMerge()
    - ProcessMergeTo()
    - ShowHelp()
    - DoShowHelp()
    - DisplayCalculateMergeException()
    - IsOperationRunning()
    - <ResolveDirectoryConflicts>b__a()
    - <CalculateMerge>b__14()
}

class "MergeController" {
    + IsPendingChangesInWorkspaceCheckNeeded()
    + HasPendingChangesInWorkspace()
    + UpdateMergeObjectInfoAndCleanStateIfNeeded()
    + CalculateMerge()
    + CalculateMergeWithMergeSourceCalculated()
    + RecalculateMerge()
    + IsMergeTo()
    + IsShelvesetMerge()
    + FilterShelvesetToApply()
    + ProcessMerges()
    + ResolveDirectoryConflict()
    + SolveMergeToFileConflicts()
    + HasMergeFinished()
    + ApplyMergeTo()
    + DeleteMergeToFileConflictsLocalData()
    + GetRootMountPoint()
    + CanMerge()
    + GetProgress()
    + CalculateMergeSource()
    - PlasticGui.WorkspaceWindow.Merge.MergeViewLogic.IMergeController.HasMergeToFinished()
    - IncludeAutomaticResolvedWritableXlinkConflicts()
    - UpdateMainMergeResult()
    - UpdateXlinkMergeResult()
    - FillSolvedConflicts()
    - RemoveConflictResolution()
    - CleanState()
    + GetSolvedConflictsForMount()
    + GetPendingDirectoryConflicts()
    + GetSolvedDirectoryConflicts()
    + StoreResolvedConflict()
    + RemoveResolvedConflict()
    + GetTextForStatus()
    - GetObjectSpec()
    - IsUnsortedIntervalMerge()
    + DoResolveConflict()
    - KeepSource()
    - KeepDestination()
    - RenameDestination()
    - BuildMergeResolutionOptions()
    + SetApplyMergeForTesting()
    + SetFindMergeForTesting()
    + SetMergeSourceForTesting()
    + SetMountPointForTesting()
    + SetMergeResultForTesting()
    + SetExplainMergeDataForTesting()
    + SetMergeDialogParameters()
    - PlasticGui.WorkspaceWindow.Merge.MergeViewLogic.IMergeController.SetMergeDialogParameters()
    - GetFindMerge()
}

class "Find" {
    - PlasticGui.WorkspaceWindow.Merge.MergeController.IFindMerge.FindWithSolvedConflicts()
}

class "MergeViewCheckedStateManager" {
    + GetCheckedValue()
    + Update()
}

class "NotificationBarUpdater" {
    + SetWorkspace()
    + Start()
    + Dispose()
    - Timer_Tick()
    - Stop()
    - DoUpdate()
    - ClearNotification()
}

class "NotificationBarConfig" {
    - PlasticGui.WorkspaceWindow.NotificationBar.NotificationBarUpdater.INotificationBarConfig.GetDefaultCloudServer()
    - PlasticGui.WorkspaceWindow.NotificationBar.NotificationBarUpdater.INotificationBarConfig.GetDefaultProfile()
    - PlasticGui.WorkspaceWindow.NotificationBar.NotificationBarUpdater.INotificationBarConfig.GetProfileForServer()
}

class "OpenWithProgram" {
    + SetShortcut()
}

class "ApplyLocalChangesOperation" {
    + ApplyLocalChanges()
    - ApplyLocalChangesWithDependencies()
    - PerformApplyLocalChangesOperation()
}

class "CheckinOperation" {
    + ClearHasAllMergeChangesRequiredError()
    + Checkin()
    + CheckinToADifferentBranch()
    - CheckinWithLocalChanges()
    - PerformCheckin()
    + RepeatCheckin()
    - RunCheckin()
    - UpdateProgress()
    - GetIssueTrackerExtension()
    - Finish()
    - InitializeVars()
    - HasCheckinResult()
    - SaveCheckinComment()
    - MoveChangesToTargetBranch()
}

class "DependenciesHandler" {
    + SearchDependencies()
    + IncludeDependencies()
    + AddDependenciesToSelectedItems()
    - GetChangesDependencies()
    - SetChangesDependencies()
}

class "DependencyNode" {
    + SetChildren()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
}

class "DependencyTree" {
    - PlasticGui.IPlasticTree.GetNodesCount()
    - PlasticGui.IPlasticTree.GetNodes()
    - PlasticGui.IPlasticTree.Filter()
}

class "ExpandedNodesCache" {
    + IsNodeExpanded()
    + ExpandNode()
    + CollapseNode()
}

class "MatchComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.ChangeInfo>.Compare()
}

class "MountPendingMergeLink" {
    + GetPendingMergeLinkText()
    - GetMergeTypeString()
    - GetChangesetMergeSource()
    - IsInterval()
}

class "PendingChangeCategory" {
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetChildrenCount()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.SortChildren()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.ApplyFilter()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetCurrentChanges()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetDependenciesCandidates()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetCheckedChanges()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - PlasticGui.ICheckablePlasticTreeCategory.UpdateCheckedState()
    - PlasticGui.ICheckablePlasticTreeCategory.GetHeaderText()
    - PlasticGui.ICheckablePlasticTreeCategory.GetCheckedChangesCount()
    + GetKey()
    + GetChildrenCount()
    + GetChildPosition()
    + SetChanges()
    + IsPartiallyChecked()
    - GetCurrentChildren()
    - GetCurrentChanges()
    + GetCheckedChangesText()
    + UpdateCheckedChangesCount()
    + GetCheckedChangesCount()
    - GetChangesCount()
    - GetCategoryNameSingular()
    - GetCategoryNamePlural()
}

class "ChangesEqualityComparer" {
    - System.Collections.Generic.IEqualityComparer<PlasticGui.WorkspaceWindow.PendingChanges.PendingChangeInfo>.Equals()
    - System.Collections.Generic.IEqualityComparer<PlasticGui.WorkspaceWindow.PendingChanges.PendingChangeInfo>.GetHashCode()
}

class "PendingChangeInfo" {
    + IsChangedNode()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    + SortChildren()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - PlasticGui.ICheckablePlasticTreeNode.UpdateCheckedState()
    - PlasticGui.ICheckablePlasticTreeNode.IsChecked()
    - PlasticGui.ICheckablePlasticTreeNode.IsChangedNode()
    + GetCheckedChanges()
    + GetCurrentChanges()
    + GetCheckedChangesCount()
    + GetChildrenCount()
    + ApplyFilter()
    + GetDependenciesCandidates()
    - CheckParentChanges()
    - GetPendingChangeCategory()
    + SetChildren()
    + GetKey()
    + GetColumnText()
    + GetItemString()
    + GetMovedColors()
    + ResetMovedColors()
    + GetStatusString()
    + GetSize()
    + GetTypeString()
    + GetExtension()
    + GetLastWriteTime()
    + GetRepositorySpec()
    + MatchesFilter()
    - GetCurrentChildren()
    - GetDateModified()
    - GetSimilarity()
}

class "PendingChangeInfoComparer" {
    + SetupSorting()
    + Compare()
    - GetReturnValue()
}

class "PendingChangesOperations" {
    + Checkin()
    + CheckinChangesToADifferentBranch()
    + Shelve()
    + Undo()
    + UndoUnchanged()
    + HasAllMergeChangesRequiredError()
    - GetCheckinOperation()
    - GetShelveOperation()
    - GetUndoOperation()
}

class "PendingChangesOptions" {
    + LoadPendingChangesOptions()
    + SavePreferences()
    + AreSameOptions()
}

class "PendingChangesTree" {
    + HasPendingChanges()
    + GetChangedForMoved()
    + GetCheckedChanges()
    + GetDependenciesCandidates()
    + GetAllChanges()
    + GetAllPendingChanges()
    + GetChangesCount()
    + Sort()
    + Filter()
    - MatchesFilter()
    + GetNodes()
    - PlasticGui.IPlasticTree.GetNodesCount()
    - PlasticGui.IPlasticTree.GetNodes()
    - PlasticGui.IPlasticTree.Filter()
    - GetComparer()
    - GetStandardComparer()
    - GetFastComparer()
}

class "PendingChangesViewCheckedStateManager" {
    + GetCheckedValue()
    + Update()
    + Clean()
    + ResetStateForMergedChanges()
    + ResetStateForCheckedOutChanges()
    + ResetStateForCheckedOutChanges()
    + SetChangesToCheck()
    + ClearChangesToCheck()
    - GetDefaultCheckedValue()
    - HasUncheckedLocalEquivalent()
    - IsUnchecked()
    - BuildChangesToCheck()
}

class "PendingMergeLinksComparer" {
    + Compare()
    - GetReturnValue()
}

class "RefreshPendingChangesView" {
    + InitIgnoredRulesAndRefreshView()
}

class "SearchMatchesOperation" {
    + SearchMatches()
    - FilterCandidates()
    - IsValidCandidate()
}

class "ShelveOperation" {
    + Shelve()
    - ShelveWithLocalChanges()
    - Shelve()
    - UndoChangesAndFinish()
    - Finish()
    - SaveShelveComment()
    - UserWantsUndoChangesAfterShelve()
    - AskUserForUndoBehavior()
    - GetUndoBehavior()
}

class "UndoOperation" {
    + ClearHasAllMergeChangesRequiredError()
    + Undo()
    - UsersWantsUndoAllForDeletedChangeset()
    + UndoUnchanged()
    - UndoWithDependencies()
    - Undo()
    - PerformUndo()
    - PerformUndoUnchanged()
    - AfterUndoOperation()
    - UserWantsUndo()
    - UserWantsUndoUnchanged()
    - GetUndoRequestMessage()
    - GetUndoModifiers()
}

class "ChangelistNode" {
    + GetKey()
    + SetChanges()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetChildrenCount()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.SortChildren()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.ApplyFilter()
    - MatchesFilter()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetCurrentChanges()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetDependenciesCandidates()
    - PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.GetCheckedChanges()
    - PlasticGui.IPlasticTreeNode.GetChildren()
    - PlasticGui.IPlasticTreeNode.GetChildrenCount()
    - PlasticGui.IPlasticTreeNode.GetParent()
    - PlasticGui.ICheckablePlasticTreeCategoryGroup.GetHeaderText()
    - PlasticGui.ICheckablePlasticTreeCategoryGroup.GetCheckedCategoriesCount()
    - PlasticGui.ICheckablePlasticTreeCategoryGroup.GetPartiallyCheckedCategoriesCount()
    - PlasticGui.ICheckablePlasticTreeCategoryGroup.UpdateCheckedState()
    - GetCurrentChildren()
}

class "QuerySet" {
    + AddQuery()
    + ResetQueryList()
}

class "ViewQueryResult" {
    + Count()
    + GetObjects()
    + GetRepObjectInfo()
    + GetRepositorySpec()
    + GetRepObjectInfo()
    + GetRepositorySpec()
    + GetRow()
    + ApplyFilter()
    + Sort()
    - IsMatch()
    - IsFullMatch()
    - IsFilterParameterized()
    - AreExtendedRepObjectInfos()
    - GetCurrentResultObjects()
    - GetComparer()
}

class "ExtendedRepObjectInfoComparer" {
    + Compare()
}

class "ViewQueryStorer" {
    + AddQuery()
    + Reset()
    + GetDefaultQuery()
    + GetBaseQuery()
    + SetDefaultQuery()
    + ClearHistory()
    + GetQueriesOrderedByDate()
    - InitBaseQueries()
    - GetWorkspaceTable()
    - GetWorkspacesForCurrentSession()
}

class "ViewStoredQuerySetSerializer" {
    + Load()
    + Save()
    + IsPreferencesByWorkspace()
    + SetPreferencesByWorkspace()
    - LoadPreferencesAllWorkspaces()
}

class "AttributesViewComparer" {
    + Compare()
}

class "BranchesTree" {
    + GetNodesCount()
    + GetNodes()
    + ApplyDisplayFilter()
    - PlasticGui.IPlasticTree.Filter()
    - Filter()
    - ToIEnumerable()
}

class "BranchesViewComparer" {
    + Compare()
}

class "BranchOperations" {
    + CreateBranch()
    + SwitchToBranch()
    + SwitchToBranch()
    + MergeBranch()
    + CherrypickBranch()
    + MergeToBranch()
    + CreateCodeReview()
    + RenameBranch()
    + DeleteBranch()
    + DeleteBranch()
    - GetBranchNames()
    - GetSwitchController()
    - GetAnotherBranchRelatedView()
}

class "BranchTreeNode" {
    + ApplyFilter()
    + AddChild()
    + GetChildrenCount()
    + GetParent()
    + GetChildren()
    - PlasticGui.Filter.IFilterableRow.GetColumnText()
}

class "ChangesetOperations" {
    + CreateBranch()
    + LabelChangeset()
    + CreateCodeReview()
    + SwitchToChangeset()
    + MergeChangeset()
    + CherryPickChangeset()
    + SubtractiveChangeset()
    + SubtractiveChangesetInterval()
    + CherryPickChangesetInterval()
    + MergeToChangeset()
    + MoveChangeset()
    + DeleteChangeset()
    - PerformMoveChangesetInWorkingBranch()
    - PerformMoveChangeset()
    - UpdateViewsAfterMove()
    - DeleteWorkingChangeset()
    - PerformDeleteChangeset()
    - IsChangesetInvolvedInPendingMerge()
    - GetSwitchController()
}

class "ChangesetsViewComparer" {
    + Compare()
}

class "GetStatusFromWorkspace" {
    + GetStatusForWorkspace()
}

class "UndoCheckout" {
    + UndoPaths()
}

class "RevertToChangesetMergeController" {
    + ProcessRevert()
}

class "CodeReviewsViewComparer" {
    + Compare()
    - CompareStatusId()
}

class "LabelsViewComparer" {
    + Compare()
}

class "ShelvesViewComparer" {
    + Compare()
}

class "ReplicationRunner" {
    + Cancel()
    + Skip()
    + Retry()
    + IsSkipOptionAvailable()
    + Replicate()
    - ReplicatePendingBranches()
    - HandleException()
    - UpdateProgress()
    - EndProgress()
    - GetCurrentReplicationData()
    - SetCurrentReplicationData()
    - IncreaseCurrentReplicationIndex()
    - <ReplicatePendingBranches>b__3()
}

class "ServersViewComparer" {
    + Compare()
    - GetReturnValue()
}

class "SyncReplicationSource" {
    + AddReplicationTarget()
}

class "SyncView" {
    + Equals()
    + GetHashCode()
}

class "ReportLineComparer" {
    + Compare()
}

class "SwitchController" {
    + SwitchToBranch()
    + SwitchToChangeset()
    + SwitchToLabel()
    - RunSwitchToBranch()
    - AllowSwitchToBranch()
    - RunSwitchToChangeset()
    - AllowSwitchToChangeset()
    - RunSwitchToLabel()
    - AllowSwitchToLabel()
    - FinishSwitchOperation()
    - ShowUpdateReport()
    - ConfirmSwitch()
    - HasUpdateResult()
}

class "UpdateWorkspaceOperation" {
    - Codice.Client.Commands.IRunMergeDuringUpdate.ProcessMerge()
    + Run()
    - UpdateData()
    - ShowUpdateReport()
    - HasUpdateResult()
}

class "CmdImpl" {
    + NotifyMessage()
    + NotifyRawMessage()
    + DisplayObject()
    + NotifyException()
    + NotifyError()
    + NotifyRawError()
}

class "AclCmdImpl" {
    + InheritFrom()
    + InheritFrom()
    + SetPermissionsToObject()
    - CheckValidAclParamsForSettingPermission()
    - CalculateObjectPermissions()
}

class "AclParams" {
    + CheckUserOrGroupSpecified()
    - InitSecuredPathBranches()
    - ConsumeAddOrRemoveCharFromBranchName()
    + CalculateSeid()
    + CalculatePermissions()
    - CalculatePermissionsFromCommandLine()
    - CalculatePermissions()
    + IsOnlyEditingSecuredPathObject()
}

class "BranchNameIdDictionary" {
    + AddEntry()
    + GetBranchName()
    + GetBranchId()
    + ContainsBranchName()
}

class "ExtendedAclDisplayInfo" {
    + NotifyExtendedAcl()
    + CalcExtendedAclInfo()
    - CalcAclEntry()
    - GetAclInfoEntryString()
    - GetUserPermissionsString()
    - GetPermissionsString()
    - GetString()
}

class "SecuredPathCmd" {
    + Execute()
    - CreateSecuredPath()
    - GetRepositoryInfo()
    - DeleteSecuredPath()
    - UpdateSecuredPath()
}

class "SecuredPathCmdImpl" {
    + CreateSecuredPath()
    - CheckNames()
    + SetSecuredPathPermissions()
    + DeleteSecuredPath()
    + UpdateSecuredPath()
    + GetAllSecuredPaths()
    + GetSecuredPaths()
    - UpdateSecuredPathObject()
    - GetAllSecuredPathsFilteringPath()
}

class "SecuredPathCmdPrinter" {
    + PrintCreatedSecuredPath()
    + PrintUpdatedSecuredPath()
    - PrintSecuredPath()
    - IsDirtySecuredPath()
    - GetRepositoryInfo()
}

class "ShortAclDisplayInfo" {
    + CalcAclInfo()
    + NotifyAcl()
    - CalcPermissions()
    - Add()
}

class "ShowAclCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - ShowAcl()
}

class "AddCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AddCmdImpl" {
    + Add()
    - GetOpAddOptions()
    - FixPlatformPaths()
    - CheckoutParents()
    - GetOpCheckoutOptions()
    - GetPathFromException()
    - CheckItemsExist()
    - NotifyItemsAdded()
    - NotifyItemsAddedRecursively()
    - SetNonReadOnlyAttribute()
    - SetNonReadOnlyAttributeRecursively()
    + SetFormatStrings()
}

class "AddInfoBuilder" {
    + BuildAddInfos()
    + CreateAddInfo()
    - GetParentAddInfo()
    - BuildAddInfo()
    - BuildRecurse()
    + IsIgnored()
    - GetParentPath()
    - IsBinary()
}

class "CheckItemAttributesOnDisk" {
    + IsDirectory()
    + GetDirectorySeparator()
    + GetItemFSProtection()
    + GetItemFSProtection()
    + PathCombine()
    + GetFileName()
    + IsBinary()
    + IsOnDisk()
    + IsSymlink()
    - GetFsNode()
    - FillDirectoryEntries()
}

class "CustomFileTypeChecker" {
    + IsBinary()
}

class "PrivateStatusChecker" {
    + IsPrivate()
}

class "AdminCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "AdminReadonlyCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AnnotateCmdImpl" {
    + Annotate()
    + SolveAnnotateSpec()
    + AnnotateOnServer()
    + AnnotateWithExtendedInfo()
    + AnnotateWithExtendedInfo()
    + AnnotateWithExtendedInfo()
    + Annotate()
    - InternalExecuteAnnotate()
    - AnnotateRevision()
}

class "DirectoriesEntriesComparer" {
    + Compare()
}

class "WeightComparer" {
    + Compare()
}

class "AnnotatePerformanceStats" {
    + Init()
    + PrintStats()
    - WriteStats()
    - NotifyMessage()
}

class "ApplyChangesPrinter" {
    + PrintDependencies()
    + PrintChanges()
    - PrintDependenciesDescription()
    - GetOperationShortName()
    - GetOperationString()
    - PrintDependencies()
    - PrintChangeWithDependencies()
    - PrintChangeDependency()
    - NotifyMessage()
    - GetChangeStr()
    - IsMoved()
    - GetPath()
    - GetRelevantTypes()
    - PrintChange()
}

class "ApplyLocalChangesCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ApplyLocalChangesCmdImpl" {
    + ApplyLocalChanges()
    + ApplyLocalChanges()
    + AddNotIncludedPaths()
    + ApplyChanges()
    - HandleDependencies()
    - GetDependencies()
    - GetDependenciesChecker()
    - CalculateChanges()
    - GetWorkspaceChanges()
    - GetChangedChangesOneByOne()
}

class "ChangeInfoConverter" {
    + Convert()
}

class "ChangeInfoUpdater" {
    + UpdateChange()
}

class "ChangesPathComparer" {
    + Compare()
}

class "ChangesPrecedenceComparer" {
    + Compare()
}

class "LocalChangesApplier`1" {
    + ApplyLocalChanges()
    - SetWorkingWithoutBranchResolver()
    - CleanWorkingWithoutBranchResolver()
}

class "LocalAddedChangesApplier" {
    + ApplyAdded()
}

class "LocalChangedChangesApplier" {
    + ApplyChanged()
}

class "LocalDeletedChangesApplier" {
    + ApplyDeleted()
}

class "LocalMovedChangesApplier" {
    + ApplyMoved()
}

class "ArchiveDownloader" {
    + GetDownloadedSegments()
    - Codice.Client.BaseCommands.Download.IDownloader.EnableStopOnException()
    - Codice.Client.BaseCommands.Download.IDownloader.DisableStopOnException()
    - Codice.Client.BaseCommands.Download.IDownloader.AddMissingFilesWithoutAvailableData()
    - Codice.Client.BaseCommands.Download.IDownloader.AddMissingFilesToDownload()
    - Codice.Client.BaseCommands.Download.IDownloader.DownloadRawFile()
    - Codice.Client.BaseCommands.Download.IDownloader.DownloadBigFileSegment()
    - Codice.Client.BaseCommands.Download.IDownloader.DownloadToSmallFiles()
    - UncompressAndWriteSmallFiles()
    - DownloadAndWriteSegment()
    - ProcessFileInfo()
    - AddDownloadedSegment()
}

class "FileDownloader" {
    + Download()
    + Download()
    + Download()
    + Download()
    + DownloadAll()
    + GetDownloadedFiles()
    + GetDownloadedFileInfos()
    + GetAndClearDownloadedFileInfos()
    + CreateQueue()
    - CreateQueue()
    - FlushAllQueuesAllowingMissingFiles()
    - DownloadMissingFiles()
    - FlushAllQueuesDisallowingMissingFiles()
    - GetQueue()
}

class "ArchiveFileDownloader" {
    + CreateQueue()
    + GetDownloadedSegments()
    + GetTotalBytesDownloaded()
}

class "ChangesetCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "ChangesetDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ChangesetDeleteCmdImpl" {
    + RemoveChangeset()
}

class "ChangesetEditCommentCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ChangesetEditCommentCmdImpl" {
    + EditChangesetComment()
}

class "ChangesetMoveCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ChangesetMoveCmdImpl" {
    + MoveChangeset()
}

class "GetFromServer" {
    - Codice.Client.BaseCommands.BranchExplorer.ExplorerData.BrExDataBuilder.IGetDataFromServer.GetRepositoryInfos()
    - Codice.Client.BaseCommands.BranchExplorer.ExplorerData.BrExDataBuilder.IGetDataFromServer.GetBrExDataFromServer()
}

class "BrExBranchDateComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.BranchExplorer.BrExBranch>.Compare()
}

class "GuidSet" {
    + Add()
    + Remove()
    + Contains()
    + CountForTesting()
    + GetReadonly()
    + GetGuids()
}

class "Readonly" {
    + Contains()
}

class "ChangesetComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.BranchExplorer.BrExChangeset>.Compare()
}

class "BranchCache" {
    - DoGetBranches()
    - DoGetBranch()
    - DoInvalidateBranchEntry()
    - BuildHash()
}

class "BrExTree" {
    + GetMainRepInfo()
    + GetBranches()
    + GetIndexedBranches()
    + GetBranch()
    + GetCset()
    + GetCset()
    + GetWorkspaceWorkingObject()
    + SetChangesetAsRelevant()
    + SetChangesetAsNonRelevant()
    + SetChangesetAsMergeSource()
    + SetChangesetAsMergeDestination()
    + SetChangesetAsMergeBase()
    + SetChangesetAsWorkspaceCset()
    + CleanChangesetAsWorkspaceCset()
    + GetCheckedoutChangeset()
    + GetChangesetsSortedByDate()
    + GetLastChangeset()
    + GetLinksCount()
    + GetLinks()
    + GetLabelsCount()
    + GetLabels()
    + GetBranchesCount()
    + GetChangesetCount()
    + GetCsetSortIndex()
    + GetReplicationSources()
    + AddInProgressMergeLink()
    + FilterBranches()
    + CalculateRelevantChangesets()
    + SetCurrentBranchAndChangeset()
    + ObtainIndexesForSerialization()
    - BuildReplicationSources()
    - FindCheckedoutChangeset()
    - SetCurrentCsetOnWorkspace()
    - CleanWorkspaceChangeset()
    - SetCurrentBranchOnWorkspace()
    - CreateInProgressMergeLink()
    - SetAsWorkspaceCset()
}

class "BrExTreeSerializer" {
    + Serialize()
    + Deserialize()
}

class "ChangesetLayoutCompressor" {
    + CompressLayout()
    - PromoteBranches()
    - CanPromote()
    - CollidesToPromote()
    - PromoteChangesetPath()
    - SetAsNonPromotable()
    - IsPromotable()
}

class "BrExChangesetPath" {
    + GetChangesetList()
    + GetSmallerChangeset()
    + IsSmallerThan()
    + IsBiggerThan()
    + GetInitialTimestamp()
    + GetEndTimestamp()
    + DecrementDepth()
}

class "ChangesetPathGrouper" {
    + Add()
    + CompressLayout()
    - GetSortedChangesetPathsWithhead()
    - CompressContainer()
    - AddPathToContainer()
    - GetContainerIniChangeset()
    - CombineContainers()
    - GetNextOverlappedContainers()
    - InsideDateRange()
    - InsideDateRange()
    - InsideDateRange()
    + GetContainers()
    - IsValidContainer()
    - GenerateSubBranches()
}

class "SubBranchContainerComparer" {
    + Compare()
}

class "ChangesetPathBuilder" {
    + GetHeadPath()
    + GetSubBranchPaths()
    + Build()
    - CalculateHeadPath()
    - GetLongestLeafPath()
    - CalculateHeadPathFromLeaf()
    - GetPathLenghtFromLead()
    - CalculateSubranchPaths()
    - WalkSubBrachesFromRoot()
    - GetChildrenSortedByDate()
    - ConvertSubBranchesInChangesetPaths()
    - GetNextDepth()
}

class "SubBranch" {
    + GetHeadNode()
    + GetParentChangeset()
}

class "HeadSubBranch" {
    + IsHead()
}

class "ChangesetTreeNodeComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.BranchExplorer.ExplorerTree.ExplorerChangesetTreeNode>.Compare()
}

class "DepthCache" {
    + GetPathsAtDepth()
    + RemovePathAtDepth()
    + AddPathAtDepth()
}

class "ExplainMergeExplorerTreeFilter" {
    + ApplyFilter()
    + BuildCustomBranchesHashSet()
    - FillCustomBranchHasSet()
    + FindWayFrom()
    - TryPushNextConnectedCset()
    - ToExplorerChangesetList()
    - AddChangesetsBranches()
    - AddChangesetBranch()
    - GetConnectedCsets()
    - GetConnectedByMergeCsets()
    - GetParentCset()
    - GetWorkingBranch()
}

class "BrExCsetTree" {
    - CreateTreeCache()
    - BuildTree()
    + GetRoots()
    + GetLeafs()
    + GetTreeNode()
}

class "ReplicationSourceSelection" {
    + Initialize()
    + IsLocalReplicationSource()
    + AddReplicationSource()
    + Contains()
    + BranchContainsReplicationSource()
    + AddVisibleBranch()
    + RemoveVisibleBranch()
    + Remove()
    + GetDataSourceServers()
    - GetVisibleRemoteBranch()
}

class "VisibleRemoteBranch" {
    + AddReplicationSource()
    + AddToDictionary()
    + Remove()
    + ContainsReplicationSource()
}

class "SubBranchBuilder" {
    + GetChangesetsOnBranch()
    + GetSubBranchContainers()
    - ProcessSubBranches()
    - SearchVirtualConnectionNode()
    - CreateBranchContainers()
}

class "ColumnManager" {
    + Initialize()
    + RebuildWidths()
    + SetWidth()
    + SetDate()
    + StartDate()
    + EndDate()
    + Width()
    + Left()
    + Right()
    + Width()
    + Top()
    + Height()
    + BeginUpdate()
    + EndUpdate()
}

class "BranchDrawInfo" {
    + IsEmpty()
}

class "RowManager" {
    + AddSubBranchOffset()
    + Y()
}

class "BrExLayout" {
    + SetSize()
    + GetCsetDraw()
    + GetChangesetForDate()
}

class "BrExLayoutBuilder" {
    + CalculateLayout()
    + CalculateLayout()
    - AddNewBranchSlot()
    - PeekSlot()
    - PokeSlot()
    - GetLevelForBranch()
    - PushExplorerBranchDates()
    - PushChangesetDates()
    - PushDate()
    - BuildVisibleData()
    - RemoveEditionModeNotVisibleBranches()
    - GetIndexedBranches()
    - RemoveEditionModeNotVisibleChangesets()
    - GetOnlyRelevantCsets()
    - BuildInsideLevelBranches()
    - GenerateDatesList()
    - GenerateColumns()
    - PreprocessData()
    - PreallocateBranches()
    - AllocateBranchSlot()
    - GetStartIndexForBranch()
    - GetChangesetForDate()
    - IsBranchOutOfLevel()
    - GenerateBranchSlots()
    - GetWorkspaceBranch()
    - CalculateBranchScore()
    - GetIntegratedBranches()
    - CreateChangesetDrawInfo()
    - CreateLinkDrawInfo()
    - GenerateChangesets()
    - SetChangesetLocations()
    - AssignChangesetPositionInDay()
    - GenerateLinks()
    - UpdateChangesetParents()
    - UpdateRelevantParents()
    - GetRelevantParentId()
    - UpdateBranchesBounds()
    - GetBranchEndChangeset()
    - GetBranchIniChangeset()
    - UpdateSubBranchContainers()
    - CreateSubBranchDrawInfos()
    - CreateSubbranchContainerDrawInfo()
    - GetSubbranContainerEndChangeset()
    - GetAllRelevantChangesetsInBranch()
    - GetLastRelevantInBranch()
    - GetFirstRelevantOnBranch()
    - GetFirstRelevatChangesetInContainer()
    - GetLastRelevantChangesetInContainer()
    - GetFirstRelevantChangeset()
    - GetLastRelevantChangeset()
    - GetSubbranchContainerIniChangeset()
    - GetRelevantParentOnSameBranch()
    - GetSubBranchDepth()
    - GetMaxDepth()
    - GenerateLabels()
    - GetLabelCaption()
    - GetLabelScreenCaption()
    - GenerateScreenDrawingInfo()
}

class "BranchScoreComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.BranchExplorer.BrExBranch>.Compare()
}

class "PrevDisplayOptions" {
    + Initialized()
    + OptionsChanged()
    + Set()
}

class "DefaultScreenLayout" {
    + ProcessObjects()
    + GetSize()
    - ProcessRows()
    - ProcessColumnWidths()
    - ProcessColumnDraws()
    - ProcessColumns()
    - ProcessBranches()
    - ProcessChangesets()
    - ProcessLabels()
    - UpdateColumn()
    - SetRightCoordinate()
    - UpdateBranch()
    - CalculateEmptyBranchXPosition()
    - GetEmptyBranchX()
    - AdjustBranchPosition()
    - UpdateSubBranchContainer()
    - UpdateChangeset()
    - UpdateLabel()
    - CalculateSize()
    - GetDate()
    + GetExtraWidth()
    + GetChangesetRectangle()
}

class "DisplayOptionDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DisplayOptions" {
    - OnPropertyChanged()
}

class "HiddenBranchManager" {
    + CalculateAllHiddenBranches()
    + ClearHiddenBranches()
    - IsChildOfAny()
    - GetHiddenWithChildren()
    + ToggleBranchVisibility()
}

class "HiddenBranchSerializer" {
    + Serialize()
    + SaveToDisk()
    + Deserialize()
    + LoadFromDisk()
    + CreateSerializedIds()
    + DeserializeGuids()
}

class "LayoutPrinter" {
    + Close()
    + WriteCaption()
    + WriteRectangle()
    + WriteIntValue()
    + WriteLine()
    + WriteGuid()
    + WriteNull()
    + WriteBool()
    + WriteString()
    + WriteEOL()
    - WriteBool()
    - WriteGuid()
    - WriteInt()
}

class "OldDefaultScreenLayout" {
    + ProcessObjects()
    + GetSize()
    - ProcessRows()
    - ProcessColumnWidths()
    - ProcessColumnDraws()
    - ProcessColumns()
    - ProcessBranches()
    - ProcessChangesets()
    - ProcessLabels()
    - UpdateColumn()
    - SetRightCoordinate()
    - UpdateBranch()
    - CalculateEmptyBranchXPosition()
    - GetEmptyBranchX()
    - AdjustBranchPosition()
    - UpdateSubBranchContainer()
    - UpdateChangeset()
    - UpdateLabel()
    - CalculateSize()
    - GetDate()
    + GetExtraWidth()
    + GetChangesetRectangle()
}

class "PersistentBranchLayout" {
    + GetPreallocatedIds()
    + GetPreallocatedIndex()
    + SetPreallocatedIndex()
    + Clear()
    + ClearAll()
    - GetConfigFullPath()
    - LoadAllocations()
    - ParseLine()
    - SaveAllocations()
}

class "SerializedExplorerLayout" {
    + Serialize()
    - SerializeBranchDraws()
    - SerializeChangesetDraws()
    - SerializeColumnDraws()
    - SerializeLabelDraws()
    - SerializeLinkDraws()
    - SerializeSize()
}

class "VerticalScreenLayout" {
    + GetExtraWidth()
    + GetChangesetRectangle()
}

class "BrExChangesetDateComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.BranchExplorer.BrExChangeset>.Compare()
}

class "ChangesetPathDateComparer" {
    + Compare()
}

class "BrExCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BrExCmdImpl" {
    + GetLayoutFromExplorerTree()
    + GetExplorerTree()
    + GetExplorerTree()
    + GetExplorerDataSet()
    + GetLayoutFromExplorerTree()
    + GetExplorerTree()
    - GetPendingMergeLinks()
    - GetLoadedChangeset()
    - GetWorkingBranch()
    - WriteExplorerTree()
    - ReadExplorerTree()
    - WriteExplorerLayout()
    - GetStartDateTimeInTicks()
    - GetEndDateTimeInTicks()
    - GetLastChangesetDate()
}

class "SubBranchContainer" {
    + SetSubBranches()
    + SetIniDate()
    + SetEndDate()
}

class "BrExBranch" {
    + IsEmpty()
    + SetJavaBrExIsHiddenBranch()
    + StoreInitDateChangesetToSerializeLayoutOnEmptyBranches()
}

class "BrExChangeset" {
    + UpdateLayout()
    + ChangeRelevant()
    + ChangeContributorRole()
}

class "Indexed`1" {
    + Get()
}

class "ChangeListBuilder" {
    + BuildChangeLists()
    - GetInvolvedMerges()
    - FillStandardMerges()
    - FillXLinkMerges()
    - FillMerges()
    - AddPendingMerges()
    - GetChangeListForChange()
    - GetMergeChangeLists()
    - FindOrCreateChangeList()
    - CreateDefaultChangeList()
    - CreateHiddenChangesChangeList()
    - CreateMergeChangeList()
}

class "ChangeListComparer" {
    + Compare()
}

class "ChangelistContentsCmdImpl" {
    + AddToUserDefinedChangelist()
    + AddToUserDefinedChangelist()
    + DeleteFromUserDefinedChangelist()
    + DeleteFromUserDefinedChangelist()
    - AddChangesToChangelist()
    - MergeMountPointRacks()
    - DeletePathsFromChangelist()
    - DeleteChangesFromChangelist()
    - GetPerMountPointChanges()
    - GetControlledChangesInPaths()
    - IsDefaultChangelist()
    - IsEmptyChangelist()
    - IsUserEditable()
}

class "ChangelistManagementCmdImpl" {
    + GetUserDefinedChangeLists()
    + AddUserDefinedChangelist()
    + DeleteUserDefinedChangelist()
    + EditUserDefinedChangelist()
    + ListUserDefinedChangelists()
    - SetPersistence()
    - GetPrintablePersistence()
    - GetDescription()
    - GetBuiltIn()
}

class "ApplyLocalChangesDependenciesChecker" {
    + IsDependency()
    - IsMoveDependency()
    + AllowsIndirectDependencies()
    + AllowsDependencies()
}

class "ChangesDependenciesFinder`1" {
    + GetSelectedChangesDependencies()
    + GetDependencies()
    - GetDependencies()
    - GetDependenciesCandidates()
    - AllowsDependencies()
    - IsSelected()
}

class "CheckinChangesDependenciesChecker" {
    + IsDependency()
    - IsMovedDependency()
    - IsDeletedAdded()
    + AllowsIndirectDependencies()
    + AllowsDependencies()
}

class "UndoChangesDependenciesChecker" {
    + IsDependency()
    + AllowsIndirectDependencies()
    + AllowsDependencies()
}

class "ChangedPathResolver" {
    + GetClientPath()
}

class "CheckinData" {
    + SetAsDiscarded()
    + SetAsCommited()
    + CleanUnchangedChild()
    - Initialize()
    - FixPaths()
    - ProcessChanges()
    - ProcessXlinksPendingMergeLinks()
    - UpdateCheckinParamPaths()
    + AddXlinkChild()
    + SetChangedTreeAsNull()
    - GetWorkingBranch()
    - GetLoadedChangeset()
}

class "LocalChangesPromoter" {
    + PromoteChanges()
    + GetCopiedLocallyChanged()
    - AddCopiedLocallyChanged()
    - CheckoutLocallyChanged()
    - SetLocallyChangedAsCheckedout()
    - GetWorkspaceTreeNode()
}

class "PendingMergeLinksProvider" {
    + ArePendingMerges()
    + HasPendingMerges()
    + GetPendingMerges()
}

class "SameDataNodesExtractor" {
    + GetSameDataNodes()
    + GetSameDataPaths()
    - GetCheckinExceptionsByItem()
    - FillSameDataNodes()
}

class "XlinkDataSplitter" {
    + ProcessXlinks()
    - LoopChangedTreeFindingXlinks()
    - CreateCheckinDataForXLink()
    - NeedXlinkTargetCheckin()
    - SetChangedXlinkNode()
    - GetCheckinDataCopy()
}

class "CheckinCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + NotifyMessage()
    + NotifyError()
    + Execute()
    - RunCheckin()
    - ShowProgressBar()
    - GetCheckinDate()
    - ApplyChanged()
    - TryLaunchIncomingChanges()
    - RetryCheckin()
    - PrintCreatedChangeset()
}

class "CheckinThread" {
    + Run()
    + GetException()
    + GetCheckinResult()
}

class "CheckinNodePrinter" {
    + PrintResults()
    - PrintNodeResult()
    - PrintChange()
}

class "CheckinMergePreconditionsChecker" {
    + CheckMergesPreconditions()
    - IsFullCheckin()
    - GetFullCheckinChecker()
}

class "FullMergeCheckinChecker" {
    + IsFullMergeCheckin()
    - BuildChangedItemsHashset()
}

class "CheckinCliProgress" {
    + GetCheckinProgress()
    + GetPartialCheckinProgress()
    - GetSpinningCheckinProgress()
    - GetSpinningPartialCheckinProgress()
    - FillStatus()
    - GetSimpleCheckinProgress()
    - GetSimplePartialCheckinProgress()
    - FillCheckinUploadProgress()
    - CleanPreviousLongerLine()
}

class "CheckinUploadProgressRender" {
    + NeedShowCurrentBlockForCheckinStatus()
    + NeedShowCurrentBlockForUploadProgress()
    + GetCurrentFileInfo()
    + GetUploadSize()
    + GetCurrentBlockUploadSize()
}

class "ShowCurrentBlock" {
    + IsVisible()
    + GetCurrentBlockPrintSize()
    - SameBlock()
}

class "CheckInFileUploader" {
    + UploadData()
    - CheckUploadedFiles()
}

class "UploadInfo" {
    + AddTotalSize()
    + GetTransferredSize()
    + SetCurrentRepositoryUploader()
    + CompleteRepositoryUploaded()
    + GetCurrentUploadBlock()
    + StartUploadTimer()
    + StopUploadTimer()
}

class "CheckinCancellableOperation" {
    + IsCancelled()
    + Cancel()
}

class "CheckinWithoutResultStep" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CheckinWithResultStep" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CheckinOperation" {
    + CheckinTree()
    + CheckCheckinPreconditionsStep()
    + UploadDataStep()
    + ConfirmCheckinStep()
    + HasChangesInWk()
    - RestoreFilePermissionsStep()
    - ExecuteBeforeCheckinTriggersStep()
    - ExecuteTreeAfterCheckinTriggersStep()
    - FillCheckinResultDictionary()
    - ExecuteTreeTryCheckinStep()
    - TryCheckinStep()
    - ConfirmCheckin()
    - RestoreReadOnly()
    - TryCheckin()
    - GetMergesChangesReader()
    - GetMergePreconditionsChecker()
}

class "CheckinTrier" {
    + TryCheckin()
    - HasChangesToCommit()
    - HandleMergeNeededException()
    - GetMergeSrcChangeset()
    - GetWorkingBranchHead()
    - UncoSameDataPaths()
    - RunUncoSameData()
}

class "GlobalConfig" {
    - Codice.Client.BaseCommands.Config.IGlobalConfig.EnableForTesting()
    - Codice.Client.BaseCommands.Config.IGlobalConfig.DisableForTesting()
    - Codice.Client.BaseCommands.Config.IGlobalConfig.DisableForApp()
    - Codice.Client.BaseCommands.Config.IGlobalConfig.IsGlobalConfigAvailable()
    - Codice.Client.BaseCommands.Config.IGlobalConfig.DownloadGlobalConfigIfNeeded()
    - Codice.Client.BaseCommands.Config.IGlobalConfig.GetGlobalConfigFileNameForRepository()
    - Codice.Client.BaseCommands.Config.IGlobalConfig.GetGlobalConfigFileNameForWorkspace()
    - GetServerConfigFileName()
}

class "ServerConfigDownloader" {
    + DownloadPlasticGlobalConfigIfNeeded()
    + IsGlobalConfigAvailable()
    - IsGlobalConfigRepositoryAvailable()
    - TryDownload()
    - IsAlreadyDownloaded()
    - SetDownloaded()
}

class "ConcurrentRequestControl" {
    + IsRequestAllowed()
    + Success()
    + Failed()
    + NotExisting()
    + SetInvalidateTime()
}

class "ConfigureClientCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BranchHistoryCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BranchHistoryNameProvider" {
    + GetLabeledChangesetName()
    + GetLabeledChangesetNameWithBranch()
}

class "BranchHistoryPrinter" {
    + PrintResults()
    - PrintCreationPointEntry()
    - PrintMachineReadableCreationPoint()
    - PrintHumanReadableCreationPoint()
    - PrintMergeEntry()
    - PrintMachineReadableMergeEntry()
    - PrintHumanReadableMergeEntry()
    - GetType()
    - GetBase()
    - IsMergeTo()
    - GetSource()
    - GetDestination()
    - GetChangesetText()
    - GetOwnerText()
    - GetDateText()
}

class "BranchHistory" {
    + AddCreationPoint()
    + AddHistoryEntry()
    + AddLabelToChangeset()
    + SortByDate()
}

class "MergeHistoryEntryComparer" {
    + Compare()
}

class "SingleByteEolConverter" {
    + Convert()
    + Flush()
    - BuildEol()
}

class "Utf16Converter" {
    + Convert()
    + Flush()
    - ConvertChar()
    - GetLengthToRead()
}

class "Utf32Converter" {
    + Convert()
    + Flush()
    - AreEnoughBytesToProcessAChar()
    - AppendDataToOffset()
    - ProcessOffset()
    - ConvertChar()
    - GetLengthToRead()
}

class "DownloadedFiles" {
    + AddDownloadRange()
    + AddDownloaded()
    + AddMissingRange()
    + AddMissing()
    + GetDownloadedFiles()
    + GetDownloadedFileInfos()
    + GetAndClearDownloadedFileInfos()
    + GetAndClearMissingFiles()
}

class "Downloader" {
    - Codice.Client.BaseCommands.Download.IDownloader.EnableStopOnException()
    - Codice.Client.BaseCommands.Download.IDownloader.DisableStopOnException()
    - Codice.Client.BaseCommands.Download.IDownloader.DownloadBigFileSegment()
    - Codice.Client.BaseCommands.Download.IDownloader.DownloadRawFile()
    - Codice.Client.BaseCommands.Download.IDownloader.DownloadToSmallFiles()
    - Codice.Client.BaseCommands.Download.IDownloader.AddMissingFilesWithoutAvailableData()
    - Codice.Client.BaseCommands.Download.IDownloader.AddMissingFilesToDownload()
    - DownloadAndWriteSegment()
    - BeforeBigFileSegmentDownloaded()
    - UpdateDownloadedProgress()
    - BeforeFilesDownloaded()
    - AfterFilesDownloaded()
    - IsCanceled()
}

class "DownloaderThreadPool" {
    + DownloadSegment()
    + DownloadSmallFiles()
    + WaitToFinish()
    - SafeInitializeThreads()
    - DownloadThread()
    - LaunchDownloadToSegment()
    - LaunchDownloadToSmallFiles()
    - Dequeue()
    - EndDownloadThreads()
    - AddPendingToDownload()
    - CheckException()
    - SetException()
}

class "DownloadFileInfo" {
    + SetLocalFileTimestamp()
    + SetLocalFileSize()
    + SetLocalFileHash()
    + GetCalculatedLocalFileInfo()
    + IsRestoringMissingData()
    + GetTotalSegments()
}

class "DownloadFileInfoFinder" {
    + TryGetUniqueFileInfo()
    + TryGetDuplicatedFileInfos()
    - InitializeInfoCache()
    - AddDuplicatedEntry()
    - CleanDuplicatedEntries()
}

class "RepositorySourceEqualityComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.Replication.ReplicationSourceInfo>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.Replication.ReplicationSourceInfo>.GetHashCode()
}

class "DownloadQueue" {
    + GetDownloadedFileInfos()
    + GetAndClearDownloadedFileInfos()
    + GetDownloadedFiles()
    + DownloadFile()
    + Flush()
    + GetRepSpec()
    + EnableStopOnException()
    + DisableStopOnException()
    + GetMissingFileSources()
    + SetMissingFilesAsErrors()
}

class "DownloadQueuesCache" {
    + TryGetQueue()
    + AddQueue()
    + AddNotAvailableQueue()
    + GetAvailableQueuesCopy()
}

class "RepositorySpecKeyComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.GetHashCode()
}

class "DownloadSegmentCounter" {
    + HasMissing()
    + IncrementMissing()
    + IncrementDownloaded()
}

class "EolDataConverter" {
    + GetNewHash()
    + GetNewSize()
    + Convert()
    + Flush()
}

class "RequestExternalDataPath" {
    + AskUserForExtenalDataPath()
}

class "ObjectDataWriter" {
    + Open()
    + ReleaseLock()
    + Close()
    + CloseBigFile()
    + Append()
    + WritePartialOnOffset()
}

class "StandardDataPacketDownloader" {
    + SetDecryptor()
    + GetSmallFilesData()
    + GetSegmentData()
    + GetObjectsData()
    + GetDecryptor()
}

class "BigFileDownloader" {
    - Codice.CM.Client.Differences.IBigFileDownloader.DownloadFiles()
    - Codice.CM.Client.Differences.IBigFileDownloader.ContainsPath()
    - Codice.CM.Client.Differences.IBigFileDownloader.TryGetDownloadSize()
    + Clear()
    + AddDownloadableFile()
    - DownloadFile()
    - FillEntryContentInfo()
}

class "ChildItemItemIdComparer" {
    + Compare()
}

class "ChildItemByDirAndByNameComparer" {
    + Compare()
}

class "DiffChangesetCmdImpl" {
    + Diff()
    + WebDiff()
    + GetBranchWithoutMergeDifferences()
    + GetBranchWithoutMergeDifferences()
    + Diff()
    + DiffWithKeepMountRelativePathOption()
    - GetClientDiffs()
    - IsCancelled()
    - NotifyCompleteProgress()
    - NotifyCalculatingMerges()
    - NotifyTotalProgress()
    - NotifyProgressChangeset()
    - ExpandXlinkDiff()
    - SubtreeDiff()
    - GetMergesToBranchDstChangesets()
    - FillBranchDifferencesInfo()
    - FilterChangesetDifferences()
    - IsExtendedMergeDiff()
    - FilterExtendedMergeOption()
    - IsBranchOrChangesetDiff()
    - GetBranchIdForDiff()
    - IsSameChange()
    - IsSameAdd()
    - IsSameChanged()
    - IsPreviouslyChangedOnBranch()
    - AreFsProtectionPreviouslyChangedOnBranch()
    - AreXlinkPreviouslyChangedOnBranch()
    - AreRevisionPreviouslyChangedOnBranch()
    - IsSameFSProtectionChange()
    - IsSameContentChange()
    - IsSameXlinkContentChange()
    - IsSameRevContentChange()
    - IsSameMove()
}

class "DifferencesFinder" {
    + AddDifference()
    + RemoveDiff()
    + FindDiffByRepStatusAndItem()
    - GetStatusDifferencesForRep()
}

class "DiffCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "DiffCmdImpl" {
    + DiffBySpec()
    + GetDiffInfo()
    + GetAddedDiffInfo()
    + GetDeletedDiffInfo()
    + GetDiffInfo()
    + GetAddedDiffInfo()
    + GetDeletedDiffInfo()
    + LaunchDifferences()
}

class "DiffDirectoryDataProvider" {
    + GetChildren()
    - ConvertToClientXlinks()
    - TryConvertToClientXlink()
    - DoGetChildren()
    - AddLocalChanges()
    - UpdateDirectoryRevisionId()
    - RemoveUnusedChildren()
    - RemoveChild()
    - IsItemChild()
    - ProccessChangedChildren()
    - GetChildForChange()
    - GetChildForItem()
    - BuildChildForChange()
    - UpdateChildInfo()
    - UpdateXlinkNode()
    - UpdateItemNode()
    - UpdateFSProtections()
    - GetDirectoryChanges()
    - GetServerChildren()
}

class "DiffDownloader" {
    + DownloadDifferences()
    - CheckErrors()
    - DownloadDifference()
    - IsNeeded()
    - DownloadDirectory()
    - GetPath()
}

class "ItemHandlerCache" {
    + Get()
}

class "DiffMergeMapping" {
    + GetMergeInfo()
    - GetItemMergeInfoForDelete()
    - GetItemMergeInfoForAdded()
    - GetItemMergeInfoForChanged()
    - IsCopiedAlsoChanged()
    - IsReplacedAlsoChanged()
    - GetRevisionMergesForItem()
    - IsRevisionMergesByItemCacheInitialized()
    - InitializeRevisionMergesByItemCache()
    - ResolveRevisionId()
    - GetRevisionMergesOfType()
    - GetFirstRevisionMergeOfType()
    - IsOfType()
    - GetResolvedRevisions()
}

class "DiffMappingResolver" {
    + ResolveRevisions()
    + GetResolvedRevision()
    + ContainsRevisionsOnBranch()
    - InitializeItemsInBranch()
}

class "DiffViewConverter" {
    + Convert()
    - BuildDiffInfo()
    - BuildAddedDiffInfo()
    - BuildDeletedDiffInfo()
    - BuildDiffMember()
}

class "HumanReadableRevSpecGenerator" {
    + GetSymbolicRevInfo()
    - GetServerPath()
    + GetRevisionSpec()
    + GetBranchName()
    - GetSymbolicShelveRevisionSpecWithOwner()
    - IsShelveEntryData()
    - GetSymbolicRevisionSpecWithOwner()
    + GetLeftRevSpecWithPath()
    + GetRightRevSpecWithPath()
    - GetRevSpecWithPath()
}

class "CodeReviewRevisionBranchResolver" {
    + GetBranchNameForRevision()
}

class "DiffViewDataProvider" {
    + DownloadFile()
    + DownloadAll()
    + Clear()
    + GetDownloadedFile()
    + GetChildren()
    + GetXlinkData()
    + DownloadFileContent()
    + IsPurgedFile()
    - GetItemHandler()
    - GetEmptyFile()
}

class "RepDownloadedInfo" {
    + IsFileContentAvailable()
    + IsPurgedFileContent()
    + AddFileContent()
    + AddDownloadedFile()
    + TryGetChildren()
    + SetChildren()
    + GetFile()
}

class "RepSpecEqualityComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.GetHashCode()
}

class "DiffViewEntryBuilder" {
    + CreateAddedReviewEntry()
    + CreateXlinkAddedReviewEntry()
    + CreateDeletedReviewEntry()
    + CreateXlinkDeletedReviewEntry()
    + CreateChangedReviewEntry()
    + CreateChangedWithFsProtReviewEntry()
    + CreateXlinkChangedReviewEntry()
    + CreateXlinkChangedWithFsProtReviewEntry()
    + CreateMovedReviewEntry()
    + CreateMovedWithBaseRevReviewEntry()
    - GetEntryDataFromXlink()
}

class "DiffViewEntryChangeInfoAdapter" {
    + Adapt()
    + Adapt()
    - IsMovedKind()
    - BuildAddedEntry()
    - BuildDeletedEntry()
    - BuildChangedEntry()
    - BuildReplacedEntry()
    - BuildMovedEntry()
    - BuildAddedRevision()
    - GetLeftRevisionForChangedEntry()
    - GetPreviousXlink()
    - GetParentRev()
}

class "DiffViewEntryClientDiffAdapter" {
    + Clear()
    + Adapt()
    + GetChanged()
    + SetFileTypeChecker()
    - CreateChangedReviewEntry()
    - CreateAddedReviewEntry()
    - CreateDeletedReviewEntry()
    - CreateMovedReviewEntry()
    - AddChanged()
}

class "DiffViewEntryHistoryRevisionAdapter" {
    + Adapt()
    - GetParentRev()
}

class "DiffViewLocalBinaryMetadataProvider" {
    + Create()
    + Clear()
}

class "DiffViewLocalSynmlinkDataProvider" {
    + GetSymlinkDataFile()
    + Clear()
}

class "DiffViewManager" {
    + Clear()
    + Reset()
    + IsEditableEntry()
    + GetSymbolicRevInfo()
    + GetChildren()
    + GetEntryRevisionsData()
    + GetLeftRevisionData()
    + GetRightRevisionData()
    + GetXlinkData()
    + GetRevisionData()
    + AddBigFileEntry()
    + IsBigFileEntry()
    - DownloadRevisionData()
    - GetRevisionFilePath()
}

class "TreeDiffer" {
    + DiffOneSpec()
    + DiffTwoSpecs()
    - Diff()
    - GetChangesetSpec()
    - GetChangesetInfoFromMarkerSpec()
    - GetChangesetInfoFromChangesetSpec()
}

class "ExtensionCheckinLogger" {
    + WriteCheckinLog()
    - AddTaskFromComment()
    - GetTaskIdsFromComment()
    - GetLinkedTasks()
    - GetLinkedTaskForBranch()
    - CreateSingleChangeset()
}

class "FastExportCmdImpl" {
    + Run()
    - StartExport()
    - GetPrinter()
    - ImportChangesets()
    - ImportLabels()
    - NotifyProgress()
    - GetEstimatedTime()
    - GetRemainingTime()
    + Diff()
    - ProcessChangeset()
    - Diff()
    - GetMergesToCset()
    - DiscardBranches()
    - ProcessOutOfOrderChangesets()
    - GetBranches()
    - GetRawChangesets()
    - BuildChangesetList()
    - GetLabels()
    - DiscardLabels()
    - ProcessMerges()
    - DiscardInvalidMerges()
    - AddMerge()
    - InteractiveCheck()
    - LogTypeOfOperationCounts()
    - InitializeItemHandler()
}

class "ChangesetList" {
    + GetList()
    + FindChangeset()
    + DeleteChangesetsOnBranch()
}

class "ObjectInfo" {
    + Equals()
    + GetHashCode()
}

class "ObjectInRepInfo" {
    + Equals()
    + GetHashCode()
}

class "FastExportRange" {
    + Init()
    + InRange()
}

class "FastExportPrinter" {
    + Print()
    + PrintLabelHeader()
    + PrintMoved()
    + PrintDeleted()
    + PrintAdded()
    + PrintLoaded()
    + PrintChanged()
    - DoPrintChanged()
    - WriteBlobs()
    - GetAddedAndModified()
    - PrintChangesetHeader()
    - IsChangeset0()
    - WriteComment()
    - CopyBlobs()
    - GetBranchName()
    - GetGitRawTime()
    - GetRawTime()
    - GetPath()
    - GetBranchComment()
    - ReadSymlinkBlob()
    - AdjustSymlinkBlob()
}

class "Marks" {
    + RevMarkExists()
    + GetNewRevMark()
    + GetCsetMark()
    + GetExistingRevMark()
    - GetNextMark()
}

class "FastExportDownloader" {
    + CreateQueue()
}

class "FileWriter" {
    + Flush()
    + Close()
    + WriteLineFormatted()
    + Write()
    + WriteLine()
    + WriteSizeUTF8()
    + WriteUTF8()
    + WriteEOL()
    + CopyStream()
    - GetUTF8()
}

class "SimplePrinter" {
    + Print()
    + PrintDeleted()
    + PrintMoved()
    + PrintAdded()
    + PrintChanged()
    + PrintLoaded()
    + PrintLabelHeader()
    - GetPath()
}

class "BlobReader" {
    + Process()
}

class "BranchOperations" {
    + GetBranch()
    - TranlateExportedBranchName()
    - GetMaxLengthFullBranchName()
    - GetBranchNameBasedOnExistingParents()
    - FillBranchParentAndName()
    - TryToFindParent()
    - GetBranchInfo()
    - CacheCommitBranch()
    - GetBranchId()
    - ExtractBranchComment()
}

class "CommentReader" {
    + Process()
    + GetComment()
}

class "CommitReader" {
    + SetChangesetMarks()
    + Process()
    + GetLastCommit()
    + IgnoreMarks()
    + IgnoreMissingChangesets()
    - ProcessModified()
    - ProcessDeleted()
    - ProcessRenamed()
    - ProcessCopied()
    - ExtractName()
    - ProcessMerge()
    - CheckCsetFromMark()
    - AddMerge()
    - CommitWasProcessedForMark()
}

class "DataSizeReader" {
    + Process()
    + GetSize()
}

class "FastChangeApplier" {
    + ApplyChanges()
    + ApplyChange()
    + GetPathForMissingParents()
    + ApplyModified()
    + ApplyAdded()
    - ApplyCopied()
    - ProcessMergeCandidatedForModified()
    - ProcessMergeCandidatesForAdded()
    - ApplyCopyToAdded()
    - AddParentPath()
    - CopyMergeParent()
    - CopyMergeDirectory()
    - GetParentsToAdd()
    - ProcessParentToAdd()
    - GetFileHash()
    - SetRevisionAsCopied()
    - IsItemAlreadyLoaded()
    - AddItemAlreadyLoaded()
    - GetRepeatedItemIdChecker()
}

class "FastImportCmdImpl" {
    + Run()
    - GetCommitReader()
    - PrintTreeInfo()
    - CleanUselessCommitInfo()
    - GetOlderCommit()
    - InitializeReaders()
    - LogProcess()
}

class "FullImport" {
    - LoadServerTree()
    + ImportCommit()
    + ImportTag()
    + ResetRepositoryDate()
    - BuildPendingMergeLinks()
    - GetMergedSourceChangesetIds()
    - NotifyMessage()
    - SetCsetNumberFromComment()
    - UpdateBlobCollection()
    - BuildCheckinSource()
}

class "ImportFileReader" {
    + Open()
    + Close()
    + GetCurrentLine()
    + GetNextLine()
    - GetNextLine()
    - ReadBuffer()
    + Read()
    + LocateBlob()
    + StartBlobRead()
    + EndBlobRead()
    + ReadBlobFragment()
    + MadeUpRandomData()
    + GetFileDataPath()
    + ReadFileData()
    + SaveBlobToFile()
    - CopyStream()
    - ReadByte()
    - GetFiles()
    - getRandomNumber()
}

class "ImportFileUploader" {
    + UploadBlob()
    + Flush()
    - UploadBlob()
    - ReadData()
}

class "CommitCollection" {
    + AddCommit()
    + ContainsCommitWithGivenMark()
}

class "TagCollection" {
    + AddTag()
}

class "ImportUploader" {
    + UploadData()
    - DoUploadData()
    - UploadChanges()
    - GetRevisionIds()
    - GetChangesToUpload()
}

class "MarkCsetMap" {
    - Initialize()
    - InitMarksWriter()
    + Add()
    - SaveMarks()
    - SaveMark()
    - SaveSingleMark()
    + GetCsetIdFromMark()
    + GetMarkFromCsetId()
    + Close()
    - LoadMarks()
    + GetMaxMarkValue()
}

class "MarkReader" {
    + ProcessMark()
    + ProcessFrom()
    + ProcessEmptyMark()
    + GetLastMark()
    + IsMerge()
    + ReadMerge()
    - Process()
    - ReadMark()
}

class "ResetTagReader" {
    + Process()
    - GetResetTag()
    + GetLastTag()
}

class "TagReader" {
    + Process()
    + GetLastTag()
}

class "ChangelistResolver" {
    + GetChangelist()
    - Initialize()
    - GetIdForChangeslist()
}

class "FileInfoCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "FileInfoCmdImpl" {
    + GetFileInfos()
    - CalculateFileInfo()
    - FillStatusInfo()
    - FillRevisionInfo()
    - FillXlinkInfo()
    - FillUnderXlinkInfo()
    - FillChangelistInfo()
    - FillLockInfo()
    - FillRevisionHeadInfo()
    - GetRevisionHeadResolver()
    - AddRevisionToCheckLocking()
    - GetTargetSpecFromXlink()
    - FillInfoForPrivateOrDelete()
    - ClearResolvers()
    - GetWorkspaceTreeNode()
}

class "FieldsMapping" {
    + GetAllFields()
    + GetEntry()
    - AddMapping()
}

class "ItemTypeResolver" {
    + GetTypeFromRevisionType()
    + GetTypeFromPrivateItem()
}

class "LockInfoResolver" {
    + AddRevisionToCheck()
    + GetLockInfo()
    - GetLocksForRepSpec()
    - AreGuidResolved()
    - ResolveItemsToGuids()
    - GetGuidFromItemId()
    - GetItemHandler()
    - IsValidItem()
}

class "StatusResolver" {
    + GetStatusForControlledItem()
    + IsDeleted()
    + Close()
    - Initialize()
    - ConcatStatus()
    - GetDeleteChild()
}

class "FullWorkspaceRevisionHeadResolver" {
    + GetHeadRevision()
    - Initialize()
    - GetDifferences()
}

class "PartialWorkspaceRevisionHeadResolver" {
    + GetHeadRevision()
    - Initialize()
    - WalkTree()
    - GetMountId()
    - GetItemsCache()
}

class "CloakedFilesFilter" {
    + IsCloaked()
}

class "WkCloakedFilesFilter" {
    + IsCloaked()
}

class "CloakedRulesLoader" {
    - Codice.Client.Commands.ICloakedRulesLoader.GetGlobalRules()
    - Codice.Client.Commands.ICloakedRulesLoader.GetClientRules()
    - Codice.Client.Commands.ICloakedRulesLoader.GetWorkspaceRules()
    - Codice.Client.Commands.ICloakedRulesLoader.AreWorkspaceRulesLocallyChanged()
    + DownloadRulesFromServer()
}

class "CompressionFilter" {
    + MatchedCompression()
}

class "EolConversionFilter" {
    + GetEolConversionForExtension()
    - Initialize()
    - GetEolConversion()
    - BuildPathValueMatcher()
    - LoadUserConfiguration()
    - LoadConfigurationFile()
    - GetEolConversionTypes()
    - IsOfType()
}

class "FileTypeChecker" {
    + IsBinary()
    + IsBinary()
    + IsBinary()
    + IsBinary()
    + IsBinary()
    + GetMatchedType()
}

class "HiddenChangesFilesFilter" {
    + IsHiddenChanged()
}

class "WkHiddenChangesFilesFilter" {
    + IsHiddenChanged()
}

class "IgnoredFilesFilter" {
    - Codice.Client.BaseCommands.IIgnoredFilter.HasRelevantExceptionsUnderPath()
    + IsIgnored()
    + AddWkPath()
    + GetWorkspaceLocation()
}

class "WkIgnoredFilesFilter" {
    - Codice.Client.BaseCommands.IIgnoredFilter.HasRelevantExceptionsUnderPath()
    + IsIgnored()
}

class "BuildWorkspacekIsRelevantNewChange" {
    - Codice.Client.Common.FsNodeReaders.IBuildIsRelevantNewChange.Build()
    - Codice.Client.Common.FsNodeReaders.IBuildIsRelevantNewChange.BuildIgnoringChangedDirs()
}

class "IsRelevantNewChange" {
    - Codice.Client.Common.FsNodeReaders.IIsRelevantNewChange.Check()
    - Codice.Client.Common.FsNodeReaders.IIsRelevantNewChange.Enable()
    - Codice.Client.Common.FsNodeReaders.IIsRelevantNewChange.Disable()
    - LaunchReloadFilter()
    - ReloadFilter()
}

class "PathValueColonLineParser" {
    + ParseLine()
}

class "PathValueSpaceLineParser" {
    + ParseLine()
}

class "PathValueMatcher" {
    + LoadPatternsFile()
    + MatchedValue()
    + MatchedValueForExtension()
    - ParseLine()
    - IsPathRule()
    - IsRegExpRule()
    - IsExtensionRule()
    - AddRegExpRule()
    - AddPathRule()
    - AddToDictionary()
    - TryGetKeyFromDictionary()
    - GetKeyFromCustomRegex()
}

class "WkReadOnlyFilesFilter" {
    + SetAsReadOnly()
}

class "WkWritableFilesFilter" {
    + KeepWritable()
}

class "FindQueryCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "QueryFormatter" {
    + GetDefaultFormat()
    + PrintPreffix()
    + PrintSuffixAndDump()
    + PrintQueryResult()
    + ScapeSolvedFields()
    - ParseFormatString()
    - CheckFormatFields()
    + Dump()
}

class "XmlQueryFormatter" {
    + GetFormatterString()
    + GetDefaultFormat()
    + PrintPreffix()
    + PrintSuffixAndDump()
    + ScapeSolvedFields()
    - ScapeTextField()
}

class "FindQueryCmdImpl" {
    + FindQuery()
    + FindQuery()
    + FindQuery()
    - FindRepositoryQuery()
    - RunQueries()
    - ExecuteQueryForRepository()
    - LaunchQueryForRepository()
    + PrepareQuery()
}

class "FieldResolver" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetRevisionInfoToResolveDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ObjectFormatter" {
    + ResolveAllFieldInstances()
    + Resolve()
}

class "ObjectInRepFormatter" {
    + Resolve()
    + IdResolver()
    + RepIdResolver()
    + RepNameResolver()
    + RepServerResolver()
    + OwnerResolver()
    + GetOwnerName()
}

class "RepObjectFormatter" {
    + Resolve()
    + DateResolver()
    + CommentResolver()
    + GuidResolver()
}

class "ChangesetFormatter" {
    + Resolve()
    - BranchResolver()
    - ParentIdResolver()
}

class "ShelveFormatter" {
    + Resolve()
    - ParentIdResolver()
}

class "BranchFormatter" {
    + Resolve()
    - ChangesetResolver()
    - NameResolver()
    - TypeResolverSm()
    - ParentNameResolver()
}

class "RevisionFormatter" {
    + Resolve()
    + BranchResolver()
    + GetRevisionInfoToResolve()
    + ResolveAllFieldPathInstances()
    + TypeResolver()
}

class "MarkerFormatter" {
    + Resolve()
    - NameResolver()
    - ChangesetResolver()
    - BranchResolver()
    - BranchIdResolver()
}

class "LinkEntityFormatter" {
    + Resolve()
    - NameResolver()
}

class "AttributeEntityFormatter" {
    + Resolve()
    - NameResolver()
}

class "UserFormatter" {
    + Resolve()
    - NameResolver()
    - CodeResolver()
    - GroupResolver()
}

class "WorkspaceFormatter" {
    + Resolve()
    - IdResolver()
    - NameResolver()
    - MachineResolver()
    - PathResolver()
    - OwnerResolver()
    - ServerResolver()
}

class "LinkFormatter" {
    + Resolve()
    + SetSourceOrDestination()
    - NameResolver()
    + ResolveAllFieldInstances()
    + GetObjectToResolve()
}

class "MergeFormatter" {
    + Resolve()
    + GetObjectToResolve()
    - SetLinkedObject()
    - BranchResolver()
    - ContributorResolver()
}

class "AttributeFormatter" {
    + Resolve()
    - NameResolver()
    - ValueResolver()
    - ResolveAllFieldInstancesForSourceObject()
}

class "RemovedRealizationFormater" {
    + Resolve()
    - ItemResolver()
    - DirRevResolver()
    - BranchResolver()
    - PathResolver()
}

class "MoveRealizationFormater" {
    + Resolve()
    - ItemResolver()
    - SrcDirRevResolver()
    - DstDirRevResolver()
    - SrcBranchResolver()
    - DstBranchResolver()
    - SrcPathResolver()
    - DstPathResolver()
    - PathResolver()
    - SrcCommentResolver()
    - DstCommentResolver()
}

class "ReplicationSourceFormatter" {
    + Resolve()
    + IdResolver()
    + RepIdResolver()
    + OwnerResolver()
    - ServerResolver()
    - RepositoryResolver()
    - GuidResolver()
}

class "ReplicationLogFormatter" {
    + Resolve()
    + IdResolver()
    + RepIdResolver()
    + OwnerResolver()
    - ServerResolver()
    - RepositoryResolver()
    - PackageResolver()
    - DateResolver()
}

class "ReviewFormatter" {
    + Resolve()
    - TitleResolver()
    - AssigneeResolver()
    - StatusResolver()
    - TranslateStatus()
    - TargetTypeResolver()
}

class "ReviewCommentFormatter" {
    + Resolve()
}

class "ChangeReviewCommentFormatter" {
    + Resolve()
}

class "SecuredPathFormatter" {
    + Resolve()
    - SecuredPathResolver()
    - SecuredPathTagResolver()
    - BranchIdResolver()
}

class "BranchNameResolver" {
    + GetBranchName()
    + GetProtectedBranchName()
}

class "FindSeidResolver" {
    - Codice.CM.Common.AttributeChecker.ISeidResolver.GetCurrentUser()
    - Codice.CM.Common.AttributeChecker.ISeidResolver.GetSEIDFromName()
}

class "FindSpecGenerator" {
    - Codice.CM.Common.AttributeChecker.ISpecGenerator.GenAttributeSpec()
    - Codice.CM.Common.AttributeChecker.ISpecGenerator.GenBranchSpec()
    - Codice.CM.Common.AttributeChecker.ISpecGenerator.GenItemSpec()
    - Codice.CM.Common.AttributeChecker.ISpecGenerator.GenLinkEntitySpec()
    - Codice.CM.Common.AttributeChecker.ISpecGenerator.GenRevSpec()
    - Codice.CM.Common.AttributeChecker.ISpecGenerator.GetObjectSpec()
}

class "FindSpecResolver" {
    - Codice.CM.Common.AttributeChecker.IObjectSpecResolver.GetObjectId()
}

class "ObjectTypeAttributes" {
    + AddAttribute()
    + GetAttributeType()
    + GetAttributeList()
}

class "QueryLexer" {
    + OnCreated()
    + EnterRule()
    + LeaveRule()
    + EnterRule_AND()
    + LeaveRule_AND()
    - mAND()
    + EnterRule_ASC()
    + LeaveRule_ASC()
    - mASC()
    + EnterRule_BETWEEN()
    + LeaveRule_BETWEEN()
    - mBETWEEN()
    + EnterRule_BY()
    + LeaveRule_BY()
    - mBY()
    + EnterRule_DESC()
    + LeaveRule_DESC()
    - mDESC()
    + EnterRule_FIND()
    + LeaveRule_FIND()
    - mFIND()
    + EnterRule_LIMIT()
    + LeaveRule_LIMIT()
    - mLIMIT()
    + EnterRule_NOT()
    + LeaveRule_NOT()
    - mNOT()
    + EnterRule_OFFSET()
    + LeaveRule_OFFSET()
    - mOFFSET()
    + EnterRule_ON()
    + LeaveRule_ON()
    - mON()
    + EnterRule_OR()
    + LeaveRule_OR()
    - mOR()
    + EnterRule_ORDER()
    + LeaveRule_ORDER()
    - mORDER()
    + EnterRule_REPOSITORY()
    + LeaveRule_REPOSITORY()
    - mREPOSITORY()
    + EnterRule_REPOSITORIES()
    + LeaveRule_REPOSITORIES()
    - mREPOSITORIES()
    + EnterRule_WHERE()
    + LeaveRule_WHERE()
    - mWHERE()
    + EnterRule_LIKE()
    + LeaveRule_LIKE()
    - mLIKE()
    + EnterRule_STRING()
    + LeaveRule_STRING()
    - mSTRING()
    + EnterRule_NL()
    + LeaveRule_NL()
    - mNL()
    + EnterRule_WS()
    + LeaveRule_WS()
    - mWS()
    + EnterRule_DIGIT()
    + LeaveRule_DIGIT()
    - mDIGIT()
    + EnterRule_LONG()
    + LeaveRule_LONG()
    - mLONG()
    + EnterRule_COLON()
    + LeaveRule_COLON()
    - mCOLON()
    + EnterRule_LPAREN()
    + LeaveRule_LPAREN()
    - mLPAREN()
    + EnterRule_RPAREN()
    + LeaveRule_RPAREN()
    - mRPAREN()
    + EnterRule_OPERATOR()
    + LeaveRule_OPERATOR()
    - mOPERATOR()
    + EnterRule_ID()
    + LeaveRule_ID()
    - mID()
    + mTokens()
    + InitDFAs()
}

class "DFA10" {
    + Error()
}

class "QueryParser" {
    - RQ()
    + Combine()
    + EmitErrorMessage()
    + OnCreated()
    + EnterRule()
    + LeaveRule()
    + EnterRule_query()
    + LeaveRule_query()
    + query()
    + EnterRule_onreptosearch()
    + LeaveRule_onreptosearch()
    - onreptosearch()
    + EnterRule_reptosearch()
    + LeaveRule_reptosearch()
    - reptosearch()
    + EnterRule_orderby()
    + LeaveRule_orderby()
    - orderby()
    + EnterRule_orderbytype()
    + LeaveRule_orderbytype()
    - orderbytype()
    + EnterRule_orderbyfield()
    + LeaveRule_orderbyfield()
    - orderbyfield()
    + EnterRule_limit()
    + LeaveRule_limit()
    - limit()
    + EnterRule_offset()
    + LeaveRule_offset()
    - offset()
    + EnterRule_findquery()
    + LeaveRule_findquery()
    - findquery()
    + EnterRule_conditions()
    + LeaveRule_conditions()
    - conditions()
    + EnterRule_condition()
    + LeaveRule_condition()
    - condition()
    + EnterRule_condition_pos()
    + LeaveRule_condition_pos()
    - condition_pos()
    + EnterRule_predicate()
    + LeaveRule_predicate()
    - predicate()
    + EnterRule_predicate_exp()
    + LeaveRule_predicate_exp()
    - predicate_exp()
    + EnterRule_value()
    + LeaveRule_value()
    - value()
}

class "CheckinConfirmer" {
    + ConfirmCheckin()
    - ConfirmCheckinOnServer()
    - UpdateResult()
    - ExecuteAfterCheckinTrigger()
}

class "SolveCmPath" {
    - Codice.CM.Common.Checkin.Partial.CheckinResultFinderBuilder<Codice.Client.Commands.Tree.TreeChangedNode>.ISolveNodeCmPath.GetCmPath()
}

class "SolveXlink" {
    - Codice.CM.Common.Checkin.Partial.CheckinResultFinderBuilder<Codice.Client.Commands.Tree.TreeChangedNode>.ISolveXlink.GetXlink()
}

class "CheckinTree" {
    + GetBranchId()
    + AddChild()
}

class "XlinkRulesUpdater" {
    + UpdateExpansionRule()
}

class "LocalPathResolver" {
    + GetClientPath()
}

class "ServerDataFiller" {
    + FillServerData()
    + UpdateCurrentUploadBlock()
    - FillServerData()
    - UpdateCiData()
    - SetNewIds()
    - UploadData()
}

class "MountSameDataInfoReversePathComparer" {
    + Compare()
}

class "SameDataCleaner" {
    + CleanSameData()
    + CleanSameData()
    - CleanSameDataOnWorkspace()
    - RestoreReadonly()
    - TrySetReadonlyAttributes()
}

class "SameDataInfo" {
    + AddFilteredChange()
    + AddFilteredXlinkChange()
    + GetCiData()
    + IsItemChanged()
    + GetMountsWithSameData()
    + GetFilteredCmPaths()
    - AddFilteredNode()
    - AddOriginalCheckedOutRevision()
    - AddSameDataInfo()
    - GetMountCmPath()
}

class "WorkspaceFileLocaInfoFinder" {
    - Codice.CM.Common.Checkin.Partial.SameData.IGetDownloadedContentHash<Codice.Client.Commands.Tree.TreeChangedNode>.TryGet()
}

class "CheckinOperation" {
    + Checkin()
    + Checkin()
    + UpdateCurrentUploadBlock()
    - Checkin()
    - DoCheckinWithRetries()
    - TryDoCheckinWithOutOfDateHeadRetries()
    - CheckPermissions()
    - CleanSameData()
    - FillData()
    - BuildCheckinTree()
    - CheckHeadsAreUpToDate()
    - ConfirmCheckin()
    - ConfirmCheckin()
    - TryGenerateHeadChgTree()
    - BuildOperationExtensionResult()
}

class "ChangedTreePathResolverWithCompleteTree" {
    - Codice.Client.BaseCommands.CheckIn.ICheckinChangedPathResolver.GetClientPath()
}

class "AddIgnoredError" {
    - Codice.CM.Common.Checkin.Partial.CheckinPermissionsChecker.IAddIgnoredError.Add()
}

class "CheckinProgress" {
    + GetStatusStringForCheckin()
    + GetStatusStringForShelve()
}

class "LoadedConfigurationTreeNodeCache" {
    + IsAlreadyLoaded()
    + IsAlreadyLoaded()
    + GetRelativeWkPathForConfigurationNode()
    + GetMountRelativeCmPath()
    + GetParent()
    + GetConfigurationNode()
    + AddToCache()
    + RemoveFromCache()
    - WalkTreeToCacheNodes()
    - GetLoadedMountCache()
    - GetAlreadyLoadedNode()
}

class "LoadedNodesInWorkspace" {
    + Contains()
    - InitializeCache()
    - CacheConfigurationTree()
    - GetMountCache()
}

class "WorkspaceConfigurator" {
    + Toggle()
    + Check()
    + Uncheck()
    + CheckDefaultLoadedContent()
    + UpdateChecks()
    - TryCheckNotLoadedContent()
    - TryCheckNode()
    - WalkParentsToCheck()
    - WalkToCheck()
    - UnloadFileIfAlreadyLoaded()
    - WalkToUncheck()
    - CheckIsAlreadyChanged()
    - CheckIsDirectoryAlreadyLoaded()
    - CheckIsPathAlreadyUsed()
    - IsPathAlreadyUsed()
    - UpdateCheckedStatus()
    - UpdateCacheFromCheckedStatus()
}

class "CmException" {
    + GetExceptionArguments()
    + GetExceptionArgsForSerialization()
    + GetObjectData()
    + SetDefaultMessage()
    - TryGetDefaultMessage()
    - TryGetLocalizedMessage()
}

class "CmClientException" {
    - TryGetLocalizedMessage()
}

class "ApplyMerge" {
    + ProcessIncomingChanges()
    - DoProcessIncomingChanges()
    + ProcessMerges()
    + GetProgress()
    + MergeTo()
}

class "Timers" {
    + UpdateTimer()
}

class "InvolvedMounts" {
    + Add()
}

class "NotifyMergeMessages" {
    - Codice.Client.BaseCommands.Merge.ApplyMerge.INotifyMessage.NotifyMerge()
    - Codice.Client.BaseCommands.Merge.ApplyMerge.INotifyMessage.NotifyMsg()
    - Codice.Client.BaseCommands.Merge.ApplyMerge.INotifyMessage.NotifyRawError()
}

class "ApplyCopiedNotifier" {
    - Codice.Client.BaseCommands.Merge.ApplyMerge.INotifyMessage.NotifyMsg()
    - Codice.Client.BaseCommands.Merge.ApplyMerge.INotifyMessage.NotifyMerge()
    - Codice.Client.BaseCommands.Merge.ApplyMerge.INotifyMessage.NotifyRawError()
}

class "PathInUseChecker" {
    - Codice.CM.Common.Merge.ConflictPath.ICheckPathInUse.IsPathInUse()
    - Codice.CM.Common.Merge.ConflictPath.ICheckPathInUse.GetPathSeparator()
}

class "CachedStatusSearcher" {
    + GetStatus()
}

class "LocalConfigurationNodeStatus" {
    + SetUnresolvedXlink()
    + AddLockInfo()
    + SetCannotMerge()
    - IsStatusSet()
}

class "StatusChangedCache" {
    + GetEntry()
}

class "StatusHeadCache" {
    + InitializeMountCache()
    + GetHeadRevision()
    + GetMountRelativeCmPath()
    + IsUnderUnresolvedXlink()
    + GetUnresolvedXlink()
    - GetParent()
    - FillMountCache()
}

class "ChildrenFsNodes" {
    + GetFsNode()
    + Clear()
    - IsNameAlreadyProcessed()
    - Initialize()
    - IsInitialized()
}

class "ConfigurationUpdate" {
    + Run()
    - WalkReconfigurationTree()
    - GetDirNodePath()
    - InitializeUpdateOperation()
    - EndUpdateOperation()
    - Unload()
    - Load()
    - UnloadWorkspaceRevision()
    - LoadWorkspaceRevision()
    - IsLoadOperation()
    - IsUnloadOperation()
    - IsRootNode()
    - SetUpdateProgressTotals()
}

class "DiskUpdater" {
    + DownloadFileOnDisk()
    + LoadDirectoryOnDisk()
    + SetItemFsProtection()
    + UnloadFromDisk()
    - UnloadDirectoryFromDisk()
    + TryPreserveFile()
    + TryPreserveFile()
    + IsChanged()
    + DownloadFile()
    + ExistFileOnDisk()
    - UnloadFileFromDisk()
    - IsChanged()
    - ExistsDirectoryOnDisk()
    - IsSymlink()
}

class "FsNodesCache" {
    + GetFsNode()
    + InvalidateFSEntry()
}

class "OutOfDateOperationsApplier" {
    + UpdateExistingItem()
    + DeleteItem()
    + UpdateNewItem()
    + MoveItem()
    + DownloadAll()
    - DoUpdateXlink()
    - DoUpdateFsProtection()
    - DoUpdateFile()
    - DoUpdateNewItem()
    - DoMoveItem()
    - UnloadDirectory()
    - UnloadFile()
    - ReportChangedFile()
    - DownloadFile()
    - UpdateNodeInWorkspaceTreeAndChangedTree()
    - DeleteWorkspaceRevision()
    - HasControlledEntries()
    - HasSameContent()
    - GetFileLocalInfo()
    - ConvertWkPathInRelativeWkPath()
    - IsReadOnly()
    - GetWorkspacePath()
}

class "OutOfDateUpdate" {
    + Run()
    + RunSkippingFileConflicts()
    - RunUpdate()
    - UpdateItemsByMount()
}

class "PartialUpdateUpdatedItemsReport" {
    - Codice.Client.BaseCommands.Triggers.TriggerManager.IUpdatedItems.GetUpdatedItemsReport()
}

class "UpdateDownloader" {
    + CreateQueue()
    - Codice.Client.GameUI.Update.IUpdateDownloader.DownloadFile()
    - Codice.Client.GameUI.Update.IUpdateDownloader.DownloadPending()
}

class "DynamicUpdateDownloader" {
    - Codice.Client.GameUI.Update.IUpdateDownloader.DownloadFile()
    - Codice.Client.GameUI.Update.IUpdateDownloader.DownloadPending()
}

class "UpdateDownloaderActions" {
    + AdjustFileAttributes()
    + AfterFilesDownloaded()
    - UpdateWorkspaceRevision()
    + BeforeFilesDownloaded()
    + IsCanceled()
    + BeforeBigFileSegmentDownloaded()
    + UpdateDownloadedProgress()
    + AddMissingFilesToDownload()
}

class "ComplexDependenciesChecker" {
    - GetDependenciesOperations()
    - ProcessComplexDependencies()
    - ProcessCycleDependencies()
    - CheckMoveCycle()
    - ProcessMoveIntoFolderWithSameNameDependencies()
    - IsMoveIntoAddedFolderWithSameName()
    - IsMoveDstInsideAdd()
    - ProcessMoveSourceDeletedDependencies()
    - ReplaceDeleteWithDelayedRenamedDelete()
    - ContainMovesInsideDelete()
    - HasOverwritenWithSameName()
    - ReplaceMoveWithTmpMoves()
    - GetTmpMark()
    - GetPathMarkedAsTmp()
}

class "UpdateWorkspaceDependenciesChecker" {
    + IsSourceUnderDeleted()
    + InitializeApplication()
    + FinalizeApplication()
    + TryApplyAdd()
    + TryApplyDelete()
    + TryApplyMove()
    + GetLogPath()
}

class "CliApplyShelveAfterPartialSwitchOperations" {
    - Codice.Client.Commands.IApplyShelveAfterPartialSwitchOperations.ApplyShelve()
}

class "PartialCheckinCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "PartialCheckinCmdImpl" {
    + PartialCheckin()
    + UpdateCurrentUploadBlock()
    + ApplyChanged()
}

class "PartialConfigureCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - Timer_Tick()
}

class "PartialConfigureCmdImpl" {
    + PartialConfigure()
    - ApplyUserConfiguration()
    - ConfigurePath()
    - LogSkippedException()
    - GetConfigurationTree()
    - GetNodeFromFullPath()
    - FindNode()
}

class "PartialShelvesetApplyCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetMergeResolutionOptions()
}

class "PartialShelvesetApplyCmdImpl" {
    + Apply()
}

class "PartialShelvesetCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "PartialShelvesetCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "PartialSwitchCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - SetSelectorAndUpdate()
}

class "PartialSwitchCmdImpl" {
    + SetSelectorAndUpdate()
    + SetSelectorAndUpdateToChangeset()
    + SetSelectorAndConfigure()
    - HasPendingChanges()
}

class "PartialUpdateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "UpdateProgressNotifier" {
    + Start()
    + Stop()
    + PrintReport()
    + PrintErrors()
    - Timer_Tick()
    - PrintActionList()
    - PrintMoved()
}

class "PartialUpdateCmdImpl" {
    + PartialUpdate()
    + PartialUpdateToChangeset()
    + RunPartialUpdate()
    + GetOutOfDateItems()
    + HasOutOfDateItems()
    - GetOutOfDateItems()
    - RunUpdate()
    - IsFullWorkspaceUpdate()
    - CalculateOutOfDateItems()
    - CheckTargetChangesetIsInCurrentBranch()
}

class "PendingChangesAfterPartialSwitch" {
    + Apply()
}

class "PrintCheckinProgress" {
    + Start()
    + Stop()
    - Timer_Tick()
}

class "AlreadyLoadedItemChecker" {
    + IsItemAlreadyLoaded()
    + AddItemAlreadyLoaded()
    - InitializeItemsCache()
}

class "CheckinImporter" {
    + ResetRepositoryDate()
    + PerformCheckin()
    + PerformCheckin()
    + PerformCheckin()
    + PerformCheckin()
}

class "Credentialization" {
    + SetAuthor()
    + CleanAuthor()
    - GetAuthor()
    - CleanInvalidCharacters()
    - RemoveWindowsDomainIfNeeded()
}

class "AttrChecker" {
    + AddEntry()
    + GetDirectorySeparator()
    + IsDirectory()
    + GetItemFSProtection()
    + GetItemFSProtection()
    + PathCombine()
    + GetFileName()
    + IsBinary()
    + IsSymlink()
    - IsBinaryContent()
    - IsBinaryPath()
}

class "ModifiedContent" {
    + ToString()
}

class "Deleted" {
    + ToString()
}

class "Renamed" {
    + ToString()
}

class "Copied" {
    + ToString()
}

class "Blob" {
    + AddRevInfo()
    + HasRevInfo()
}

class "BlobCollection" {
    + AddBlob()
    + Exists()
    + GetBlob()
    + GetBlobs()
    - AddEmptyBlob()
}

class "AddNodeCache" {
    + CheckDuplicatedChildren()
    + AddChildNodeToCache()
    - BuildChildCache()
}

class "ImportTreeOperations" {
    + CleanChanges()
    + GetCurrentChangesTree()
    + GetInternalChangesTree()
    + GetInternalTree()
    + SetServerTree()
    + FindInChanged()
    + SetNewIdSizeAndHash()
    + IsUnderMovedSrcOrDeleted()
    + Copy()
    + Copy()
    + Replace()
    + AddXlink()
    + EditXlink()
    - GetRawChild()
    + PrintChangesTree()
    - Print()
    + ProcessTreeForNode()
    + ProcessTreeForChildren()
    + GetTreeChildByName()
    + GetTreeChildrenByNames()
    + BuildTreeChangedNodeFromTreeNode()
}

class "ServerTree" {
    + Find()
    + Move()
    + Delete()
    + Add()
    + Copy()
    + IsItemLoaded()
    + CheckTreeContent()
    - DoCheckContent()
    - NotifyDifferences()
    - PrintChildren()
    - CombineCmPath()
    - AddTreeNode()
    + GetNodeToModify()
    + BuildClonedNode()
    - InstanceNode()
}

class "TreeLoader" {
    + LoadTree()
    + GetWorkingTree()
    + SaveTree()
    - LoadTreeFromServer()
    - SetLoadedNodeReferences()
}

class "TreeNode" {
    + UpdateRevisionInfo()
    + AddChild()
    + AddChildWithoutChecks()
    + GetChild()
    + GetChildByName()
    + GetChildByName()
    + GetChildByItemId()
    + RemoveChildAt()
    + RemoveChild()
    + RemoveChildByReference()
    + InitChildrenWithKnownSize()
    + ClearChildren()
    + GetChildrenCopy()
    + Equals()
    + GetHashCode()
    + NodeChanged()
    + IsDirectory()
    + IsSymlink()
    + GetChildrenCountRecursive()
    + CloneWithoutReferencesTo()
    + IsReachable()
    + CheckChildren()
    + GetNodeCountRecursive()
}

class "IOStatsCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "IOStatsCmdImpl" {
    + PerformTests()
    - PerformNetworkTests()
    + PerformNetworkDownload()
    - Download()
    + PerformNetworkUpload()
    - GetNetworkSpeedInMbps()
    - GetDiskSpeed()
    - GetSpeedInMbytes()
    - PerformDiskTest()
    - RemoveDiskTestFolder()
    - CheckDriveSize()
    - CheckDriveSizeLinux()
    - CheckDriveSizeWindows()
    - IsEnoughFreeSpace()
    - DoDiskTest()
    - DoDiskWriteTest()
    - WriteFile()
    - GenerateData()
    - DoDiskReadTest()
}

class "IOStatsParameters" {
    + SetPacketSize()
    + SetNetDataSize()
    + SetDiskDataSize()
    + SetNetworkTestIterations()
    - GetIntValue()
    + SetSystemDisplayTime()
    + SetSystemDisplayTimeInterval()
    + HasTestsToExecute()
    + HasNetworkTestsToExecute()
    + CanExecuteNetworkTests()
    + HasToShowSystemUsage()
}

class "SystemPerformanceStation" {
    - InitNetworkCounters()
    - InitDiskCounters()
    - AddNetworkCounters()
    - AddDiskCounters()
    - CreateCounter()
    + PrintAndRecordAllSamples()
    - PrintAndRecordNetworkCounters()
    - PrintAndRecordDiskCounters()
    - PrintAndRecordCounterStats()
    - RecordCounterStats()
    + PerformTest()
    - ConsumeFirstCounter()
    - HasCountersInitialized()
    - PrintAverages()
    - PrintAverageDiskValues()
    - PrintAverageNetworkValues()
    - PrintAverageCounterStats()
}

class "SystemStationRecorder" {
    + RecordSample()
    + GetAverageValue()
    + GetRegisteredCounterEntries()
    + Reset()
}

class "CounterRecord" {
    + UpdateRecord()
}

class "ExtensionConfigurationLoader" {
    + GetName()
    + GetExtensionDllFullPath()
    + ToString()
    - GetExecutingAssemblyDirectory()
    - RemoveFirstSeparator()
    - AdjustSlashes()
}

class "IssueTrackerCmdImpl" {
    + GetStatus()
    + UpdateStatus()
    + FindIssuesByStatus()
    + CheckConnection()
    - GetDevOpsTaskOperations()
}

class "IssueTrackerExtension" {
    + GetWorkingMode()
    + GetConfigurationParameters()
    + GetBranchPrefixes()
    + GetConfiguredUser()
    + Reset()
    - InitializeExtensions()
    - LoadExtension()
    + GetIssueTrackerExtensionFactory()
    - RegisterExtension()
    - ShutdownExtension()
    - GetIssueTrackerConfiguration()
}

class "IssueTrackerExtensionCache" {
    - DoGetIssueTracker()
}

class "TrackIssueTrackerEvent" {
    + IssueTrackerLoaded()
    - <IssueTrackerLoaded>b__0()
}

class "BranchFilter" {
    + Contains()
    + GetBranchIds()
    + UpdateBranchNames()
    + UpdateBranchNames()
    + GetTooltipText()
    - Codice.Client.BaseCommands.LayoutFilters.IListFilter<Codice.Client.BaseCommands.LayoutFilters.BranchFilterModel>.Contains()
    - System.IEquatable<Codice.Client.BaseCommands.LayoutFilters.IListFilter<Codice.Client.BaseCommands.LayoutFilters.BranchFilterModel>>.Equals()
    - InitBranchNames()
    - <GetBranchIds>b__0()
}

class "BranchFilterModel" {
    - Codice.Client.BaseCommands.LayoutFilters.IListFilterModel<Codice.Client.BaseCommands.LayoutFilters.BranchFilterModel>.UpdateCurrent()
    - System.IComparable.CompareTo()
    - System.IEquatable<Codice.Client.BaseCommands.LayoutFilters.BranchFilterModel>.Equals()
}

class "UserFilter" {
    + Contains()
    + UpdateUserNames()
    + GetTooltipText()
    - Codice.Client.BaseCommands.LayoutFilters.IListFilter<Codice.Client.BaseCommands.LayoutFilters.UserFilterModel>.Contains()
    - System.IEquatable<Codice.Client.BaseCommands.LayoutFilters.IListFilter<Codice.Client.BaseCommands.LayoutFilters.UserFilterModel>>.Equals()
    - InitUserNames()
}

class "UserFilterModel" {
    - Codice.Client.BaseCommands.LayoutFilters.IListFilterModel<Codice.Client.BaseCommands.LayoutFilters.UserFilterModel>.UpdateCurrent()
    - System.IComparable.CompareTo()
    - System.IEquatable<Codice.Client.BaseCommands.LayoutFilters.UserFilterModel>.Equals()
}

class "LockCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "LockCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LockListCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - ResolveRepositoryInfo()
    - ResolveBranchId()
    - ExtractItemGuidsFromCommandLine()
    - ExtractItemGuidFromArgument()
    - HandleIgnoreCaseRevSpecPathIfNeeded()
    - GetRevInfoFromRevSpec()
    - FilterLocks()
    - FilterSelectedItems()
    - FilterByLockAttributes()
}

class "ResolveRepositoryName" {
    + Resolve()
}

class "ResolveBranchName" {
    + Resolve()
}

class "Comparer" {
    + Equals()
    + GetHashCode()
}

class "LockUnlockCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - IsLegacyCommandFormat()
    - IsValidGUID()
    - FillUnresolvedItemIdsFromPath()
    - BuildItemsByRepSpec()
}

class "LogAncestorsDataProvider" {
    + GetCsets()
    - GetAncestorsData()
    - GetAncestors()
    - IsValidAncestorQueriesResults()
    - BuildChangesetsCache()
    - BuildMergesCache()
    - AddParentAsPending()
    - AddMergeSourcesAsPendings()
    - BuildNoPathError()
    - GetChangesetSpec()
}

class "LogChangesetsDataProvider" {
    + GetCsets()
    - GetChangesetsData()
    - GetChangesetsFromQueryResult()
}

class "LogCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetChangesetInfo()
}

class "LogCmdImpl" {
    + GetLog()
    - GetLogFromChangesetList()
    - GetChangesetList()
    - GetDataProvider()
    - GetCsLogInfo()
    - GetLogChangeInfo()
    - GetSeidName()
}

class "ChangesetsSorter" {
    + Compare()
}

class "LogBranchResolver" {
    + AddBranch()
}

class "LogQueryBuilder" {
    + GetChangesetsQuery()
    + GetMergesQuery()
    - AddMergeRangeFilter()
    - AddChangesetsRangeFilter()
    - AddDateFilter()
    - AddRepositoryClause()
    - OnlyChangesetBranch()
    - OnlyToChangeset()
}

class "BranchInfoRetriever" {
    + GetBranchInfo()
    + Load()
}

class "BranchIds" {
    + Add()
    + ToLoadInfo()
}

class "RepSpecComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.GetHashCode()
}

class "FsNodeList" {
    + RemoveNode()
    + FindNode()
    + Get()
}

class "WorkspaceTreeGuidRetriever" {
    + Init()
    + GetGuid()
    - AddNode()
    - Add()
    - AddRevisionInfoIds()
    - ResolveGuids()
    - IsLocalId()
}

class "TreeContentGuidRetriever" {
    + Init()
    + GetGuid()
    - AddNode()
    - Add()
    - AddIds()
    - ResolveGuids()
}

class "LsCmdImpl" {
    + LsFromChangeset()
    + LsFromSelector()
    + LsFromWorkspaceSelector()
    + LsFromWorkspace()
    - GetWorkspaceSelectorContent()
    - CheckLsTree()
}

class "LsDisplay" {
    + AppendToBuffer()
    - NotifyMessage()
    + FlushOutput()
    - GetDisplayGenericObject()
    - FillNotLoaded()
    - FillControlled()
    - FillPrivate()
    - FlushNonXmlOutput()
    - GetMaxLocationLength()
}

class "LsFormatter" {
    + GetFormatString()
    + PrintGuid()
    - InitPairs()
}

class "NodePrinter" {
    + PrintControlled()
    + PrintSymlink()
    + PrintPrivateFsNodes()
    - PrintSymlinkTarget()
    - PrintSymlinkItem()
    + PrintPrivate()
    - GetPrivateType()
    - PrintSymlinkControlled()
    - PrintSymlinkPrivate()
    - PrintNotLoaded()
    - GetName()
    - DisplayObject()
    - GetWorkspaceRelativePath()
    - InitFromBase()
    - DoPrintControlled()
}

class "SelectorTreePrinter" {
    + Print()
    - PrintNode()
    - GetXlinkChildName()
    - IsUnresolvedXlink()
    - GetRepInfo()
    - GetGuid()
    - GetItemGuid()
    - IsContainerNode()
}

class "LsSelectorComparer" {
    + Compare()
}

class "WorkspaceTreePrinter" {
    + Print()
    - PrintTargetChildren()
    - PrintControlleds()
    - GetModifiedChildName()
    - PrintPrivates()
    - PrintPrivateItem()
    - PrintControlledItem()
    - PrintSymlink()
    - GetXlinkChildName()
    - GetGuid()
    - GetItemGuid()
}

class "LsTreeComparer" {
    + Compare()
}

class "WorkspaceDependenciesChecker" {
    + IsSourceUnderDeleted()
    + InitializeApplication()
    + FinalizeApplication()
    + TryApplyAdd()
    + TryApplyDelete()
    + TryApplyMove()
    + GetLogPath()
    + TryToApplyAndSortOperations()
    - TryToProtectAndSortOperations()
    - TryToRenameIfNeeded()
    - TryToFixPathInUse()
}

class "DependenciesTreeFinder" {
    - Codice.CM.Common.Merge.IItemLoadedChecker.IsItemLoaded()
    - Codice.CM.Common.Merge.IItemUnderFolderChecker.IsItemUnderFolder()
}

class "CheckLockMergeFileConflicts" {
    + NeedsLock()
}

class "DeletedTreeRestorer" {
    + AddAppliedDeletedItem()
    + IsPreviouslyDeletedItem()
    + HadChangesInside()
    + GetPreviouslyDeleteRevision()
    - AddDeletedItem()
    - IsDeletedItem()
    - GetItemId()
    - GetWorkspaceNode()
}

class "DiffsToApplyAdapter" {
    + Adapt()
    - TryFixUsedPath()
}

class "MergeFilesGroup" {
    + DoMerge()
    - DownloadFiles()
    - SolveMerge()
    - LaunchMergeTool()
    - RunMergeTool()
    - CopyResult()
    - ExecuteMerge()
    - DoExecuteMerge()
    - ParametrizeConflict()
    - ParametrizeConflictContributor()
    - ParametrizeSeparator()
    - GetMergeTool()
    - GetSymbolicName()
    - GetBrName()
}

class "MergeOperationsApplier" {
    + ProcessDirectoryOperations()
    - GetSortedDirectoryOperations()
    + ProcessCopies()
    + ProcessDeletes()
    + ProcessAddedXlink()
    - LogAddedXlink()
    - FlushAddOperations()
    - FlushDeleteOperations()
    + UndoMove()
    + UndoDelete()
    + UndoAdd()
    + ProcessConflictCopy()
    + ProcessMove()
    - DoProcessMove()
    - NotifyDelete()
    - GetFailedCopies()
    - GetRevIdForDeleted()
    - StoreDeleteChange()
}

class "PathsInUse" {
    + TryFixUsedPath()
    + AddPathInUseInfo()
    + GetPaths()
}

class "MergeWorkspaceOperations" {
    + UpdateXlinkExpansionRules()
    + OpSetItemFsProtection()
    + OpCheckout()
    + EditXlinks()
    + CreateXlink()
    + LockCopiedItems()
    + UnLockItems()
    + OpCopy()
}

class "MergeMoveAndDelete" {
    + Move()
    + Delete()
}

class "MergeSourceByMount" {
    + Get()
}

class "ChangesNodeCache" {
    + IsCheckedOut()
    + GetNodeFromCache()
    + GetDeletedNodeFromCache()
}

class "RebaseXlinkResolver" {
    + RebaseXlink()
    - Codice.CM.WorkspaceServer.Tree.RebaseWorkspaceChanges.IXlinkResolver.GetDeletedXlinkInfo()
    - Codice.CM.WorkspaceServer.Tree.RebaseWorkspaceChanges.IXlinkResolver.TryGetLoadedXlinkInfo()
}

class "MissingDownloadActions" {
    + AdjustFileAttributes()
    + BeforeBigFileSegmentDownloaded()
    + UpdateDownloadedProgress()
    + BeforeFilesDownloaded()
    + AfterFilesDownloaded()
    + IsCanceled()
    + AddMissingFilesToDownload()
}

class "MissingDownloader" {
    + CreateQueue()
    + Download()
}

class "InvolvedMountsSearcher" {
    + GetMountsInvolvedOnMerge()
    - AddMergesMounts()
    - BuildMountPoint()
}

class "InvolvedTreeProvider" {
    + GetTreeForInvolvedMounts()
    - GetBaseTree()
    - ExplodeInvolvedMounts()
    - IsXlinkContentNeeded()
    - CopyChildren()
    - GetXlinks()
    - GetServerTree()
}

class "MissingFinder" {
    + GetMountMissingInfo()
}

class "MissingInfoBuilder" {
    - WalkTree()
    - BuildMissingInfo()
    - ConvertToNormalNode()
    - AddDeleteSubTree()
}

class "MovedCachedFinder" {
    + TryGetMovedInfo()
    + GetMovedCount()
    - FillLocalMoved()
    - AddLocalMoved()
    - AddMoved()
}

class "MissingItemInfo" {
    + IsXlink()
}

class "MissingLoader" {
    + LoadMissingItems()
    - LoadMergeMissingItems()
    - ExplodeWritables()
    - LoadRepositoryMergeItems()
    - NeedLoadRepositoryMergeItems()
    - LoadCopiedMissingItem()
    - LoadDirectoryContlict()
    - LoadDifference()
    - LoadChangedMissingItem()
    - LoadAddedMissingItem()
    - LoadMovedMissingItem()
    - ReleaseNewItemPath()
    - NeedRecursiveLoad()
    - LoadMissingItemRecursively()
    - LoadMissingItem()
    - UpdateItem()
    - UpdateXlink()
    - UpdateDirectory()
    - UpdateFile()
    - GetXlinkRootRevision()
    - HasPendingChangesInside()
    - IsUpToDate()
    - IsPathUpToDate()
    - CleanOutOfDateNode()
    - IsOnDisk()
    - IsSameNode()
    - LoadDirectoryOnDisk()
    - IsEmptyMerge()
}

class "MountMissingInfo" {
    + IsItemLoaded()
    + IsItemMissing()
    + TryGetMissingItem()
    + AddMissingItemInfo()
    + AddLoadedItem()
    + GetItemHandler()
}

class "MergeToFileTypeChecker" {
    + GetFileType()
}

class "MergeItem" {
    + ShouldSerializeSize()
    + ShouldSerializeUser()
    + ShouldSerializeDate()
    + ShouldSerializeSpec()
}

class "MovedMergeItem" {
    + ShouldSerializeSize()
}

class "Warning" {
    + ShouldSerializeDstPath()
    + ShouldSerializeSrcPath()
    + ShouldSerializePath()
}

class "ConflictDifference" {
    + ShouldSerializePath()
    + ShouldSerializeSrcPath()
    + ShouldSerializeDstPath()
    - GetChangeType()
}

class "CheckPathUsedInWorkspace" {
    - Codice.CM.Common.Merge.ConflictPath.ICheckPathInUse.IsPathInUse()
    - Codice.CM.Common.Merge.ConflictPath.ICheckPathInUse.GetPathSeparator()
}

class "AutomaticConflictConfigurator" {
    + GetResolutionType()
    - Parse()
    - ParseEntry()
    - GetConflictKey()
    - GetConflictResolution()
}

class "ContributorFileDownloader" {
    + GetContributorFile()
    + GetResultFile()
    + DownloadPendingFiles()
    + PreserveTmpFile()
    + CleanTmpFiles()
    + AddWorkspaceFileContributor()
    - AddContributorFile()
    + GetTmpFile()
}

class "ContributorKeyEqualitComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RevisionInfo>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RevisionInfo>.GetHashCode()
}

class "ContributorsMapping" {
    + GetContributors()
    + GetNormalContributors()
}

class "DirectoryConflicDependencies" {
    + IsEmpty()
}

class "MergePathResolver" {
    + GetDifferencePath()
    + GetExistingDifferencePaths()
    + GetMovedSrcPath()
    + GetMovedDstPath()
    + GetDifferencePathToUndo()
    + GetMovedSrcPathToUndo()
    + GetMovedDstPathToUndo()
    + GetValidPath()
    - CalculateExistingPath()
    - CalculateExistingPath()
    - CalculateNewPath()
    - CalculateNewPath()
}

class "GroupNodeFinder" {
    + Invalidate()
    + AddItemPath()
    + GetItemPath()
    + IsValidPathForItem()
    + GetValidPathsForItems()
}

class "GroupUsedPathChecker" {
    + IsPathInUse()
    + GetPathSeparator()
    + Invalidate()
    + AddUsedPath()
}

class "ProgressNotifier" {
    - Codice.Client.Commands.IProgressNotifier.NotifyProgress()
    - Codice.Client.Commands.IProgressNotifier.SetProgressElement()
    - Codice.Client.Commands.IProgressNotifier.SetProgressTotalWork()
}

class "InteractiveDirConflictsResolver" {
    + ResolveConflicts()
    - GenerateConflictsQueue()
    - ResolveConflict()
    - ResolveConflict()
    - TryConfiguredResolution()
}

class "ItemOnDiskLoader" {
    + LoadItemOnDisk()
    + GetItemHandler()
    + GetDownloader()
    - GetReadOnlySetter()
    + GetDiskStatus()
    - NotifyMessage()
    - PreserveFile()
}

class "MergeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - PrintNeededMerges()
    - PrintCreatedChangesets()
    - GetMergeResolutionOptions()
    + ApplyShelve()
    + ResolveConflictsAndProcessMerges()
    - ResolveConflictForPlugin()
    + GetSolvedConflicts()
    - InteractiveDirectoryConflictResolution()
    - PrintContributors()
    + PrintOperations()
    - PrintMergeStatus()
    + NotifyMessage()
    + NotifyRawMessage()
    + NotifyError()
    - GetMergeSpec()
}

class "FilterShelveToApplyByPath" {
    - Codice.Client.BaseCommands.Merge.InteractiveDirConflictsResolver.IFilterMergeResult.Filter()
}

class "MergeCmdImpl" {
    + ExecuteInternalServerSideMergeTo()
    + GetMergeResult()
    + FindMerge()
    + ProcessMerges()
}

class "MergeDownloader" {
    + CreateQueue()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.Download()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.DownloadPending()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.GetFailedDownloadedFileInfo()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.EnableStopOnException()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.DisableStopOnException()
}

class "DynamicMergeDownloader" {
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.Download()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.DownloadPending()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.GetFailedDownloadedFileInfo()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.EnableStopOnException()
    - Codice.Client.BaseCommands.Merge.IMergeDownloader.DisableStopOnException()
}

class "MergeDownloadActions" {
    + AdjustFileAttributes()
    + BeforeBigFileSegmentDownloaded()
    + UpdateDownloadedProgress()
    + BeforeFilesDownloaded()
    + AfterFilesDownloaded()
    + AddMissingFilesToDownload()
    + IsCanceled()
}

class "MergeMountedPathResolver" {
    + GetValidPath()
    - GetMountCmPath()
}

class "MergePrinter" {
    + PrintStatus()
    + PrintOperations()
    + PrintContributors()
    - PrintStatus()
    - PrintContributor()
    - GetChangesetSpec()
    - GetChangesetBranch()
    - ReportConflict()
    - ReportAddMoveConflict()
    - ReportChangeDeleteConflict()
    - ReportCycleMoveConflict()
    - ReportDeleteChangeConflict()
    - ReportDeleteMoveConflict()
    - ReportDivergentMoveConflict()
    - ReportEvilTwinConflict()
    - ReportLoadedTwiceConflict()
    - ReportMoveAddConflict()
    - ReportMoveDeleteConflict()
    - ReportMovedEvilTwinConflict()
    - ReportReadonlyXLinkConflict()
    - ReportFileModifiedOnSource()
    - ReportFileConflict()
    - GetItemIdFromConflict()
    - ReportDeleteDeleteWarning()
    - ReportPathInConflictWarning()
    - ReportDiscardedDeleteWarning()
    - ReportDiscardedChangedWarning()
    - ReportDiscardedFSProtectionWarning()
    - ReportDiscardedMoveWarning()
    - ReportFsOperationToApply()
    - ReportAddOperation()
    - ReportDeleteOperation()
    - ReportMoveOperation()
    - Print()
    - FileModifiedOnSourceConflictToString()
    - FileConflictToString()
    - DeleteDeleteWarningToString()
    - PathInConflictWarningToString()
    - DiscardedDeleteWarningToString()
    - DiscardedChangedWarningToString()
    - DiscardedFSProtectionWarningToString()
    - DiscardedMoveWarningToString()
    - FsOperationToString()
    - AddOperationToString()
    - DeleteOperationToString()
    - MoveOperationToString()
    - GetRevInfoString()
}

class "MergeResolutionOptions" {
    + GetMergeResolutionType()
    + GetMergeContributorType()
}

class "MergeSolvedFileConflicts" {
    + TryGetCurrentConflict()
    + SetCurrentConflict()
    + IsResolved()
    + GetCount()
    + AddResolveFile()
    + TryGetResultFile()
    + GetAllFiles()
}

class "NotifyMergeProgress" {
    + SetProgress()
}

class "OperationsApplierPath" {
    + GetDiffWkPath()
    + GetExistingDiffWkPaths()
    + GetMoveSrcWkPath()
    + GetMoveDstWkPath()
    + GetCmPath()
    + GetDiffWkPathToUndo()
    + GetMoveSrcWkPathToUndo()
    + GetMoveDstWkPathToUndo()
    + GetWorkspacePath()
}

class "StoreMergedChanges" {
    + SetCurrentMergeLink()
    + CommitMergeChanges()
    + ReplacedItem()
    + MergedItem()
    + MovedItem()
    + DeletedItem()
    + AddedItem()
    + ModifiedXlinks()
    + ModifiedItems()
}

class "StoreMergeProgress" {
    + SaveFileConflicts()
    + SaveDirectoryConflicts()
    + SaveDifferences()
    + IsCurrentMergeCompleted()
    + StartMerge()
    + IsMergeInProgress()
    + CheckOtherOperationInProgress()
    + IsCompleted()
    + IsCompletedExceptForFileConflicts()
    + GetMergeProgressChecker()
    + GetCompletedMerges()
    + CompleteMerge()
    + GetInProgressMergesForTesting()
    - CheckIsCompleted()
    - ContainsDirectoryConflictList()
    - ContainsFileConflictList()
    - ContainsDifferenceList()
    - UpdateDifferences()
    - UpdateDirectoryConflicts()
    - UpdateFileConflicts()
    - CheckInProgressForIncomingChanges()
    - CheckInProgressForMerge()
}

class "MergeProgressChecker" {
    + Contains()
    + Contains()
    + Contains()
    - LoadMergeProgress()
}

class "SymbolicInfoHelper" {
    + ObtainSymbolicInfo()
    + ObtainSymbolicInfoForNonRecursiveMerge()
    + ProcessVirtualChangeset()
    - GetExtraInfo()
    - GetExtraInfoForNonRecursiveMerge()
    - BuildHeader()
    - GetSymbolicInfo()
    - GetVirtualChangeset()
    - GetSymbolicName()
    - IsVirtualContributor()
    - GetRelativePath()
    - GetBrName()
    - GetChangesetInfo()
}

class "SymbolicContributorInfo" {
    + GetChangesetSpec()
    + GetRevisionChangesetSpec()
    - GetChangesetSpec()
}

class "TmpMergeProgressDataStore" {
    + ReadMergeProgress()
    + SaveMergeProgress()
    + CleanMount()
    + GetInProgressMergeLink()
    + GetInProgressMergeLinks()
}

class "TmpMergesToCheckinDataStore" {
    - Codice.Client.Commands.Merge.IStoreMergeLinksToCheckin.AddMerge()
    - Codice.Client.Commands.Merge.IStoreMergeLinksToCheckin.GetMerges()
    + CleanMount()
    + CleanAll()
    + GetMerges()
}

class "TmpMergeChangesDataStore" {
    + AddChanges()
}

class "WorkspaceNodeFinder" {
    + GetItemPath()
    + IsValidPathForItem()
    + GetValidPathsForItems()
    + Invalidate()
    + IsItemUnderFolder()
}

class "ResolveChangesetXlink" {
    - Codice.Client.BaseCommands.Merge.ResolveWritableXlinkMergeSource.IResolveXlinkChangeset.Resolve()
}

class "WritableXlinkConflictsFinder" {
    + TryGetWritableXlinkConflict()
    - Initialize()
}

class "XlinkRulesUpdater" {
    - Codice.Client.Common.Xlinks.XlinkBranchExpander.IExpansionRulesUpdater.UpdateExpansionRule()
}

class "ApplyPatchCmdImpl" {
    + ApplyPatch()
    - RunPatch()
    - IsElevationRequired()
    - TransformPatchExec()
    - PrintMessage()
}

class "CreatePatchCmdImpl" {
    + CreatePatch()
}

class "RevIdsByMountId" {
    + Contains()
    + ContainsXlink()
    - AddRevision()
    - AddXlink()
}

class "PatchCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - CreatePatch()
    - ApplyPatch()
}

class "ItemHandlerCache" {
    + Get()
}

class "ReplicationOperation" {
    + NotifyMessage()
    + InitReplHandler()
    + SetTrId()
    + GetStatus()
    + SetStatus()
    + Finish()
    + Cancel()
    + DoCancel()
    + WaitLoop()
    + SetOperationAsStarted()
    + SetOperationAsFinished()
    + IsRunningOperation()
    - SetOperationAsCanceled()
    + IsCanceledByUser()
}

class "DirectReplicationOperation" {
    + Run()
    - ContactServerToForceSSLCertCheck()
    + RunPreview()
    - CheckNotSameRepository()
    - AdjustRepository()
}

class "ExportPackageOperation" {
    + Run()
    + GetStatus()
    + Cancel()
}

class "ImportPackageOperation" {
    + Run()
    + GetStatus()
    - ReplicationImportPackageImpl()
    + Cancel()
    - SetCancelledStatus()
    - UploadPackage()
}

class "ReplicateCreatePackage" {
    + DownloadRemotePackage()
    + DownloadData()
    - ThreadDownloadAndWrite()
    - DownloadMultipleRevisions()
    - DownloadSingleRevision()
    - UpdateSaveDataStatus()
    + GetProgress()
    - WriteObjectData()
    + Cancel()
    - IsCancelled()
}

class "ReplicateImportPackage" {
    + SendData()
    + Close()
    - NotifyWrite()
    + GetProgress()
    + Cancel()
    - IsCancelled()
}

class "ReplicateUploader" {
    + Upload()
}

class "ReplicationCmdImpl" {
    + Clone()
    + Replicate()
}

class "ReplicationNotifier" {
    + SetEncoding()
    + NotifyMessageWrite()
    + NotifyException()
    + DisplayObject()
    + NotifyMessage()
    + NotifyRawMessage()
    + NotifyError()
    + NotifyRawError()
    + GetReplicationStatus()
    + GetNotificationMessage()
}

class "ReplicationProgressBuilder" {
    + GetProgress()
    - BuildPrintableStatus()
    - StatusToString()
    - SetDataProgress()
    - SetPushProgress()
    - SetFetchProgress()
    - UpdateOverallProgress()
    - UpdateStageProgress()
    - Finish()
    - FillAllStages()
    - FillStagesUpTo()
}

class "ReplicationLogEntryDateComparer" {
    + Compare()
}

class "RevertCmdImpl" {
    + Revert()
    + Revert()
    - RevertMount()
}

class "RevertInfoXlinkResolver" {
    - Codice.Client.BaseCommands.Revert.RevertInfoCalculator.IXlinkResolver.GetClientXlink()
    - Codice.Client.BaseCommands.Revert.RevertInfoCalculator.IXlinkResolver.GetRepositoryInfo()
    - Codice.Client.BaseCommands.Revert.RevertInfoCalculator.IXlinkResolver.GetXlinkTree()
}

class "CliApplyShelveAfterSwitchOperations" {
    - Codice.Client.Commands.IApplyShelveAfterSwitchOperations.ApplyShelve()
    - Codice.Client.Commands.IApplyShelveAfterSwitchOperations.PrintConflicts()
    - InteractiveDirectoryConflictResolution()
}

class "CliApplyShelveWithConflictsQuestioner" {
    - Codice.Client.Commands.IApplyShelveWithConflictsQuestioner.ApplyShelveWithConflicts()
}

class "CliCalculateApplyShelveAfterSwitchOperations" {
    - Codice.Client.Commands.ICalculateApplyShelveAfterSwitchOperations.CalculateApplyShelve()
}

class "CliContinueWithPendingQuestioner" {
    + ContinueWithPendingChanges()
}

class "CliShelveBeforeSwitchOperations" {
    - Codice.Client.Commands.IShelveBeforeSwitchOperations.ApplyLocalChanges()
    - Codice.Client.Commands.IShelveBeforeSwitchOperations.ShelvePendingChanges()
    - Codice.Client.Commands.IShelveBeforeSwitchOperations.UndoPendingChanges()
}

class "CliShelvePendingChangesQuestioner" {
    - Codice.Client.Commands.IShelvePendingChangesQuestioner.ShelvePendingChanges()
}

class "PendingChangesAfterSwitch" {
    + Apply()
    - NotifyMessage()
}

class "PendingChangesBeforeSwitch" {
    + AllowPartialSwitch()
    + AllowSwitch()
    + AllowUpdate()
    - WarnAboutPendingChanges()
    - AskToShelvePendingChangesOnPartialWorkspace()
    - AskToShelvePendingChangesOnCompleteWorkspace()
    - AskToShelvePendingChanges()
}

class "SetSelectorCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "SetSelectorCmdImpl" {
    + SetSelector()
    + SetSelectorAndUpdate()
    - DoUpdate()
    - DoSetSelector()
    - ControlledChangesAllowOperation()
    - CheckRestrictionsWithControlledChanges()
    - IsSameRepInfo()
    - IsSameBranch()
    - IsSameChangeset()
    - NotifyStatusMessage()
}

class "SwitchToBranchCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + NotifyMessage()
    + Execute()
    - GetRepInfo()
}

class "SwitchCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
}

class "SwitchOptions" {
    + AreValidOptions()
    + IsLabelSpecified()
    + IsChangesetSpecified()
    + IsObjectSpecified()
}

class "SwitchToBranchCmdImpl" {
    + SwitchToLabel()
    + SwitchToBranch()
    + SwitchToChangeset()
    + SwitchToShelve()
    - SwitchTo()
    + SetSelectorAndUpdate()
    - NotifyPerformingSwitchStatus()
}

class "ShelveCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ShelveOperation" {
    + CheckinTree()
    + CheckCheckinPreconditionsStep()
    + UploadDataStep()
    + ConfirmCheckinStep()
    - ConfirmShelve()
}

class "ShelvesetApplyCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + ApplyShelveset()
}

class "ShelvesetCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "ShelvesetCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + CreateShelveset()
    - BuildShelveParams()
    - ApplyLocalChanges()
}

class "ShelvesetDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + DeleteShelveset()
}

class "AccessTokenCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "AccessTokenCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AccessTokenListCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AccessTokenRevealCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AccessTokenRevokeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AclCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - ChangePermission()
}

class "ActivateUserCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AddIgnorePatternCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetWkPath()
    - GetFilterMode()
    - GetWorkspaceInfo()
    - GetRemovePatterns()
}

class "AnnotateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - PrintResults()
    - GetDateFormatParam()
}

class "ArchiveCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - Archive()
    - Unarchive()
    - UnarchiveData()
}

class "AttributeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "AttributeCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AttributeDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AttributeEditCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AttributeRenameCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AttributeSetCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AttributeUnsetCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "AutoCheckinCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BaseCommandsImpl" {
    + SetNotifier()
    + InitLocalization()
    + InitClientHandlers()
    + InitAssemblyResolver()
    + CheckOut()
    + CheckOut()
    + CheckOut()
    + CheckOut()
    + CheckIn()
    + CreateCheckInOperation()
    + Shelve()
    + DeleteShelve()
    + GetRevision()
    + GetRevision()
    + Revert()
    + UndeleteRevision()
    + Update()
    + Update()
    + UpdateToLatest()
    + PartialUpdate()
    + PartialCheckin()
    + PartialCalulateOutOfDateItems()
    + GetWorkspaceTreeNodeFromPath()
    + GetWorkspaceTreeNodeFromPath()
    + Add()
    + GetRevisionHistory()
    + GetRevisionHistory()
    + AnnotateWithExtendedInfo()
    + AnnotateWithExtendedInfo()
    + AnnotateWithExtendedInfo()
    + Annotate()
    + DiffChangeset()
    + DiffChangesetWithoutMergeTracking()
    + DiffChangeset()
    + WebDiff()
    + CheckConnection()
    + UndoChange()
    + UndoCheckout()
    + UndoCheckout()
    + Move()
    + Delete()
    + Delete()
    + Delete()
    + FindChanged()
    + FindPrivate()
    + FindQuery()
    + FindQuery()
    + FindQuery()
    + DiffWithPrevious()
    + ObtainDiffMetrics()
    + GetRevisionDatasToFiles()
    + GetRevisionDataToFile()
    + GetRevisionDataToFile()
    + DownloadRevisionToFile()
    + LabelChangeset()
    + Diff()
    + GetDiffInfo()
    + GetAddedDiffInfo()
    + GetDeletedDiffInfo()
    + GetDiffInfo()
    + GetAddedDiffInfo()
    + GetDeletedDiffInfo()
    + LaunchDifferences()
    + CheckRepositoryExists()
    + MkRepository()
    + RenameRepository()
    + MkWorkspace()
    + MkDynamicWorkspace()
    + MkTemporaryWorkspace()
    + RmWorkspace()
    + HasControlledChanges()
    + HasChanges()
    + GetWorkspaceChanges()
    + SwitchToBranch()
    + SwitchToLabel()
    + SwitchToShelve()
    + SwitchToChangeset()
    + SetSelectorAndUpdate()
    + CheckSelector()
    + SetSelector()
    + GetChangeset()
    + GetBranch()
    + GetBranch()
    + GetBranchParentChangeset()
    + GetLabel()
    + GetWorkspaceSelector()
    + GetWorkspaceSelectorText()
    + GetSelectorUserInformation()
    + GetDefaultOrFirstSelector()
    + IsWorkspaceLocked()
    + MkAttribute()
    + SetAttribute()
    + RenameAttribute()
    + DeleteAttribute()
    + MkLabel()
    + MkLabelInAllXlinkedRepositories()
    + CreateBranch()
    + CreateBranch()
    + RenameBranch()
    + DeleteBranch()
    + GetBranchInfo()
    + GetBranchInfo()
    + GetMarkerInfo()
    + GetMarkerInfoByName()
    + GetChangesetInfo()
    + ChangeRevisionType()
    + ApplyPartialShelveset()
    + ChangeRevisionType()
    + GetPath()
    + RemoveRepository()
    + AddRepository()
    + GetContent()
    + GetRevisionMerges()
    + ExecuteRepositoryQuery()
    + ExecuteRepositoryQuery()
    + GetCurrentUserName()
    + GetCurrentSeid()
    + GetWorkspaceFromPath()
    + GetWorkspaceFromPath()
    + GetWorkspaceFromId()
    + GetParentPath()
    + GetRootFolderFromFileListOnDisk()
    + LinkTask()
    + UnlinkTask()
    + GetTaskList()
    + GetChangesetList()
    + GetSelectorContent()
    + GetSelectorContent()
    + GetXlinksInChangesetTree()
    + GetXlinksInChangesetTree()
    + GetRepositoryServerInfo()
    + GetRepositoryInfo()
    + GetRepositoryInfo()
    + GetRepositoryInfo()
    + GetRepositoryInfoFromPath()
    + MkTrigger()
    + RemoveTrigger()
    + GetObjectIdFromSpec()
    + SwitchWorkspaceSelector()
    + GetMoveRenameDetector()
    + UpdateTrigger()
    + QueryTrigger()
    + QueryTrigger()
    + GetWorkspaceTree()
    + MoveChangeset()
    + EditChangesetComment()
    + IsParentOf()
    + IsSamePath()
    + IsChanged()
    + IsOnChangedTree()
    + IsCopied()
    + GetRepositoryList()
    + CheckRepositoryServerDBIntegrity()
    + CheckRepositoryDBIntegrity()
    + GetUsers()
    + GetGroups()
    + GetSecurityMembers()
    + UncoUnchanged()
    + GroupPathsByWorkspace()
    + GetWorkspaceTreeNodes()
    + GetSelectorRevisionInfo()
    + GetItemLastPath()
    + RenameWorkspace()
    + RenameLabel()
    + RemoveLabel()
    + GetWorkspaceList()
    + AddExistingWorkspace()
    + GetRepositoriesFromWorkspace()
    + GetRepostoryForPath()
    + GetAllRepositories()
    - RevisionHistoryImpl()
    - OpGetRevisionHistory()
    + SelectiveUpdate()
    + CreatePathResolver()
    + CreateWorkspaceResolver()
    + DescribeBranchHistory()
    + CreateSecuredPath()
    + DeleteSecuredPath()
    + UpdateSecuredPath()
    + GetAllSecuredPaths()
    + GetSecuredPaths()
    + CreateCodeReviewForChangeset()
    + CreateCodeReviewForBranch()
    + GetCodeReviewInfo()
    + EditCodeReview()
    + DeleteCodeReview()
}

class "DiskHandler" {
    + MarkAsPrivate()
    + MoveOnDisk()
    + FileExists()
    + DirectoryExists()
    + CreateDirectory()
    + DeleteFile()
    + DeleteDirectoryIfEmtpy()
    + GetItemFSProtection()
    + SetItemFsProtection()
    + CalcLinkInfo()
    + GetFileSize()
    + GetFileHashCode()
}

class "BranchCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "BranchCmdImpl" {
    + CreateBranch()
    + CreateBranch()
    + RenameBranch()
    + DeleteBranch()
    + GetBranchHistory()
    + GetMergeNeededBranches()
}

class "BranchHistoryBuilder" {
    + BuildBranchHistory()
    - CalculateMergesHistory()
    - GetMergesHistory()
    - GetMergeHistoryEntry()
    - BuildMergeEntry()
    - GetHumanReadableMergeType()
    - BuildLabeledChangesets()
}

class "BranchCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BranchDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BranchRenameCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "BranchShowMainCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetCurrentRepositositorySpec()
}

class "BranchShowMergesCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - PrintResults()
}

class "ProgressData" {
    + StartTimerIfNotStarted()
    + StartNewPeriod()
}

class "ChangelistCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - ParseSubCommand()
    - ProcessChangelistManagementCommand()
    - ProcessNewManagementCommand()
    - AddNewChangelist()
    - DeleteChangelist()
    - ListChangelists()
    - EditChangelist()
    - TryGetDescriptionFromOption()
    - TryGetNameFromOption()
    - TryGetNewNameFromOption()
    - GetNameFromOption()
    - ParseEditAction()
    - ProcessChangelistContentsCommand()
    - DeleteFromChangelist()
    - AddToChangelist()
    - ShowUsage()
}

class "ChangeRevisionTypeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ChangeRevisionTypeCmdImpl" {
    + ChangeType()
    + ChangeType()
}

class "ChangeUserPasswordCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "CheckConnectionCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "CheckDBIntegrityCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "CheckoutCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "CheckoutCmdImpl" {
    + CheckOut()
    - DoCheckOut()
    - CheckInput()
    - AdjustFilesOnDisk()
    - IsFile()
}

class "CheckSelectorSyntaxCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "CloneCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "CmThreadWaiter" {
    + Execute()
    - ThreadWork()
}

class "CodeReviewFormatter" {
    + GetFormatString()
    + IsGuidUsed()
}

class "CodeReviewCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - DeleteCodeReview()
}

class "CodeReviewCmdImpl" {
    + CreateCodeReviewForChangeset()
    + CreateCodeReviewForBranch()
    + GetCodeReviewInfo()
    + EditCodeReview()
    + AddOrUpdateAssignee()
    + DeleteCodeReview()
    - CreateCodeReview()
    - BuildReviewInfo()
}

class "CommentEditor" {
    + CreateComment()
    + ProcessFileContent()
}

class "Progress" {
    + InitTotals()
    + AddProcessedFile()
    + SetCurrentFile()
    + SetFinished()
}

class "DeactivateUserCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "DiffMetricsCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "DiffMetricsCmdImpl" {
    + ObtainDiffMetricsFromSpecs()
    - ObtainFile()
}

class "MergeVariables" {
    + AddPair()
    + ReplaceVars()
}

class "FastExportCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "FastImportCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "FilePropertiesSetter" {
    + SetFileTime()
    + SetFsProtection()
    + SetReadOnlyAttributes()
    - MakeWritable()
    - SetFileTime()
}

class "FindChangedCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + DoDisplayObject()
}

class "FindChangedCmdImpl" {
    + FindChanged()
    - ProcessChangedOnPath()
    - IsRecursiveAndDirectory()
    - CheckRoot()
    - ProcessChanged()
    - GetChangedItem()
}

class "FindCheckedoutCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + DoDisplayObject()
}

class "FindCheckedoutCmdImpl" {
    + FindCheckedout()
    + FindCheckedout()
    + DoFindCheckedout()
    - PrintCheckoutInfo()
}

class "FindPrivateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "FindPrivateCmdImpl" {
    + FindPrivate()
    - PrintPrivatesOnPath()
    - BrowsePrivates()
    - PrintPrivate()
    - IsIgnored()
    - DoPrintPrivate()
}

class "GetConfigCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetIssueTrackerExtension()
}

class "GetFileCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - WriteSpecs()
    - IndexSpecsByRep()
    - GenCatSpec()
    - BuildRevisionsData()
    - GetSpecOutputFilePath()
    - CheckPathSecurity()
    - BuildGetFileImpl()
}

class "GetFileCmdImpl" {
    + SetIsOnDebugMode()
    + SetSaveSymlinkContentToFile()
    + DownloadRevisionDatas()
    + DownloadRevisionToFile()
    - WriteDirectoryRevisionData()
    - PrintChildrenItem()
}

class "GetLanguageCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "GetRevisionCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "GetStatusCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + DoDisplayObject()
    - GetStatsString()
}

class "GetStatusCmdImpl" {
    + GetStatus()
    - GetStatus()
    + GetStatistics()
    - GetWorkspaceInfo()
    - PrintStatusForItem()
    - PrintStatus()
    - IsChanged()
}

class "GetStatusTimer" {
    + Start()
    + Stop()
    + GetTotalTime()
    + Reset()
}

class "GetTaskBranchesCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - ReplaceUserFormat()
}

class "GetTaskBranchesCmdImpl" {
    + GetTaskBranches()
    - GetCandidates()
    - FilterCandidates()
    - AddTaskConfResults()
    - AddBranch()
    - Exists()
}

class "GetWorkspaceFromPathCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - OutputWorkspaceForPath()
}

class "GetWorkspaceWorkingInfoCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "HashProvider" {
    + ComputeBytes()
    + GetHashCode()
    + GetCalculatedHashCode()
}

class "IssueTrackerCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LabelCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "LabelCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LabelDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LabelRenameCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LicenseInfoCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "NameComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.LicenseInfoCmd.PrintableSeid>.Compare()
}

class "StatusComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.LicenseInfoCmd.PrintableSeid>.Compare()
}

class "LastSeenComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.LicenseInfoCmd.PrintableSeid>.Compare()
}

class "LinkTaskCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LinkTaskCmdImpl" {
    - GetAttributeId()
    - CheckChangesetSpec()
    - GetAttributeRealizationInfo()
    - ChangeAttributeValue()
    - GetAttributeName()
    - GetPlasticChangesetFromSpec()
    + LinkTask()
    + UnlinkTask()
    + GetTaskList()
    + GetChangesetList()
}

class "ListUsersCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "LsCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + DoDisplayObject()
    + Execute()
    - DoLs()
    - DoLsFromChangeset()
    - DoLsFromWorkspace()
    - GetLsFromWorkspaceOptions()
    - DoLsFromWorkspaceSelector()
    - DoLsFromSelector()
    - GetLsBasicOptions()
}

class "ShowSelectorCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + WriteTextFromWorkspaceSelector()
}

class "ManipulateSelectorCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "MkWkCmdImpl" {
    + MkDynamicWorkspace()
    + MkTemporaryWorkspace()
    + MkWorkspace()
    - TryToDeleteWorkspace()
}

class "MoveCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "MoveCmdImpl" {
    + Move()
    - CheckCloaked()
}

class "MoveRenameDetector" {
    + CalculateSourceAndDestinationRealPath()
    - ConcatUntilName()
    - CalculateSourceAndDestinationSameLength()
    - CalculateSourceAndDestinationDifferentLength()
    - BuildPath()
    - ExistsAllDirectories()
    - GetMovedItem()
    - CombinePath()
    - GetListFromPath()
    - GetFileName()
}

class "ObjectSpecCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "PartialCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "ProfileCmd" {
    + DoGetDescription()
    + DoGetHelp()
    + DoGetUsage()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "ProfileCreateCmd" {
    + DoGetDescription()
    + DoGetHelp()
    + DoGetUsage()
    + Execute()
    - CreateProfileFromOptions()
}

class "ProfileDeleteCmd" {
    + DoGetDescription()
    + DoGetHelp()
    + DoGetUsage()
    + Execute()
    - DeleteByIndex()
}

class "ProfileListCmd" {
    + DoGetDescription()
    + DoGetHelp()
    + DoGetUsage()
    + Execute()
}

class "PrintableServerProfileRow" {
    + Format()
}

class "ProgressStatus" {
    + SetTotalWork()
    + IncremetWorkDone()
    + SetStatusMessage()
    + IncremetWorkDoneWithMessage()
    + CompleteWork()
    + GetProgressInfo()
    + IsProgressInfoUpToDate()
    + UpdateProgressInfo()
    + Cancel()
    + IsCancelled()
    - IsUpToDate()
}

class "ProgressInfo" {
    + Update()
    + GetRateDonePerunit()
}

class "PullCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "PushCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "SolveParameterDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "QueryCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - SubstituteValuesInDataSet()
}

class "ReadOnlySetter" {
    + IsAllWorkspaceWritable()
    + SetReadOnlyAttributes()
    + KeepWritable()
    + SetReadOnlyAttributes()
    - NeedSetReadOnly()
    - NeedKeepWritable()
}

class "RenameWorkspaceCmdImpl" {
    + RenameWorkspace()
}

class "ReplicateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RepositoryAddCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RepositoryCmd" {
    + DoGetDescription()
    + DoGetHelp()
    + DoGetUsage()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "RepositoryCmdImpl" {
    + CreateRepository()
    + CreateRepositoryFromResolvedServer()
    + CreateRepositoryWithGuid()
    + RenameRepository()
    + AddRepository()
}

class "RepositoryCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RepositoryDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RepositoryListCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - TranslateRepositoryFormat()
}

class "RepositoryRenameCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetRepositoryInfo()
}

class "RevertCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - RevertItem()
}

class "CacheDictionary" {
    + GetCacheServer()
}

class "RevisionHistoryCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "HistoryRevisionPrinter" {
    + PrintHeader()
    + PrintRevisionDisplay()
    + FlushOutput()
    + PrintLongFormat()
    - WriteLine()
}

class "RevisionHistoriesDisplay" {
    + Add()
}

class "RevisionHistoryDisplay" {
    + Add()
}

class "RevisionTreeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RmCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "RmControlledCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RmPrivateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "RmPrivateCmdImpl" {
    + RemovePrivateFiles()
}

class "Notify" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RmPrivateResults" {
    + FileDelete()
    + DirectoryDelete()
    + SkipControlledFile()
    + SkipControlledDirectory()
    + SkipIgnoredFile()
    + SkipIgnoredDirectory()
    + SkipMissingFileOrDirectory()
    + PrintResults()
}

class "SelectorEditor" {
    + ProcessFileContent()
    - GetSelectorText()
    + EditSelector()
    - WriteSelector()
}

class "SetOwnerCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "SetOwnerCmdImpl" {
    + SetOwner()
}

class "ShowFindObjectsCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ShowOwnerCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "ShowPendingMergeLinksCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - NotifyPendingMergeLink()
}

class "ShowPermissionsCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "SpinWorker" {
    + Spin()
    + RequestStop()
}

class "SpinAnimation" {
    + Start()
    + Stop()
}

class "CreateSubCommand" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TriggerCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "TriggerCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "TriggerDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "TriggerEditCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "TriggerListCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "TriggerShowTypesCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "UncoUnchangedCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + DoDisplayObject()
}

class "UncoUnchangedCmdImpl" {
    + UncoUnchanged()
    - UndoCheckout()
    - Checkout()
    - GetChanges()
    - GetChangesFromWkInfo()
    - GetChangesFromPathList()
}

class "UndeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "UndeleteCmdImpl" {
    + Undelete()
    - DoUndelete()
    - ProcessNodesToUndelete()
    - DoCopy()
    - CopyRevisions()
    - CheckCanBeUndeleted()
    - CheckXlinkNode()
    - CheckItemAlreadyLoaded()
    - GetRevisionTreeNode()
    - GetMountPoint()
    - GetDownloader()
    - InitializeHandlers()
}

class "UndoChangeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    + DoDisplayObject()
    + NotifyException()
}

class "UndoChangeCmdImpl" {
    + UndoChange()
    - DoUndoChange()
    - ResolvePendingUnDoCo()
}

class "UndoCmd" {
    + DoGetDescription()
    + DoGetHelp()
    + DoGetUsage()
    + Execute()
    - GetUndoOptions()
    - GetUndoPaths()
    - GetItemsAndDirectoriesFromPathArgument()
}

class "UndoCmdImpl" {
    + Execute()
}

class "UpdateProgress" {
    + AddErrorMessage()
    + AddErrorMessage()
    + AddDownloadedSize()
    + AddDownloadedFile()
    + AddAppliedOperation()
    + SetCurrentFile()
    + SetCurrentSize()
    + Cancel()
    + SetTotals()
    + AddMissingFilesToDownload()
    + SetFileUneededToDownload()
    + AddAddedPath()
    + AddChangedPath()
    + AddDeletedPath()
    + AddMovedPath()
}

class "UserAnswer" {
    + AskYesNo()
    - GetAnswer()
    - IsYesAnswer()
    - IsNoAnswer()
    - IsValidAnswer()
    - LoadValidNoAnswers()
    - LoadValidYesAnswers()
    - LoadValidAnswers()
}

class "UserMultipleChoiceAnswer" {
    + Ask()
    + Ask()
}

class "WorkspaceCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + GetDescription()
    + GetUsage()
    + GetHelp()
    + Execute()
}

class "WorkspaceCreateCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - CreateDynamicWorkspace()
}

class "WorkspaceDeleteCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "WorkspaceListCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetWkSpec()
    - GetMaxWkNameLength()
    - TranslateWorkspaceFormat()
}

class "WorkspaceMoveCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "WorkspaceRenameCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - RenameWorkspace()
}

class "NormalizedRepositorySpecComparer" {
    + Equals()
    + GetHashCode()
}

class "PartialUpdateTriggerRunner" {
    - Codice.Client.BaseCommands.Triggers.IPartialUpdateTriggerRunner.RunBeforeUpdateTriggers()
    - Codice.Client.BaseCommands.Triggers.IPartialUpdateTriggerRunner.RunAfterUpdateTriggers()
}

class "FastUpdateTriggerRunner" {
    - Codice.Client.BaseCommands.Triggers.IFastUpdateTriggerRunner.RunBeforeUpdateTriggers()
    - Codice.Client.BaseCommands.Triggers.IFastUpdateTriggerRunner.RunAfterUpdateTriggers()
}

class "LocalRepUserList" {
    + AddUser()
}

class "TubeClient" {
    + StartSession()
    + CreateTube()
    + DeleteTube()
    + CloseSession()
    + GetLocalSharedRepositoriesGroupedByRepo()
    + GetLocalSharedRepositoriesGroupedByTubeUser()
    + GetTubesSharedWithYou()
    + GetAccessType()
    + GetRemoteRepositoriesSharedWithUserGroupedByUser()
    + ExistTubeWith()
    - GetLocalSharedRepositories()
    - FindTubeUser()
    - SeidIsTubeUser()
    - GetLocalRepositoryInfos()
}

class "TubeCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - ConfigureTube()
    - ListLocallySharedRepos()
    - ListRemotelySharedRepos()
    - CreateTube()
    - RemoveTube()
    - ShareRepository()
    - UnshareRepository()
    - ConnectTube()
    - DisconnectTube()
    - GetTubeConnectionStatus()
    - GetTubeConfiguration()
    - GetPlasticServer()
    - GetRepositorySpec()
    - NotifyWrongArguments()
}

class "TubeCmdOptionsChecker" {
    + CheckOptions()
    + GetErrorMessage()
    - CheckConfigOptions()
    - CheckListOptions()
    - CheckListRemoteOptions()
    - CheckMakeRemoveOptions()
    - CheckShareOptions()
    - CheckUnshareOptions()
    - CheckConnectionOptions()
    - CheckOptions()
    - CheckMandatoryOptions()
}

class "GetWorkspaceXlink" {
    - Codice.CM.Common.Tree.IGetWorkspaceXlink.ForCmPath()
}

class "UndoCheckoutCmdImpl" {
    - GetMountPointForDeleted()
    + UndoCheckout()
    + UndoCiSameDataPaths()
    + UndoChangesForTesting()
    - UndoChanges()
    - RevertPendingMoves()
    - SolvePendingMoves()
    - GetPendingMovesChg()
    - GetPendingMoveDst()
    - IsValidMove()
    - UndoCheckout()
    - UndoDeleted()
    - FixCmPathCase()
    - WalkDeleted()
    - RestoreDeletedNode()
    - UpdateDeletedWorkspaceRevision()
    - GetChildByItemId()
    - RestoreDeletedFile()
    - IsDeletedChangesetRevision()
    - RestoreDirectory()
    - UndoChange()
    - AddChgToUnlock()
    - UndoMoved()
    - UndoMoveOnDisk()
    - UndoFileMoveOnDisk()
    - UndoDirMoveOnDisk()
    - GetRevisionToDownloadForMoved()
    - LeftMoveAsPending()
    - GetRepositoryRootPath()
    - IsSourceAvailable()
    - UndoCheckout()
    - UndoAdded()
    - IsAddedStructure()
    - UndoCopied()
    - UndoCopiedFile()
    - UndoCopiedDirectory()
    - UndoCheckoutOnDisk()
    - DownloadFileRevision()
    - DoUndoChangeWithDisplayPath()
    - DoUndoChange()
    - RestoreReplacedStructure()
    - UndoCopiedStructure()
    - RestoreStructure()
    - ProcessChildren()
    + GetUncoCmPaths()
    - ResolvePlatformPaths()
    - FilterPaths()
    - FilterDuplicatePaths()
    - ConverToCmPaths()
    - NotifyUndoChange()
    - MoveOnDisk()
    - GetRepositoryInfo()
    - GetMountPoint()
    - InvalidateRepositoryResolverIfIsXlink()
}

class "TreeChangedNodeUncoPrecedenceComparer" {
    + Compare()
}

class "UncoDeletedChangeset" {
    - Codice.Client.BaseCommands.UndoCheckoutCmdImpl.IDeletedChangeset.IsDeletedChangeset()
    - Codice.Client.BaseCommands.UndoCheckoutCmdImpl.IDeletedChangeset.GetRevisionToDownload()
    - Codice.Client.BaseCommands.UndoCheckoutCmdImpl.IDeletedChangeset.FillGameUiHeadTree()
}

class "RepositorySpecEqualityComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.GetHashCode()
}

class "GameUiHeadLoader" {
    - Codice.Client.BaseCommands.UncoDeletedChangeset.IGameUiHeadLoader.GetHead()
}

class "UncoDownloadActions" {
    + AdjustFileAttributes()
    + BeforeBigFileSegmentDownloaded()
    + UpdateDownloadedProgress()
    + AfterFilesDownloaded()
    + BeforeFilesDownloaded()
    + IsCanceled()
    + AddMissingFilesToDownload()
}

class "UncoFileDownloader" {
    + CreateQueue()
    - Codice.Client.BaseCommands.Download.IUncoFileDownloader.Download()
    - Codice.Client.BaseCommands.Download.IUncoFileDownloader.DownloadPending()
}

class "DynamicUncoFileDownloader" {
    - Codice.Client.BaseCommands.Download.IUncoFileDownloader.Download()
    - Codice.Client.BaseCommands.Download.IUncoFileDownloader.DownloadPending()
}

class "UncoIncomingChangesFileConflict" {
    - Codice.Client.BaseCommands.UndoCheckoutCmdImpl.IIncomingChangesFileConflict.TryGetHeadRevisionForItem()
}

class "AfterUncoUncoIncomingChangesFileConflict" {
    - Codice.Client.BaseCommands.Download.IAfterUndoIncomingChangesFileConflict.RemoveFileConflict()
}

class "MergeChangesInfoReverseDeepSorter" {
    + Compare()
}

class "MountUncoInfo" {
    + AddItem()
    + IsUncoItem()
    + IsStructureItem()
    + IsPendingItem()
    + IsChangedItem()
    + HasPendingItems()
}

class "UncoTreeProvider" {
    + GetDeletedTree()
    - GetXlinkServerTree()
    + GetDirectoryServerTree()
    - ExplodeXlinks()
    - ExplodeXlink()
    - GetXlinkChangesetTree()
    - IsDeletedChangeset()
    - BuildServerTreeFromDeletedTree()
    - BuildServerTreeFromDeletedTree()
    - BuildTreeNodeFromChangedNode()
}

class "UndoCheckoutCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - DoUndoCheckout()
}

class "NetUnixDiskAccess" {
    + GetItemFSProtection()
    + SetItemFSProtection()
    + GetSymlinkLastWriteTimeUtc()
    + DeleteSymlink()
    + IsSymlinkOnDisk()
    + MoveSymlinkOnDisk()
    + UpdateSymlink()
    + GetSymlinkLastWriteTime()
}

class "FastDownloadActions" {
    + AdjustFileAttributes()
    + AfterFilesDownloaded()
    + BeforeBigFileSegmentDownloaded()
    + UpdateDownloadedProgress()
    + BeforeFilesDownloaded()
    + IsCanceled()
    + AddMissingFilesToDownload()
}

class "FastUpdateFileDownloader" {
    + CreateQueue()
    + Download()
}

class "FastUpdateChangesApplier" {
    + ApplyChanges()
    - SetupTargetRepository()
    - DoApplyChanges()
    - ProcessDirectoryOperations()
    - ProcessModifiedOnSource()
    - ProcessItemFsProtections()
    - ProcessSameContentChanges()
    - ProcessSameFsProtectionChanges()
    - ProcessReadonlyXlinksChanges()
    - SetupReadonlyTargetRepository()
    - ProcessWritableXlinks()
    - ProcessExplodedXlinkChanges()
    - OverrideLoadedDirectoryRevisions()
    - SetLoadedChangeset()
    - ProcessDirectoryOperation()
    - ProcessAdded()
    - ProcessMoved()
    - ProcessDeleted()
    - ProcessChanged()
    - UpdateExpansionRules()
    - ProcessFsProtectionChanged()
    - ProcessSameChange()
    - GetWkPath()
    - UpdateDifferencePath()
    - UpdateDifferenceSrcPath()
    - UpdateDifferencePath()
    - IsCancelled()
    - MarkDifferenceAsProcessed()
    - NotifyProcessedDifference()
    - FillApplierProgressTotals()
}

class "FastUpdateDiskOperationsApplier" {
    + ApplyFsProtectionChanged()
    + UnloadPath()
    + MoveItem()
    - IsChanged()
}

class "FastUpdateLoader" {
    + Flush()
    + LoadNewItem()
    + LoadChangedItem()
    + UpdateLoadedItem()
    - UpdatePendingsLoadedRevisions()
    - LoadNewXlink()
    - LoadChangedXlink()
    - LoadNewRevision()
    - LoadChangedRevision()
    - Load()
    - LoadDirectory()
    - CreateDirectoryIfNeeded()
    - LoadFile()
    - LoadAddedFile()
    - LoadChangedFile()
    - IsFileOnDisk()
    - ProtectDirLoadedOnPathIfNeeded()
    - IsChanged()
    - NeedToDownloadChangedContent()
    - HasToDownloadNewContent()
    - NeedToDownloadAddedContent()
    - PreserveFile()
    - HandleLoadOnChangedIssue()
    - BuildWorkspaceTreeNode()
    - AddDownloadedSize()
}

class "FastUpdateProgressFiller" {
    + FillTotals()
    - GetAddedSizeToDownload()
    - GetModifiedOnSourceSizeToDownload()
    - IsCancelled()
}

class "FastUpdateChangesPathComparer" {
    + Compare()
    - GetPath()
}

class "FastUpdateWarningPathComparer" {
    + Compare()
    - GetPath()
}

class "FastUpdatePrinter" {
    + PrintResults()
    - PrintStats()
    - PrintOperationStats()
    - PrintDiskStats()
    - PrintTimerInfo()
    - PrintChanges()
    - GetSortedChanges()
    - PrintChange()
    - PrintChange()
    - PrintMoveChange()
    - PrintWarnings()
    - GetSortedWarnings()
    - FillWarnings()
    - PrintWarning()
    - PrintWarning()
    - PrintMoveWarning()
}

class "FastUpdateApplierProgress" {
    + GetDescription()
    + SetDescription()
    + GetTotal()
    + IncrementTotal()
    + GetCompleted()
    + AddToCompleted()
    + GetTotalDownloadSize()
    + AddSizeToDownload()
    + GetDownloadedSize()
    + AddDownloadedSize()
    + AddDownloadedFile()
    + GetDownloadedPerunit()
    + NotifyDownloadingBigFile()
    + NotifyDownloadingBlock()
    - UpdateDownloadedIncrementToNotify()
    - UpdateCompletedIncrementToNotify()
    - GetIncrementToNotify()
    - NeedToNotifyDownloadedSize()
    - NeedToNotifyProcessedOperations()
    - NotifyDownloadedSize()
    - GetDownloadedMessage()
    - NotifyProcessedOperations()
    - NotifyMessage()
    - DisplayObject()
    - GetProcessedMessage()
    - GetCompletedPerUnit()
}

class "FastUpdateProgress" {
    + GetDescription()
    + SetDescription()
    + IsCancelled()
    + Cancel()
    + GetCurrentProgress()
    + NextFastUpdateStage()
    - GetCurrentStage()
    - DoNextFastUpdateStage()
    - BuildStages()
    - BuildProgressForStage()
    - BuildInifinteProgressForStage()
    - BuildFastUpdateApplierProgress()
    - NotifyCurrentStage()
}

class "ReadonlyXlinkConflict" {
    + GetUnlocalizedName()
    + ResolutionChangesMergeResult()
}

class "FastUpdateCmdImpl" {
    + Update()
    - DoUpdate()
    - IsOptionEnabled()
    - CompileUpdateInfo()
    - GetCurrentConfiguration()
    - GetTargetConfiguration()
    - IsUpToDate()
    - CheckUpdateRequirement()
    - CheckNoPendingMerges()
    - CheckNoPendingChangesRequirement()
    - CalculateMergeInfo()
    - ExplodeReadonlyChanges()
    - ExplodeReadonlyChange()
    - IsTargetRepositoryChanged()
    - BuildMergeSource()
    - CalculaMerge()
    - NeedUpdate()
    - CheckNoConflicsRequirement()
    - CheckNoConflicsRequirement()
    - CheckNoCloakedRulesRequirement()
    - ApplyServerChanges()
    - IsCancelled()
    - SetStage()
}

class "MergeFinder" {
    - Codice.Client.BaseCommands.FastUpdateCmdImpl.IMergeFinder.FindMerge()
}

class "TreeProvider" {
    + GetChangesetTree()
}

class "ExpansionRulesMergeProvider" {
    - Codice.Client.BaseCommands.FastUpdateCmdImpl.IWorkingBranchProvider.TryGetWorkingBranch()
}

class "ConnectionProvider" {
    + GetItemHandler()
}

class "FastUpdateResult" {
    + GetMessages()
    + HasErrors()
}

class "FastUpdateApplierResult" {
    + AddDifference()
    + AddWarning()
    + AddXlinkFastUpdateResult()
    + HasErrors()
}

class "FastUpdateStats" {
    + GetTimerInfo()
    + GetDiskTimerInfo()
    + Initialize()
    + CompileDiskStats()
    + StartTimer()
    + StopTimer()
    - AddDiskTimer()
    - GetTimer()
}

class "TimerData" {
    + Start()
    + Stop()
}

class "FastUpdateUpdatedItemsReport" {
    - Codice.Client.BaseCommands.Triggers.TriggerManager.IUpdatedItems.GetUpdatedItemsReport()
}

class "UpdateDownloadActions" {
    + AdjustFileAttributes()
    + AfterFilesDownloaded()
    + BeforeBigFileSegmentDownloaded()
    + UpdateDownloadedProgress()
    + BeforeFilesDownloaded()
    + IsCanceled()
    - NotifyUpdatedItem()
    - NotifyErrorUpdatedItem()
    + AddMissingFilesToDownload()
}

class "UpdateFileDownloader" {
    + CreateQueue()
    - Codice.Client.BaseCommands.Update.IUpdateFileDownloader.Download()
    - Codice.Client.BaseCommands.Update.IUpdateFileDownloader.DownloadPending()
}

class "DynamicUpdateFileDownloader" {
    - Codice.Client.BaseCommands.Update.IUpdateFileDownloader.Download()
    - Codice.Client.BaseCommands.Update.IUpdateFileDownloader.DownloadPending()
}

class "MountPointItemCache" {
    + BuildIndex()
    + GetMountPointItemNode()
    + CheckDuplicateItems()
    + RemoveMountPointItem()
    + SetMountPointItem()
    - BuildIndex()
    - GetNodeMountId()
    - GetMounPointItemCache()
}

class "UpdateDeleter" {
    + DeleteWorkspaceRevisions()
    - DeleteWorkspaceRevisions()
}

class "UpdateWorkspaceTree" {
    + GetNodeForPath()
    + GetNodeForPath()
    + FindNodeForMountRepItem()
    + UpdateNodePath()
    + UpdateWorkspaceNode()
    + UpdateNodeName()
    + CheckDuplicateItems()
    + DeleteOldWkrevs()
    + UpdateWorkspaceNodeInUpdateTreeOnly()
    - UpdateWorkspaceNodeInWorkspace()
    - UpdateExistingNodeInTree()
    - InvolveNonStandardNodes()
    - UpdateNewNodeInTree()
    - AddChildNode()
    - CreateWkTreeNode()
    - MoveOnWk()
    - ReplaceWkTreeNode()
    - ChangeNodePath()
}

class "DirectoryDiskContent" {
    + IsDirectoryOnDisk()
    + FindChild()
    + ContainsChild()
    + ReloadDirectoryContent()
}

class "DirectoryUpdater" {
    + Update()
    - GetFileUpdaterTimer()
}

class "FilePreserver" {
    + TryToPreservePrivateContent()
    + TryToPreserveUnloadedContent()
    + TryToPreservePreviousContent()
    + PreserveRecreatedSymlink()
    - Preserve()
    - RestoreUnloadedNodeForContent()
    - GetUnloadedCandidate()
    - IsUnloaded()
    - IsDirectory()
    - HasSameContent()
    - PreserveOnDisk()
    - CalculateDataInfo()
}

class "FileUpdater" {
    + Update()
    + RecreateSymlinksIfNeeded()
    - ProcessFileOnDisk()
    - XmlNotifyCreatedAndChangedUpdatedItems()
    - ProcessNewFile()
    - ProcessModifiedOnDisk()
    - ProcessSameVersion()
    - UpdateLocalChangedFromOtherRep()
    - DoUpdateFile()
    - ExistFileOnDisk()
}

class "ItemHandlerCache" {
    + Get()
}

class "UnresolvedXlinkUpdater" {
    + UpdateUnresolvedXlink()
    - DoUpdateUnresolvedNode()
    - MarkUnresolvedContentAsVisited()
}

class "WorkspaceTreeChildCache" {
    + GetWorkspaceTreeNode()
    + FreeCache()
    - BuildChildCache()
    - IsValidChildForTargetRep()
    - GetKey()
    - GetKey()
    - GetItemId()
}

class "MessageManager" {
    + NotifyItemModifiedOnDisk()
    + NotifyXmlUpdatedItemIfNecessary()
    + NotifyUpdatedItem()
    + NotifyDeletedItem()
    + NotifyMovedItem()
    + NotifyDownloadingBigFile()
    + NotifyDownloadingBlock()
    + NotifySameRevisionFile()
    + NotifyErrorUpdatedItem()
    + NotifyRawException()
    + NotifyDuplicatedItemException()
    - NotifyException()
    + FlushOutput()
    + AddSizeToDownload()
    + AddDownloadedSize()
    + AddDownloadedFile()
    + AddMissingFilesToDownload()
    + NotifyCalculationEnd()
    + NotifyUpdateFinished()
    + ReportUpdatedItem()
    - DisplayObject()
}

class "UpdatedItem" {
    + ShouldSerializeOldPath()
}

class "UpdateCmdImpl" {
    + Update()
    + Update()
    + SetAllowedFiles()
    + SetAllowedDirs()
    - RunUpdate()
    - Update()
    - PartialUpdate()
    - FullUpdate()
    - ProcessStandardUpdate()
    - UpdateLoadedChangeset()
    - ProcessUpdateForMultipleWorkspaces()
    - BuildUpdateCommonData()
    - PerformUpdateOperation()
    - RemoveOldWkRevs()
    - CheckDuplicatedItems()
    - SetClientContext()
    - ProcessUpdateException()
    - IsFileError()
    - InitializeUpdateOperation()
    - FinishUpdateOperation()
    - LogMetadataDownloadTime()
    - LogLocalProcessingTime()
}

class "UpdateCommonData" {
    + SetTreeContent()
    + GetBaseUpdateMount()
    + AddPendingDirectory()
    + GetPendingDirectory()
    + CanUpdateDirectory()
    + CanUpdateFile()
    + AddAllowedDirectories()
    + AddAllowedFiles()
    + AddUnloaded()
    + GetUnloaded()
}

class "UpdateNode" {
    + UpdateWorkspaceNode()
}

class "UpdateReport" {
    + StartReport()
    + AddErrorLine()
    + AddUpdatedItemLine()
    + ContainsErrors()
    + GetErrorReport()
    - Codice.Client.BaseCommands.Triggers.TriggerManager.IUpdatedItems.GetUpdatedItemsReport()
}

class "StandardUpdateResult" {
    + HasErrors()
    + GetMessages()
}

class "IncomingChangesUpdatedItemsReport" {
    - Codice.Client.BaseCommands.Triggers.TriggerManager.IUpdatedItems.GetUpdatedItemsReport()
}

class "UpdateLauncher" {
    + Launch()
    + Launch()
    + Launch()
    - LaunchFastUpdate()
    - LaunchStandardUpdate()
    - IsFastUpdate()
}

class "UpdateNotifier" {
    + SetEncoding()
    + NotifyMessageWrite()
    + NotifyException()
    + DisplayObject()
    + NotifyMessage()
    + NotifyRawMessage()
    + NotifyError()
    + NotifyRawError()
    + GetUpdateStatus()
    + GetNotificationMessage()
}

class "UpdateWorkspaceCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + NotifyMessage()
    + Execute()
    - UpdateSingleWorkspace()
    - UpdateWorkspacesInPath()
    - SolveWorkspaceInfoAndPath()
    - UpdateToLastInCurrentBranchWithDynamicProgress()
    - UpdateToLastInCurrentBranch()
    - LaunchUpdateWithDynamicProgress()
    - LaunchUpdate()
    - GetMergeController()
    - GetSelector()
    - GetSelector()
    - GetCurrentSelector()
}

class "UpdateCmdMergeController" {
    - Codice.Client.Commands.IRunMergeDuringUpdate.ProcessMerge()
}

class "FileUploader" {
    + Cancelled()
    + Flush()
    + UploadFile()
    + UploadObjectDataInfo()
    + Cancel()
    + GetCurrentUploadBlock()
    + GetUploadedSize()
}

class "FileUploadProgress" {
    + IsCancelled()
    + HasFailed()
    + GetException()
    + SetError()
    + Cancel()
}

class "FragmentQueue" {
    + Enqueue()
    + Dequeue()
    + DequeueBlock()
    + Reset()
    + Disable()
    + SetFinished()
}

class "RunningThreadsBarrier" {
    + AddFinishedThread()
    + WaitForThreadsFinish()
}

class "Semaphore" {
    + Enter()
    + Release()
}

class "SizedSemaphore" {
    + GetCurrentSize()
    + Enter()
    + Release()
    + Disable()
    + Reset()
}

class "StandardUploader" {
    - Codice.Client.BaseCommands.IDataUploader.GetUploadedSize()
    - Codice.Client.BaseCommands.IDataUploader.GetCurrentUploadBlock()
    - Codice.Client.BaseCommands.IDataUploader.WaitForFinish()
    - UploadDataThread()
    - UploadData()
    - SetCurrentBlock()
}

class "UploaderInfo" {
    + GetUploadedSize()
}

class "UploadCompresor" {
    + WaitForFinish()
    - FileCompressorThread()
}

class "UploadedFilesHashes" {
    + AddFileToUpload()
    + AddHashForFile()
    + GetOrderedHashes()
    + Clear()
}

class "UploadFileReader" {
    + WaitForThreadsFinish()
    - FileReaderThread()
    - UploadLink()
    - UploadFile()
    - GetCompressionType()
}

class "UploadHasher" {
    + WaitForThreadsFinish()
    - FileHasherThread()
}

class "UploadReaderQueue" {
    + Enqueue()
    + Dequeue()
    + Disable()
    + SetFinished()
    + Reset()
}

class "ControlledChangesSearcher`1" {
    - Codice.Client.BaseCommands.SearchChanges.ISearchChanges.Search()
    - Codice.Client.BaseCommands.SearchChanges.ISearchChanges.SearchOnPath()
    + ProcessChanges()
    - ProcessChanges()
    - ProcessDeletedChildren()
    - ProcessNonDeletedChildren()
    - NeedToProcessChildren()
    - ProcessChange()
}

class "AdaptWorkspaceTreeNode" {
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetChangedTreeForPath()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetChildren()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetFsNode()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetFileLocalInfo()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetMountPointForPath()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetName()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetRevisionInfo()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetTreeForPath()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.GetXlink()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.HasChildren()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.AcquireReaderLock()
    - Codice.Client.BaseCommands.ControlledChangesSearcher<Codice.Client.Commands.WkTree.WorkspaceTreeNode>.IAdaptTreeNode.ReleaseReaderLock()
}

class "AddedChangedDiffContentInfoProvider" {
    + GetSize()
    + GetDiffComparable()
}

class "CachedEncodingProvider" {
    + GetEncoding()
}

class "CandidateTextFileLruCache" {
    + TryGetTextFile()
    + SetTextFile()
    - ReduceCacheSize()
    - MoveToLastUsed()
}

class "ChangeMatchesSearcher" {
    + Search()
}

class "DiskChangesSearcher" {
    - Codice.Client.BaseCommands.SearchChanges.ISearchChanges.Search()
    - Codice.Client.BaseCommands.SearchChanges.ISearchChanges.SearchOnPath()
}

class "NeedPrivates" {
    - Codice.Client.BaseCommands.DiskChangesSearcher.INeedPrivates.NeedPrivates()
}

class "NeedPrivates" {
    - Codice.Client.BaseCommands.DiskChangesSearcher.INeedPrivates.NeedPrivates()
}

class "ChangesContentDownloader" {
    + GetContent()
    + Clear()
    + DownloadCandidatesForLvl()
    - GetParent()
    - GetKey()
    - RemovedDownloadedTmps()
}

class "ChangesMergesSearcher" {
    + GetChangeMergesInfo()
    + GetChangeMergesInfoForTypes()
    + GetInvolvedChangesetIds()
    - GetMergesInfo()
    - FillStandardItemMerges()
    - FillXlinkMerges()
    - GetMerges()
    - AddMerges()
}

class "TestControlledChangesSearcher" {
    + GetChanges()
}

class "DeletedChangedDiffContentInfoProvider" {
    + GetSize()
    + GetDiffComparable()
}

class "EmptyDirectoryChangesMatcher" {
    + IsMatch()
    + GetMatches()
    + ProcessMatch()
    + CanMatched()
}

class "DirectoryChangesChangedMatcher" {
    + IsMatch()
    + CanMatched()
    + ProcessMatch()
    + GetMatches()
    - GetNumRemovedEntries()
    - GetOriginalDirContent()
    - GetDstCandidates()
    - GetDirChangesPerUnit()
    - GetDirectoryChange()
}

class "ReversePathSorter" {
    + Compare()
}

class "TestDiskChangesSearcher" {
    + GetChanges()
}

class "DiskFileMovedSearcher" {
    + GetTimeSpentDownloadingMatchCandidates()
    + ProcessMoved()
    + IsValidSource()
}

class "DiskDirectoryMovedSearcher" {
    + ProcessMoved()
    + GetRemovedByLvl()
    + GetRemoved()
    + IsValidSource()
}

class "ChangeInfoRemovedDirectoriesSorter" {
    + Compare()
}

class "TestDiskMovedSearcher" {
    + ProcessMoved()
    + GetMatches()
}

class "FileChangesExactMatcher" {
    + IsMatch()
    - IsExactMatch()
    - IsHashMatch()
    + ProcessMatch()
}

class "FileChangesChangedMatcher" {
    + GetTimeSpentDownloadingMatchCandidates()
    + ProcessMatches()
    + GetMatches()
    + IsMatch()
    + IsMatch()
    - IsMatchInAllowedRange()
    + ProcessMatch()
    + IsFsValidCandidate()
    - HasValidExtension()
    - GetChangesPerUnit()
    - GetTxtChangesPerUnit()
}

class "BinaryFileChangesNameMatcher" {
    + IsMatch()
    - IsMatch()
    + ProcessMatch()
    + CanMatched()
}

class "SimilarityMatcherTxtDiffComparableBuilder" {
    + BuildDiffComparable()
}

class "WorkspaceConfigurationCalculator" {
    + Calculate()
    + CalculateFromSelector()
    + GetWorkingObject()
    + GetWorkingModeCode()
    + GetRepository()
}

class "WorkspaceChangeTracker" {
    + GetFsNodeReader()
    + GetJournalState()
}

class "WorkspaceMovedApplier" {
    - Codice.Client.Common.FsNodeReaders.ChangeTrackerService.WorkspaceChangeTracker.IWkMovedApplier.HandleMoved()
}

class "WorkspaceStatusCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
    - GetChangesMergesSearcher()
    - GetChangedItemsMergesFinder()
    - GetChangeLists()
    - GetUserOptions()
    - SetControlledChanged()
    - SetAllChangedAndPrivatesOptions()
    - SetIndividualOptions()
    - IsWorkspaceSpec()
    - GetWorkspaceInfo()
}

class "WorkspaceStatusCmdImpl" {
    + GetStatus()
    + GetChanges()
    + GetChanges()
    + GetChanges()
    + GetChangeMatches()
    + GetChangesMergesSeacher()
    + GetPendingMergeLinks()
}

class "ChangeInfo" {
    + GetExtension()
    + GetFullPath()
    + GetLocalHash()
    + GetStatusStrFromChangedType()
    - GetStatusStrFromControlledChangedType()
    - GetModifiedStatusStrFromControlledChangedType()
    + ClearExtension()
}

class "AddedGroup" {
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetChanges()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetShortGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetConsoleColor()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetAllowedChangeTypesInThisGroup()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetHeaders()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetFieldLengths()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.IsEmpty()
}

class "ChangePathComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.BaseCommands.ChangeInfo>.Compare()
}

class "GetField" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GetFieldLength" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ModifiedGroup" {
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetChanges()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetShortGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetConsoleColor()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetAllowedChangeTypesInThisGroup()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetHeaders()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetFieldLengths()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.IsEmpty()
}

class "MovedGroup" {
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.IsEmpty()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetChanges()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetShortGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetConsoleColor()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetAllowedChangeTypesInThisGroup()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetHeaders()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetFieldLengths()
}

class "RemovedGroup" {
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetChanges()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetShortGroupDescription()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetConsoleColor()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetAllowedChangeTypesInThisGroup()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetHeaders()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.GetFieldLengths()
    - Codice.Client.BaseCommands.WkStatus.Printers.IPrintablePendingChangesGroup.IsEmpty()
}

class "WorkspaceStatusOutput" {
    + SetWorkspaceStatus()
    + SetHeadWorkspaceStatus()
    + SetWorkspaceConfiguration()
    + SetStatusResult()
    + SetChangeLists()
    + SetChangesMergesSearcher()
    + SetPendingMergeLinks()
    + HasStatusResultChanges()
}

class "WorkspaceStatusPrinter" {
    - Codice.Client.BaseCommands.WkStatus.Printers.IWorkspaceStatusPrinter.PrintOutput()
}

class "LegacyFormatWorkspaceStatusPrinter" {
    - Codice.Client.BaseCommands.WkStatus.Printers.IWorkspaceStatusPrinter.PrintOutput()
}

class "XmlWorkspaceStatusPrinter" {
    + PrintOutput()
    - BuildObjectToSerialize()
    - BuildStatusOutput()
    - BuildChangeListStatusOutput()
    - GetXmlChangelist()
    - FillBaseStatusOutput()
}

class "XmlStatusOutput" {
    + AddChanges()
}

class "XmlChangeList" {
    + AddChanges()
}

class "XLinkCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "XLinkCmdImpl" {
    + CreateXlink()
    + EditXlink()
    + GetXlink()
    + AddXlinkExpansionRules()
    + RemoveXlinkExpansionRules()
    - GetRulesParser()
    - AddRules()
    - AddRule()
    - RemoveRules()
    - RemoveRule()
    - BuildTwoRulesForSameBranchError()
    - FillRepInfo()
}

class "XlinkParameters" {
    + GetUserOptions()
    - FillFlagsUserOptions()
    - HasBeenAnyFlagSpecified()
    - GetActionToPerfom()
    - ProcessEditParameters()
    - AreAnyMandatoryParametersEmpty()
}

class "XlinkRulesParser" {
    + GetExpansionRules()
    - GetBranches()
    - GetBranchGuid()
    - GetSpecGenerator()
    - GetSpecResolver()
}

class "WkTreeNodeStatusCmd" {
    + DoGetDescription()
    + DoGetUsage()
    + DoGetHelp()
    + Execute()
}

class "WkTreeNodeStatusCmdImpl" {
    + GetStatus()
    - GetControlledStatus()
}

class "MountDifferencesApplier`1" {
    - Codice.CM.Common.Merge.ComplexDependenciesChecker.IDeletedSourceChecker.IsSourceUnderDeleted()
    - ApplyDifferences()
    - TryToApplyOperations()
    - TryToApplyOperations()
    - TryApplyOperation()
    - TryApplyAdded()
    - TryApplyChanged()
    - TryApplyCopied()
    - TryApplyDeleted()
    - TryApplyMoved()
    - TryApplyReplaced()
    - AddConflicts()
    - GetConflict()
    - GetOperationsToApply()
}

class "WorkspaceChangedTreeOperations`1" {
    + AddNode()
    + CopyNode()
    + DeleteNode()
    + MoveNode()
    + ChangeNode()
    + ReplaceNode()
    + GetXlinkSubTree()
    + CreateStructureNode()
    - GetParentForStructureChange()
    - ProcessNodeToModify()
    - ProcessChildToModify()
    - IsUndoMove()
}

class "AddedDirsLoadedFromHead" {
    + IsEmpty()
    + GetMountAddedDirsLoadedFromHead()
    + RemoveMountAddedDirsLoadedFromHead()
    + GetMountPointsWithAddedDirsLoadedFromHead()
}

class "HeadNodeCachedFinder" {
    + ContainsItem()
    + IsItemUnderFolder()
    + GetItemNode()
    + UpdateItem()
    + UpdateItem()
    + RemoveItem()
    + GetItemPath()
    + IsValidPathForItem()
    + GetValidPathsForItems()
    + GetNodeFromPath()
    + GetParentItemId()
    + GetItemNode()
    + BuildCaches()
    - GetItemIdToUse()
    - AddNodeChildren()
    - IsLoadedChild()
    - IsSameItem()
    - IsRootItem()
    - RemoveNode()
    - RemoveNodeTree()
    - RemoveFullTree()
}

class "MountAddedDirsLoadedFromHead" {
    + AddLoadedDirectoryFromHead()
    + UpdateResultFinderWithReusedItems()
    + GetReusedHeadItemIds()
    - Codice.CM.Common.Checkin.Partial.HeadNodeCachedFinder.IReusedLocalAddedItemIdTranslator.TryGetReusedHeadItemId()
}

class "CheckinChangesFinder`1" {
    + GetCiData()
    + IsItemChanged()
    + GetConfirmedFilePaths()
    + GetChangePath()
    + GetChangeCmPath()
    + GetXlinkMountPointWithPath()
    + GetChangesByMount()
    - Codice.CM.Common.Checkin.Partial.ILocalCmPathResolver.GetItemCmPath()
    - Codice.CM.Common.Checkin.Partial.DifferencesApplier.IUpdateCiDataFsProtection.Update()
    - GetChgNode()
    - FillCache()
    - FillCache()
}

class "ConfirmedMounts" {
    + Add()
    + AddAfterCheckinTriggerError()
    + IsConfirmed()
    + HasFailedAfterCheckinTriggers()
    + GetAfterCheckinTriggerError()
}

class "IgnoredChanges" {
    + IgnoreItemsInDiscarededConflics()
    + AddIgnoredItem()
    + IsIgnored()
}

class "MovedNodesWithParentCache`1" {
    + GetSource()
    + GetDestination()
    + Remove()
}

class "ResultFinder" {
    - Codice.CM.Common.Checkin.Partial.IResultFinder.ContainsRevisionForItem()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.TryGetResultRevision()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.UpdateResultRevision()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.RemoveResultRevision()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.ContainsFsProtectionForItem()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.TryGetResultFsProtection()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.UpdateResultFsProtection()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.RemoveResultFsProtection()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.UpdateXlinkResultRevision()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.TryGetXlinkResultRevision()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.TryGetResultXlink()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.UpdateXlinkResult()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.TryGetXlinkResultFsProtection()
    - Codice.CM.Common.Checkin.Partial.IResultFinder.UpdateXlinkResultFsProtection()
}

class "AesEncryptionService" {
    + GetEncryptionBuffer()
    + ReleaseEncryptionBuffer()
    + GetDecryptionBuffer()
    + ReleaseDecryptionBuffer()
    + Encrypt()
    + Encrypt()
    - Encrypt()
    + Decrypt()
    + Decrypt()
    - GetDecryptionKey()
    - BuildAesAlgorithm()
    - GetEncryptionSalt()
    - GetKeySize()
    - GetEncryptionKey()
    - GenerateKey()
}

class "DecryptionKeyCache" {
    + FindKey()
    + AddKey()
    - IsSameSalt()
}

class "LockedFilesFilter" {
    + IsLockable()
}

class "DirectoryPathMatcher" {
    + ExceptionDirectoryPathMatches()
    + RegularDirectoryPathMatches()
    - ExceptionMatch()
    - RegularMatch()
}

class "DistributedEndsWithRules" {
    + CalculateKey()
    + Match()
}

class "DistributedStartWithRules" {
    + CalculateKey()
    + GetLongestRuleForPath()
}

class "DistributedStringRuleList" {
    + GetRulesForPath()
    - Initialize()
}

class "ReverseLengthComparer" {
    + Compare()
}

class "SimpleList" {
    + GetRules()
    + AddRule()
}

class "DistributedList" {
    + GetRules()
    + AddRule()
    + SplitBigValues()
    - ConverToDistributed()
    - GetKey()
}

class "Filter" {
    + ContainsExceptionsUnder()
    + AddRule()
    + AddFilter()
}

class "PathValidator" {
    + IsValidPath()
    + IsValidName()
    + IsValidPath()
    + IsValidName()
    + IsValidExtension()
    - GetInvalidNameChars()
    - GetInvalidPathChars()
    - GetInvalidExtensionChars()
}

class "RuleExtractor" {
    + ExtractRule()
}

class "Rules" {
    + GetDistributedStartsWithPaths()
    + GetDistributedEndsWithPaths()
    + HasPathRulesStartingWith()
    + AddRules()
    + AddEverythingRule()
    + AddFullPathRule()
    + AddNameRule()
    + AddExtensionRule()
    + AddDirectoryContentByNameRule()
    + AddStartsWithRule()
    + AddEndsWithRule()
    + AddRegexRule()
    + AddContainsRule()
    - AddNonDuplicatedRule()
    - AddNonDuplicatedRule()
    - AddNonDuplicatedRule()
    - AddNonDuplicatedRules()
    - AddNonDuplicatedRules()
    - AddNonDuplicatedRules()
}

class "MountPoint" {
    + Equals()
    + GetHashCode()
    + Equals()
}

class "MountPointCmPathComparer" {
    + Compare()
}

class "MountPointWithPath" {
    + GetFullCmPath()
    + GetRelativeCmPath()
    + Equals()
    + GetHashCode()
    + Equals()
}

class "FullyCheckedDirectoriesCache" {
    + IsFullyCheckedDirectory()
}

class "IsStructureNodeNeeded" {
    - Codice.CM.Common.Tree.ChangedTreeCleaner<T>.IIsNodeNeeded.Check()
}

class "PathTreeNode" {
    + AddChild()
    + IsInValidPath()
}

class "MovedReferenceCache`1" {
    + IsEmpty()
    + ContainsSource()
    + TryGetSource()
    + TryGetDestination()
    + AddMovedNode()
}

class "MountItemIdEqualityComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.Tree.MovedReferenceCache<T>.MountItemId>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.Tree.MovedReferenceCache<T>.MountItemId>.GetHashCode()
}

class "ParentNodeCache`1" {
    + TryGetParent()
    + SetNodeParent()
    + RemoveNode()
    + FillCache()
}

class "ParentNodeCacheWithLazyFill`1" {
    + TryGetParent()
}

class "ChangedCache`1" {
    + IsChanged()
    + IsChanged()
    + IsNameUsedByChanged()
    + GetRelativeWkPath()
    + GetChangedNode()
    + TryGetParentChangedNode()
    + GetChangedXlinkNode()
    - CacheChangedTree()
    - GetMountCache()
}

class "InvolvedChangedItems" {
    + Count()
    + Contains()
    + GetForSelectedItems()
    + Add()
}

class "OutOfDateItems" {
    + HasOutOfDateItems()
    + HasConflicts()
    + GetFileConflicts()
    + GetOutOfDateItemsByMountList()
    + AddChanged()
    + AddAdded()
    + AddDeleted()
    + AddMoved()
    + AddAddedMount()
    + AddFileConflict()
    + RemoveChanged()
    + RemoveFileConflict()
    - GetOutOfDateItemsByMount()
}

class "OutOfDateItemsByMount" {
    + HasChanges()
}

class "SearchNewItemsInsideDirectory" {
    + AddNewItems()
    - HasCollisionWithChangedItem()
    - ExplodeNewItems()
    - ProcessNewItemLocallyDeleted()
    - ReportIssueWithChangedNode()
    - GetWorkspacePath()
    - AreSameItems()
    - AreDifferentRevisions()
    - AreSameItems()
    - IsChanged()
    - ReportMessage()
}

class "ChildByItemEquilityComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.Tree.TreeNode>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.Tree.TreeNode>.GetHashCode()
}

class "MountItemIdEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "SelectedItemsCache" {
    + IsEmpty()
    + IsSelected()
    + GetSelectedItemsByMount()
}

class "TreeNodeCache" {
    + GetMountRelativeCmPath()
    + TryGetParent()
    + TryGetNode()
}

class "ErrorMessage" {
    + UpdatePath()
}

class "ReferenceEqualityComparer`1" {
    - System.Collections.Generic.IEqualityComparer<T>.Equals()
    - System.Collections.Generic.IEqualityComparer<T>.GetHashCode()
}

class "CmCallContext" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "CmSecurityAclException" {
    + GetExceptionArguments()
}

class "CmAuthenticationMismatchException" {
    + GetExceptionArguments()
}

class "CmMergeNeededException" {
    + GetExceptionArguments()
}

class "CmCheckoutExclusiveException" {
    + GetObjectData()
    + GetRevisionCheckouts()
}

class "CmConflictCannotBeResolvedException" {
    + GetExceptionArguments()
}

class "HistoryBase" {
    + Equals()
    + GetHashCode()
}

class "EditionManager" {
    + FixCapabilities()
    + DisableCapability()
    + CheckCapability()
}

class "Localization" {
    - GetLongAvailableLanguages()
}

class "RepositoryServerInfo" {
    + Equals()
    + GetHashCode()
}

class "RepositoryInfo" {
    + SetExplicitResolvedServer()
    + GetInternalServerName()
    + Equals()
    + GetHashCode()
    + ToString()
    + CreateExplicitClone()
    + GetRepSpec()
}

class "WorkspaceInfo" {
    + Equals()
    + GetHashCode()
}

class "RevisionInfo" {
    + ChangesetToString()
}

class "AttributeInfo" {
    + ToString()
}

class "ObjectDataInfo" {
    + GetData()
    + SetData()
}

class "DirectoryRevisionDataInfo" {
    + GetData()
    + SetData()
    - GetChildItemData()
    + CalcHashCode()
    + AddItem()
    + RemoveItem()
    - SortChildren()
}

class "ChildrenComparer" {
    + Compare()
}

class "ServerLocator" {
    + Init()
    + IsSameServer()
    + AreSameServer()
    + GetServerId()
    + GetDefaultServer()
}

class "ReviewInfo" {
    + SetLegacyAssignee()
}

class "LockRepItem" {
    + SetNewCmPath()
}

class "ExtendedLockRepItem" {
    + SetNewCmPath()
}

class "RepositorySpec" {
    + Equals()
    + ToString()
    + EqualsToRepInfo()
    + GetHashCode()
    - IsSameServer()
}

class "PlasticMessage" {
    + GetKey()
    + GetMsgArgs()
}

class "Condition" {
    + GetPredicates()
    + ToSqlString()
}

class "Predicate" {
    + isBetween()
    + GetPredicates()
    + ToSqlString()
}

class "ReferenceTreeNode" {
    + IsDirectory()
}

class "ReplicationParameters" {
    + IsPartialReplicationPackage()
}

class "Permission" {
    + Grant()
    + Deny()
    + OverrideGrant()
    + OverrideDeny()
    + AddGranted()
    + CombineGranted()
    + AddDenied()
    + AddOverrideGranted()
    + AddOverrideDenied()
    + RemoveGranted()
    + RemoveDenied()
    + RemoveOverrideGranted()
    + RemoveOverrideDenied()
    + Get()
    + Check()
    + Check()
    + AreGranted()
    + AreDenied()
    + AreOverrideGranted()
    + AreOverrideDenied()
    + Merge()
    + CombineMerge()
    + Clone()
    + RemoveOverriden()
}

class "SecurityMember" {
    + Equals()
    + GetHashCode()
}

class "SEID" {
    + Equals()
    + EqualsWithPassword()
    + GetHashCode()
    + Clone()
}

class "Translator" {
    + Translate()
}

class "FSComparer" {
    + Init()
    + IsSameName()
}

class "ChangedNode" {
    + NodeChanged()
    + IsDirectory()
    + Equals()
    + GetHashCode()
    + CloneWithoutReferencesTo()
    + CloneWithoutReferencesTo()
    + GetMoveReference()
    + SetMoveReference()
    + Reset()
    + IsReachable()
}

class "WorkspaceTreeChangedNode" {
    + SetAsReplaced()
    + SetAsReplacedFsProtection()
    + CleanReplacedFsProtection()
    + CloneWithoutReferencesTo()
    + CloneWithoutReferencesTo()
    + CloneWithoutReferencesTo()
    + Reset()
}

class "Xlink" {
    + SetNewChangeset()
    + CloneXlink()
    + Copy()
}

class "ExpansionRule" {
    + Clone()
}

class "ExpansionRuleComparer" {
    - System.Collections.Generic.IComparer<Codice.CM.Common.Tree.ExpansionRule>.Compare()
}

class "XlinkTreeNode" {
    + IsDirectory()
    + UpdateXlink()
    + CloneWithoutReferencesTo()
    + CloneWithoutReferencesTo()
}

class "Compression" {
    + Compress()
    + Uncompress()
    - CheckHeader()
    + ReadHeader()
    + WriteNoCompressedHeader()
}

class "ExternalDataInfo" {
    + ToByteArray()
    + GetFileName()
}

class "ExternalStorageDataWriter" {
    + WriteData()
    + Close()
}

class "ExternalStorageDataReader" {
    + Read()
    + Read()
    + Close()
}

class "LongArray" {
    + Write()
    + Read()
}

class "RepIdArray" {
    + Write()
    + Read()
}

class "ULongArray" {
    + Write()
    + Read()
}

class "MergeConflictArray" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
    + CopyTo()
    + GetEnumerator()
    + RemoveAt()
    + Remove()
    + Clone()
    + Add()
    + AddRange()
    + Clear()
    + Contains()
    + IndexOf()
    + Insert()
}

class "PlasticBinaryReader" {
    + GetInnerStream()
    + Close()
    + Close()
    - Dispose()
    - CheckStream()
    + Seek()
    + PeekChar()
    + PeekByte()
    - Read()
    + ReadBoolean()
    + AddPeekByte()
    + ReadByte()
    + ReadSByte()
    + ReadChar()
    + ReadInt16()
    + ReadUInt16()
    + ReadInt32()
    + ReadUInt32()
    + ReadInt64()
    + ReadUInt64()
    + ReadSingle()
    + ReadDouble()
    + ReadString()
    + Read()
    - InternalReadChars()
    - InternalReadOneChar()
    + ReadChars()
    + Read()
    + ReadBytes()
    + ReadBytes()
    - FillBuffer()
    + GetReadBytes()
    + Read7BitEncodedInt()
    - ThrowEndOfFile()
}

class "PlasticBinaryWriter" {
    + Close()
    + CloseFile()
    + Flush()
    + Seek()
    + GetInnerStream()
    + WriteBool()
    + WriteByte()
    + WriteBytes()
    + WriteBytes()
    + WriteInt16()
    + WriteUInt16()
    + WriteInt32()
    + WriteUInt32()
    + WriteInt64()
    + WriteUInt64()
    + WriteString()
    + GetWrittenBytes()
    - Write7BitEncodedInt()
    - WriteToStream()
}

class "PlasticBufferedStream" {
    + StopBuffering()
    + StartBuffering()
    + IsBufferingStopped()
    + GetBufferedBytesLeftToRead()
    + EnsureBufferAllocated()
    + EnsureBufferReleased()
    + Write()
    + Read()
    + ReadByte()
    + Dispose()
    + Flush()
    + DiscardBufferedContent()
    - FlushRead()
    - ClearReadBufferBeforeWrite()
    - FlushWrite()
    - ReadFromBuffer()
    - WriteToBuffer()
    + WriteByte()
    + WriteInt32()
    + ReadInt32()
    + WriteBool()
    + ReadBool()
    + WriteInt16()
    + ReadInt16()
    + WriteUInt16()
    + ReadUInt16()
    + WriteUInt32()
    + ReadUInt32()
    + WriteInt64()
    + ReadInt64()
    + WriteUInt64()
    + ReadUInt64()
    + WriteString()
    - FillRemainingBytesAtEdge()
    - FillBufferForFastDeserialization()
    + Seek()
    + SetLength()
    - EnsureNotClosed()
    - EnsureCanSeek()
    - EnsureCanRead()
    - EnsureCanWrite()
    - EnsureCanReadFromBuffer()
    - EnsureCanWriteOnBuffer()
    - ThrowEndOfFile()
}

class "MarkerExtendedInfoArray" {
    + SerializeRepObjectInfoElement()
    + DeserializeRepObjectInfoElement()
}

class "ChangesetExtendedInfoArray" {
    + SerializeRepObjectInfoElement()
    + DeserializeRepObjectInfoElement()
}

class "RevisionInfoArray" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
}

class "SerializedBranchExplorerData" {
    + GetObjectData()
    - Serialize()
    - SerializeSeids()
    - Deserialize()
    - DeserializeSeids()
    - SerializeTable()
    - DeserializeTable()
    - SerializeBranches()
    - DeserializeBranches()
    - SerializeChangesets()
    - DeserializeChangesets()
    - SerializeLabels()
    - DeserializeLabels()
    - SerializeLinks()
    - DeserializeLinks()
    - ConvertDateTimeToTicks()
}

class "SerializedCredentials" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
}

class "SerializedObjectManager" {
    + HasToSerializeSeid()
    + GetSeidIndex()
    + SerializeRepObjectInfo()
    + DeserializeRepObjectInfo()
    + SerializeRevisionInfo()
    + SerializeRevisionInfo()
    + DeserializeRevisionInfo()
    + SerializeChangesetInfo()
    + DeserializeChangesetInfo()
    + DeserializeChangesetInfo()
    + SerializeBranchInfo()
    + DeserializeBranchInfo()
    + SerializeLinkInfo()
    + DeserializeLinkInfo()
    + SerializeItemInfo()
    + DeserializeItemInfo()
    + SerializeMarkerInfo()
    + DeserializeMarkerInfo()
    + DeserializeMarkerInfoFields()
    + SerializeAttributeInfo()
    + DeserializeAttributeInfo()
    + SerializeReviewCommentInfo()
    + DeserializeReviewCommentInfo()
    + SerializeCodeReviewCommentInfo()
    + DeserializeCodeReviewCommentInfo()
    + SerializeDifference()
    - SerializeDiffChanged()
    - SerializeDiffMoved()
    - SerializeDiffXlinkChanged()
    - GetStatusToSerialize()
    + DeserializeDifference()
    - DeserializeDiffChanged()
    - DeserializeDiffXlinkChanged()
    - DeserializeDiffMoved()
    - GetSerializedStatus()
    + SerializeMergeConflict()
    - SerializeIntermediateFileConflict()
    - SerializeFileConflict()
    - SerializeRenameResolutionConflict()
    - SerializeDirectoryConflict()
    - SerializeMergeConflictBase()
    + DeserializeMergeConflict()
    - DeserializeIntermediateFileConflict()
    - DeserializeFileConflict()
    - DeserializeRenameResolutionConflict()
    - DeserializeDirectoryConflict()
}

class "SerializedPendingMergeLinks" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
    - Write()
    - Write()
    - Read()
    - ReadRevisionMerge()
}

class "SerializedRevisionMerges" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
    - Write()
    - Write()
    - Read()
    - Read()
    - GetLinks()
}

class "SerializedSelectorContent" {
    + Serialize()
    + Deserialize()
}

class "SerializedTreeChangedNode" {
    + InitializeForMemorySerialization()
    + Serialize()
    - SerializeTreeChangedNode()
    - SerializeCheckinData()
    + Deserialize()
    - DeserializeTreeChangedNode()
    - DeserializeCheckinItemData()
    - GetStatusToSerialize()
    - GetSerializedStatus()
}

class "MovedReferencesBuilder" {
    + CheckChangedNode()
    + ResolveMoveReferences()
}

class "SerializedTreeNode" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
}

class "StreamStack" {
    + Read()
    + Write()
    + Flush()
    + Close()
    + Seek()
    + SetLength()
    + CreateSslStream()
    + Stack()
    + Unstack()
    + Top()
    + GetStream()
    - Prev()
}

class "CryptoDataHandler" {
    + GetCompression()
    + WriteCypheredData()
    + ReadCypheredData()
    - DecryptData()
    - WriteEncryptedData()
    - WriteEncryptedData()
    - WriteData()
    - ReleaseCryptoBuffer()
    - GetCryptoBuffer()
    - ReadDecryptedData()
    - RemoveEncryption()
    - GetEncryption()
}

class "DataPacket" {
    + SetCryptoInfo()
    + EnableFailOnNotDecryptedData()
    + DisableFailOnNotDecryptedData()
    + GetReader()
    + GetWriter()
    + GetObjectReader()
    + GetBuffer()
    + ReleaseBuffer()
    + InitFromBuffer()
    + InitFromReader()
    + IsWriting()
    + GetSize()
    + EnableSerialize()
    + SetSize()
    + GetObjectData()
    - AllocateBuffer()
    + Finalize()
}

class "DataPacketWriter" {
    + WriteData()
    + WriteData()
    - WriteCompression()
    + WriteData()
    + WriteDirectory()
    + EndWrite()
    + GetSize()
    + IsEmpty()
}

class "ObjectInfoReader" {
    + ReadData()
    - BuildDataList()
    - ReadData()
    - ReadDirectory()
}

class "PacketFileReader" {
    + Eof()
    + ReadFileData()
    + ReadFileMetadata()
    + ReadFileMetadatas()
    + GetCurrentOffset()
    + CloseRead()
    + Reset()
    + BigPacketIsLast()
    + ReadFileData()
}

class "BaseChildItemSerializer" {
    + ReadChild()
    + IsDirectory()
    + HasFSProtection()
    + IsXlinked()
    + DoCheckEnabledFlag()
}

class "BasePackageReader" {
    + GetPackageMetadataSize()
    + Close()
    + Dispose()
    + GetSource()
    + GetRevisions()
    + ReadRevInfosAndChildren()
    + ReadRevInfoAndChildren()
    + ReadChildItem()
    + ReadCount()
    - ReadIndex()
    - ReadIndexEntry()
    + ReadCount()
    + SetStreamPosition()
}

class "DeserializeObject" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DownloadPackageProgressDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UploadPackageProgressDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PackageFileDownloader" {
    + GetPackage()
}

class "PackageFileUploader" {
    + SendPackage()
}

class "PushedFileList" {
    + InitializeForAgregation()
    + Serialize()
    + Deserialize()
}

class "SerializedBranchesCandidates" {
    + Serialize()
    - SerializeBranchesCandidates()
    + Deserialize()
    - DeserializeBranchesCandidates()
}

class "SerializedBranchesHeads" {
    + Serialize()
    - SerializeBranchesHeads()
    + Deserialize()
    - DeserializeBranchesHeads()
}

class "SerializedGuids" {
    + Serialize()
    + Deserialize()
}

class "SerializedReplicationSyncStatus" {
    + Serialize()
    - SerializePendingBranches()
    + Deserialize()
    - DeserializePendingBranches()
    - ResolveSeids()
}

class "SerializedSyncNewObjectsInfoRequest" {
    + Serialize()
    + Deserialize()
}

class "SerializedSyncNewObjectsInfoResponse" {
    + Serialize()
    - SerializeBranches()
    - SerializeNewBranches()
    + Deserialize()
    - DeserializeBranches()
    - DeserializeNewBranches()
    - ResolveSeids()
}

class "SerializedSyncObjectManager" {
    + SerializeBranchesFilter()
    + DeserializeBranchesFilter()
    + SerializedSyncBranchInfo()
    + SerializedNewSyncBranchInfo()
    + SerializedPendingBranch()
    + SerializedGuids()
    + SerializedBranchCandidate()
    + SerializedBranchHead()
    + DeserializeSyncBranchInfo()
    + DeserializeNewSyncBranchInfo()
    + DeserializePendingBranch()
    + DeserializeGuids()
    + DeserializeBranchCandidates()
    + DeserializeBranchHead()
    + WriteSeids()
    + ReadSeids()
    + ResolveSyncBranchInfoSeid()
}

class "ZLibLinux" {
    + ZlibVersion()
    + Compress()
    + Compress2()
    + Uncompress()
}

class "ZLibUnix" {
    + ZlibVersion()
    + Compress()
    + Compress2()
    + Uncompress()
}

class "ZLibWin32" {
    + ZlibVersion()
    + Compress()
    + Compress2()
    + Uncompress()
}

class "ZLibWin64" {
    + ZlibVersion()
    + Compress()
    + Compress2()
    + Uncompress()
}

class "OperationsCache" {
    + AddMove()
    + UpdateMoveWithTmps()
    + GetMoveBySource()
    + GetMoveByDestination()
    + GetAdded()
    + GetAdded()
    - GetDifferenceList()
    - GetDifferenceByName()
    - AddDifference()
}

class "FileConflict" {
    + SetDestinationRevisionInfo()
    + SetComposedConflict()
}

class "IntermediateFileConflict" {
    + SetResultRevision()
}

class "DivergentMoveConflict" {
    + GetUnlocalizedName()
}

class "WritableXlinkConflict" {
    + GetUnlocalizedName()
    + ResolutionChangesMergeResult()
    + MarkAsResolved()
    + SetResult()
}

class "CycleMoveConflict" {
    + GetUnlocalizedName()
}

class "EvilTwinConflict" {
    + GetUnlocalizedName()
}

class "AddMoveConflict" {
    + GetUnlocalizedName()
}

class "ChangeDeleteConflict" {
    + GetUnlocalizedName()
}

class "LoadedTwiceConflict" {
    + GetUnlocalizedName()
}

class "MoveDeleteConflict" {
    + GetUnlocalizedName()
}

class "MoveSourceDeleteConflict" {
    + GetOperationsToApply()
    + GetOperationsToUndo()
    + GetUnlocalizedName()
    - BuildDeleteForMoveDst()
}

class "MergeTreeResult" {
    + InitializeForAgregation()
    + GetPendingDirectoryConflict()
    + GetSolvedDirectoryConflicts()
    + GetUnsolvedDirectoryConflicts()
    + GetAllDirectoryConflicts()
    + GetAllDirectoryConflictsWithoutXlinkConflicts()
    + IsEmpty()
    + SetFileConflicts()
    - FindFirstPendingDirectoryConflict()
    - FindConflictsByStatus()
    + HasConflicts()
    + Count()
    + Clone()
}

class "DiffChanged" {
    + AppendPath()
}

class "DiffXlinkChanged" {
    + CleanContentChange()
}

class "DiffMoved" {
    + SetSourcePath()
    + AppendPath()
}

class "PendingMergeLink" {
    + Equals()
    + GetHashCode()
}

class "MountPointId" {
    + IsOnWorkspace()
    + GetHashCode()
    + Equals()
    + Equals()
}

class "MountPointIdComparer" {
    + Compare()
}

class "FullyCheckedDirectoryEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "LicenseData" {
    + IsEnabled()
    + Clone()
}

class "HttpEncoder" {
    + HeaderNameValueEncode()
    + HtmlAttributeEncode()
    + HtmlDecode()
    + HtmlEncode()
    + UrlEncode()
    + UrlPathEncode()
}

class "HttpQSCollection" {
    + ToString()
}

class "RevisionsBySize" {
    + TrackFile()
}

class "GetConfiguredTmpPath" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "URLUtils" {
    - InitUrlEncode()
    + EscapeUrl()
    + UnEscapeUrl()
}

class "CancelToken" {
    + IsCancelled()
    + Cancel()
}

class "ConfigurationFile" {
    + Load()
    + GetEntryValue()
    + SetEntryValue()
    + GetSection()
    - ProcessLine()
    + Save()
    - ProcessSection()
}

class "ConfigurationSection" {
    + GetKeys()
    + GetValue()
    + Clear()
    + SetValue()
    + GetInt()
    + SetInt()
    + GetDouble()
    + GetDouble()
    + GetFloat()
    + SetDouble()
    + SetFloat()
    + GetLong()
    + SetLong()
    + GetString()
    + GetString()
    + SetString()
    + GetBase64String()
    + SetBase64String()
    + GetBool()
    + SetBool()
    + GetDateTime()
    + SetDateTime()
    + GetInts()
    + SetInts()
    + ParseEntry()
    + Write()
}

class "EncodingUserInfo" {
    + GetEncoding()
    + ToString()
}

class "EncodingNameComparer" {
    + Compare()
}

class "LocalizationTranslator`1" {
    + Translate()
    + TryTranslate()
}

class "BufferPoolMemoryStream" {
    + Flush()
    + Read()
    + ReadByte()
    + Seek()
    + SetLength()
    + Write()
    + WriteByte()
    + GetInternalBuffer()
    + GetContentCopy()
    + Dispose()
    - ExtendBuffer()
}

class "FlexibleBufferPool" {
    + TakeBufferUsingConfiguredWaitTime()
    + TakeBuffer()
    + ReturnBuffer()
    + CalculateBufferSizeForSize()
    + GetSizeBufferPoolsForTesting()
    + GetSizeBufferPoolForTesting()
    + GetConfig()
    + GetStats()
    + TryIncrementMaxBufferSize()
    + TryIncrementNumBuffersBeforeWait()
    + FillBuffersWithZerosForTesting()
    - TryGetPool()
}

class "SizeBufferPoolSizeSorter" {
    + Compare()
}

class "SizeBufferPool" {
    + ReturnBuffer()
    + GetBuffer()
    + GetStatusInfo()
    + TryIncrementMinBuffersBeforeWait()
    + FillBuffersWithZerosForTesting()
}

class "EventSenderScheduler" {
    + Launch()
    + EndAndSendEvents()
    + EndAndSendEventsAsync()
    - TaskLoopThread()
    - SleepUntilNextWorkload()
    - SetAsFinished()
    - SetAsFinishedWithLastSendNeeded()
    - IsFinished()
    - IsSendNeeded()
    - <Launch>b__0()
}

class "Func`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PlasticThread" {
    + Execute()
    - ThreadWork()
    - SetRunning()
    - SetException()
}

class "Operation" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TimerTick" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ThreadWaiterBuilder" {
    - Codice.Client.Common.Threading.IThreadWaiterBuilder.GetWaiter()
    - Codice.Client.Common.Threading.IThreadWaiterBuilder.GetWaiter()
    - Codice.Client.Common.Threading.IThreadWaiterBuilder.GetModalWaiter()
    - Codice.Client.Common.Threading.IThreadWaiterBuilder.GetModalWaiter()
    - Codice.Client.Common.Threading.IThreadWaiterBuilder.GetTimer()
}

class "PlasticThreadWaiter" {
    + Execute()
    + Execute()
    + Cancel()
    - OnTimerTick()
}

class "OSVersionInfo" {
    + Lock()
    - CheckExtendedProperty()
    - CheckLock()
    + Copy()
    + CreateCopy()
    + Clone()
    - CopyThis()
    + Equals()
    + GetHashCode()
    + ToString()
    + CompareTo()
}

class "OperatingSystemVersion" {
    - InitOsVersionInfo()
    - InitOsVersionInfoEx()
    - InitArchitecture()
}

class "FinishedLock" {
    + IsFinished()
    + SetFinished()
}

class "BlockingStream" {
    + Flush()
    + Seek()
    + SetLength()
    + Read()
    + Write()
    + SetEndOfStream()
    + Close()
}

class "Runner" {
    + Run()
}

class "ThreadRunner" {
    + Run()
    + Start()
    + Wait()
}

class "OpCopiedApplier" {
    + Apply()
    - PerformCopyPrerequisites()
    - CheckCopied()
    - DoParentsNeededCheckouts()
    - DoCopy()
    - AddRootCopiedParent()
    - StartWith()
}

class "OperationsHandler" {
    + AddItem()
    - GetWorkspaceInfo()
    - AddItem()
    - GetDefaultSEIDForServer()
    + OpCheckIn()
    - GetNewXlinkTarget()
    - TryRollbackWorkspaceTransaction()
    - TryRestoreMergesToCheckin()
    - TryRestoreMergesChanges()
    - BuildCheckinSourceFromData()
    - FillXlinkRootRevisions()
    - GetXlinkRootRevision()
    - AreSameServer()
    - DoGetXlinkRootRevision()
    - GetWkNode()
    + OpShelve()
    + OpCopy()
    + OpCheckoutMergeFileConflict()
    + OpCheckout()
    - CheckoutItem()
    - GetCheckoutBranchId()
    + OpRebaseCheckedOutItem()
    + LockNonCheckedOutItems()
    + LockCopiedItems()
    + UnLockItems()
    + UnLockMountItems()
    + OpSetItemFsProtection()
    + OpLoadItems()
    + OpUnloadItem()
    + OpMoveWithoutCreatingChanges()
    - DoCheckout()
    + OpGenerateStructureChange()
    + OpCleanStructureChanges()
    + OpCleanMergeLinks()
    + OpCleanMerges()
    + OpFindMergeFromToWorkspace()
    + OpMergeTo()
    + OpRemove()
    - ValidatePathsToRemove()
    + OpMove()
    - IsXlink()
    + OpChangeRevisionType()
    + OpChangeRevisionType()
    - DoChangeRevisionType()
    + GetPendingCsetsMergedToCheckin()
    + GetPendingMergesToCheckin()
    + GetPendingMergesToCheckin()
    + GetInProgressMergeLinks()
    + GetInProgressMergeLink()
    + IsIncomingChangesInProgress()
    + GetAllPendingMergeLinks()
    + GetAllPendingMergeLinks()
    + UpdateCheckoutBranch()
    + CreateXlink()
    + EditXlink()
    + EditXlinks()
    + UpdateXlinkExpansionRules()
    + UpdateExpansionRulesWithoutCreatingChange()
    + UpdateLocalTimestamps()
    - DoEditXlink()
    - ExecuteAfterCheckinTrigger()
    - GetRepInfo()
    - CleanClientConflictsInfo()
    - RestoreClientConflictsInfo()
    - GetResolvedWritableConflicts()
    - UnlockItemsAfterCheckin()
    - LockCheckedOutItems()
}

class "ServerHandler" {
    + GetAllRepositories()
    - GetRepositoryList()
}

class "TransactionManager" {
    + CreateServerTransaction()
    + CreateMainWorkspaceTransaction()
    + ExistsGlobalWorkspaceTransaction()
    + ExistsMainWorkspaceTransaction()
    + ExistsAnyWorkspaceTransaction()
    + CommitMainWorkspaceTransaction()
    + RollbackMainWorkspaceTransaction()
    + CreateWorkspaceTransaction()
    + CommitServerTransaction()
    + CommitWorkspaceTransaction()
    + RollbackServerTransaction()
    + RollbackWorkspaceTransaction()
    + LockWorkspace()
    + UnlockWorkspace()
    - RollbackRepServer()
    - CleanTransaction()
    - CommitRepServer()
    - DoCommitWorkspaceTransaction()
    - DoRollbackWorkspaceTransaction()
}

class "WorkspaceCache" {
    + UpdateWorkspaceName()
    + UpdateWorkspacePath()
    - UpdateWorkspace()
    + AddWorkspace()
    + CreateWorkspace()
    + CreateDynamicWorkspace()
    + FindWorkspaceForPathOnCache()
    + FindWorkspaceForPath()
    + FindWorkspaceByName()
    + FindWorkspaceInsidePath()
    + RemoveWorkspaceForPath()
    + RemoveWorkspaceForId()
    + FindWorkspaceById()
    - WorkspaceExists()
    - RemoveInvalidWorkspace()
    - FindWorkspaceForPath()
    - UpdateWorkspaces()
}

class "WorkspaceHandler" {
    + CreateDynamicWorkspace()
    + CreateWorkspace()
    + IsDynamicWorkspaceMounted()
    + WaitUntilDynamicWorkspaceIsMounted()
    + WaitUntilAllDynamicWorkspacesAreMounted()
    + DeleteWorkspace()
    + RenameWorkspace()
    + GetWorkspaceList()
    + AddExistingWorkspace()
    + UpdateWorkspacesList()
    + GetWorkspaceInfo()
    + GetWorkspaceInfo()
    + GetWorkspaceFromPath()
    + GetWorkspaceFromPath()
    + ChangeWorkspaceLocation()
    - GetDefaultOrFirstSelector()
    - TryDeleteWorkspace()
}

class "WorkspaceRevisionResolver" {
    - BrowseAndCacheNodes()
    + GetPath()
    - GetNodeKey()
}

class "WorkspaceTreeHandler" {
    + GetRepositoryFromPath()
    + GetMountPointFromPath()
    + GetMountPointFromCmPath()
    + GetLoadedChangeset()
    + GetLoadedChangeset()
    + GetMountPointFromRep()
    + GetMountPointFromRep()
    + GetMountPointFromId()
    + HasChanges()
    + GetXlinkFromPath()
    + GetXlinkForCmPath()
    + GetXlinkForMountPointId()
    + GetMountPointRootPathFromPath()
    + GetMountPointRelativeOriginalCmPath()
    + GetMountPointsParentsOfFromRootToBottom()
    + UpdateLoadedChangeset()
    + SetAsGameUIWorkspace()
    + IsGameUIWorkspace()
    + CleanWorkspaceForNewRepository()
    + WkGetWorkspaceTreeNode()
    + UpdateNode()
    + UpdateNodeInWorkspaceTreeAndChangedTree()
    + UpdateFsProtectionInWorkspaceTreeAndChangedTree()
    + Move()
    + GetWorkspaceTree()
    + GetWorkspaceTree()
    + GetWorkspaceTrees()
    + AcquireReaderLock()
    + UnsafeGetInternalNodeFromCmPath()
    + UnsafeGetInternalChangesTree()
    + UnsafeGetInternalWorkspaceTreeNode()
    + ReleaseReaderLock()
    + GetChangesTree()
    + GetChangesTreeForPaths()
    + GetChangedNodeForPath()
    + GetWorkingBranch()
    + GetWorkingBranch()
    + TryGetWorkingBranch()
    + TryGetWorkingBranch()
    + IsValidCmPathForItem()
    + GetValidCmPathsForItems()
    + IsItemLoaded()
    + IsItemUnderFolder()
    + GetItemCmPath()
    + AreItemsLoadedOnMountId()
    + IsItemLoadedOnMountId()
    + InvalidateItemFinder()
    + GetLoadedItems()
    + GetWorkspaceContentForItem()
    + GetWorkspaceContentCount()
    + DeleteWorkspaceRevisions()
    + WkGetCheckedOutRevisions()
    + GetMountPointResolver()
    + GetMountPointResolver()
    + GetWorkspaceTreeOperationsChecker()
    + GetItemLastPath()
    + GetWorkspaceStatus()
    + OverrideLoadedDirectoryRevisions()
    + GetLoadedBranchIdBasedOnChanges()
    - FindFirstCheckoutOnWk()
    + GetWorkspaceStatus()
    - GetSelectorStatus()
    + SaveTree()
    + GetRepositoriesFromWorkspace()
    - GetRepInfo()
    + UpdateCheckoutBranch()
    - UpdateCheckoutBranch()
    + GetWorkspaceXlinks()
    + GetPartialXlinkedCmPath()
    - GetWorkspaceXlink()
    - GetServerPathFromLocalPath()
    + GetWorkspaceTreeNodeStatus()
    + GetItemIdWithMountPointIdFromPath()
    + GetInternalWorkspaceLocalItemIdSequencer()
    - FindXlinks()
}

class "CheckoutBranchSolver" {
    + EnableResolvedBranchCache()
    + DisableResolverdBranchCache()
    + GetWorkingBranchIdWithBranchExpansionByPath()
    + GetWorkingBranchIdWithBranchExpansionByMount()
    + GetWorkingBranchWithBranchExpansionByPath()
    + GetWorkingBranchWithoutBranchExpansionByMount()
    + GetWorkingBranchWithoutBranchExpansionByPath()
    + GetWorkingBranchWithBranchExpansionByMount()
    + SetCheckoutBranchToCache()
    + GetPathWorkingBranch()
    - GetMountPointFromPath()
    - GetMountPointFromCmPath()
    - GetMountWorkingBranch()
    - GetMainCheckoutBranchInfo()
    - FindSelectorRule()
    - GetSelectorRuleForCmPath()
    - GetBranchInfo()
    - GetXlinkExpansionBranchInfo()
    - GetXlinkExpansionBranchInfo()
    - GetXlinkBranchInfo()
    - GetMountPointsParentsOfFromRootToBottom()
    - GetCheckoutBranchFromCache()
    - GetRulesUpdater()
    - BuildRulesUpdater()
    - GetClientXlinkFinder()
    - BuildClientXlinkFinder()
    - IsGameUIWorkspace()
    - IsCacheEnabled()
}

class "EmptyExpansionRulesUpdater" {
    + UpdateExpansionRule()
}

class "HeadClientXlinkFinder" {
    + GetClientXlink()
    - GetClientXlinkFromCache()
    - IsInitialized()
    - BuildXlinksCache()
}

class "WorkspaceMainBranchIdCache" {
    + TryGetWorkspaceMainBranchId()
    + SetWorkspaceMainBranchId()
    - IsUpToDate()
}

class "WorkspaceClientXlinkFinder" {
    + GetClientXlink()
}

class "WorkspaceExpansionRulesUpdater" {
    + UpdateExpansionRule()
    - GetWorkspaceTreeOperations()
}

class "ItemsLocker" {
    + LockCheckedoutItems()
    + LockNonCheckedOutItems()
    + LockCopiedItems()
    + LockItems()
    + LockFileConflict()
    - GetLockInfos()
    - DoLock()
}

class "EditLocks" {
    + UnlockItemsAfterCheckin()
    + UnlockItems()
    + UnlockItems()
    + UnlockMountItems()
    + UnlockItems()
}

class "LockItemList" {
    + Dictionary()
    + TryGetMountPointLocks()
    + Add()
}

class "TreeRevisionInfoCacheFactory" {
    + TryGet()
    + Add()
}

class "CacheEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "WorkspaceMountPointSearcher" {
    + GetMountPointsParentsOfFromRootToBottom()
    + GetMountPointFromCmPath()
    + GetMountPointFromNode()
    + GetMountPointIdFromNode()
    + GetMountPointWithPath()
    + GetMountIdRootNode()
    + GetMountPointRootNode()
    - IsMountPointRoot()
    - GetMountPointWithPathFromNode()
    - GetMountPointRootNodesFromWkRootToNode()
    - GetMountPointRootNodeFromNode()
    - IsMountPointRoot()
}

class "WorkspaceNodeSearcher" {
    + UpdateRootNode()
    + IsRootNode()
    + GetNodeForPath()
    + GetNodeForPathWithNodeCache()
    + GetMountPointRelativeOriginalCmPath()
    - IsOptionEnabled()
    - NavigateTreeUntilNode()
}

class "WorkspaceTree" {
    + UnsafeGetInternalRootNode()
    + UnsafeGetInternalNode()
    + UnsafeGetInternalNodeFromCmPath()
    + UnsafeGetInternalChangesTree()
    + UnsafeGetXlinksParentsOf()
    + UnsafeUpdateExistingNodeData()
    + UnsafeGetMountPointFromInternalNode()
    + UnsafeCleanInternalChangesTree()
    + AcquireReaderLock()
    + ReleaseReaderLock()
    + AcquireWriterLock()
    + ReleaseWriterLock()
    + InitializeIfNeeded()
    + CleanWorkspaceForNewRepository()
    + IsGameUIWorkspace()
    + SetAsGameUIWorkspace()
    + GetLoadedChangeset()
    + GetLoadedChangeset()
    + UpdateLoadedChangeset()
    + GetMountPoints()
    + GetMountPointFromCmPath()
    + CleanChangesTree()
    + GetWorkspaceTree()
    + GetWorkspaceTrees()
    + GetWorkspaceTreeNode()
    + GetRepSpecForItem()
    + GetLoadedRevisionForItem()
    + GetLoadedRevisionForItemWithNodeCache()
    + GetLoadedRevisionForItem()
    + GetLoadedRevisionForItem()
    + IsValidCmPathForItem()
    + GetValidCmPathsForItems()
    + IsItemLoaded()
    + IsItemUnderFolder()
    + GetItemCmPath()
    + AreItemsLoadedOnMountId()
    + IsItemLoadedOnMountId()
    + InvalidateItemFinder()
    + BuildLoadedItemsCache()
    + GetMountPointFromRep()
    + GetMountPointFromId()
    + GetMountPointsParentsOfFromRootToBottom()
    + GetMountPointRootPathForPath()
    + GetMountPointRelativeOriginalCmPath()
    + GetXlinkForMountPoint()
    + GetXlinkFromPath()
    + GetXlinkForCmPath()
    + GetXlinkForMountPointId()
    + UpdateNode()
    + GetNumberWorkspaceRevisionsForDirectory()
    + RemoveWorkspaceItems()
    + RemoveWorkspaceItem()
    + EditXlink()
    + EditXlinkChangeset()
    - CheckXlinkRoot()
    + CreateXlink()
    + Move()
    + CreateTreeNodes()
    + Save()
    + Clean()
    + GetInternalLocalItemIdSquencer()
    - CreateAddedTree()
    - CreateAddedNode()
    - IsSameXlinkType()
    - IsXlinkEditingRepository()
    - DoMove()
    - IsCaseSensitiveRename()
    - InitializeLoadedChangesetId()
    - Initialize()
    - IsUpToDate()
    - BuildTree()
    - BuildTreeFromContent()
    - BuildEmptyTree()
    - SecureTreeCreation()
    - BuildWorkspaceSearchersBasedOnRootNode()
    - CreateNode()
    - IsSameNodeType()
    - ReplaceNode()
    - GetXlinkForNode()
    - CloneWorkspaceTreeNode()
}

class "WorkspaceTreeItemFinder" {
    + IsValidCmPathForItem()
    + IsValidCmPathForItemWithNodeCache()
    + IsItemUnderFolder()
    + GetItemCmPath()
    + AreItemsLoaded()
    + IsItemLoadedOnMountId()
    + IsItemLoaded()
    + AddNode()
    + RemoveNode()
    + RemoveNodeWithMountId()
    + BuildLoadedItemsCache()
    + GetItemNode()
    + Invalidate()
    - IsMissingItem()
    - IsValidNodeForItem()
    - IsValidNodeForStandardItem()
    - IsValidNodeForXlink()
    - GetValidNodeForItem()
    - GetMountCacheByMountId()
    - GetMountCacheByMountPath()
    - BuildMountPathCache()
    - FillItemsForMount()
    - RemoveItemFromMountCache()
    - FindMountIdCache()
}

class "WorkspaceTreeNodeCache" {
    + GetWorkspaceTreeNode()
    + SaveWorkspaceTreeNode()
    + Clean()
}

class "WorkspaceTreeSearchProvider" {
    + StartSearch()
    - SearchRecurse()
    - IsDirectory()
    - NotifySearchResult()
    - IsMatch()
}

class "WorkspaceTreesOverrider" {
    + OverrideDirectoryRevisions()
    - OverrideInWorkspaceTree()
    - OverrideInChangesTree()
    - UpdateChangedTreeNodeIfNeeded()
    - BuildTreeCache()
    - BuildTreeCache()
    - IsDirectory()
    - TryGetNewRevision()
}

class "ChangesRemover" {
    + RemoveChanges()
    + IsCleanAllNeeded()
    - RemoveChangesFromTree()
    - ProcessCheckoutIfNeeded()
    - CleanUselessNodes()
    - GetResultChild()
    - IsMoveSourceOrDelete()
    - IsMissingTransformedNodeParent()
    - GetWorkspaceChangedChild()
    - IsCheckedInXlinkTarget()
    - GetCheckedInXlinkChangedChild()
    - GetNodeForPath()
}

class "CheckinNodes" {
    + FindWkChild()
    + FindChangedChild()
    + Clear()
}

class "CheckinWorkspaceTreeUpdater" {
    + UpdateCheckedInWorkspaceTree()
    - BrowseAndUpdateWorspaceTree()
    - HandleXlink()
    - GetLocalInfo()
    - GetWorkspaceChild()
    - GetWorkspaceNodePath()
    - BuildMissingChangedException()
    - BuildMissingNodeException()
    - GetWorkspacePath()
}

class "CheckinLocksUpdater" {
    + KeepFileCheckedOut()
    + UpdateLocks()
    - DoUnlocks()
    - DoLocks()
    - DoUpdateLocks()
}

class "ResultUpdater" {
    + UpdateCheckinResult()
    + UpdateCheckinResultForDirectories()
    - DoUpdateCheckinResult()
    - UpdateChangedTree()
}

class "WorkspaceTreeUpdater" {
    + UpdateWorkspaceTree()
    - UpdateWorkspaceNodes()
    - UpdateWkNode()
    - GetLocalInfo()
    - SetAsGameUIWorkspace()
}

class "TreeNodeAdapter" {
    + HasChildren()
    + GetChildren()
    + IsXlinkNode()
    + GetXlink()
    + GetRevision()
    + UpdateXlinkRootRevision()
    + AddChild()
    + GetTargetContent()
}

class "ConfigurationNodeAdapter" {
    + HasChildren()
    + GetChildren()
    + IsXlinkNode()
    + GetXlink()
    + GetRevision()
    + UpdateXlinkRootRevision()
    + AddChild()
    + GetTargetContent()
}

class "ChangedWkNodeBuilder" {
    + CreateNode()
    + BuildChangedNode()
    - CreateNode()
    - GetFakeXlinkRootRev()
}

class "ParentNodeCache" {
    + Contains()
    + TryGetParent()
    + UpdateChildrenParent()
    + AddNode()
    + DeleteNode()
    + UpdateParent()
    - BuildParents()
    - FillParents()
}

class "SubtreeInfo" {
    + IsRootPath()
    + IsRootItem()
    + UpdateSubTree()
    + GetSubTreePath()
}

class "WorkspaceTreeOperationsChecker" {
    + Close()
    + Add()
    + Delete()
    + Move()
    + GetItemPath()
    + IsValidPathForItem()
    + GetValidPathsForItems()
    + IsPathInUse()
    + GetPathSeparator()
    - ProcessNodeToChange()
    - FindSubtree()
    - BuildNotFoundError()
    - ProcessRootNodeToChange()
    - ProcessNodeToChange()
    - BuildChangedNode()
    - GetWkPath()
}

class "RebasePathResolver" {
    + CalculatePath()
    - GetValidPath()
}

class "WorkspaceTreeOperations" {
    + CleanChanges()
    + HasChanges()
    + HasChangesInside()
    + IsCheckedOut()
    + GetChangesTreeForPaths()
    + GetWorkspaceChangesTree()
    + GetChangedNodeForPath()
    + GetChangesTreeForCmPaths()
    + GetCurrentChangesTree()
    - GetChangedNode()
    + GetRevisionCheckouts()
    + AddOnWk()
    + CreateXlink()
    + EditXlink()
    + EditXlinkWithoutCreatingChange()
    + UpdateXlinkExpansionRules()
    + SetXlinkWorkingExpansionRule()
    + UpdateXlinkExpansionRulesWithoutCreatingChange()
    + RebaseCheckedOutItemOnWk()
    + CheckoutOnWk()
    + CheckoutOnWk()
    + SetItemFSProtectionOnWk()
    + RemoveOnWk()
    + RemoveChildrenOnWk()
    - ApplyDeleteOnChgTree()
    - ApplyDeletesOnChgTree()
    - IsGameUIWorkspace()
    + MoveOnWk()
    + MoveWithoutCreatingChangesOnWk()
    + LoadOnWk()
    + UpdateFsProtectionOnWk()
    + UnloadOnWk()
    + CopyOnWk()
    + CheckinOnWk()
    + UpdateLocalTimestamps()
    - UpdateLoadedWorkspaceNodes()
    - UpdateLoadedChangesetsAfterCheckin()
    + GetChangesRemover()
    + GenerateStructureChange()
    + CleanStructureChanges()
    + ChangeRevisionTypeOnWk()
    + ProcessTreeForNode()
    + ProcessTreeForChildren()
    - FindCheckoutsOnTree()
    + DisplayErrorPath()
    + GetTreeChildByName()
    + GetTreeChildrenByNames()
    + BuildTreeChangedNodeFromTreeNode()
    + EditXlinkOnWk()
    + EditXlinkOnWkAfterCheckin()
    - EditXlinkOnWk()
    - CreateXlinkOnWkTree()
    - CreateXlinkOnChgTree()
    - AreSameExpansionRules()
    - AddOnWkTree()
    - AddOnChgTree()
    - GetWorkspacePathFromCmPath()
    - ChangeRevisionType()
    + CheckIsUnderModifiableXlink()
    + CheckRepositoryLoadedInsideItself()
    - IsSameItem()
}

class "TestingWorkspaceTreeOperations" {
    + GetInternalChangesTree()
    + GetWorkspaceTree()
    + GetInternalWorkspaceTree()
    + IsGameUIWorkspace()
    + SetAsGameUIWorkspace()
    + SaveWorkspaceContent()
    + CleanWorkspaceCachedContent()
    + GetXlinksParentsOf()
    + CleanStructureChangesFromCmPath()
    + BuildUncoTreeOperations()
}

class "UncoTreeOperations" {
    + AcquireWkReaderLock()
    + RelaseWkReaderLock()
    + GetInternalChgRoot()
    + GetInternalWorkspaceNodeFromCmPath()
    + UndoChanged()
}

class "UnsafeGetWorkspaceXlink" {
    - Codice.CM.Common.Tree.IGetWorkspaceXlink.ForCmPath()
}

class "UnsafeUpdateWorkspaceCoNode" {
    - Codice.CM.Common.Tree.UndoStructureChanges.IUpdateWorkspaceCoNode.UpdateRevisionAndFsProtection()
}

class "WorkspaceTreeOperationsCache" {
    + Get()
}

class "OldFormatMountPointIdResolver" {
    + GetMountPointId()
}

class "WorkspaceDataStore" {
    + SaveCollabWorkspaceContent()
    + SaveSelector()
    + SaveWorkspaceInfo()
    + RemoveWorkspace()
    + SaveTestingWorkspaceContent()
    + GetSelector()
    + SaveWorkspaces()
    + SaveWorkspacesForOtherAppConfig()
    + GetWorkspaces()
    + GetWorkspacesForOtherAppConfig()
    + ExistWorkspaceFile()
    + GetLoadedChangesetId()
    + GetWorkspaceContent()
    + GetWorkspaceContent()
    + SaveWorkspaceContent()
    + SaveWorkspaceContent()
    + MoveWorkspace()
    + FindWorkspace()
    + GetWorkspaceSelectorStamp()
    + GetWorkspacesStamp()
    - GetProfileServers()
}

class "WorkspacePathComparer" {
    - System.Collections.Generic.IComparer<Codice.CM.Common.WorkspaceInfo>.Compare()
}

class "ChangedItemsMergesFinder" {
    + GetMergesForModifiedItem()
    + GetMergesForAddedItem()
    + GetMergesForDeletedItem()
    + GetMergesForMovedItem()
    - GetMountChangedItemsMerges()
    - FillChangedItemsMerges()
    - AddMergeChanges()
    - GetItemsMerges()
}

class "LoadedChangedChecker" {
    + IsItemLoaded()
}

class "MergeProgress" {
    - Codice.Client.Commands.Merge.IStoreMergeProgress.CleanMount()
    - Codice.Client.Commands.Merge.IStoreMergeProgress.GetInProgressMergeLink()
    - Codice.Client.Commands.Merge.IStoreMergeProgress.GetInProgressMergeLinks()
    - Codice.Client.Commands.Merge.IStoreMergeProgress.ReadMergeProgress()
    - Codice.Client.Commands.Merge.IStoreMergeProgress.SaveMergeProgress()
}

class "MergeChangesWriter" {
    - Codice.Client.Commands.Merge.IWriteMergeChanges.AddChanges()
}

class "MergesToCheckin" {
    - Codice.Client.Commands.Merge.IStoreMergeLinksToCheckin.AddMerge()
    - Codice.Client.Commands.Merge.IStoreMergeLinksToCheckin.GetMerges()
}

class "IncomingChangesProgress" {
    - Codice.Client.Commands.Merge.IStoreIncomingChangesProgress.Start()
    - Codice.Client.Commands.Merge.IStoreIncomingChangesProgress.IsInProgress()
}

class "MergesChangesReader" {
    + GetMergeChanges()
    + FillMergeChanges()
    - FillMergeChanges()
    + AcquireLoadedChecker()
    + ReleaseLoadedChecker()
    - GetMergeChangesToCheckin()
    - FillMergeChangesLoadedInTheWorkspace()
    - AddMergeChange()
}

class "TestingMergesChangesReader" {
    + AcquireLoadedChecker()
    + ReleaseLoadedChecker()
}

class "MergesToCheckinData" {
    + AddMerge()
    + GetMerges()
    + RemoveMountMerges()
    + RemoveMerges()
    + GetAllMerges()
    + GetMountPoints()
}

class "RetrieveRevisionInfos" {
    - Codice.CM.WorkspaceServer.DataStore.IncomingChanges.StoreIncomingChanges.FileConflicts.IRetrieveRevisionInfos.Get()
}

class "WorkspaceLockInfo" {
    + IsHeldByThisThread()
    - GetCurrentThreadId()
}

class "WorkspaceOperationLock" {
    + Lock()
    + Unlock()
    - GetExistingLockOperation()
    - SetExistingLockOperation()
}

class "FileLock" {
    + Lock()
    + Unlock()
}

class "WorkspaceTreeMultiProcessLock" {
    + AcquireLock()
    + ReleaseLock()
}

class "ChangeListDirectoryStorage" {
    + GetChangeLists()
    + DeleteChangeList()
    + DeleteChangeListFile()
    + GetChangeListFullFilePath()
    - EscapeChangeListName()
}

class "ChangeListOrdinalComparer" {
    + Compare()
}

class "ChangeListStorage" {
    + LoadChangelists()
    + LoadChangeListFromName()
    + LoadChangeListFromName()
    + UpdateChangeList()
    + CreateChangeList()
    + DeleteAllChangeLists()
    + DeleteChangeList()
    + DeleteChangeList()
    - LoadChangeListFromFile()
    - SaveChangeList()
    - LoadMountPointChanges()
    - ParseMountPountFields()
    - GetMountPointRackIdsLine()
    - IsNew()
    - GetChangeListType()
    - GetTypeString()
    - GetChangeListFile()
}

class "ShortStringIndex" {
    + GetIndex()
}

class "NameIndex" {
    + GetIndex()
}

class "RepositoryIndex" {
    + GetRepositoryIndex()
}

class "IndexEqualityComparer" {
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.Equals()
    - System.Collections.Generic.IEqualityComparer<Codice.CM.Common.RepositorySpec>.GetHashCode()
}

class "SelectorHandler" {
    + SetSelector()
    + GetSelectorFromText()
    + GetSelector()
    + GetSelectorText()
    + SwitchWorkspaceSelector()
    + GetRepositorySpec()
    - GetRepositoryName()
    + GetTargetChangeset()
    + GetTargetChangeset()
    + GetTargetRepInfo()
    + GetTargetRepInfo()
    + GetTargetRepSpec()
    + GetTargetBranchInfo()
    + GetSelectorContent()
    + GetWorkspaceSelectorContent()
    + GetWorkspaceSelectorCloakedContent()
    + GetWorkspaceSelectorCloakedContent()
    + WkGetSelectorRevisionInfo()
    + WkGetSelectorRevisionInfo()
    + GetSelectorRepSpec()
    + GetSelectorRepository()
    + GetCsetZeroRootForSelector()
    - CheckSelectorTarget()
    + UpdateSelectorChangeset()
    - GetInitialRootRevInfo()
    - CheckSelector()
}

class "SelectorSolver" {
    + GetSelectorContent()
    - GetServerSelectorContent()
    - GetTreeOptions()
    + GetTargetRepInfo()
    + GetTargetChangeset()
    + GetTargetBranchInfo()
    - GetChangesetFromSelectorRule()
    - GetMainSelectorRule()
    - GetBranchInfoFromSelectorRule()
    - GetChangesetInfoFromSelectorRule()
    - TryParseToLong()
}

class "XlinkTreeResolver" {
    + ResolveXlinks()
    - Walk()
    - Resolve()
    - ResolveXlinkTarget()
    - CopyChildren()
}

class "TreeSolver" {
    + GetRepInfo()
    + GetChangesetId()
    + GetTree()
    + CheckChangesetExists()
    + GetXlinkedRootRevisionForSelectorResolution()
}

class "SelectorRules" {
    + GetMainSelectorRule()
    - GetSelectorRules()
    - IsEmpty()
}

class "TreeContentBuilder" {
    + GetRepositoryInfo()
    + GetRootRepSpec()
    + GetMountPoints()
    + GetUnresolvedXlinks()
    + IsUnresolvedXlink()
    - GetMountPointResolver()
}

class "SelectorLexer" {
    + SkipHidden()
    - mREPOSITORY()
    - mREP()
    - mLABEL()
    - mLB()
    - mMOUNT()
    - mPATH()
    - mROOT()
    - mBRANCH()
    - mBR()
    - mREVNO()
    - mCHANGESET()
    - mCUTINHERITANCE()
    - mSHELVE()
    - mSH()
    - mCHECKOUT()
    - mCO()
    - mBRANCHPERTASK()
    - mBASELINE()
    - mSMARTBRANCH()
    - mNORECURSIVE()
    - mNAME()
    - mNL()
    - mWS()
    - mCOMMENT()
    - mDIGIT()
    - mINT()
    - mID()
    + mTokens()
    + InitDFAs()
}

class "DFA12" {
    + Error()
}

class "SelectorParser" {
    - RQ()
    + EmitErrorMessage()
    + selector()
    - repositoryrule()
    - repositoryhead()
    - repositorymountrule()
    - repositoryrootrule()
    - repositorybody()
    - pathrule()
    - itembody()
    - branchrule()
    - labelrule()
    - shelverule()
    - checkoutrule()
    - taskperbranchrule()
    - smartbranchrule()
}

class "SelectorTreeWalker" {
    + GetText()
    + SetFilter()
    + SetReplacements()
    - HasReplacement()
    - GetReplacement()
    - AppendHiddenTokensAfter()
    - PrintSymbol()
    - RQ()
    + selector()
    - repositoryrule()
    - repositoryhead()
    - repositorymountrule()
    - repositoryrootrule()
    - repositorybody()
    - pathrule()
    - itembody()
    - normalbranch()
    - branchrule()
    - labelrule()
    - shelverule()
    - checkoutrule()
    - taskperbranchrule()
    - smartbranchrule()
}

class "TokenStreamWithHiddenTokens" {
    + Hide()
    + GetHiddenTokensAfter()
    - GetNextHiddenToken()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.Consume()
    - Unity.Plastic.Antlr3.Runtime.ITokenStream.Get()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.LA()
    - Unity.Plastic.Antlr3.Runtime.ITokenStream.LT()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.Mark()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.Release()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.Rewind()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.Rewind()
    - Unity.Plastic.Antlr3.Runtime.IIntStream.Seek()
    - Unity.Plastic.Antlr3.Runtime.ITokenStream.ToString()
    - Unity.Plastic.Antlr3.Runtime.ITokenStream.ToString()
}

class "WorkspaceSelectorBuilder" {
    + BuildWorkspaceSelector()
    + CreateRepositorySelector()
    - ContainsRepository()
    + GetCurrentRepositorySelector()
    + CreateItemSelector()
    + GetCurrentItemSelector()
    + CreateBranchSelector()
    + CreateSmartBranchSelector()
    + CreateLabelSelector()
    + CreateCheckoutBranch()
    + CreateShelveSelector()
    + AddItemSelectors()
}

class "SwitchSelector" {
    + GetSelector()
    + Switch()
    - ParseSelector()
}

class "LdapParameters" {
    - SetCryptedPassword()
    - SetClearPassword()
    - SetToken()
    + ToString()
}

class "UnixSEIDInfo" {
    + GetLocalUserName()
    + GetUserNameFromID()
    + GetLocalUserID()
    + GetUserIDFromName()
    + GetGroupIDFromName()
}

class "WinSEIDInfo" {
    + GetLocalUserName()
    + GetUserNameFromID()
    + GetLocalUserID()
    + GetUserIDFromName()
    + GetGroupIDFromName()
}

class "ClientBufferPoolStats" {
    + Stop()
}

class "EncryptedServerCache" {
    + IsEncryptedServer()
    + SetEncryptedServer()
}

class "OldVersionServerCache" {
    + IsOldVersionServer()
    + SetOldVersionServer()
}

class "InMemoryEncryptionSettings" {
    + GetEncryptionSettings()
    + HasEncryptionSettingsForServer()
    - IsMatchingServer()
}

class "PingEventLoop" {
    + Start()
    + Stop()
    + SetWorkspace()
    - GetWorkspace()
    - PingLoop()
    - GetPingEvent()
    - SleepUntilNextWorkload()
    - IsFinished()
    - <PingLoop>b__4()
}

class "SimpleEventSenderRestApi" {
    - CodiceApp.EventTracking.EventSender.IRestApi.PutEvents()
}

class "ConfigurationTreeNode" {
    + GetSize()
    + SetCalculatedSize()
    + SetAsLoadedOnServer()
    + AddChild()
    + ToggleCheck()
    + SetHeadXlinkRooRevision()
    + SetLocalInfo()
    + SetNameForTesting()
}

class "ConfigurationTreeNodeMountItemEqualityComparer" {
    + Equals()
    - ArePrivateEqual()
    + GetHashCode()
    + GetItemHash()
}

class "LockOwnerNameResolver" {
    + GetSeidName()
    - DoGetSeidName()
}

class "ForWorkingBranchOnRepoByItem" {
    + GetEnumerator()
    + Contains()
    + TryGetLocks()
    + AddLocks()
}

class "Comparer" {
    + Equals()
    + GetHashCode()
}

class "LogFileReader" {
    + Close()
    + ReadLine()
}

class "GetCloudSsoToken" {
    - Codice.Client.Common.OAuth.IGetOauthToken.TryGetFromState()
}

class "GetOnPremOidcToken" {
    - Codice.Client.Common.OAuth.IGetOauthToken.TryGetFromState()
}

class "GetOnPremSamlToken" {
    - Codice.Client.Common.OAuth.IGetOauthToken.TryGetFromState()
}

class "GetRepObjectSpec" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "BranchNameSpec" {
    + GetPrintableName()
}

class "BranchGuidSpec" {
    + GetPrintableName()
}

class "RepositoryServerSpec" {
    + ToString()
}

class "SpecGenerator" {
    + GenRevSpec()
    - GenPathOnlyRevSpec()
    - GenPathRevSpec()
    - CalculateRepSpecFromStringAndPath()
    + GenBranchSpec()
    + GenAttributeSpec()
    + GenMarkerSpec()
    + GenLinkEntitySpec()
    + GenLinkSpec()
    + GetObjectSpec()
    + GenChangesetSpec()
    + GenShelveSpec()
    + GenRepositoryServerSpec()
    + GenPathSpec()
    + GenWorkspaceSpec()
    + GenTriggerSpec()
    + GenRepositorySpec()
    + GenItemSpec()
    + GetRepObjectSpec()
    + GetServerFromSpec()
    + GetSpecFromObjectInfo()
    + ExceptIncorrectSpec()
    + GetIncorrectSpecError()
    - GetRepObjectFormatString()
    - GetRepName()
    - GetPathForItem()
    - GetRepositoryFromPath()
}

class "SpecResolver" {
    + GetObjectIdFromSpec()
    + GetRepObjectIdFromSpec()
    + GetObjectInfoFromSpec()
    + ResolveBranchSpec()
    + ResolveChangesetSpec()
    + ResolveShelveSpec()
    + ResolveMarkerSpec()
    + GetRevisionInfosFromSpec()
    - CanUseGroupRequest()
    - ResolveGroupRevisionInfos()
    - ResolveMixedRevisionInfos()
    - ResolveRevSpec()
    - GetRevisionInfoFromRevSpec()
    - GetRevisionInfoFromPathRevSpec()
    - GetRevisionInfoFromRevIdSpec()
    - GetRevisionInfoFromPathOnlySpec()
    - GetRawRevisionInfo()
    - FillRepSpec()
    - ResolveItemSpec()
    - CalculateFullRevInfoFromPath()
    - ResolveLinkEntitySpec()
    - ResolveLinkSpec()
    - ResolveUserLinkSpec()
    - ResolveAttributeSpec()
    - ResolvePathSpec()
    - ResolveResositoryServerSpec()
    - ResolveRepositorySpec()
    - ResolveWokspaceSpec()
    - ResolveTriggerSpec()
    + GetRepInfo()
    + GetRepInfo()
    - TryGetRepInfo()
}

class "PlasticWebApiUris" {
    + GetFullUri()
    + GetPlasticCloudUriString()
    + GetEventsUri()
    + GetUnityServicesUri()
    + GetUnityCloudUriString()
    + GetFullUriForCloudServer()
    + GetFullUriForCloudAlias()
    + GetDefaultCloudAlias()
}

class "PlasticWebRestApi" {
    - PlasticGui.WebApi.IPlasticWebRestApi.SetToken()
    - PlasticGui.WebApi.IPlasticWebRestApi.SignUp()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetCloudServers()
    - PlasticGui.WebApi.IPlasticWebRestApi.SendOrganizationsEmail()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetDatacenters()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetSSOProviders()
    - PlasticGui.WebApi.IPlasticWebRestApi.IsValidOrganization()
    - PlasticGui.WebApi.IPlasticWebRestApi.CreateOrganization()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetCloudOrganizationHelpActions()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetWelcomePage()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetOAuthToken()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetNewVersion()
    - PlasticGui.WebApi.IPlasticWebRestApi.GetWebResponse()
    - CodiceApp.EventTracking.EventSender.IRestApi.PutEvents()
    - PlasticGui.WebApi.IUnityServicesRestApi.CreateUnityJWTToken()
    - PlasticGui.WebApi.IUnityServicesRestApi.GetUnityOrganizations()
    - PlasticGui.WebApi.IUnityServicesRestApi.CreateSubscription()
    + GetDefaultCloudAlias()
}

class "HumanReadableXlinkDataGenerator" {
    + GetXlinkData()
    - GetExpansionRulesHeader()
    - GetXlinkspec()
    - GetRuleData()
    - GetBranchSpec()
    - GetUserDefinedSuffix()
}

class "XlinkResolver" {
    + GetRepositoryInfo()
    + GetRepositoryInfo()
    + GetChangesetId()
    + GetChangesetId()
    + GetChangesetId()
    + GetChangesetId()
    + ConvertXlinkToClientXlink()
    + ConvertXlinkToClientXlink()
    + HasValidRepositorySpec()
    + GetValidRepositorySpec()
    + GetValidRepositorySpec()
    - BuildSolvedRepositorySpec()
    - BuildSolvedRepositorySpec()
    - TryGetClientXlinkChangesetId()
    - GetRepInfo()
}

class "ActiveDirectoryServices" {
    + GetCurrentSEID()
}

class "AssemblyResolver" {
    - DoEnabled()
    - DoDisabled()
    - DoAssemblyResolve()
    - HasSameVersionAndPublicToken()
}

class "AutoDiscoveryClient" {
    + GetNewDiscoveredServers()
    + Start()
    + Stop()
    - Work()
    - SafeReceive()
    - ProcessResponse()
    - ProcessAck()
    - AddDiscoveredServer()
    - IsRunning()
    - StopRunning()
    - KeepSendingBroadcasts()
    - SendBroadcast()
    - GetBroadcasts()
}

class "BranchResolver" {
    + GetBranchInfo()
    + GetBranchInfoWithPermissionProtection()
    + GetBranchInfo()
    + SetBranchInfo()
    + Clear()
    - GetRepositoryCache()
}

class "RepositoryBranchesCache" {
    + AddBranchById()
    + AddBranchByGuid()
    + AddBranches()
    + AddBranchWithoutPermissions()
    + ContainsBranchWithoutPermissions()
    + TryGetBranchFromId()
    + TryGetBranchFromGuid()
}

class "CaseInsensitiveRegExpMatcher" {
    + Matches()
    - SetupRegexPattern()
}

class "ChangesetGuidResolver" {
    + GetChangesetId()
    - GetCsetSpec()
}

class "CachedChangesetGuidResolver" {
    + GetChangesetId()
    - TryGetChangesetId()
    - SetChangesetId()
}

class "ClientConfig" {
    + IsInitialized()
    + GetDefaultServer()
    + SetCurrentWorkspace()
    + GetDefaultProfile()
    + CreateDefaultProfileForServer()
    + SetAuthData()
    + GetWorkspaceServer()
    + GetCacheServer()
    + IsCacheServerDisabled()
    + DisableCacheServer()
    + SetForcedWorkspaceServer()
    + SetForcedCacheServer()
    + GetLanguage()
    + IsForceLanguage()
    + EnableStackTrace()
    + DisableSymlinksForPlasticFs()
    + EnableNewWorkspaceTreeFormat()
    + ShowPerformanceWarnings()
    + MergeWithPendingChanges()
    + SetMergeWithPendingChanges()
    + DumpStackTrace()
    + SetFilesAsReadOnly()
    + SetRevisionFileDate()
    + SupportSmbWorkspaces()
    + GetAutoEolConversion()
    + EnableLz4InPlasticProto()
    + EnableCheckSslCertificateRevocationList()
    + EnableLeaveConnectionsOpen()
    + IsSemanticMergeCrossPlatformEnabled()
    + IsCloudProfilesEnabled()
    + PerformAddPlusCi()
    + CheckFileContentForChanged()
    + CheckRevisionMetadataSize()
    + UseChangeTrackerService()
    + GetExtensions()
    + GetSEIDWorkingMode()
    + GetSecurityConfig()
    + GetCurrentWorkspace()
    + GetClientConfigData()
    + GetClientConfigFullPath()
    + GetMergeTools()
    + GetDiffTools()
    - GetTool()
    + Save()
    + GetTriggerVariables()
    + GetWkConfigDir()
    + GetDownloadPoolSize()
    + GetCheckinQueuesSize()
    + GetUploadCompressionSize()
    + GetSocketConnectTimeoutMillisec()
    + GetPendingChangesOnSwitchAction()
    + IsWatcherEnabled()
    + GetUploadReadPoolSize()
    + GetUploadDataThreadCount()
    + IgnoreFsProt()
    + IsDynamicBranchExplorerLayoutEnabled()
    + IsNewWorkspaceTreeFormatEnabled()
    + IsSymlinkSupportEnabledOnWindows()
    + GetAlternativeCloudServer()
    + IsPurgeEnabled()
    - GetForcedWorkspaceServer()
    + GetWatcherMaxAllowedEventsPerSecond()
    - GetForcedCacheServer()
    - GetPendingChangesOnSwitchActionFromGuiClientConf()
    - InitializeClientComparers()
    - InitBufferPool()
    - InitFromFile()
    - SetClientConfigData()
}

class "ClientConfigData" {
    - GetBoolValueFromString()
    + GetMergeWithPendingChanges()
    + GetShowPerformanceWarnings()
    + GetDumpStackTrace()
    + GetCaseSensitiveFsOnMac()
    + GetSameFileDifferentCaseError()
    + GetKeepFilesAsReadOnly()
    + GetKeepRevisionFileDate()
    + GetSupportSmbWorkspaces()
    + GetPerformAddPlusCi()
    + GetCheckFileContentForChanged()
    + IsWatcherEnabled()
    + GetUseChangeTrackerService()
    + IsFileSystemLocksCheckBeforeMergeEnabled()
    + IsDynamicBranchExplorerLayoutEnabled()
    + IsNewWorkspaceTreeFormatEnabled()
    + IsForceLanguage()
    + IsSymlinkSupportEnabledOnWindows()
    + IsPurgeEnabled()
    + EnableLz4InPlasticProto()
    + EnableCheckSslCertificateRevocationList()
    + EnableLeaveConnectionsOpen()
    + IsSemanticMergeCrossPlatformEnabled()
    + IsCloudProfilesEnabled()
    + GetAutoEolConversion()
    + GetPendingChangesOnSwitchAction()
    + GetIgnoreFsProt()
    + IsServerSideMergeEnabled()
    + SetMergeWithPendingChanges()
    + SetKeepFilesAsReadOnly()
    + SetKeepOriginalCreationFileDate()
    + SetSupportSmbWorkspaces()
    + SetCheckFileContentForChanged()
    + SetUseChangeTrackerService()
    + SetPerformAddPlusCi()
    + SetSameFileDifferentCase()
    + SetSymlinkSupportOnWindows()
    + SetPendingChangesOnSwitchAction()
    + GetCheckRevisionMetadataSize()
}

class "CommandWithName" {
    + RegisterCommand()
}

class "CmClientMergeNeededException" {
    + GetExceptionArguments()
}

class "RepositoryLoadedTwiceException" {
    + GetExceptionArguments()
}

class "InvalidMountPointException" {
    + GetExceptionArguments()
}

class "RepositoryLoadedInsideItselfException" {
    + GetExceptionArguments()
}

class "CmServerComparer" {
    + GetInfoHandler()
    + IsSameServer()
}

class "CommandLineArguments" {
    + GetComment()
    + GetOptions()
    + ContainsOption()
    + TryGetOption()
    + IsCommandThatRequiresClientConfigured()
    + IsRecursive()
    + Remove()
    + PeekArgument()
    + ReadArgument()
    + ReadRawArgument()
    + ArgumentCount()
    + ArgumentReadCount()
    + DontExpandWildcards()
    + ClearArguments()
    + GetPathsFromArguments()
    + Duplicate()
    + CopySubcommandRawArgs()
    + GetRawArgsStr()
    + GetWildCardArguments()
    - GetNextArgument()
    - ParseSingleOption()
    - AddOption()
    - ExpandWildcardArguments()
    - ParseArguments()
    - GetClientConfValue()
    - GetServerValue()
    - GetCacheServerValue()
}

class "WildcardArgument" {
    + IsUniversalMatch()
}

class "InvariantComparer" {
    + Equals()
    + GetHashCode()
}

class "IgnoreCaseInvariantComparer" {
    + Equals()
    + GetHashCode()
}

class "FileStamp" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "ToolVersion" {
    + GetVersionString()
}

class "GuiConfigurationPropertyChangedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GuiClientConfigData" {
    + GetAnnotateFields()
    + SetAnnoteFields()
    + GetAnnotateColorMode()
    + SetAnnotateColorMode()
    - OnPropertyChanged()
}

class "GuiClientConfig" {
    + Save()
    - CreateDefaultConfigFile()
}

class "HelpManagerBase" {
    + ShowHelp()
    + GetBaseURL()
}

class "Win32NativeConsoleReader" {
    + ReadLine()
    + CheckInputsConsumed()
    + Close()
    - BuildReader()
}

class "ShellConsoleReader" {
    + ReadLine()
    + CheckInputsConsumed()
    + Close()
}

class "FileConsoleReader" {
    + CheckInputsConsumed()
    + Close()
    + ReadLine()
    - OpenStreamReader()
}

class "LdapRemoteServices" {
    + GetCurrentSEID()
}

class "ShellConsolePrinter" {
    + SetEncoding()
    + Write()
    + WriteLine()
    + WriteError()
    + WriteErrorLine()
    + Close()
}

class "FileConsolePrinter" {
    + SetEncoding()
    + Write()
    + WriteLine()
    + WriteError()
    + WriteErrorLine()
    + Close()
    - DeleteTmpFile()
    - GetTmpOutputFile()
    - WriteOutputToTmpFile()
    - MoveTmpToOutputFile()
}

class "NameComparer" {
    + IsSameName()
}

class "PathResolver" {
    + GetPath()
    + GetPath()
    + GetPathWithSymlink()
    - TryGetInfo()
    - Add()
    - AddDirectoryChildren()
}

class "CachedPlasticPath" {
    + Equals()
    + GetHashCode()
}

class "PlasticfsProcess" {
    + IsRunning()
}

class "RepositorySpecResolver" {
    + GetRepInfo()
}

class "CachedRepostiorySpecResolver" {
    + GetRepInfo()
    + ClearCache()
    + Remove()
    + Set()
    - TryGetRepositoryInfo()
    - SetRepositoryInfo()
}

class "ResolvedUser" {
    + Equals()
    + GetHashCode()
}

class "RevisionSpecResolver" {
    + GetRevisionSpec()
    + GetRemoteRevInfo()
}

class "Searcher" {
    + IsCancelled()
    + NotifySearchResult()
    + IsRunning()
    + SetSearchProvider()
    + GetSearchResults()
    + Start()
    + GetException()
    + SetCancelled()
    - DoSearch()
    - ResetEventSet()
    - ResetEventReset()
    - SetIsRunning()
    - SetException()
    - StopSearchAndWait()
    - Clone()
}

class "SelectorContentSearchProvider" {
    + StartSearch()
    - SearchRecurse()
    - IsDirectory()
    - NotifySearchResult()
    - IsMatch()
}

class "ServerLock" {
    + Get()
}

class "ServerProfile" {
    + GetSEIDWorkingMode()
    + IsCloud()
    + IsLocalServer()
}

class "ProfileManager" {
    + SetConfigFilePath()
    + SetUserInfoIfNotSet()
    + Reset()
    + SaveTemporaryProfile()
    + SetDefaultProfileForServer()
    + AddOrEditProfileByServer()
    + SaveProfile()
    + GetPersistentProfiles()
    + GetAllProfiles()
    + GetProfileNames()
    + GetProfileServers()
    + GetProfileForServer()
    + GetProfilesForServer()
    + AddProfile()
    + DeleteProfile()
    + ExistsProfileWithName()
    + EditProfile()
    + RenameProfile()
    + Save()
    - GetProfile()
    - Init()
    - InitForTesting()
    - GetStoredProfileForServer()
    - GetStoredProfilesForServer()
}

class "TemporaryProfiles" {
    + GetTemporaryProfileForServer()
    + GetTemporaryProfilesForServer()
    + SaveTemporaryProfile()
    + RemoveTemporaryProfile()
    + GetTemporaryProfiles()
    - GetStoredProfileServer()
}

class "MovedReferencesBuilders" {
    + ResolveMoveReferences()
    + GetMovedReferencesBuilder()
}

class "TreeGrouper" {
    + BuildTree()
    - AddNode()
    - FindChild()
}

class "TreeNodeFinder" {
    + FindChild()
    + AddChild()
    + AddChild()
}

class "CachedTreeChangedNodeFinder" {
    + ClearCache()
    + FindChildByName()
    - CacheTree()
    - CacheNode()
}

class "CachedWorkspaceTreeNodeFinder" {
    + FindChild()
    + ClearCache()
    - GetFromCache()
    - CacheTree()
    - CacheNode()
}

class "UnityOrgCache" {
    - Codice.Client.Common.IUnityOrgCache.TryGetIdFromSlug()
    - Codice.Client.Common.IUnityOrgCache.TryGetSlugFromId()
    - Codice.Client.Common.IUnityOrgCache.AddEntry()
    - Codice.Client.Common.IUnityOrgCache.AddEntries()
}

class "UserInfo" {
    + GetCurrentUserName()
    + IsCurrentUserAdministrator()
    + IsUserAdministrator()
    + GetCurrentSEID()
    + GetSeidFromNameOnDefaultServer()
    + GetSeidFromNameOnServer()
    + TryGetCachedSeidFromNameOnServer()
    + GetNameFromSeidOnDefaultServer()
    + TryGetNameFromSeidOnServer()
    + GetNameFromSeidOnServer()
    + ResolveUserNamesOnServer()
    + TryGetCachedNameFromSeidOnServer()
    + GetCurrentCredentials()
    + RecalculateCredentialsIfModeIsLdap()
    - GetUserInfoRetrieverFromServer()
    - GetCache()
    - ClearAllCaches()
}

class "Cache" {
    + IsUserResolutionEnabled()
    + TryGetSeidFromName()
    + TryGetNameFromSeid()
    + SetSeid()
    + DisableUserResolution()
    + Clear()
}

class "UserInfoRetriever" {
    - Codice.Client.Common.UserInfo.IUserInfoRetriever.GetWorkingMode()
    - Codice.Client.Common.UserInfo.IUserInfoRetriever.GetCurrentUser()
    - Codice.Client.Common.UserInfo.IUserInfoRetriever.GetSEIDFromName()
    - Codice.Client.Common.UserInfo.IUserInfoRetriever.GetNameFromSEID()
    - Codice.Client.Common.UserInfo.IUserInfoRetriever.GetNamesFromSEIDs()
    - GetCredentialsForMode()
    - Codice.Client.Common.UserInfo.IUserInfoRetriever.IsUserAdministrator()
}

class "UserNameResolver" {
    + GetUserName()
}

class "UserPasswordServices" {
    + GetCurrentUserSEIDData()
    + GetSEIDFromName()
}

class "WorkingWithoutBranchResolver" {
    + GetWorkingBranchIdWithBranchExpansionByPath()
    + EnableResolvedBranchCache()
    + DisableResolverdBranchCache()
}

class "WorkspacePathResolver" {
    + GetPath()
    - BrowseAndCachePaths()
    - BrowseAndCachePaths()
    - DoSecuredAdd()
    - GetItemKey()
}

class "WorkspaceResolver" {
    + GetWorkspaceFromPath()
}

class "RecentlyUsedServerComparer" {
    - System.Collections.Generic.IComparer<Codice.Client.Common.Servers.RecentlyUsedServers.Recent>.Compare()
}

class "RecentlyUsedServers" {
    + Init()
    + Get()
    + AddRecent()
}

class "FsReader" {
    + GetNodes()
    + GetFsNodeFromPath()
    + FindFsNode()
    + FindFsNode()
    + GetNodesHashed()
}

class "FsReaderSearchProvider" {
    + StartSearch()
    - SearchRecurse()
    - NotifySearchResult()
    - IsMatch()
}

class "SolveWindowsSymlink" {
    - Codice.Client.Common.ISolveSymlinks.IsSymlink()
    - Codice.Client.Common.ISolveSymlinks.GetSymlinkTarget()
}

class "SolveUnixSymlink" {
    - Codice.Client.Common.ISolveSymlinks.IsSymlink()
    - Codice.Client.Common.ISolveSymlinks.GetSymlinkTarget()
}

class "CachedFsNodeReader" {
    + GetDirectoryChildren()
}

class "FtsModeLock" {
    + TryAcquireReadChildrenLock()
    + AcquireReadTreeLock()
    + ReleaseReadChildrenLock()
    + ReleaseReadTreeLock()
}

class "LinuxFsNodeReader" {
    + GetDirectoryChildren()
}

class "MacFsNodeReader" {
    - Codice.Client.Common.FsReader.IFsNodeReader.GetDirectoryChildren()
}

class "NewChangesInWkMetadata" {
    + Detect()
}

class "WatcherFsNodeReader" {
    - Codice.Client.Common.FsReader.IFsNodeReader.GetDirectoryChildren()
    - Codice.Client.Common.FsNodeReaders.IWatcherFsReader.Shutdown()
    - Codice.Client.Common.FsNodeReaders.IWatcherFsReader.Close()
    - Codice.Client.Common.FsNodeReaders.IWatcherFsReader.IsWatchLimitReached()
    - Codice.Client.Common.FsNodeReaders.IWatcherFsReader.HasBeenChangesSince()
    - Codice.Client.Common.FsNodeReaders.IWatcherFsReader.StartWatching()
    - Codice.Client.Common.FsNodeReaders.ITestingWatcherFsReader.Start()
    - Codice.Client.Common.FsNodeReaders.ITestingWatcherFsReader.WaitForPendingEvents()
    - StartWatching()
    - WatcherMonitor()
    - ProcessEvents()
    - ProcessEvent()
    - StartMonitor()
    - StopMonitor()
}

class "WatcherFsNodesCache" {
    + GetCachedDirectoryChildren()
    + Clear()
    + IsEmpty()
    + UpdateContentUnderMovedPath()
    + CleanParentDirectoryContent()
    + CleanContentUnderPath()
    - GetDirectoriesUnderPath()
    - GetRelativePath()
}

class "WatcherNewChangesInWk" {
    - Codice.Client.Common.FsNodeReaders.INewChangesInWk.Detected()
    - IsWorkspaceContentChanged()
}

class "WindowsFsNodeReader" {
    + GetDirectoryChildren()
}

class "WorkspaceWatcherFsNodeReadersCache" {
    + TryGetWorkspaceFsNodeReader()
    + GetWorkspaceFsNodeReader()
    + GetWorkspaceWatcherFsReader()
    + CleanWorkspaceFsNodeReader()
    + IsWatcherEnabled()
    + SetMacFsWatcherBuilder()
    + DisableWatcher()
    + Shutdown()
    - GetMacFsWatcherBuilder()
}

class "InotifyWatcher" {
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.HasPendingEvents()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.WaitForEvent()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.EndProcessEvent()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.Start()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.Stop()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.IsWatchLimitReached()
    - StartDispatching()
    - StopDispatching()
    - StartMonitoringDirectory()
    - EventsMonitor()
    - IsStopped()
    - ProcessOutOfDateMovedFromEvents()
    - ProcessEvents()
    - ProcessEvent()
    - IsEventOnRootDirectoryWatch()
    - GenerateEvent()
    - GenerateMovedEvent()
    - GenerateCleanAllEvent()
    - UnregisterWatch()
    - RegisterWatch()
}

class "InotifyWatcher_MovedFromCandidates" {
    + IsEmpty()
    + AddMovedFrom()
    + TryGetMovedFrom()
    + GetOutOfDateMovedFrom()
    + Clear()
}

class "InotifyWatcher_WatchesCache" {
    + AddWatch()
    + RemoveWatch()
    + TryGetWatch()
    + GetAllWatches()
    + Clear()
    + UpdatePaths()
}

class "DotNetFsWatcher" {
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.HasPendingEvents()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.WaitForEvent()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.EndProcessEvent()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.Start()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.Stop()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.IsWatchLimitReached()
    - SetIsAlreadyWatching()
    - OnEvent()
    - OnError()
    - EnsureWatching()
}

class "FileSystemWatcherWrapper" {
    + Dispose()
}

class "MonoFileSystemWatcher" {
    + BeginInit()
    - CompletionStatusChanged()
    + Dispose()
    + EndInit()
    - IsSuspended()
    - MatchPattern()
    - Monitor()
    - NotifyFileSystemEventArgs()
    - NotifyInternalBufferOverflowEvent()
    - NotifyRenameEventArgs()
    + OnChanged()
    + OnCreated()
    + OnDeleted()
    + OnError()
    - OnInternalFileSystemEventArgs()
    - OnInternalRenameEventArgs()
    + OnRenamed()
    - Restart()
    - StartRaisingEvents()
    - StopRaisingEvents()
    - FinishMonitorThread()
}

class "PendingWatcherEvents" {
    + HasPendingEvents()
    + StartReadEvents()
    + EndReadEvents()
    + AddEvent()
    + Finish()
    + Start()
    + Clean()
    + WaitForEvent()
    + EndProcessEvent()
}

class "ChangeTrackerFsNodeCache" {
    - Codice.Client.Common.FsNodeReaders.ChangeTrackerService.IChangeTrackerFsNodeCache.DeleteFsNode()
    - Codice.Client.Common.FsNodeReaders.ChangeTrackerService.IChangeTrackerFsNodeCache.DeleteFsNodesInsideDir()
    - Codice.Client.Common.FsNodeReaders.ChangeTrackerService.IChangeTrackerFsNodeCache.MoveFsNode()
    - Codice.Client.Common.FsNodeReaders.ChangeTrackerService.IChangeTrackerFsNodeCache.MovedFsNodesInsideDir()
    - Codice.Client.Common.FsNodeReaders.ChangeTrackerService.IChangeTrackerFsNodeCache.UpdateDirContent()
    - Codice.Client.Common.FsReader.IFsNodeReader.GetDirectoryChildren()
}

class "TrackerNewChangesInWk" {
    - Codice.Client.Common.FsNodeReaders.INewChangesInWk.Detected()
    - IsWorkspaceContentChanged()
}

class "UsnEntry" {
    + CompareTo()
}

class "LoadedMountPointLoadingPathComparer" {
    + Compare()
}

class "MountPointResolver" {
    + GetMountPointFromPath()
    - IsUnresolvedXlink()
    + GetRepositoryInfoFromPath()
    + GetRepositorySpecFromPath()
    - GetLoadedMountPoints()
}

class "TreeMountPointResolver" {
    + GetMountPointFromPath()
    + GetRepositoryInfoFromPath()
    + GetRepositorySpecFromPath()
    - TryGetRepositoryResolverTreeFromPath()
    - AddPathToResolverTree()
    - AddChildNode()
    - TryGetChildNode()
    - GetMountPointResolverTree()
}

class "ClientConfLoginInfo" {
    + IsEmpty()
}

class "AuthTokenCache" {
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.TryGetToken()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.TryGetTokenBySeidData()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.SetToken()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.SetAllMatchingTokens()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.InvalidateToken()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.TryFindTokensForCloudServerByUser()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.TryFindEquivalentToken()
    - Codice.Client.Common.Connection.GetCredentials.IAuthTokenCache.GetTokensForCloudServers()
    - ReloadFromFileInLockedList()
}

class "CmConnection" {
    + SetUnityOrgCacheForTesting()
    + RegisterExternalHandler()
    + InitCallContextWithDefaultUser()
    + BeginNonTransactionCall()
    + EndNonTransactionCall()
    + IsValidServer()
    + IsCloud()
    + TryGetCloudOrganizationRegion()
    + SetUnityOrganizationsSlugData()
    + SetCredsToSolveCloudOrg()
    + CleanCredsToSolveCloudOrg()
    + GetAlias()
    + GetDedicatedServer()
    + IsAnyTokenConfigured()
    + GetItemHandler()
    + GetInfoHandler()
    + GetTriggerHandler()
    + GetBranchHandler()
    + GetMarkerHandler()
    + GetAttributeHandler()
    + GetReplicationHandler()
    + GetRepositoryHandler()
    + GetSecurityHandler()
    + GetLinkHandler()
    + GetReviewHandler()
    + GetLockHandler()
    + GetCloudWorkspaceHandler()
    + GetCacheHandler()
    + GetWorkspaceHandler()
    + GetWorkspaceTreeHandler()
    + GetWorkspaceSelectorHandler()
    + GetOperationsHandler()
    + GetSelectorHandler()
    + GetServerHandler()
    + GetServerSecurityWorkingMode()
    + GetSEIDFromServer()
    + GetNameFromCredentials()
    + GetOidcSignInUrlFromServer()
    + GetSamlSignOnInfoFromServer()
    + GetDnsResolve()
    + GetRemoteCreds()
    + GetRemoteCredsForProfile()
    + GetRemoteSEIDForServer()
    + GetWebRestApiInstance()
    + BuildWebApiTokenForCloudEditionDefaultUser()
    + BuildWebApiTokensForCloudEditionDefaultUser()
    + BuildWebApiTokenForCloudEditionForUser()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.FromProfile()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.ForAlias()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.FromDefaultConfig()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.RenewFromToken()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.FromUpServer()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.FromLdapServer()
    - Codice.Client.Common.Connection.GetCredentials.IGetCredentials.FromNotUserPasswordMode()
    + GetBuildPlasticServer()
    + GetProfileManager()
    + GetAccessToken()
    + SaveAccessToken()
    + DeleteAccessToken()
    + RemoveCredentials()
    + CreateProxy()
    + GetAuthenticableServerProxy()
    - DoCreateProxyWithMethodRetry()
    - InitCallContext()
    - CreateProxyToRemoteObject()
    - CreatePlasticProtocolProxy()
    - GetUserInfo()
    - GetLoginInfoFromClientConf()
}

class "CreateClientTransport" {
    - Codice.Client.Common.CmConnection.ICreateClientTransport.Create()
}

class "WorkspaceHandlers" {
    + GetWorkspaceServer()
    + RegisterHandler()
}

class "InvokeMethodAdapter" {
    - PlasticPipe.PlasticProtocol.Client.Proxies.IInvokeMethod.Invoke()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IInvokeMethod.GetSentBytes()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IInvokeMethod.GetRecvBytes()
}

class "CredentialsCache" {
    + GetCredentialsFromProfile()
    + RecalculateCredentials()
    + UpdateAuthToken()
    + RemoveCredentials()
}

class "ClientTransport" {
    + IsInMethodRetryForTesting()
    + InvokeMethod()
    + GetSentBytes()
    + GetRecvBytes()
    - SendAndWaitWithRetry()
    - SendAndWait()
    - SafeReadByteResponseCode()
    - SafeDeserializeResponse()
    - GetConnection()
    - SendCallContextOnConnectionCreation()
    - GetChangesInCallContext()
    - StartSslConnection()
    - StartRemotingSsl()
}

class "CallContextDataSentToServer" {
    + TransactionChanged()
    + SecurityCtxChanged()
    + CredentialsChanged()
    + Update()
    + Update()
    + Update()
}

class "ClientSideNegotiateActiveDirectory" {
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.INegotiateActiveDirectory.CreateStream()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.INegotiateActiveDirectory.AuthenticateAsClient()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.INegotiateActiveDirectory.WriteByte()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.INegotiateActiveDirectory.CloseStream()
}

class "ResolveCloudServer" {
    + SetCredsToSolveCloudOrg()
    + CleanCredsToSolveCloudOrg()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IResolveCloudServer.TryResolve()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IResolveCloudServer.OrganizationMigratedToNewLocation()
    + TryGetOrganizationRegion()
}

class "GetUnityOrganizationInfo" {
    - Codice.CM.Common.IUnityOrgResolver.TryGetIdFromSlug()
    - AskForCredentials()
}

class "GetCloudRegionWebApi" {
    - Codice.Client.Common.Connection.ResolveCloudServer.IWebApi.TryGetRegionForCloudServer()
    - Codice.Client.Common.Connection.GetUnityOrganizationInfo.IWebApi.TryGetRegionForUnityOrganization()
}

class "RecentCredentialsEnteredByTheUser" {
    + Add()
    + TryObtainRecent()
    + Clear()
}

class "PlasticProtocolCmProxy" {
    - PlasticPipe.PlasticProtocol.Client.Proxies.IInvokeMethod.Invoke()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IInvokeMethod.GetSentBytes()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IInvokeMethod.GetRecvBytes()
}

class "PlasticProtocolMethodInvoker" {
    - Codice.Client.Common.Connection.HandleCredsAliasAndServerCert.IInvokeMethod.ReplaceUrl()
    - Codice.Client.Common.Connection.HandleCredsAliasAndServerCert.IInvokeMethod.Invoke()
    - Codice.Client.Common.Connection.HandleCredsAliasAndServerCert.IInvokeMethod.InvokeMethodOnNewServer()
    - DoInvokeMethod()
}

class "ServerAliases" {
    + GetAlias()
    + GetActiveAlias()
    + ActivateAlias()
    + DeactivateAlias()
}

class "DiffCollection" {
    + Add()
    + Add()
    + AddRange()
    + Equals()
    + InvertedOrder()
}

class "BaseDiffRegion" {
    + SetChangesInvalidator()
    + InvalidateAfterChanges()
}

class "DistanceTree" {
    + CreateLevelNodesList()
    + GetLastLevel()
    + GetLastLevelNode()
    + GetLastLevelNodeByIndex()
    + GetSolutionSheet()
    + IsLastLevelEmpty()
    + SaveLevelNodeList()
    + SaveRoot()
    + SaveSolutionSheet()
    + CalculateNodeForDiagonal()
    - GetNodeForDiagonal()
}

class "DifferenceTree" {
    + CreateLevelNodesList()
    + GetLastLevel()
    + GetLastLevelNode()
    + GetLastLevelNodeByIndex()
    + GetSolutionSheet()
    + IsLastLevelEmpty()
    + SaveLevelNodeList()
    + SaveRoot()
    + SaveSolutionSheet()
    + CalculateNodeForDiagonal()
    - GetNodeForDiagonal()
    + ObtainDifferences()
    - GetParent()
    - IsAddDifference()
    - InsertAddDifference()
    - InsertRemoveDifference()
}

class "FileConflict" {
    + GetConflictPreviousPosition()
    + GetFirstSourceDifference()
    + GetFirstDestinationDifference()
    + GetLastSourceDifference()
    + GetLastDestinationDifference()
    - ObtainFirstDifference()
    - ObtainLastDifference()
}

class "GenericFile" {
    + GetElement()
    + SaveAs()
    + Equals()
    + EqualsHash()
}

class "ItemDiff" {
    + ToString()
    + Equals()
}

class "LineComparable" {
    + GetElement()
    + Equals()
    - GetComparableContent()
}

class "TextBlockGroup" {
    - GetLineFromDiffValue()
}

class "TextBlock" {
    + BuildSubTextBlock()
    + GetElement()
    + Equals()
    + ToString()
}

class "SubTextBlock" {
    + GetElement()
    + Equals()
}

class "LinealWords" {
    + GetWord()
}

class "TextFile" {
    + GetRawContent()
    + GetString()
    + GetContent()
    + GetElement()
    + GetTrimmedWhiteSpacesCount()
    + AddLine()
    + AddLine()
    + InsertLine()
    + ReplaceLine()
    + ReplaceRange()
    + RemoveLine()
    + RemoveLines()
    + BinaryReadComplete()
    + BinaryReadComplete()
    + Cancel()
    - GetEncodingPreamble()
    - BinaryReadComplete()
    - ReadByte()
    - AppendByteToLine()
    - ProcessEncodingPreamble()
    - ProcessEndOfLine()
    - ReDim()
    + SaveAs()
}

class "TextLine" {
    + GetHashCode()
    + GetRawContent()
    + SetComparisonMethodType()
    + Equals()
    + CachePrecalculatedWords()
    + GetPrecalculatedWords()
    + CleanPrecalculatedWords()
    + SetEncoding()
    + GetEncoding()
    + GetComparisonMethod()
    - GetPreambledContent()
    - GetComparisonHashCode()
}

class "VirtualSpace" {
    + GetSearchMatches()
    + GetSearchMatches()
    + CalculateLongestLine()
    + Clear()
    - Initialize()
    - GetLongestLineIndex()
    - CalculateLongestLine()
    - GetLineLength()
    - GetLongestLineLength()
    - ProcessLineForDisplay()
    - ReplaceTabs()
    + GetRawContent()
    - GetRawColumn()
    + GetColumn()
    + GetContent()
    + GetRawContent()
    + ReplaceLine()
    + AddLine()
    + InsertLine()
    + RemoveLine()
    + RemoveLines()
    - NeedRecalculateLongestLineLength()
    + GetVirtualIndexForPhysicalLine()
    - GetStringComparison()
    - GetLineToCompare()
}

class "Word" {
    + GetHashCode()
    + Equals()
}

class "ArgbColor" {
    + GetHashCode()
    + Equals()
}

class "ColorConfiguration" {
    + GetCombinedColor()
    + GetSplitterFillColor()
    + GetDiffColor()
    + GetInsideDiffColor()
    + GetDeleteDiffColor()
    + GetMoveColor()
    + GetUnselectedColor()
}

class "DiffComparableContent" {
    + GetTextRange()
    + GetTrimmedWhiteSpacesCount()
    - Codice.CM.Client.Differences.IDiffComparable.Equals()
    - Codice.CM.Client.Differences.IDiffComparable.GetElement()
    - GetComparableContent()
}

class "DiffContent" {
    + UpdateContent()
    + UpdateContent()
    - Codice.CM.Client.Differences.Graphic.IDiffContent.GetLineText()
    - Codice.CM.Client.Differences.Graphic.IDiffContent.GetLineTerminator()
    - Codice.CM.Client.Differences.Graphic.IDiffContent.GetLineTextIncludingLineTerminator()
    - Codice.CM.Client.Differences.Graphic.IDiffContent.GetTextRange()
}

class "DiffLine" {
    + CachePrecalculatedWords()
    + GetPrecalculatedWords()
    + CleanPrecalculatedWords()
    + Equals()
    + GetHashCode()
}

class "LineRange" {
    + Contains()
}

class "ColorTextRegion" {
    + Clone()
}

class "VirtualMappingIndex" {
    + GetLineIndex()
}

class "MergeFileInfo" {
    + SetHashCode()
}

class "MergeInfo" {
    - CreateFile()
}

class "MergeToolInfo" {
    + GetFileExtension()
}

class "Progress" {
    + GetTotalString()
}

class "TreeChangedNode" {
    + SetAsCheckedInXlink()
    + AddChild()
    + AddChildWithoutChecks()
    + RemoveChild()
    + RemoveChildByReference()
    + ClearChildren()
    + GetCmPath()
    + GetClientPath()
    + GetChildAt()
    + CleanChildren()
}

class "LocalItemIdSequencer" {
    + GeItemId()
    + Reset()
    + Initialize()
}

class "WorkspaceTreeNode" {
    + InitChildren()
    + InitChildrenWithKnownSize()
    + Dispose()
}

class "AnnotatedLine" {
    + IsLocalChange()
}

class "ClientDiff" {
    + HasRelatedMerges()
}

class "ItemDiffMerge" {
    + SetModifiedOnBranch()
    + SetCopiedRevision()
    - IsOfType()
    - GetRevisionMergeTypes()
}

class "ClientWritableXlinkConflict" {
    + Resolve()
}

class "ClientXlink" {
    + CloneClientXlink()
    + CloneXlink()
    + Copy()
}

class "DiffViewEntry" {
    + IsXlinkChangedEntry()
    + HasAnyXlinkEntry()
    + IsSingleContributor()
}

class "CodeReviewData" {
    + SetAsMergeType()
}

class "DiffMember" {
    + IsPrivate()
    + IsLocal()
    + SetRevisionAsEmpty()
}

class "DiffInfo" {
    + IsEditable()
}

class "IsControlledDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DirectoryExistsDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SwitchToBranchSelectorEntry" {
    + GetSwitchRule()
}

class "SwitchToLabelSelectorEntry" {
    + GetSwitchRule()
}

class "SwitchToChangesetSelectorEntry" {
    + GetSwitchRule()
}

class "SwitchToShelveSelectorEntry" {
    + GetSwitchRule()
}

class "OnExternalDataNeeded" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XmlOutputConfig" {
    + FlushToFile()
}

class "GuiExceptionDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WkTriggerResult" {
    + AddTriggerMsg()
}

class "AddInfo" {
    + Add()
}

class "WorkspaceXlink" {
    + Copy()
}

class "WorkspaceXlinkList" {
    + Add()
    + GetByPath()
    + GetById()
    + IsEmpty()
    + GetXLinksList()
    + GetWorkspaceXlinkByMountIdCopy()
}

class "PlasticTask" {
    + ToString()
    + IsEqualTo()
    + Equals()
    + GetHashCode()
    - StripHtmlTags()
    - DecodeHTMLSpecialChars()
}

class "PlasticTaskIdComparer" {
    + Compare()
}

class "IssueTrackerConfiguration" {
    + GetValue()
    + GetAllParameters()
    - StoreParameters()
}

class "ConfigureArgs" {
    + Get()
}

class "TranslatorForServer" {
    + Translate()
}

class "DiscordWebTriggerClient" {
    + ExecuteTrigger()
}

class "EmailWebTriggerClient" {
    - Codice.CM.Triggers.IWebTriggerClient.ExecuteTrigger()
    - SendContent()
}

class "SlackWebTriggerClient" {
    + ExecuteTrigger()
}

class "TriggerCommand" {
    + GetArgumentsString()
}

class "WebTriggerClient" {
    + ExecuteTrigger()
}

class "BackgroundForwardingAppender" {
    + ActivateOptions()
    + OnClose()
    + Append()
    + Append()
    - ProccessEvents()
}

class "DailyRollingFileAppender" {
    + ActivateOptions()
    + Append()
    + Append()
    - AppendEventsForDay()
    - AppendEventsForMultipleDays()
    - AppendEventRangeForDay()
    - HandleRollover()
    - DeleteOldFiles()
    - DeleteFile()
    - CalculateFileNameParts()
}

class "NetLogger" {
    + Debug()
    + DebugFormat()
    + Info()
    + InfoFormat()
    + Warn()
    + WarnFormat()
    + Error()
    + Error()
    + ErrorFormat()
    + Fatal()
    + FatalFormat()
    + IsDebugEnabled()
    + IsInfoEnabled()
    + IsWarnEnabled()
}

class "CodeTimer" {
    + Start()
    + Stop()
    + Get()
}

class "PlasticStopwatch" {
    + Stop()
    + RestartIfNotRunning()
    + Restart()
}

class "BuildPlasticServer" {
    + SetAlternativeCloudServer()
    + FromString()
    + IsCloudUrl()
}

class "PlasticServerCache" {
    + TryGet()
    + Set()
    + DisableForTesting()
}

class "PlasticServer" {
    + EqualsTo()
    + GetString()
    + ToString()
    + SetHostAndPortForCloudServer()
    + IsLocalhost()
}

class "TrafficControlStream" {
    + Read()
    + Write()
    + GetWrittenBytes()
    + GetReadBytes()
    + GetWriteTime()
    + GetReadTime()
    + Flush()
    + Seek()
    + SetLength()
}

class "HostAliasesAcceptedByUser" {
    - IsAccepted()
    - AddAlias()
}

class "SslCertificateValidator" {
    + CertificateValidation()
    + GetNotValidatedCertInfo()
}

class "ClientTransportTotalTraffic" {
    + BeginCall()
    + EndCall()
    + GetTotal()
}

class "CloudOrganizationRegionList" {
    + AddToCacheAndSaveToFile()
    + RemoveFromCacheAndSaveToFile()
    + TryResolveFromCache()
}

class "DnsResolveNameToIp" {
    + Resolve()
    + IpChanged()
}

class "HostConnectionPool" {
    + GetConnection()
    + ReleaseConnection()
    + CancelConnection()
    + PurgeConnections()
    - DoCancelConnection()
    - IsStandardConnectionAlive()
    - IsConnectionAlive()
}

class "RecentConnections" {
    + Add()
    + IsLastConnectionRecent()
}

class "ReusableTcpClient" {
    + IsAlive()
    - KeepAlive()
    - GetKeepAliveOptions()
    - ConnectWithTimeout()
}

class "CallContextMsgSupportByServer" {
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.ICallCtxMsgVersionSupportedByServer.GetChgMsgSupportedVersion()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.ICallCtxMsgVersionSupportedByServer.SetChgMsgSupportedVersion()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.ICallCtxMsgVersionSupportedByServer.GetCallContextMsgSupportedVersion()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.ICallCtxMsgVersionSupportedByServer.SetCallContextMsgSupportedVersion()
}

class "ConnectionCreator" {
    - PlasticPipe.Client.IConnectionCreator.CreateConnection()
    - ConnectToTcpServer()
    - ConnectToTube()
}

class "PlasticProtoSocketConnection" {
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IPlasticProtocolClientConnection.IsNewlyCreated()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IPlasticProtocolClientConnection.SetCallContextSentToServer()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IPlasticProtocolClientConnection.GetCallContext()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IPlasticProtocolClientConnection.StackStream()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IPlasticProtocolClientConnection.GetReader()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.IPlasticProtocolClientConnection.GetWriter()
    - PlasticPipe.Client.IClientConnection.SetControlTime()
    - PlasticPipe.Client.IClientConnection.GetControlTime()
    - PlasticPipe.Client.IClientConnection.IsAlive()
    - PlasticPipe.Client.IClientConnection.Release()
    - PlasticPipe.Client.IClientConnection.Cancel()
    - PlasticPipe.Client.IClientConnection.Close()
    - PlasticPipe.Client.IClientConnection.GetSentBytes()
    - PlasticPipe.Client.IClientConnection.GetRecvBytes()
    - PlasticPipe.Client.IClientConnection.GetSentMsec()
    - PlasticPipe.Client.IClientConnection.GetRecvMsec()
}

class "ReusableTcpClientAdapter" {
    - PlasticPipe.PlasticProtocol.Client.ConnectionCreator.PlasticProtoSocketConnection.ISocket.Close()
    - PlasticPipe.PlasticProtocol.Client.ConnectionCreator.PlasticProtoSocketConnection.ISocket.IsAlive()
}

class "SslSupportedByServer" {
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.ISslSupportByServer.Get()
    - PlasticPipe.PlasticProtocol.Client.ClientTransport.ISslSupportByServer.Set()
}

class "AttributeHandlerProxy" {
    - Codice.CM.Interfaces.IAttributeHandler.AddAttributesToObjects()
    - Codice.CM.Interfaces.IAttributeHandler.CreateAttribute()
    - Codice.CM.Interfaces.IAttributeHandler.DeleteAttribute()
    - Codice.CM.Interfaces.IAttributeHandler.DeleteAttributeFromObject()
    - Codice.CM.Interfaces.IAttributeHandler.GetAttributeInfo()
    - Codice.CM.Interfaces.IAttributeHandler.GetAttributeInfoByName()
    - Codice.CM.Interfaces.IAttributeHandler.GetAttributeRealizationForObjects()
    - Codice.CM.Interfaces.IAttributeHandler.GetAttributeRealizationForObjects()
    - Codice.CM.Interfaces.IAttributeHandler.GetValuesForAttribute()
    - Codice.CM.Interfaces.IAttributeHandler.RenameAttribute()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "BranchHandlerProxy" {
    - Codice.CM.Interfaces.IBranchHandler.CreateBranch()
    - Codice.CM.Interfaces.IBranchHandler.CreateBranch()
    - Codice.CM.Interfaces.IBranchHandler.CheckBranchExists()
    - Codice.CM.Interfaces.IBranchHandler.DeleteBranch()
    - Codice.CM.Interfaces.IBranchHandler.RenameBranch()
    - Codice.CM.Interfaces.IBranchHandler.GetBranchInfo()
    - Codice.CM.Interfaces.IBranchHandler.GetBranchInfo()
    - Codice.CM.Interfaces.IBranchHandler.GetBranchInfos()
    - Codice.CM.Interfaces.IBranchHandler.GetBranchInfoByName()
    - Codice.CM.Interfaces.IBranchHandler.GetBranchList()
    - Codice.CM.Interfaces.IBranchHandler.GetBranchHistory()
    - Codice.CM.Interfaces.IBranchHandler.GetMainBranch()
    - Codice.CM.Interfaces.IBranchHandler.UpdateBranchHead()
    - Codice.CM.Interfaces.IBranchHandler.IsBranchEmpty()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "CacheHandlerProxy" {
    - Codice.CM.Interfaces.ICacheHandler.GetObjectsData()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "CloudWorkspaceHandlerProxy" {
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.CreateWorkspace()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.DeleteWorkspace()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.ListWorkspaces()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.ShareWorkspace()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.DeleteWorkspaceShare()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.GetWorkspaceSharesForCallingUser()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.GetWorkspaceShareForCallingUser()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.CreateUvcsConnection()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.DeleteUvcsConnection()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.UpdateUvcsConnectionLocation()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.GetUvcsConnections()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.GetUvcsConnectionMetadata()
    - Codice.CM.Interfaces.ICloudWorkspaceHandler.UpdateUvcsConnectionMetadata()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "ForwardHandlerProxy" {
    - Codice.CM.Interfaces.IForwardHandler.ContactServer()
    - Codice.CM.Interfaces.IForwardHandler.InstallServerCertificate()
    - Codice.CM.Interfaces.IForwardHandler.SetServerEncryption()
    - Codice.CM.Interfaces.IForwardHandler.TryRepCommitTransaction()
    - Codice.CM.Interfaces.IForwardHandler.TryRepRollbackTransaction()
    - Codice.CM.Interfaces.IForwardHandler.TryGetChangesetInfo()
    - Codice.CM.Interfaces.IForwardHandler.TryExecuteAfterTrigger()
    - Codice.CM.Interfaces.IForwardHandler.TryImportPackage()
    - Codice.CM.Interfaces.IForwardHandler.TryGetBigPackage()
    - Codice.CM.Interfaces.IForwardHandler.TrySendBigPackage()
    - Codice.CM.Interfaces.IForwardHandler.TryReplicationSetObjectData()
    - Codice.CM.Interfaces.IForwardHandler.TryGetStatus()
    - Codice.CM.Interfaces.IForwardHandler.TryCancel()
    - Codice.CM.Interfaces.IForwardHandler.TryFinish()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "InfoHandlerProxy" {
    - Codice.CM.Interfaces.IInfoHandler.ConnectToPlasticTube()
    - Codice.CM.Interfaces.IInfoHandler.DisconnectFromPlasticTube()
    - Codice.CM.Interfaces.IInfoHandler.GetLicenseData()
    - Codice.CM.Interfaces.IInfoHandler.GetServerInstanceId()
    - Codice.CM.Interfaces.IInfoHandler.GetTubeConfiguration()
    - Codice.CM.Interfaces.IInfoHandler.GetTubeUser()
    - Codice.CM.Interfaces.IInfoHandler.GetUtcTimestamp()
    - Codice.CM.Interfaces.IInfoHandler.InstallServerCertificate()
    - Codice.CM.Interfaces.IInfoHandler.IsConnectedToPlasticTube()
    - Codice.CM.Interfaces.IInfoHandler.NetworkBenchmarkDownload()
    - Codice.CM.Interfaces.IInfoHandler.NetworkBenchmarkUpload()
    - Codice.CM.Interfaces.IInfoHandler.SetServerEncryption()
    - Codice.CM.Interfaces.IInfoHandler.SetTubeConfiguration()
    - Codice.CM.Interfaces.IInfoHandler.UpdateLicense()
    - Codice.CM.Interfaces.IInfoHandler.ExecuteAdminCommand()
    - Codice.CM.Interfaces.IInfoHandler.GetWebadminPortAndProtocol()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "ItemHandlerProxy" {
    - Codice.CM.Interfaces.IItemHandler.ArchiveData()
    - Codice.CM.Interfaces.IItemHandler.CalculateMerge()
    - Codice.CM.Interfaces.IItemHandler.ChangeRevisionType()
    - Codice.CM.Interfaces.IItemHandler.CheckIn()
    - Codice.CM.Interfaces.IItemHandler.CheckIn()
    - Codice.CM.Interfaces.IItemHandler.MoveChangeset()
    - Codice.CM.Interfaces.IItemHandler.DeleteChangeset()
    - Codice.CM.Interfaces.IItemHandler.Diff()
    - Codice.CM.Interfaces.IItemHandler.DiffWithChanges()
    - Codice.CM.Interfaces.IItemHandler.SubtreeDiff()
    - Codice.CM.Interfaces.IItemHandler.ExecuteQuery()
    - Codice.CM.Interfaces.IItemHandler.ExecuteSimpleQuery()
    - Codice.CM.Interfaces.IItemHandler.ExecuteSimpleQuery()
    - Codice.CM.Interfaces.IItemHandler.ExecuteSimpleQueryWithOffsetResult()
    - Codice.CM.Interfaces.IItemHandler.GetAnnotate()
    - Codice.CM.Interfaces.IItemHandler.GetAnnotateGraphForBranchDifferences()
    - Codice.CM.Interfaces.IItemHandler.GetAnnotateGraphForChangesetDifferences()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetInfo()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetInfo()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetsInfo()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetsInfo()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetTree()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetCloakedTree()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetTreeForRevision()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetTreeForRevisionByRevSpec()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetCloakedTreeForRevisionByRevSpec()
    - Codice.CM.Interfaces.IItemHandler.GetChangesetTreeForVirtualRevision()
    - Codice.CM.Interfaces.IItemHandler.GetFirstChangesetOnBranch()
    - Codice.CM.Interfaces.IItemHandler.GetItemInfo()
    - Codice.CM.Interfaces.IItemHandler.GetLastChangesetOnBranch()
    - Codice.CM.Interfaces.IItemHandler.GetNewestChangesetForRepository()
    - Codice.CM.Interfaces.IItemHandler.GetLastChangesetTreeOnBranch()
    - Codice.CM.Interfaces.IItemHandler.GetLastChangesetCloakedTreeOnBranch()
    - Codice.CM.Interfaces.IItemHandler.GetLastItemNames()
    - Codice.CM.Interfaces.IItemHandler.GetLockRule()
    - Codice.CM.Interfaces.IItemHandler.AddLockRule()
    - Codice.CM.Interfaces.IItemHandler.GetMergeLinks()
    - Codice.CM.Interfaces.IItemHandler.GetNewRepositoryIds()
    - Codice.CM.Interfaces.IItemHandler.GetNotMergedHeadsOnBranch()
    - Codice.CM.Interfaces.IItemHandler.GetObjectData()
    - Codice.CM.Interfaces.IItemHandler.GetObjectGuids()
    - Codice.CM.Interfaces.IItemHandler.GetObjectsData()
    - Codice.CM.Interfaces.IItemHandler.GetParentChangesetForBranch()
    - Codice.CM.Interfaces.IItemHandler.GetPartialChangesetTree()
    - Codice.CM.Interfaces.IItemHandler.GetReleaseDiagramInfo()
    + GetBranchExplorer()
    - Codice.CM.Interfaces.IItemHandler.GetRevisionChildren()
    - Codice.CM.Interfaces.IItemHandler.GetRevisionHistory()
    - Codice.CM.Interfaces.IItemHandler.GetRevisionInfo()
    - Codice.CM.Interfaces.IItemHandler.GetRevisionMerges()
    - Codice.CM.Interfaces.IItemHandler.GetRevisionsInfo()
    - Codice.CM.Interfaces.IItemHandler.GetRevisionTree()
    - Codice.CM.Interfaces.IItemHandler.GetUnlinkedFromBaseChangesets()
    - Codice.CM.Interfaces.IItemHandler.GetUnlinkedFromBaseChangesets()
    - Codice.CM.Interfaces.IItemHandler.InternalCalculateMergeToForXlink()
    - Codice.CM.Interfaces.IItemHandler.LockItems()
    - Codice.CM.Interfaces.IItemHandler.LockExtendedItems()
    - Codice.CM.Interfaces.IItemHandler.MergeTo()
    - Codice.CM.Interfaces.IItemHandler.InternalMergeToWithEncryption()
    - Codice.CM.Interfaces.IItemHandler.RemoveFilesData()
    - Codice.CM.Interfaces.IItemHandler.ResetRepositoryDateIfEmpty()
    - Codice.CM.Interfaces.IItemHandler.ResolveRevSpec()
    - Codice.CM.Interfaces.IItemHandler.SetObjectData()
    - Codice.CM.Interfaces.IItemHandler.SetObjectsData()
    - Codice.CM.Interfaces.IItemHandler.SetObjectsDataPacket()
    - Codice.CM.Interfaces.IItemHandler.TryCheckIn()
    - Codice.CM.Interfaces.IItemHandler.UnarchiveData()
    - Codice.CM.Interfaces.IItemHandler.EditLockedItems()
    - Codice.CM.Interfaces.IItemHandler.UpdateObject()
    - Codice.CM.Interfaces.IItemHandler.ListBindingsFiles()
    - Codice.CM.Interfaces.IItemHandler.DownloadBindingsFiles()
    - Codice.CM.Interfaces.IItemHandler.UploadBindingsFile()
    - Codice.CM.Interfaces.IItemHandler.RegisterPurgeRequest()
    - Codice.CM.Interfaces.IItemHandler.TryUnregisterPurgeRequest()
    - Codice.CM.Interfaces.IItemHandler.GetPurgeReport()
    - Codice.CM.Interfaces.IItemHandler.GetPurgeHistory()
    - Codice.CM.Interfaces.IItemHandler.TryExecutePurge()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "LinkHandlerProxy" {
    - Codice.CM.Interfaces.ILinkHandler.GetLinkInfo()
    - Codice.CM.Interfaces.ILinkHandler.GetLinkInfoByName()
    - Codice.CM.Interfaces.ILinkHandler.GetLinkList()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "LockHandlerProxy" {
    - Codice.CM.Interfaces.ILockHandler.ListAllLocks()
    - Codice.CM.Interfaces.ILockHandler.ListLocks()
    - Codice.CM.Interfaces.ILockHandler.UnLock()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "MarkerHandlerProxy" {
    - Codice.CM.Interfaces.IMarkerHandler.CheckMarkerExists()
    - Codice.CM.Interfaces.IMarkerHandler.CreateMarker()
    - Codice.CM.Interfaces.IMarkerHandler.CreateMarker()
    - Codice.CM.Interfaces.IMarkerHandler.DeleteMarker()
    - Codice.CM.Interfaces.IMarkerHandler.RenameMarker()
    - Codice.CM.Interfaces.IMarkerHandler.MarkChangeset()
    - Codice.CM.Interfaces.IMarkerHandler.GetMarkerInfo()
    - Codice.CM.Interfaces.IMarkerHandler.GetMarkerInfoByName()
    - Codice.CM.Interfaces.IMarkerHandler.GetMarkerList()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "ReplicationHandlerProxy" {
    - Codice.CM.Interfaces.IReplicationHandler.Cancel()
    - Codice.CM.Interfaces.IReplicationHandler.ContactServer()
    - Codice.CM.Interfaces.IReplicationHandler.FilterBranchesCandidates()
    - Codice.CM.Interfaces.IReplicationHandler.Finish()
    - Codice.CM.Interfaces.IReplicationHandler.GetBranchesCandidates()
    - Codice.CM.Interfaces.IReplicationHandler.GetBranchesHeads()
    - Codice.CM.Interfaces.IReplicationHandler.GetChangesetsOnBranch()
    - Codice.CM.Interfaces.IReplicationHandler.GetExistingCsets()
    - Codice.CM.Interfaces.IReplicationHandler.GetNewObjectsInfo()
    - Codice.CM.Interfaces.IReplicationHandler.GetObjectGuid()
    - Codice.CM.Interfaces.IReplicationHandler.GetObjectId()
    - Codice.CM.Interfaces.IReplicationHandler.GetObjectIdsFromSerializedGuids()
    - Codice.CM.Interfaces.IReplicationHandler.GetObjectIdsFromGuids()
    - Codice.CM.Interfaces.IReplicationHandler.GetPackage()
    - Codice.CM.Interfaces.IReplicationHandler.GetBigPackage()
    - Codice.CM.Interfaces.IReplicationHandler.GetPendingChangesets()
    - Codice.CM.Interfaces.IReplicationHandler.GetPushedFileRevisions()
    - Codice.CM.Interfaces.IReplicationHandler.GetPushedFiles()
    - Codice.CM.Interfaces.IReplicationHandler.GetReplicationSourcesForObjectsLongArray()
    - Codice.CM.Interfaces.IReplicationHandler.GetReplicationSourcesForObjects()
    - Codice.CM.Interfaces.IReplicationHandler.GetReplicationSyncStatus()
    - Codice.CM.Interfaces.IReplicationHandler.GetStatus()
    - Codice.CM.Interfaces.IReplicationHandler.ImportPackage()
    - Codice.CM.Interfaces.IReplicationHandler.KeepTransactionAlive()
    - Codice.CM.Interfaces.IReplicationHandler.ReplicationSetObjectData()
    - Codice.CM.Interfaces.IReplicationHandler.ResolveChangeset()
    - Codice.CM.Interfaces.IReplicationHandler.RestoreTransactionAlive()
    - Codice.CM.Interfaces.IReplicationHandler.SendPackage()
    - Codice.CM.Interfaces.IReplicationHandler.SendBigPackage()
    - Codice.CM.Interfaces.IReplicationHandler.StartFetch()
    - Codice.CM.Interfaces.IReplicationHandler.StartFetch()
    - Codice.CM.Interfaces.IReplicationHandler.StartGetPackage()
    - Codice.CM.Interfaces.IReplicationHandler.StartImportPackage()
    - Codice.CM.Interfaces.IReplicationHandler.StartPush()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "RepositoryHandlerProxy" {
    - Codice.CM.Interfaces.IRepositoryHandler.CheckRepositoryExists()
    - Codice.CM.Interfaces.IRepositoryHandler.CreateRepository()
    - Codice.CM.Interfaces.IRepositoryHandler.CreateRepositoryWithGuid()
    - Codice.CM.Interfaces.IRepositoryHandler.AddRepository()
    - Codice.CM.Interfaces.IRepositoryHandler.UndeleteRepository()
    - Codice.CM.Interfaces.IRepositoryHandler.DeleteRepository()
    - Codice.CM.Interfaces.IRepositoryHandler.RenameRepository()
    - Codice.CM.Interfaces.IRepositoryHandler.GetRepositoryList()
    - Codice.CM.Interfaces.IRepositoryHandler.GetRepositoryInfo()
    - Codice.CM.Interfaces.IRepositoryHandler.GetRepositoryInfo()
    - Codice.CM.Interfaces.IRepositoryHandler.GetRepositoryInfo()
    - Codice.CM.Interfaces.IRepositoryHandler.RepCommitTransaction()
    - Codice.CM.Interfaces.IRepositoryHandler.RepRollbackTransaction()
    - Codice.CM.Interfaces.IRepositoryHandler.GetRepositoryServerInfo()
    - Codice.CM.Interfaces.IRepositoryHandler.CheckRepositoryServerDB()
    - Codice.CM.Interfaces.IRepositoryHandler.CheckRepositoryDB()
    - Codice.CM.Interfaces.IRepositoryHandler.CheckConnection()
    - Codice.CM.Interfaces.IRepositoryHandler.GetWorkingMode()
    - Codice.CM.Interfaces.IRepositoryHandler.CheckConnection()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "ReviewHandlerProxy" {
    - Codice.CM.Interfaces.IReviewHandler.CreateComment()
    - Codice.CM.Interfaces.IReviewHandler.CreateReview()
    - Codice.CM.Interfaces.IReviewHandler.GetReviewInfo()
    - Codice.CM.Interfaces.IReviewHandler.DeleteComment()
    - Codice.CM.Interfaces.IReviewHandler.DeleteReview()
    - Codice.CM.Interfaces.IReviewHandler.EditComment()
    - Codice.CM.Interfaces.IReviewHandler.EditLegacyReview()
    - Codice.CM.Interfaces.IReviewHandler.EditReviewTitle()
    - Codice.CM.Interfaces.IReviewHandler.CreateCodeReviewComment()
    - Codice.CM.Interfaces.IReviewHandler.CreateCodeReviewCommentReply()
    - Codice.CM.Interfaces.IReviewHandler.SetCodeReviewCommentAppliedInChangeset()
    - Codice.CM.Interfaces.IReviewHandler.GetReviewers()
    - Codice.CM.Interfaces.IReviewHandler.GetReviewsByTypeId()
    - Codice.CM.Interfaces.IReviewHandler.AddReviewer()
    - Codice.CM.Interfaces.IReviewHandler.RemoveReviewer()
    - Codice.CM.Interfaces.IReviewHandler.UpdateReviewer()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "SecurityHandlerProxy" {
    - Codice.CM.Interfaces.ISecurityHandler.SetPermissions()
    - Codice.CM.Interfaces.ISecurityHandler.RemovePermissions()
    - Codice.CM.Interfaces.ISecurityHandler.CalculateAcl()
    - Codice.CM.Interfaces.ISecurityHandler.RemoveInheritance()
    - Codice.CM.Interfaces.ISecurityHandler.AddInheritance()
    - Codice.CM.Interfaces.ISecurityHandler.ReplaceInheritance()
    - Codice.CM.Interfaces.ISecurityHandler.SetOwner()
    - Codice.CM.Interfaces.ISecurityHandler.GetOwner()
    - Codice.CM.Interfaces.ISecurityHandler.CheckPermission()
    - Codice.CM.Interfaces.ISecurityHandler.CheckPermission()
    - Codice.CM.Interfaces.ISecurityHandler.GetSecurityMembers()
    - Codice.CM.Interfaces.ISecurityHandler.GetUsers()
    - Codice.CM.Interfaces.ISecurityHandler.GetGroups()
    - Codice.CM.Interfaces.ISecurityHandler.GetGroupMembers()
    - Codice.CM.Interfaces.ISecurityHandler.GetSecurityMemberFromName()
    - Codice.CM.Interfaces.ISecurityHandler.GetActiveUsers()
    - Codice.CM.Interfaces.ISecurityHandler.GetInactiveUsers()
    - Codice.CM.Interfaces.ISecurityHandler.GetMaxUserNumber()
    - Codice.CM.Interfaces.ISecurityHandler.ActivateUser()
    - Codice.CM.Interfaces.ISecurityHandler.IsAdministrator()
    - Codice.CM.Interfaces.ISecurityHandler.DeactivateUser()
    - Codice.CM.Interfaces.ISecurityHandler.ChangeUserPassword()
    - Codice.CM.Interfaces.ISecurityHandler.GetOidcSignInUrl()
    - Codice.CM.Interfaces.ISecurityHandler.GetSamlSignOnInfo()
    - Codice.CM.Interfaces.ISecurityHandler.GetSEID()
    - Codice.CM.Interfaces.ISecurityHandler.GetNameFromSEID()
    - Codice.CM.Interfaces.ISecurityHandler.GetNamesFromSEIDs()
    - Codice.CM.Interfaces.ISecurityHandler.GetSEIDFromName()
    - Codice.CM.Interfaces.ISecurityHandler.CreateSecuredPath()
    - Codice.CM.Interfaces.ISecurityHandler.UpdateSecuredPath()
    - Codice.CM.Interfaces.ISecurityHandler.GetSecuredPaths()
    - Codice.CM.Interfaces.ISecurityHandler.GetSecuredPath()
    - Codice.CM.Interfaces.ISecurityHandler.DeleteSecuredPath()
    - Codice.CM.Interfaces.ISecurityHandler.GetAllSecuredPaths()
    - Codice.CM.Interfaces.ISecurityHandler.CreateAccessToken()
    - Codice.CM.Interfaces.ISecurityHandler.GetAccessTokens()
    - Codice.CM.Interfaces.ISecurityHandler.RevealAccessToken()
    - Codice.CM.Interfaces.ISecurityHandler.RevokeAccessToken()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "SubscriptionHandlerProxy" {
    - Codice.CM.Interfaces.ISubscriptionHandler.CreateSubscription()
    - Codice.CM.Interfaces.ISubscriptionHandler.GetSubscription()
    - Codice.CM.Interfaces.ISubscriptionHandler.UpdateSubscription()
    - Codice.CM.Interfaces.ISubscriptionHandler.GetObjectSubscription()
    - Codice.CM.Interfaces.ISubscriptionHandler.GetObjectSubscriptions()
    - Codice.CM.Interfaces.ISubscriptionHandler.CreateObjectSubscription()
    - Codice.CM.Interfaces.ISubscriptionHandler.UpdateObjectSubscription()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "TriggerHandlerProxy" {
    - Codice.CM.Interfaces.ITriggerHandler.CreateTrigger()
    - Codice.CM.Interfaces.ITriggerHandler.DeleteTrigger()
    - Codice.CM.Interfaces.ITriggerHandler.ExecuteAfterTrigger()
    - Codice.CM.Interfaces.ITriggerHandler.GetFullTriggerList()
    - Codice.CM.Interfaces.ITriggerHandler.GetTriggerById()
    - Codice.CM.Interfaces.ITriggerHandler.GetTrigger()
    - Codice.CM.Interfaces.ITriggerHandler.GetTriggerList()
    - Codice.CM.Interfaces.ITriggerHandler.UpdateTrigger()
    - PlasticPipe.PlasticProtocol.Client.Proxies.IPlasticProtocolProxy.GetInvokeMethod()
}

class "CreateAttributeMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteAttributeMessage" {
    + Serialize()
    + Deserialize()
}

class "RenameAttributeMessage" {
    + Serialize()
    + Deserialize()
}

class "AddAttributesToObjectsMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteAttributeFromObjectMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAttributeInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAttributeInfoByNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAttributeRealizationForObjectsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAttributeRealizationForObjectsByAttNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetValuesForAttributeMessage" {
    + Serialize()
    + Deserialize()
}

class "AttributeInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "AttributeRealizationInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ValuesForAttributeResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "BoolResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "Int32Message" {
    + Serialize()
    + Deserialize()
}

class "Int64ResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "StringMessage" {
    + Serialize()
    + Deserialize()
}

class "StringArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "VoidMessage" {
    + Serialize()
    + Deserialize()
}

class "DataPacketMessage" {
    + Serialize()
    + Deserialize()
}

class "OidcSignInInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "SamlSignOnInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "SEIDMessage" {
    + Serialize()
    + Deserialize()
}

class "GuidMessage" {
    + Serialize()
    + Deserialize()
}

class "ByteArrayMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateBranchWithUtcTimeTicksMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckBranchExistsMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "RenameBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchInfoByGuidMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchInfoByIdMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchInfosMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchInfoByNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchListMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchHistoryMessage" {
    + Serialize()
    + Deserialize()
}

class "GetMainBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateBranchHeadMessage" {
    + Serialize()
    + Deserialize()
}

class "IsBranchEmptyMessage" {
    + Serialize()
    + Deserialize()
}

class "BranchInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "BranchInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "BranchInfoArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectsDataFromCacheHandlerMessage" {
    + Serialize()
    + Deserialize()
}

class "ClientCapabilitiesMessage" {
    + SkipNegotiation()
    + StartSsl()
    + GetVersion()
    + SupportsLz4()
    + Write()
}

class "CreateCloudWorkspaceMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateCloudWorkspaceResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteCloudWorkspaceMessage" {
    + Serialize()
    + Deserialize()
}

class "ListWorkspacesMessage" {
    + Serialize()
    + Deserialize()
}

class "CloudWorkspaceListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ShareCloudWorkspaceMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteWorkspaceShareMessage" {
    + Serialize()
    + Deserialize()
}

class "WorkspaceShareListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GetWorkspaceShareMessage" {
    + Serialize()
    + Deserialize()
}

class "WorkspaceShareResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateUvcsConnectionMessage" {
    + Deserialize()
    + Serialize()
}

class "DeleteUvcsConnectionMessage" {
    + Deserialize()
    + Serialize()
}

class "UpdateUvcsConnectionLocationMessage" {
    + Deserialize()
    + Serialize()
}

class "GetUvcsConnectionsMessage" {
    + Deserialize()
    + Serialize()
}

class "UvcsConnectionListResponseMessage" {
    + Deserialize()
    + Serialize()
}

class "GetUvcsConnectionMetadataMessage" {
    + Serialize()
    + Deserialize()
}

class "GetUvcsConnectionMetadataResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateUvcsConnectionMetadataMessage" {
    + Serialize()
    + Deserialize()
}

class "SaveUvcsConnectionMetadataResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CmCallContextMessage" {
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Serialize()
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Deserialize()
    - PlasticPipe.PlasticProtocol.Messages.ICmCallContextMessage.SetVersion()
    - PlasticPipe.PlasticProtocol.Messages.ICmCallContextMessage.Initialize()
}

class "CmCallContextChangeInCurrentTransactionMessage" {
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Serialize()
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Deserialize()
    - PlasticPipe.PlasticProtocol.Messages.ICtxChangeMsg.GetType()
    - PlasticPipe.PlasticProtocol.Messages.ICtxChangeMsg.SetVersion()
    - PlasticPipe.PlasticProtocol.Messages.ITransactionCtxChange.GetTransactionId()
    - PlasticPipe.PlasticProtocol.Messages.ITransactionCtxChange.SetTransactionId()
}

class "CmCallContextChangeInSecurityCtxMessage" {
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Serialize()
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Deserialize()
    - PlasticPipe.PlasticProtocol.Messages.ICtxChangeMsg.GetType()
    - PlasticPipe.PlasticProtocol.Messages.ICtxChangeMsg.SetVersion()
    - PlasticPipe.PlasticProtocol.Messages.ISecCtxChange.GetSecurityCtx()
    - PlasticPipe.PlasticProtocol.Messages.ISecCtxChange.GetImportAuthor()
    - PlasticPipe.PlasticProtocol.Messages.ISecCtxChange.SetSecurityCtx()
}

class "CmCallContextChangeInCredentialsMessage" {
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Serialize()
    - PlasticPipe.PlasticProtocol.Messages.INetworkMessage.Deserialize()
    - PlasticPipe.PlasticProtocol.Messages.ICtxChangeMsg.GetType()
    - PlasticPipe.PlasticProtocol.Messages.ICtxChangeMsg.SetVersion()
    - PlasticPipe.PlasticProtocol.Messages.ICredsCtxChange.GetUserCredentials()
    - PlasticPipe.PlasticProtocol.Messages.ICredsCtxChange.SetUserCredentials()
}

class "CallCtxMessageObjCreator" {
    - PlasticPipe.PlasticProtocol.Messages.ICallCtxMsgObjCreator.CreateCtxMsg()
    - PlasticPipe.PlasticProtocol.Messages.ICallCtxMsgObjCreator.CreateTransCtxChangeMsg()
    - PlasticPipe.PlasticProtocol.Messages.ICallCtxMsgObjCreator.CreateSecurityCtxChangeMsg()
    - PlasticPipe.PlasticProtocol.Messages.ICallCtxMsgObjCreator.CreateCredsCtxChangeMsg()
}

class "InstallServerCertificateMessage" {
    + Serialize()
    + Deserialize()
}

class "SetServerEncryptionMessage" {
    + Serialize()
    + Deserialize()
}

class "PlasticTubeConfigurationResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateLicenseMessage" {
    + Serialize()
    + Deserialize()
}

class "CloudStorageConfigurationResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CloudStorageSasConfigurationResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "LicenseDataResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ServerInstanceIdResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "NotifyCloudTransferredSizeMessage" {
    + Serialize()
    + Deserialize()
}

class "WebadminAddressMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRevisionInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRevisionsInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectDataMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectsDataMessage" {
    + Serialize()
    + Deserialize()
}

class "SetObjectDataMessage" {
    + Serialize()
    + Deserialize()
}

class "SetObjectsDataMessage" {
    + Serialize()
    + Deserialize()
}

class "SetObjectsDataPacketMessage" {
    + Serialize()
    + Deserialize()
}

class "RemoveFilesDataMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRevisionChildrenMessage" {
    + Serialize()
    + Deserialize()
}

class "TryCheckInMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckInMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckInChangedTreeMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRevisionHistoryMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRevisionTreeMessage" {
    + Serialize()
    + Deserialize()
}

class "GetItemInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLastItemNamesMessage" {
    + Serialize()
    + Deserialize()
}

class "ChangeRevisionTypeMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchExplorerMessage" {
    + Serialize()
    + Deserialize()
}

class "ExecuteSimpleQueryMessage" {
    + Serialize()
    + Deserialize()
}

class "ExecuteSimpleQueriesMessage" {
    + Serialize()
    + Deserialize()
}

class "ExecuteQueryMessage" {
    + Serialize()
    + Deserialize()
}

class "ResolveRevSpecMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateObjectMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetInfoByCsetNumberMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetInfoByGuidMessage" {
    + Serialize()
    + Deserialize()
}

class "CalculateMergeMessage" {
    + Serialize()
    + Deserialize()
}

class "MergeToMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAnnotateMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAnnotateGraphForBranchDifferencesMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAnnotateGraphForChangesetDifferencesMessage" {
    + Serialize()
    + Deserialize()
}

class "ArchiveDataMessage" {
    + Serialize()
    + Deserialize()
}

class "UnarchiveDataMessage" {
    + Serialize()
    + Deserialize()
}

class "GetFirstChangesetOnBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetParentChangesetForBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLastChangesetOnBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetNewestChangesetForRepositoryMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetTreeMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetCloakedTreeMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLastChangesetTreeOnBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLastChangesetCloakedTreeOnBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetTreeForRevisionMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetTreeForRevisionByRevSpecMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetCloakedTreeForRevisionByRevSpecMessage" {
    + Serialize()
    + Deserialize()
}

class "GetPartialChangesetTreeMessage" {
    + Serialize()
    + Deserialize()
}

class "GetNewRepositoryIdsMessage" {
    + Serialize()
    + Deserialize()
}

class "DiffMessage" {
    + Serialize()
    + Deserialize()
}

class "DiffWithChangesMessage" {
    + Serialize()
    + Deserialize()
}

class "SubTreeDiffMessage" {
    + Serialize()
    + Deserialize()
}

class "MoveChangesetMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteChangesetMessage" {
    + Serialize()
    + Deserialize()
}

class "ResetRepositoryDateIfEmptyMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetsInfoByGuidMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetsInfoByCsetNumberMessage" {
    + Serialize()
    + Deserialize()
}

class "GetNotMergedHeadsOnBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetUnlinkedFromBaseChangesetMessage" {
    + Serialize()
    + Deserialize()
}

class "GetMergeLinksMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetTreeForVirtualRevisionMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectGuidsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLockRuleMessage" {
    + Serialize()
    + Deserialize()
}

class "AddLockRuleMessage" {
    + Serialize()
    + Deserialize()
}

class "LockItemsMessage" {
    + Serialize()
    + Deserialize()
}

class "LockExtendedItemsMessage" {
    + Serialize()
    + Deserialize()
}

class "EditLockedItemsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRevisionMergesMessage" {
    + Serialize()
    + Deserialize()
}

class "QueryResultResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "QueryResultArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ExecuteQueryResultResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "RevisionInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "RevisionInfoArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ChildItemArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckInExceptionArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckInResultResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "HistoryBaseArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ItemInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ChangesetInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ChangesetInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "MergeResultResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "MergeToResultResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "AnnotateNodeResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedTreeNodeResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedSelectorContentResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "DiffResultResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "MergeLinkListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GuidArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "LockRuleResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedRevisionMergesResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "NewRepositoryIdsResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ListBindingFilesMessage" {
    + Serialize()
    + Deserialize()
}

class "DownloadBindingsFilesMessage" {
    + Serialize()
    + Deserialize()
}

class "UploadBindingsFileMessage" {
    + Serialize()
    + Deserialize()
}

class "FileWithSizeListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "BranchExplorerDataResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "RegisterPurgeRequestMessage" {
    + Serialize()
    + Deserialize()
}

class "GetPurgeReportMessage" {
    + Serialize()
    + Deserialize()
}

class "GetPurgeHistoryMessage" {
    + Serialize()
    + Deserialize()
}

class "PurgeHistoryResultMessage" {
    + Serialize()
    + Deserialize()
}

class "PurgeReportMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLinkInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLinkInfoByNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetLinkListMessage" {
    + Serialize()
    + Deserialize()
}

class "LinkInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "LinkInfoArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "UnlockMessage" {
    + Serialize()
    + Deserialize()
}

class "ListLocksMessage" {
    + Serialize()
    + Deserialize()
}

class "LocksListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckMarkerExistsMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateMarkerMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateMarkerWithUtcTimeTicksMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteMarkerMessage" {
    + Serialize()
    + Deserialize()
}

class "RenameMarkerMessage" {
    + Serialize()
    + Deserialize()
}

class "MarkChangesetMessage" {
    + Serialize()
    + Deserialize()
}

class "GetMarkerInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetMarkerInfoByNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetMarkerListMessage" {
    + Serialize()
    + Deserialize()
}

class "MarkerInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "MarkerInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "MethodVersionNotSupportedException" {
    + SetMethod()
}

class "FilterBranchesCandidatesMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchesCandidatesMessage" {
    + Serialize()
    + Deserialize()
}

class "GetBranchesHeadsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetChangesetsOnBranchMessage" {
    + Serialize()
    + Deserialize()
}

class "GetExistingCsetsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetNewObjectsInfoMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectGuidMessage" {
    + Serialize()
    + Deserialize()
}

class "KeepTransactionAliveMessage" {
    + Serialize()
    + Deserialize()
}

class "RestoreTransactionAliveMessage" {
    + Serialize()
    + Deserialize()
}

class "GetPackageMessage" {
    + Serialize()
    + Deserialize()
}

class "GetPendingChangesetsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReplicationSourcesForObjectsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReplicationSyncStatusMessage" {
    + Serialize()
    + Deserialize()
}

class "GetStatusMessage" {
    + Serialize()
    + Deserialize()
}

class "ImportPackageMessage" {
    + Serialize()
    + Deserialize()
}

class "ReplicationSetObjectDataMessage" {
    + Serialize()
    + Deserialize()
}

class "SendPackageMessage" {
    + Serialize()
    + Deserialize()
}

class "StartFetchMessage" {
    + Serialize()
    + Deserialize()
}

class "StartGetPackageMessage" {
    + Serialize()
    + Deserialize()
}

class "StartImportPackageMessage" {
    + Serialize()
    + Deserialize()
}

class "StartPushMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedBranchesCandidatesResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedBranchesHeadsResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ReplicatedBranchChangesetsResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedGuidsResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedSyncNewObjectsInfoResponseResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "PendingChangesetsResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "PushedFileListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ReplicationSourceInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SerializedReplicationSyncStatusResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ReplicationStatusResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ReplicatedChangesetInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectIdsFromGuidsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectIdsFromGuidsResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateRepositoryMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateRepositoryWithGuidMessage" {
    + Serialize()
    + Deserialize()
}

class "AddRepositoryMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteRepositoryMessage" {
    + Serialize()
    + Deserialize()
}

class "RenameRepositoryMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRepositoryListMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckRepositoryExistsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRepositoryInfoByNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRepositoryInfoByGuidMessage" {
    + Serialize()
    + Deserialize()
}

class "GetRepositoryInfoByRepIdMessage" {
    + Serialize()
    + Deserialize()
}

class "RepCommitTransactionMessage" {
    + Serialize()
    + Deserialize()
}

class "RepRollbackTransactionMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckRepositoryDbMessage" {
    + Serialize()
    + Deserialize()
}

class "CheckConnectionToRepositoryMessage" {
    + Serialize()
    + Deserialize()
}

class "RepositoryInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "RepositoryServerInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "DbErrorListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "RepositoryListInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SEIDWorkingModeResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateReviewMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReviewMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteReviewMessage" {
    + Serialize()
    + Deserialize()
}

class "EditReviewMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateCommentMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteCommentMessage" {
    + Serialize()
    + Deserialize()
}

class "EditCommentMessage" {
    + Serialize()
    + Deserialize()
}

class "ReviewInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "EditReviewTitleMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReviewersResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReviewsByTypeIdResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "AddReviewerResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateReviewerResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ReviewCommentInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateCodeReviewCommentMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateCodeReviewCommentReplyMessage" {
    + Serialize()
    + Deserialize()
}

class "SetCodeReviewCommentAppliedInChangesetMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReviewersMessage" {
    + Serialize()
    + Deserialize()
}

class "GetReviewsByTypeIdMessage" {
    + Serialize()
    + Deserialize()
}

class "AddReviewerMessage" {
    + Serialize()
    + Deserialize()
}

class "RemoveReviewerMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateReviewerMessage" {
    + Serialize()
    + Deserialize()
}

class "SetPermissionsMessage" {
    + Serialize()
    + Deserialize()
}

class "RemovePermissionsMessage" {
    + Serialize()
    + Deserialize()
}

class "CalculateAclMessage" {
    + Serialize()
    + Deserialize()
}

class "CalculateAclResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "RemoveInheritanceMessage" {
    + Serialize()
    + Deserialize()
}

class "AddInheritanceMessage" {
    + Serialize()
    + Deserialize()
}

class "ReplaceInheritanceMessage" {
    + Serialize()
    + Deserialize()
}

class "SetOwnerMessage" {
    + Serialize()
    + Deserialize()
}

class "GetOwnerMessage" {
    + Serialize()
    + Deserialize()
}

class "GetSecurityMembersFromPattern" {
    + Serialize()
    + Deserialize()
}

class "GetGroupSecurityMembers" {
    + Serialize()
    + Deserialize()
}

class "GetSecurityMemberFromNameMessage" {
    + Serialize()
    + Deserialize()
}

class "ChangeUserPasswordMessage" {
    + Serialize()
    + Deserialize()
}

class "GetSEIDMessage" {
    + Serialize()
    + Deserialize()
}

class "GetSEIDFromNameMessage" {
    + Serialize()
    + Deserialize()
}

class "GetNamesFromSEIDsMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateSecuredPathMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateSecuredPathMessage" {
    + Serialize()
    + Deserialize()
}

class "GetSecuredPathsMessage" {
    + Serialize()
    + Deserialize()
}

class "GetSecuredPathMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteSecuredPathMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAllSecuredPathsMessage" {
    + Serialize()
    + Deserialize()
}

class "SecurityMemberArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SecurityMemberResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SEIDArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SecuredPathInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "SecuredPathInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "AccessTokenInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "AccessTokenInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateSubscriptionMessage" {
    + Serialize()
    + Deserialize()
}

class "GetSubscriptionMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateSubscriptionMessage" {
    + Serialize()
    + Deserialize()
}

class "RepositorySubscriptionInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GetObjectSubscriptionMessage" {
    + Serialize()
    + Deserialize()
}

class "GetAllObjectSubscriptionsMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateObjectSubscriptionMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateObjectSubscriptionMessage" {
    + Serialize()
    + Deserialize()
}

class "ObjectSubscriptionInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "ObjectSubscriptionInfoListResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "CreateTriggerMessage" {
    + Serialize()
    + Deserialize()
}

class "DeleteTriggerMessage" {
    + Serialize()
    + Deserialize()
}

class "ExecuteAfterTriggerMessage" {
    + Serialize()
    + Deserialize()
}

class "GetTriggerMessage" {
    + Serialize()
    + Deserialize()
}

class "GetTriggerListMessage" {
    + Serialize()
    + Deserialize()
}

class "UpdateTriggerMessage" {
    + Serialize()
    + Deserialize()
}

class "TriggerInfoResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "GetFullTriggerListMessage" {
    + Serialize()
    + Deserialize()
}

class "TriggerInfoArrayResponseMessage" {
    + Serialize()
    + Deserialize()
}

class "DeserializeRecursion" {
    + IsRoot()
}

class "PlasticLz4Stream" {
    + GetCompressTimeMsec()
    + GetUncompressTimeMsec()
    + Read()
    + Write()
    + Dispose()
    - FreeBuffers()
    + Flush()
    + Seek()
    + SetLength()
}

class "Collector" {
    + Run()
    + Stop()
    - ThreadProc()
}

class "TimeInBeginReceive" {
    + Enter()
    + Leave()
    + EnterMethod()
    + LeaveMethod()
    + GetMsecs()
}

class "NetworkThread" {
    - Run()
}

class "WorkerThreadPool" {
    + GetStatus()
    + GetStatus()
    + Free()
    + EnqueueWork()
    + GetMaxThreads()
    + SetMaxThreads()
    + SetMinThreads()
    + GetPerUnitOfThreadsBusyMoreThanTheseSeconds()
    + NumOfThreadsBusyMoreThanTheseSeconds()
    + AllThreadIdsBusyMoreThanTheseSeconds()
    + IsConnectionRunningMethod()
    - GetWork()
    - StartPoolThread()
    - DequeueWork()
    - ReleaseThread()
    - InitThreadRange()
}

class "ThreadsAttendingMethod" {
    + Add()
    + Remove()
    + NumOfThreadsBusyMoreThanTheseSeconds()
    + IdOfThreadsBusyMoreThanTheseSeconds()
    + FindByConn()
}

class "WorkerThread" {
    + Run()
}

class "ConnectionFromClient" {
    + BeginProcessMessages()
    + BeginProcessMessagesFromTesting()
    + BeginProcessMessagesFromTesting()
    + StartServerLoopForTesting()
    + PortIsListeningLocallyOnly()
    - MessageReceivedAsync()
    - ProcessMethodCall()
    - RunMethodCall()
    - CalculateTraffic()
    - SendSuccessfulResponse()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.FinishConn()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetMsecWaitingInBeginReceive()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetId()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetUnderlyingProtocol()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetCurrentStatus()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetUtcDateCreated()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetUtcDateEnteredCurrentStatus()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetClientAddress()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetLocalEndPoint()
    - PlasticPipe.Server.ConnectionFromClientList.IConnection.GetRequestAttendedCount()
    - PlasticPipe.Server.WorkerThreadPool.IConnectionFromClient.GetConnId()
    - InitializeCallContextFromCallContextMsg()
    - PlasticPipe.Server.NetworkThread.IConnectionFromClient.ReceiveAsync()
    - PlasticPipe.Server.WorkerThreadPool.IConnectionFromClient.IsAlive()
    - EnqueueWorkInThreadPool()
    - LaunchReceiveAsync()
    - ReceiveChangeInCallContext()
    - GetClientIp()
    - GetClientAddress()
    - SetStatus()
    - CloseConnection()
}

class "ReadFinished" {
    + EnsureLaunchReceiveAsync()
    + GetMsEllapsedSinceReadFinished()
    + GetDeserializationTime()
    - PlasticPipe.PlasticProtocol.Server.Stubs.IStubReadFinished.Notify()
}

class "ServerBasedOnTcpSocket" {
    - PlasticPipe.PlasticProtocol.Server.IPlasticProtocolServer.Start()
    - PlasticPipe.PlasticProtocol.Server.IPlasticProtocolServer.UpdateSocketSettings()
    - PlasticPipe.PlasticProtocol.Server.IPlasticProtocolServer.Stop()
    - PlasticPipe.PlasticProtocol.Server.IPlasticProtocolServer.SetCertificate()
    - ThreadProc()
    - AcceptLoop()
    - StartProcessMessage()
    - IsServerStopped()
    - StopServer()
}

class "TubeServer" {
    + Initialize()
    + ConnectToPlasticTube()
    + DisconnectFromPlasticTube()
    + IsConnectedToPlasticTube()
    - AsyncConnectToPlasticTube()
    - IsThreadTubeAlive()
    - WaitThreadToFinish()
    - Listen()
    - ConnectAndListen()
}

class "TubeControlConnection" {
    + Connect()
    + ConnectAndListen()
    + ListenAndReconnect()
    - EstablishTubeControlConnectionWithRetries()
    + Disconnect()
    + IsConnected()
    - StopCurrentTubeConnection()
    - HandleNewControlConnection()
    - CreateTubeControlConnection()
    - SleepRetryPeriod()
    - ResetRetryOnConnectionSuccess()
    - CloseControlConnection()
    - LogException()
}

class "TubeListener" {
    - PlasticPipe.Tube.TubeControlConnection.IProcessTubeDataConnection.ProcessTubeDataConnection()
}

class "AttributeHandlerStub" {
    + Handles()
    + ProcessMessage()
    - CreateAttribute()
    - DeleteAttribute()
    - RenameAttribute()
    - AddAttributesToObjects()
    - DeleteAttributeFromObject()
    - GetAttributeInfo()
    - GetAttributeInfoByName()
    - GetAttributeRealizationForObjects()
    - GetAttributeRealizationForObjectsByAttName()
    - GetValuesForAttribute()
}

class "BranchHandlerStub" {
    + Handles()
    + ProcessMessage()
    - CreateBranch()
    - CreateBranchWithUtcTicks()
    - CheckBranchExists()
    - DeleteBranch()
    - RenameBranch()
    - GetBranchInfoByGuid()
    - GetBranchInfoById()
    - GetBranchInfos()
    - GetBranchInfoByName()
    - GetBranchList()
    - GetMainBranch()
    - UpdateBranchHead()
    - IsBranchEmpty()
}

class "CacheHandlerStub" {
    + Handles()
    + ProcessMessage()
    - GetObjectsData()
}

class "CloudWorkspaceHandlerStub" {
    - PlasticPipe.PlasticProtocol.Server.Stubs.IStub.Handles()
    - PlasticPipe.PlasticProtocol.Server.Stubs.IStub.ProcessMessage()
}

class "ForwardHandlerStub" {
    + Handles()
    + ProcessMessage()
    - ContactServer()
    - InstallServerCertificate()
    - SetServerEncryption()
    - TryRepCommitTransaction()
    - TryRepRollbackTransaction()
    - TryGetChangesetInfoByCsetNumber()
    - TryExecuteAfterTrigger()
    - TryImportPackage()
    - TryGetBigPackage()
    - TrySendBigPackage()
    - TryReplicationSetObjectData()
    - TryGetStatus()
    - TryCancel()
    - TryFinish()
}

class "InfoHandlerStub" {
    + Handles()
    + ProcessMessage()
    - ConnectToPlasticTube()
    - DisconnectFromPlasticTube()
    - GetLicenseData()
    - GetServerInstanceId()
    - GetTubeConfiguration()
    - GetTubeUser()
    - GetUtcTimestamp()
    - InstallServerCertificate()
    - IsConnectedToPlasticTube()
    - NetworkBenchmarkDownload()
    - NetworkBenchmarkUpload()
    - SetServerEncryption()
    - SetTubeConfiguration()
    - UpdateLicense()
    - ExecuteAdminCommand()
    - GetWebadminPortAndProtocol()
}

class "ItemHandlerStub" {
    + Handles()
    + ProcessMessage()
    - GetRevisionInfo()
    - GetRevisionsInfo()
    - GetObjectData()
    - GetObjectsData()
    - SetObjectData()
    - SetObjectsData()
    - SetObjectsDataPacket()
    - RemoveFilesData()
    - GetRevisionChildren()
    - TryCheckIn()
    - CheckIn()
    - CheckInChangedTree()
    - GetRevisionHistory()
    - GetRevisionTree()
    - GetItemInfo()
    - GetLastItemNames()
    - ChangeRevisionType()
    - GetBranchExplorer()
    - ExecuteSimpleQuery()
    - ExecuteSimpleQueries()
    - ExecuteQuery()
    - ResolveRevSpec()
    - UpdateObject()
    - GetChangesetInfoByCsetNumber()
    - GetChangesetInfoByGuid()
    - GetChangesetsInfoByGuids()
    - GetChangesetsInfoByCsetNumber()
    - CalculateMerge()
    - MergeTo()
    - GetAnnotate()
    - GetAnnotateGraphForBranchDifferences()
    - GetAnnotateGraphForChangesetDifferences()
    - ArchiveData()
    - UnarchiveData()
    - GetFirstChangesetOnBranch()
    - GetParentChangesetForBranch()
    - GetLastChangesetOnBranch()
    - GetNewestChangesetForRepository()
    - GetChangesetTree()
    - GetChangesetCloakedTree()
    - GetLastChangesetTreeOnBranch()
    - GetLastChangesetCloakedTreeOnBranch()
    - GetChangesetTreeForRevision()
    - GetChangesetTreeForRevisionByRevSpec()
    - GetChangesetCloakedTreeForRevisionByRevSpec()
    - GetPartialChangesetTree()
    - GetNewRepositoryIds()
    - Diff()
    - DiffWithChanges()
    - SubtreeDiff()
    - MoveChangeset()
    - DeleteChangeset()
    - ResetRepositoryDateIfEmpty()
    - GetNotMergedHeadsOnBranch()
    - GetUnlinkedFromBaseChangesets()
    - GetMergeLinks()
    - GetChangesetTreeForVirtualRevision()
    - GetObjectGuids()
    - GetLockRule()
    - AddLockRule()
    - LockExtendedItems()
    - EditLockedItems()
    - GetRevisionMerges()
    - ListBindingsFiles()
    - UploadBindingsFile()
    - DownloadBindingsFiles()
    - RegisterPurgeRequest()
    - TryUnregisterPurgeRequest()
    - GetPurgeReport()
    - GetPurgeHistory()
    - TryExecutePurge()
}

class "LinkHandlerStub" {
    + Handles()
    + ProcessMessage()
    - GetLinkInfo()
    - GetLinkInfoByName()
    - GetLinkList()
}

class "LockHandlerStub" {
    + Handles()
    + ProcessMessage()
    - Unlock()
    - ListLocks()
}

class "MarkerHandlerStub" {
    + Handles()
    + ProcessMessage()
    - CheckMarkerExists()
    - CreateMarker()
    - CreateMarkerWithUtcTimeTicks()
    - DeleteMarker()
    - RenameMarker()
    - MarkChangeset()
    - GetMarkerInfo()
    - GetMarkerInfoByName()
    - GetMarkerList()
}

class "MethodRange" {
    + Contains()
}

class "ReplicationHandlerStub" {
    + Handles()
    + ProcessMessage()
    - Cancel()
    - ContactServer()
    - FilterBranchesCandidates()
    - Finish()
    - GetBranchesCandidates()
    - GetBranchesHeads()
    - GetChangesetsOnBranch()
    - GetExistingCsets()
    - GetNewObjectsInfo()
    - GetObjectGuid()
    - GetObjectIdsFromGuids()
    - GetBigPackage()
    - GetPendingChangesets()
    - GetPushedFileRevisions()
    - GetPushedFiles()
    - GetReplicationSourcesForObjects()
    - GetReplicationSyncStatus()
    - GetStatus()
    - ImportPackage()
    - KeepTransactionAlive()
    - ReplicationSetObjectData()
    - ResolveChangeset()
    - RestoreTransactionAlive()
    - SendBigPackage()
    - StartFetch()
    - StartGetPackage()
    - StartImportPackage()
    - StartPush()
}

class "RepositoryHandlerStub" {
    + Handles()
    + ProcessMessage()
    - CheckRepositoryExists()
    - CreateRepository()
    - CreateRepositoryWithGuid()
    - AddRepository()
    - DeleteRepository()
    - RenameRepository()
    - GetRepositoryList()
    - GetRepositoryInfoByRepId()
    - GetRepositoryInfoByName()
    - GetRepositoryInfoByGuid()
    - RepCommitTransaction()
    - RepRollbackTransaction()
    - GetRepositoryServerInfo()
    - CheckRepositoryServerDB()
    - CheckRepositoryDB()
    - GetWorkingMode()
    - CheckConnection()
    - CheckConnectionToRepository()
}

class "ReviewHandlerStub" {
    + Handles()
    + ProcessMessage()
    - CreateReview()
    - DeleteReview()
    - EditReview()
    - EditReviewTitle()
    - CreateComment()
    - DeleteComment()
    - EditComment()
    - CreateCodeReviewComment()
    - CreateCodeReviewCommentReply()
    - SetCodeReviewCommentAppliedInChangeset()
    - GetReviewers()
    - GetReviewsByTypeId()
    - AddReviewer()
    - RemoveReviewer()
    - UpdateReviewer()
    - GetReviewInfo()
}

class "SecurityHandlerStub" {
    + Handles()
    + ProcessMessage()
    - SetPermissions()
    - RemovePermissions()
    - CalculateAcl()
    - RemoveInheritance()
    - AddInheritance()
    - ReplaceInheritance()
    - SetOwner()
    - GetOwner()
    - GetSecurityMembers()
    - GetUsers()
    - GetGroups()
    - GetGroupSecurityMembers()
    - GetSecurityMemberFromName()
    - GetActiveUsers()
    - GetInactiveUsers()
    - GetMaxUsersNumber()
    - ActivateUser()
    - IsAdministrator()
    - DeactivateUser()
    - ChangeUserPassword()
    - GetOidcSignInUrl()
    - GetSamlSignOnInfo()
    - GetSEID()
    - GetNameFromSEID()
    - GetNamesFromSEIDs()
    - GetSEIDFromName()
    - CreateSecuredPath()
    - UpdateSecuredPath()
    - GetSecuredPaths()
    - GetSecuredPath()
    - DeleteSecuredPath()
    - GetAllSecuredPaths()
    - CreateAccessToken()
    - GetAccessTokens()
    - RevealAccessToken()
    - RevokeAccessToken()
}

class "StubList" {
    + RegisterHandler()
    + SetNegotiateActiveDirectory()
    - PlasticPipe.PlasticProtocol.Server.ConnectionFromClient.IStubList.FindStub()
}

class "SubscriptionHandlerStub" {
    - PlasticPipe.PlasticProtocol.Server.Stubs.IStub.Handles()
    - PlasticPipe.PlasticProtocol.Server.Stubs.IStub.ProcessMessage()
    - CreateRepositorySubscription()
    - GetRepositorySubscription()
    - UpdateRepositorySubscription()
    - GetReviewSubscription()
    - GetAllReviewSubscriptions()
    - CreateReviewSubscription()
    - UpdateReviewSubscription()
}

class "TriggerHandlerStub" {
    + Handles()
    + ProcessMessage()
    - CreateTrigger()
    - DeleteTrigger()
    - UpdateTrigger()
    - GetTrigger()
    - GetTriggerList()
    - GetFullTriggerList()
    - ExecuteAfterTrigger()
}

class "PlasticProtoMethodDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RunMethodDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PlasticMethodCall" {
    + GetTime()
    + SetAsAuthenticated()
    + SetCurrentUserFromSeid()
    + SetCurrentUser()
    + SetOrganization()
    + SetAsInternalCall()
    + Complete()
    + SetDescriptionForInternalMethod()
    + SetRepId()
    + AddDeserializationTime()
    + AddSerializationTime()
    + AddMethodProcessTime()
    + AddCompressTime()
    + SetError()
    + SetStatus()
    + GetStatus()
    + SetSsl()
    + UpdateMethod()
}

class "EndMethodCall" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RunningMethodCalls" {
    + Start()
    + End()
    + RegisterMethodCallOnCurrentThread()
    + TryGetMethodCallRegisteredOnCurrentThread()
    + UnregisterMethodCallFromCurrentThread()
    + GetRunningMethodCalls()
    + GetRunningMethodCallsForOrganization()
    + GetRunningMethodCallsForRepository()
}

class "MonitorStats" {
    + Add()
    + GetLastHourData()
    + GetCurrentData()
    + GetMethodList()
    - GetCallType()
}

class "Track" {
    + Operation()
    + GetTotals()
    + GetTotal()
    - ChangeToDifferentTime()
}

class "ServerSideSocket" {
    - PlasticPipe.Server.IServerSideSocket.BeginReceive()
    - PlasticPipe.Server.IServerSideSocket.EndReceive()
    - PlasticPipe.Server.IServerSideSocket.IsAlive()
    - PlasticPipe.Server.IServerSideSocket.GetClientAddress()
    - PlasticPipe.Server.IServerSideSocket.GetLocalEndPoint()
    - PlasticPipe.Server.IServerSideSocket.CreateNetworkStream()
    - PlasticPipe.Server.IServerSideSocket.GetReadBytes()
    - PlasticPipe.Server.IServerSideSocket.GetWrittenBytes()
    - PlasticPipe.Server.IServerSideSocket.GetReadTime()
    - PlasticPipe.Server.IServerSideSocket.GetWriteTime()
    - PlasticPipe.Server.IServerSideSocket.Close()
    - PlasticPipe.Server.IServerSideSocket.GetUnderlyingProtocol()
    - PlasticPipe.Server.IServerSideSocket.GetSocketId()
    + SetSmallReceiveTimeout()
    + RestoreReceiveTimeout()
}

class "CreateControlConnPacket" {
    + Write()
    + Read()
}

class "CreateControlConnResponsePacket" {
    + Write()
    + Read()
}

class "KeepAliveControlConnPacket" {
    + Write()
    + Read()
}

class "CreateDataConnPacket" {
    + Write()
    + Read()
}

class "ClientCreateDataConnPacket" {
    + Write()
    + Read()
}

class "CreateDataConnAckPacket" {
    + Write()
    + Read()
}

class "CreateDataConnResponsePacket" {
    + Write()
    + Read()
}

class "StartTubeSessionPacket" {
    + Write()
    + Read()
}

class "StartTubeSessionResponsePacket" {
    + Write()
    + Read()
}

class "CreateTubePacket" {
    + Write()
    + Read()
}

class "CreateTubeResponsePacket" {
    + Write()
    + Read()
}

class "DeleteTubePacket" {
    + Write()
    + Read()
}

class "DeleteTubeResponsePacket" {
    + Write()
    + Read()
}

class "ListUserTubesPacket" {
    + Write()
}

class "ListUserTubesResponsePacket" {
    + Write()
    + Read()
}

class "ListTubesSharedWithUserPacket" {
    + Write()
}

class "ListTubesSharedWithUserResponsePacket" {
    + Write()
    + Read()
}

class "TubeTcpClient" {
    + Connect()
    + Close()
    + IsSocketAlive()
    + Read0Bytes()
}

class "CFRunLoop" {
    + Run()
    + Stop()
    + Finalize()
    + Dispose()
    + Dispose()
}

class "FSEventStream" {
    + Finalize()
    + Dispose()
    + Dispose()
    - CheckDisposed()
    - FileSystemEventCallback()
    - SetupCallback()
    + OnEvents()
    + Start()
    + Stop()
    + ScheduleWithRunLoop()
    + Invalidate()
}

class "FSEventStreamEventsHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FSEventStreamCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "FsEventsWatcher" {
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.IsWatchLimitReached()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.HasPendingEvents()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.WaitForEvent()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.EndProcessEvent()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.Start()
    - Codice.Client.Common.FsNodeReaders.WatcherFsNodeReader.IFsWatcher.Stop()
    - Watch()
    - OnEvent()
    - BuildFSEventsStream()
    - DestroyFSEventsStream()
}

class "MacFsWatcherBuilder" {
    - Codice.Client.Common.FsNodeReaders.WorkspaceWatcherFsNodeReadersCache.IMacFsWatcherBuilder.Build()
}

class "SafeCreateHandle" {
    + ReleaseHandle()
}

class "SafeEventStreamHandle" {
    + ReleaseHandle()
}

class "<>c__DisplayClass2" {
    + <ForEmail>b__0()
    + <ForEmail>b__1()
}

class "<>c__DisplayClass24" {
    + <LoadConfigData>b__0()
    + <LoadConfigData>b__2()
    + <LoadConfigData>b__4()
    + <LoadConfigData>b__6()
    + <LoadConfigData>b__8()
    + <LoadConfigData>b__a()
    + <LoadConfigData>b__c()
    + <LoadConfigData>b__e()
    + <LoadConfigData>b__10()
    + <LoadConfigData>b__12()
    + <LoadConfigData>b__14()
    + <LoadConfigData>b__16()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass5" {
    + <WaitForLoginValidation>b__3()
    + <WaitForLoginValidation>b__4()
}

class "<>c__DisplayClass9" {
    + <GetOrganizationsFromAccessToken>b__7()
    + <GetOrganizationsFromAccessToken>b__8()
}

class "<>c__DisplayClass3" {
    + <Run>b__1()
    + <Run>b__2()
}

class "<>c__DisplayClass4" {
    + <WaitForLoginValidation>b__2()
    + <WaitForLoginValidation>b__3()
}

class "<>c__DisplayClass8" {
    + <GetOrganizationsFromAccessToken>b__6()
    + <GetOrganizationsFromAccessToken>b__7()
}

class "<>c__DisplayClass2" {
    + <AsyncRetrieveCloudServer>b__0()
    + <AsyncRetrieveCloudServer>b__1()
}

class "<>c__DisplayClass3" {
    + <ContinueWith>b__1()
}

class "<>c__DisplayClass3" {
    + <Run>b__1()
    + <Run>b__2()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass3" {
    + <Run>b__1()
    + <Run>b__2()
}

class "<>c__DisplayClass2" {
    + <Click>b__0()
    + <Click>b__1()
}

class "<>c__DisplayClass2" {
    + <Click>b__0()
    + <Click>b__1()
}

class "<>c__DisplayClass1" {
    + <GetFileDiff>b__0()
}

class "<>c__DisplayClass5" {
    + <CreateFileTypeChecker>b__3()
    + <CreateFileTypeChecker>b__4()
}

class "<>c__DisplayClass3" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
}

class "<>c__DisplayClassc" {
    + <AddConditionsFromStatusResult>b__5()
    + <AddConditionsFromStatusResult>b__6()
    + <AddConditionsFromStatusResult>b__7()
    + <AddConditionsFromStatusResult>b__8()
    + <AddConditionsFromStatusResult>b__9()
    + <AddConditionsFromStatusResult>b__a()
    + <AddConditionsFromStatusResult>b__b()
}

class "<>c__DisplayClass2" {
    + <Get>b__0()
    + <Get>b__1()
}

class "<>c__DisplayClass4" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
    + <Get>b__3()
}

class "<>c__DisplayClass2" {
    + <ForWorkspace>b__0()
    + <ForWorkspace>b__1()
}

class "<>c__DisplayClass3" {
    + <Checkin>b__0()
    + <Checkin>b__1()
    + <Checkin>b__2()
}

class "<>c__DisplayClass7" {
    + <CheckinWithLocalChanges>b__5()
    + <CheckinWithLocalChanges>b__6()
}

class "<>c__DisplayClassc" {
    + <PerformCheckin>b__9()
    + <PerformCheckin>b__a()
    + <PerformCheckin>b__b()
}

class "<>c__DisplayClass10" {
    + <RunFileMerges>b__e()
    + <RunFileMerges>b__f()
}

class "<>c__DisplayClass16" {
    + <GetCheckinConflictsFromFileConflicts>b__12()
}

class "<>c__DisplayClass1a" {
    + <UndoChangesAndFinish>b__18()
    + <UndoChangesAndFinish>b__19()
}

class "<>c__DisplayClass3" {
    + <Checkout>b__0()
    + <Checkout>b__1()
    + <Checkout>b__2()
}

class "<>c__DisplayClass7" {
    + <PerformCheckoutOperation>b__5()
    + <PerformCheckoutOperation>b__6()
}

class "<>c__DisplayClass2" {
    + <DeletePrivate>b__0()
    + <DeletePrivate>b__1()
}

class "<>c__DisplayClass2" {
    + <Undo>b__0()
    + <Undo>b__1()
}

class "<>c__DisplayClass6" {
    + <UndoWithDependencies>b__4()
    + <UndoWithDependencies>b__5()
}

class "<>c__DisplayClassa" {
    + <Undo>b__8()
    + <Undo>b__9()
}

class "<>c__DisplayClass2" {
    + <RevertToThisRevision>b__0()
    + <RevertToThisRevision>b__1()
}

class "<>c__DisplayClass2" {
    + <AutoRefresh>b__0()
    + <AutoRefresh>b__1()
}

class "<>c__DisplayClass7" {
    + <Refresh>b__4()
    + <Refresh>b__5()
    + <Refresh>b__6()
}

class "<>c__DisplayClassc" {
    + <ProcessMergesForItems>b__9()
    + <ProcessMergesForItems>b__a()
    + <ProcessMergesForItems>b__b()
}

class "<>c__DisplayClass11" {
    + <ProcessMergesForConflicts>b__e()
    + <ProcessMergesForConflicts>b__f()
    + <ProcessMergesForConflicts>b__10()
}

class "<>c__DisplayClass3" {
    + <ProcessLink>b__0()
    + <ProcessLink>b__1()
}

class "<>c__DisplayClass8" {
    + <CreateWorkspaceAndOpen>b__6()
    + <CreateWorkspaceAndOpen>b__7()
}

class "<>c__DisplayClassd" {
    + <DownloadAndFocus>b__a()
    + <DownloadAndFocus>b__b()
    + <DownloadAndFocus>b__c()
}

class "<>c__DisplayClass11" {
    + <GetExistingWorkspaceForRepo>b__f()
    + <GetExistingWorkspaceForRepo>b__10()
}

class "<>c__DisplayClass3" {
    + <ApplyConfiguration>b__0()
    + <ApplyConfiguration>b__1()
    + <ApplyConfiguration>b__2()
}

class "<>c__DisplayClass3" {
    + <UpdateExplorerTree>b__0()
    + <UpdateExplorerTree>b__1()
    + <UpdateExplorerTree>b__2()
}

class "<>c__DisplayClass7" {
    + <Refresh>b__6()
}

class "<>c__DisplayClassb" {
    + <UpdateTreeSizes>b__9()
}

class "<>c__DisplayClass6" {
    + <UpdateStatusAndSize>b__4()
    + <UpdateStatusAndSize>b__5()
}

class "<>c__DisplayClass2" {
    + <CreateBranch>b__0()
    + <CreateBranch>b__1()
}

class "<>c__DisplayClass3" {
    + <Refresh>b__1()
    + <Refresh>b__2()
}

class "<>c__DisplayClass3" {
    + <Switch>b__0()
    + <Switch>b__1()
    + <Switch>b__2()
}

class "<>c__DisplayClass2" {
    + <Add>b__0()
    + <Add>b__1()
}

class "<>c__DisplayClass2" {
    + <AddLockRuleAndCheckout>b__0()
    + <AddLockRuleAndCheckout>b__1()
}

class "<>c__DisplayClass7" {
    + <DoLockAndCheckout>b__5()
    + <DoLockAndCheckout>b__6()
}

class "<>c__DisplayClassb" {
    + <Checkout>b__9()
    + <Checkout>b__a()
}

class "<>c__DisplayClass3" {
    + <Delete>b__0()
    + <Delete>b__1()
    + <Delete>b__2()
}

class "<>c__DisplayClass2" {
    + <Paste>b__0()
    + <Paste>b__1()
}

class "<>c__DisplayClass2" {
    + <RenameControlled>b__0()
    + <RenameControlled>b__1()
}

class "<>c__DisplayClass6" {
    + <RenamePrivate>b__4()
    + <RenamePrivate>b__5()
}

class "<>c__DisplayClass3" {
    + <UndoChanges>b__0()
    + <UndoChanges>b__1()
    + <UndoChanges>b__2()
}

class "<>c__DisplayClass2" {
    + <UndoCheckout>b__0()
    + <UndoCheckout>b__1()
}

class "<>c__DisplayClass3" {
    + <UpdateForced>b__0()
    + <UpdateForced>b__1()
    + <UpdateForced>b__2()
}

class "<>c__DisplayClass7" {
    + <PerformUpdate>b__5()
    + <PerformUpdate>b__6()
}

class "<>c__DisplayClass3" {
    + <Update>b__0()
    + <Update>b__1()
    + <Update>b__2()
}

class "<>c__DisplayClass1" {
    + <ForWorkspaceExplorer>b__0()
}

class "<>c__DisplayClass4" {
    + <ForPendingChanges>b__3()
}

class "<>c__DisplayClass7" {
    + <ForBranchExplorer>b__6()
}

class "<>c__DisplayClassa" {
    + <ForQueryView>b__9()
}

class "<>c__DisplayClassd" {
    + <ForSyncRepositories>b__c()
}

class "<>c__DisplayClass10" {
    + <ForCloud>b__f()
}

class "<>c__DisplayClass13" {
    + <ForWorkspaces>b__12()
}

class "<>c__DisplayClass16" {
    + <ForRepositories>b__15()
}

class "<>c__DisplayClass19" {
    + <ForMerge>b__18()
}

class "<>c__DisplayClass1c" {
    + <ForCodeReview>b__1b()
}

class "<>c__DisplayClass1f" {
    + <ForGluonWorkspaceExplorer>b__1e()
}

class "<>c__DisplayClass22" {
    + <ForGluonWorkspaceConfiguration>b__21()
}

class "<>c__DisplayClass25" {
    + <ForCheckinView>b__24()
}

class "<>c__DisplayClass2b" {
    + <ShowHelpEntryForView>b__29()
    + <ShowHelpEntryForView>b__2a()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass3" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
}

class "<>c__DisplayClass9" {
    + <AddConditionsFromResult>b__5()
    + <AddConditionsFromResult>b__6()
    + <AddConditionsFromResult>b__7()
    + <AddConditionsFromResult>b__8()
}

class "<>c__DisplayClass15" {
    + <AddConditionsFromEvents>b__b()
    + <AddConditionsFromEvents>b__c()
    + <AddConditionsFromEvents>b__d()
    + <AddConditionsFromEvents>b__e()
    + <AddConditionsFromEvents>b__f()
    + <AddConditionsFromEvents>b__10()
    + <AddConditionsFromEvents>b__11()
    + <AddConditionsFromEvents>b__12()
    + <AddConditionsFromEvents>b__13()
    + <AddConditionsFromEvents>b__14()
}

class "<>c__DisplayClass1" {
    + <Get>b__0()
}

class "<>c__DisplayClass4" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
    + <Get>b__3()
}

class "<>c__DisplayClass9" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
    + <Get>b__3()
    + <Get>b__4()
    + <Get>b__5()
    + <Get>b__6()
    + <Get>b__7()
    + <Get>b__8()
}

class "<>c__DisplayClass7" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
    + <Get>b__3()
    + <Get>b__4()
    + <Get>b__5()
    + <Get>b__6()
}

class "<>c__DisplayClass19" {
    + <AddConditionsFromStatus>b__11()
    + <AddConditionsFromStatus>b__12()
    + <AddConditionsFromStatus>b__13()
    + <AddConditionsFromStatus>b__14()
    + <AddConditionsFromStatus>b__15()
    + <AddConditionsFromStatus>b__16()
    + <AddConditionsFromStatus>b__17()
    + <AddConditionsFromStatus>b__18()
}

class "<>c__DisplayClass1f" {
    + <AddConditionsFromMerge>b__1b()
    + <AddConditionsFromMerge>b__1c()
    + <AddConditionsFromMerge>b__1d()
    + <AddConditionsFromMerge>b__1e()
}

class "<>c__DisplayClass26" {
    + <AddConditionsFromEvents>b__21()
    + <AddConditionsFromEvents>b__22()
    + <AddConditionsFromEvents>b__23()
    + <AddConditionsFromEvents>b__24()
    + <AddConditionsFromEvents>b__25()
}

class "<>c__DisplayClass1" {
    + <Get>b__0()
}

class "<>c__DisplayClass2" {
    + <Get>b__0()
    + <Get>b__1()
}

class "<>c__DisplayClass6" {
    + <Get>b__0()
    + <Get>b__1()
    + <Get>b__2()
    + <Get>b__3()
    + <Get>b__4()
    + <Get>b__5()
}

class "<>c__DisplayClassd" {
    + <AddConditionsFromEvents>b__8()
    + <AddConditionsFromEvents>b__9()
    + <AddConditionsFromEvents>b__a()
    + <AddConditionsFromEvents>b__b()
    + <AddConditionsFromEvents>b__c()
}

class "<>c__DisplayClass1`1" {
    + <ForTable>b__0()
}

class "<>c__DisplayClass4" {
    + <ForTree>b__3()
}

class "<>c__DisplayClass2" {
    + <ForWorkspace>b__0()
    + <ForWorkspace>b__1()
}

class "<>c__DisplayClass2" {
    + <FromArgs>b__0()
    + <FromArgs>b__1()
}

class "<>c__DisplayClass2" {
    + <UpdateWorspaceInfo>b__0()
    + <UpdateWorspaceInfo>b__1()
}

class "<>c__DisplayClass6" {
    + <UpdateComment>b__4()
    + <UpdateComment>b__5()
}

class "<>c__DisplayClassa" {
    + <UpdateUsers>b__8()
    + <UpdateUsers>b__9()
}

class "<>c__DisplayClass2" {
    + <SaveRevision>b__0()
    + <SaveRevision>b__1()
}

class "<>c__DisplayClass1" {
    + <GetNumOfPendingChanges>b__0()
}

class "<>c__DisplayClass4" {
    + <GetNumOfPendingQuestions>b__3()
}

class "<>c__DisplayClass2" {
    + <SaveComments>b__0()
    + <SaveComments>b__1()
}

class "<>c__DisplayClass2" {
    + <DiffWithPrevious>b__0()
    + <DiffWithPrevious>b__1()
}

class "<>c__DisplayClass6" {
    + <DiffWorkspaceContent>b__4()
    + <DiffWorkspaceContent>b__5()
}

class "<>c__DisplayClassa" {
    + <DiffClientDiff>b__8()
    + <DiffClientDiff>b__9()
}

class "<>c__DisplayClasse" {
    + <DiffRevisions>b__c()
    + <DiffRevisions>b__d()
}

class "<>c__DisplayClass12" {
    + <DiffRevisions>b__10()
    + <DiffRevisions>b__11()
}

class "<>c__DisplayClass16" {
    + <DiffYoursWithIncoming>b__14()
    + <DiffYoursWithIncoming>b__15()
}

class "<>c__DisplayClass1a" {
    + <DiffRevisions>b__18()
    + <DiffRevisions>b__19()
}

class "<>c__DisplayClass2" {
    + <OpenRevision>b__0()
    + <OpenRevision>b__1()
}

class "<>c__DisplayClass6" {
    + <DoLaunchExternalToolOnRevision>b__4()
    + <DoLaunchExternalToolOnRevision>b__5()
}

class "<>c__DisplayClassa" {
    + <OpenWithRevision>b__8()
    + <OpenWithRevision>b__9()
}

class "<>c__DisplayClass3" {
    + <RevertChanges>b__0()
    + <RevertChanges>b__1()
    + <RevertChanges>b__2()
}

class "<>c__DisplayClass3" {
    + <UndeleteAskingRestorePathsIfNeeded>b__0()
    + <UndeleteAskingRestorePathsIfNeeded>b__1()
    + <UndeleteAskingRestorePathsIfNeeded>b__2()
}

class "<>c__DisplayClass2" {
    + <RefreshForItem>b__0()
    + <RefreshForItem>b__1()
}

class "<>c__DisplayClass6" {
    + <BuildBranchesAndChangesetsDictionary>b__4()
}

class "<>c__DisplayClass2" {
    + <OpenRevision>b__0()
    + <OpenRevision>b__1()
}

class "<>c__DisplayClass6" {
    + <DoLaunchExternalToolOnRevision>b__4()
    + <DoLaunchExternalToolOnRevision>b__5()
}

class "<>c__DisplayClassa" {
    + <OpenWithRevision>b__8()
    + <OpenWithRevision>b__9()
}

class "<>c__DisplayClass2" {
    + <RevertToThisRevision>b__0()
    + <RevertToThisRevision>b__1()
}

class "<>c__DisplayClass2" {
    + <SaveRevision>b__0()
    + <SaveRevision>b__1()
}

class "<>c__DisplayClass2" {
    + <FillTable>b__0()
    + <FillTable>b__1()
}

class "<>c__DisplayClass2" {
    + <RemoveLocks>b__0()
    + <RemoveLocks>b__1()
}

class "<>c__DisplayClass6" {
    + <ReleaseLocks>b__4()
    + <ReleaseLocks>b__5()
}

class "<>c__DisplayClass1" {
    + <ForRepositoriesView>b__0()
}

class "<>c__DisplayClass6" {
    + <DoCreate>b__3()
    + <DoCreate>b__4()
    + <DoCreate>b__5()
}

class "<>c__DisplayClass3" {
    + <Calculate>b__0()
    + <Calculate>b__1()
    + <Calculate>b__2()
}

class "<>c__DisplayClass2" {
    + <SaveAccountWithFirstAvailableServer>b__0()
    + <SaveAccountWithFirstAvailableServer>b__1()
}

class "<>c__DisplayClass5" {
    + <FindNearestAccount>b__4()
}

class "<>c__DisplayClass8" {
    + <SaveServerProfile>b__7()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass2" {
    + <RenameWorkspace>b__0()
    + <RenameWorkspace>b__1()
}

class "<>c__DisplayClass6" {
    + <DeleteWorkspace>b__4()
    + <DeleteWorkspace>b__5()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass2" {
    + <FillTable>b__0()
    + <FillTable>b__1()
}

class "<>c__DisplayClass3" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
    + <AsyncValidation>b__2()
}

class "<>c__DisplayClass2" {
    + <CreateSyncView>b__0()
    + <CreateSyncView>b__1()
}

class "<>c__DisplayClass6" {
    + <CreateRepository>b__4()
    + <CreateRepository>b__5()
}

class "<>c__DisplayClassa" {
    + <RenameRepository>b__8()
    + <RenameRepository>b__9()
}

class "<>c__DisplayClassf" {
    + <DeleteRepository>b__c()
}

class "<>c__DisplayClass11" {
    + <DeleteRepository>b__d()
}

class "<>c__DisplayClass18" {
    + <UndeleteRepository>b__16()
    + <UndeleteRepository>b__17()
}

class "<>c__DisplayClass1c" {
    + <CreateRepositoryAndWorkspace>b__1a()
    + <CreateRepositoryAndWorkspace>b__1b()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass2" {
    + <Checkout>b__0()
    + <Checkout>b__1()
}

class "<>c__DisplayClass7" {
    + <AddLockRuleAndCheckout>b__5()
    + <AddLockRuleAndCheckout>b__6()
}

class "<>c__DisplayClassc" {
    + <DoAddLockRuleAndCheckout>b__a()
    + <DoAddLockRuleAndCheckout>b__b()
}

class "<>c__DisplayClass3" {
    + <Delete>b__0()
    + <Delete>b__1()
    + <Delete>b__2()
}

class "<>c__DisplayClass3" {
    + <CalculateVfsSizes>b__1()
}

class "<>c__DisplayClass2" {
    + <Paste>b__0()
    + <Paste>b__1()
}

class "<>c__DisplayClass2" {
    + <RenameControlled>b__0()
    + <RenameControlled>b__1()
}

class "<>c__DisplayClass6" {
    + <RenamePrivate>b__4()
    + <RenamePrivate>b__5()
}

class "<>c__DisplayClass3" {
    + <Run>b__0()
    + <Run>b__1()
    + <Run>b__2()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass2" {
    + <AutoRefresh>b__0()
    + <AutoRefresh>b__1()
}

class "<>c__DisplayClass6" {
    + <Refresh>b__4()
    + <Refresh>b__5()
}

class "<>c__DisplayClassb" {
    + <ResolveDirectoryConflicts>b__8()
    + <ResolveDirectoryConflicts>b__9()
}

class "<>c__DisplayClass10" {
    + <ProcessMerges>b__d()
    + <ProcessMerges>b__e()
    + <ProcessMerges>b__f()
}

class "<>c__DisplayClass15" {
    + <CalculateMerge>b__12()
    + <CalculateMerge>b__13()
}

class "<>c__DisplayClass1a" {
    + <ProcessMergeTo>b__17()
    + <ProcessMergeTo>b__18()
    + <ProcessMergeTo>b__19()
}

class "<>c__DisplayClass1e" {
    + <ApplyMergeTo>b__1c()
    + <ApplyMergeTo>b__1d()
}

class "<>c__DisplayClass22" {
    + <LaunchMergeTo>b__20()
    + <LaunchMergeTo>b__21()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass2" {
    + <ForDifference>b__0()
    + <ForDifference>b__1()
}

class "<>c__DisplayClass3" {
    + <For>b__0()
}

class "<>c__DisplayClass7" {
    + <DoUpdate>b__5()
    + <DoUpdate>b__6()
}

class "<>c__DisplayClass2" {
    + <ApplyLocalChanges>b__0()
    + <ApplyLocalChanges>b__1()
}

class "<>c__DisplayClass6" {
    + <ApplyLocalChangesWithDependencies>b__4()
    + <ApplyLocalChangesWithDependencies>b__5()
}

class "<>c__DisplayClassa" {
    + <PerformApplyLocalChangesOperation>b__8()
    + <PerformApplyLocalChangesOperation>b__9()
}

class "<>c__DisplayClass3" {
    + <Checkin>b__0()
    + <Checkin>b__1()
    + <Checkin>b__2()
}

class "<>c__DisplayClass7" {
    + <CheckinToADifferentBranch>b__5()
    + <CheckinToADifferentBranch>b__6()
}

class "<>c__DisplayClassb" {
    + <CheckinWithLocalChanges>b__9()
    + <CheckinWithLocalChanges>b__a()
}

class "<>c__DisplayClass10" {
    + <PerformCheckin>b__d()
    + <PerformCheckin>b__e()
    + <PerformCheckin>b__f()
}

class "<>c__DisplayClass3" {
    + <AsyncSetUpTargetBranch>b__0()
    + <AsyncSetUpTargetBranch>b__1()
    + <AsyncSetUpTargetBranch>b__2()
}

class "<>c__DisplayClass2" {
    + <Sort>b__0()
}

class "<>c__DisplayClass2" {
    + <InitIgnoredRulesAndRefreshView>b__0()
    + <InitIgnoredRulesAndRefreshView>b__1()
}

class "<>c__DisplayClass3" {
    + <Shelve>b__0()
    + <Shelve>b__1()
    + <Shelve>b__2()
}

class "<>c__DisplayClass7" {
    + <ShelveWithLocalChanges>b__5()
    + <ShelveWithLocalChanges>b__6()
}

class "<>c__DisplayClassb" {
    + <Shelve>b__9()
    + <Shelve>b__a()
}

class "<>c__DisplayClassf" {
    + <UndoChangesAndFinish>b__d()
    + <UndoChangesAndFinish>b__e()
}

class "<>c__DisplayClass2" {
    + <ShowIncomingChangesView>b__0()
    + <ShowIncomingChangesView>b__1()
}

class "<>c__DisplayClass2" {
    + <Undo>b__0()
    + <Undo>b__1()
}

class "<>c__DisplayClass6" {
    + <UndoUnchanged>b__4()
    + <UndoUnchanged>b__5()
}

class "<>c__DisplayClassa" {
    + <UndoWithDependencies>b__8()
    + <UndoWithDependencies>b__9()
}

class "<>c__DisplayClasse" {
    + <Undo>b__c()
    + <Undo>b__d()
}

class "<>c__DisplayClass2" {
    + <PlasticGui.WorkspaceWindow.PendingChanges.IPendingChangesNode.SortChildren>b__0()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<ToIEnumerable>d__0" {
    - System.Collections.Generic.IEnumerable<PlasticGui.IPlasticTreeNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.IDisposable.Dispose()
    - <>m__Finally3()
}

class "<>c__DisplayClass3" {
    + <CreateBranch>b__0()
    + <CreateBranch>b__1()
    + <CreateBranch>b__2()
}

class "<>c__DisplayClass7" {
    + <CreateCodeReview>b__5()
    + <CreateCodeReview>b__6()
}

class "<>c__DisplayClassb" {
    + <RenameBranch>b__9()
    + <RenameBranch>b__a()
}

class "<>c__DisplayClassf" {
    + <DeleteBranch>b__d()
    + <DeleteBranch>b__e()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass2" {
    + <AsyncValidation>b__0()
    + <AsyncValidation>b__1()
}

class "<>c__DisplayClass3" {
    + <CreateBranch>b__0()
    + <CreateBranch>b__1()
    + <CreateBranch>b__2()
}

class "<>c__DisplayClass7" {
    + <LabelChangeset>b__5()
    + <LabelChangeset>b__6()
}

class "<>c__DisplayClassb" {
    + <CreateCodeReview>b__9()
    + <CreateCodeReview>b__a()
}

class "<>c__DisplayClassf" {
    + <MoveChangeset>b__d()
    + <MoveChangeset>b__e()
}

class "<>c__DisplayClass13" {
    + <DeleteChangeset>b__11()
    + <DeleteChangeset>b__12()
}

class "<>c__DisplayClass17" {
    + <PerformMoveChangesetInWorkingBranch>b__15()
    + <PerformMoveChangesetInWorkingBranch>b__16()
}

class "<>c__DisplayClass1b" {
    + <PerformMoveChangeset>b__19()
    + <PerformMoveChangeset>b__1a()
}

class "<>c__DisplayClass1f" {
    + <DeleteWorkingChangeset>b__1d()
    + <DeleteWorkingChangeset>b__1e()
}

class "<>c__DisplayClass23" {
    + <PerformDeleteChangeset>b__21()
    + <PerformDeleteChangeset>b__22()
}

class "<>c__DisplayClass3" {
    + <AsyncSetUpTargetBranch>b__0()
    + <AsyncSetUpTargetBranch>b__1()
    + <AsyncSetUpTargetBranch>b__2()
}

class "<>c__DisplayClass3" {
    + <RevertTo>b__0()
    + <RevertTo>b__2()
}

class "<>c__DisplayClass9" {
    + <Undo>b__6()
    + <Undo>b__7()
    + <Undo>b__8()
}

class "<>c__DisplayClasse" {
    + <UndoAndRevert>b__b()
    + <UndoAndRevert>b__c()
    + <UndoAndRevert>b__d()
}

class "<>c__DisplayClass13" {
    + <Revert>b__10()
    + <Revert>b__11()
    + <Revert>b__12()
}

class "<>c__DisplayClass2" {
    + <AsyncValidate>b__0()
    + <AsyncValidate>b__1()
}

class "<>c__DisplayClass4" {
    + <ReplicatePendingBranches>b__1()
    + <ReplicatePendingBranches>b__2()
}

class "<>c__DisplayClass1" {
    + <GetCombinedServers>b__0()
}

class "<>c__DisplayClass4" {
    + <GetCombinedServersForRepositoryList>b__3()
}

class "<>c__DisplayClass8" {
    + <Execute>b__6()
    + <Execute>b__7()
}

class "<>c__DisplayClass2" {
    + <SelectiveUpdate>b__0()
    + <SelectiveUpdate>b__1()
}

class "<>c__DisplayClass2" {
    + <SwitchToBranch>b__0()
    + <SwitchToBranch>b__1()
}

class "<>c__DisplayClass6" {
    + <SwitchToChangeset>b__4()
    + <SwitchToChangeset>b__5()
}

class "<>c__DisplayClassa" {
    + <SwitchToLabel>b__8()
    + <SwitchToLabel>b__9()
}

class "<>c__DisplayClass2" {
    + <Run>b__0()
    + <Run>b__1()
}

class "<>c__DisplayClass3" {
    + <GetExistingCmPathsFromChangeInfos>b__0()
}

class "<>c__DisplayClass1" {
    + <GetFileDiffInfo>b__0()
}

class "<>c__DisplayClass5" {
    + <ApplyShelveByMount>b__4()
}

class "<>c__DisplayClassb" {
    + <ApplyShelveByMount>b__0()
    + <ApplyShelveByMount>b__1()
    + <ApplyShelveByMount>b__2()
    + <ApplyShelveByMount>b__3()
}

class "<>c__DisplayClasse" {
    + <FlushAdds>b__d()
}

class "<>c__DisplayClass1" {
    + <BuildOutOfDateItems>b__0()
}

class "<>c__DisplayClass2" {
    + <IssueTrackerLoaded>b__1()
}

class "<>c__DisplayClass4" {
    + <System.IEquatable<Codice.Client.BaseCommands.LayoutFilters.IListFilter<Codice.Client.BaseCommands.LayoutFilters.BranchFilterModel>>.Equals>b__3()
}

class "<>c__DisplayClass1" {
    + <System.IEquatable<Codice.Client.BaseCommands.LayoutFilters.IListFilter<Codice.Client.BaseCommands.LayoutFilters.UserFilterModel>>.Equals>b__0()
}

class "<>c__DisplayClass1" {
    + <PrintHumanReadableSmartLocks>b__0()
}

class "<>c__DisplayClass4" {
    + <PrintMachineReadableSmartLocks>b__3()
}

class "<>c__DisplayClass2" {
    + <DirectoryConflict>b__0()
    + <DirectoryConflict>b__1()
}

class "<>c__DisplayClass6" {
    + <FileConflict>b__4()
    + <FileConflict>b__5()
}

class "<>c__DisplayClass6" {
    + <ReplicateWithProgress>b__0()
    + <ReplicateWithProgress>b__1()
    + <ReplicateWithProgress>b__2()
}

class "<>c__DisplayClassa" {
    + <RunWithProgress>b__8()
    + <RunWithProgress>b__9()
}

class "<>c__DisplayClass3" {
    + <SetSelectorAndUpdateWithProgress>b__0()
    + <SetSelectorAndUpdateWithProgress>b__1()
    + <SetSelectorAndUpdateWithProgress>b__2()
}

class "<>c__DisplayClass3" {
    + <SwitchWithProgress>b__0()
    + <SwitchWithProgress>b__1()
    + <SwitchWithProgress>b__2()
}

class "<>c__DisplayClass1" {
    + <Execute>b__0()
}

class "<>c__DisplayClass1" {
    + <GetStatusId>b__0()
}

class "<>c__DisplayClass1" {
    + <Execute>b__0()
}

class "<>c__DisplayClass3" {
    + <UpdateToLastInCurrentBranchWithDynamicProgress>b__0()
    + <UpdateToLastInCurrentBranchWithDynamicProgress>b__1()
    + <UpdateToLastInCurrentBranchWithDynamicProgress>b__2()
}

class "<>c__DisplayClass8" {
    + <LaunchUpdateWithDynamicProgress>b__5()
    + <LaunchUpdateWithDynamicProgress>b__6()
    + <LaunchUpdateWithDynamicProgress>b__7()
}

class "<>c__DisplayClass3" {
    + <OpRemove>b__1()
}

class "<>c__DisplayClass6" {
    + <PingLoop>b__3()
}

class "<>c__DisplayClass2" {
    + <For>b__0()
    + <For>b__1()
}

class "<>c__DisplayClass6" {
    + <For>b__4()
    + <For>b__5()
}

class "<>c__DisplayClass1" {
    + <CopyRelevantLogs>b__0()
}

class "<>c__DisplayClass3" {
    + <PlasticGui.WebApi.IPlasticWebRestApi.GetCloudServers>b__2()
}

class "<>c__DisplayClass1" {
    + <StartRemotingSsl>b__0()
}

class "<>c__DisplayClass1" {
    + <MatchesRepositoryFilter>b__0()
}

class "<>c__DisplayClass1" {
    + <NegotiateStartSsl>b__0()
}

class "<>c__DisplayClass7" {
    + <NegotiateServerCommands>b__3()
    + <NegotiateServerCommands>b__4()
}

class "CustomLogger" {
    + LogWarning()
    + LogError()
    + LogException()
}

class "GlobalSerializationConfig" {
    - OnInspectorGUI()
}

class "<>f__AnonymousType0`2" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType1`3" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ValidatorFormatter`1" {
    + GetUninitializedObject()
}

class "SerializationDebuggerWindow" {
    - DrawTopBar()
    - CreateMenuTree()
    - DrawSerializationInfoTree()
    - DrawInfos()
    - DrawGettingStartedHelp()
    + OnEnable()
    - <DrawTopBar>b__6_6()
}

class "TypeSettings" {
    + IsDefault()
}

class "SerializedTypeSettingsDictionary" {
    + OnBeforeSerialize()
    + OnAfterDeserialize()
}

class "SerializedTypePriorityDictionary" {
    + OnBeforeSerialize()
    + OnAfterDeserialize()
}

class "SerializedStringHashSet" {
    + OnBeforeSerialize()
    + OnAfterDeserialize()
}

class "TypeRegistryUserConfig" {
    + OpenEditor()
    + SetVisibility()
    + IsVisible()
    + IsIllegal()
    + SetIllegal()
    + TryGetSettings()
    + GetPriority()
    + IsModified()
    + SetSettings()
    + RemoveSettings()
    + HandleDefaultSettings()
    + SetPriority()
    + ResetType()
}

class "AOTGenerationConfig" {
    + ShouldAutomationGeneration()
    - GenericVariantsTitleGUI()
    - SortTypes()
    - ScanProjectButton()
    + ScanProject()
    - RegisterTypes()
    - DrawTopInfoBox()
    - DrawWarning()
    - GenerateDLLButton()
    + GenerateDLL()
    + GenerateDLL()
    - OnGUIInitializeTypeEntries()
    + GetAOTSupportedTypes()
    - InitializeTypeEntries()
}

class "PreBuildAOTAutomation" {
    + OnPreprocessBuild()
    + OnPreprocessBuild()
}

class "PostBuildAOTAutomation" {
    + OnPostprocessBuild()
    + OnPostprocessBuild()
}

class "EditorOnlyModeConfig" {
    - TopMessage()
    + Update()
    - SetForceText()
    + DisableEditorOnlyMode()
    + EnableEditorOnlyMode()
    - EnableEditorOnlyMode()
    + IsEditorOnlyModeEnabled()
    + IsInSourceCode()
    - OnInspectorGUI()
    - TryThisNTimes()
    - SetPluginImportSettings()
    - HasDemos()
    - DeleteImportedDemosInfo()
    - DeleteImportedDemos()
    - GetDeleteImportedDemosBtnText()
    - <DisableEditorOnlyMode>b__19_0()
    - <EnableEditorOnlyMode>b__22_0()
}

class "GeneralDrawerConfig" {
    - ResizeExampleList()
    - DrawFlexibleSpace()
    - DrawButtonHeight()
    - ExampleButton_WithIcon()
    - ExampleButton_WithoutIcon()
    + ShowTypeRegistryUserConfig()
    + ResetToDefault()
    - GotoTargetTabName()
}

class "ImportSettingsConfig" {
    - Apply()
    - ApplyDelayed()
    + ApplyImportSettings()
    - DrawEditorOnlyMode()
    - DrawHeaderInfoBox()
    + GetRecommendedOption()
}

class "InspectorConfig" {
    - SuppressMissingEditorTypeErrorsMessage()
    - UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
    - UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
    + UpdateOdinEditors()
    + UpdateAndRefreshInspector()
    - BottomSpace()
}

class "InspectorTypeDrawingConfig" {
    + ResetToDefault()
    + GetAllDrawnTypesWithEntries()
    + UpdateCaches()
    + ClearEditorEntryForDrawnType()
    + SetEditorType()
    + HasEntryForType()
    + GetEditorType()
}

class "InspectorTypeDrawingConfigDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - DrawRootTypeGroup()
    - DrawTypeGroup()
    - DrawType()
}

class "ValidationComponentProvider" {
    + CreateComponent()
}

class "ValidationComponent" {
    + Dispose()
    + GetValidators()
    + Reset()
    + ValidateProperty()
}

class "PropertyContext`1" {
    + ToString()
}

class "PropertyContextContainer" {
    - TryGetGlobalConfig()
    + GetGlobal()
    + GetGlobal()
    + GetGlobal()
    + GetPersistent()
    + GetPersistent()
    + SwapContext()
}

class "BakedDrawerChain" {
    + MoveNext()
    + GetEnumerator()
    + Reset()
    + Rebake()
}

class "DefaultDrawerChainResolver" {
    + GetDrawerChain()
}

class "ListDrawerChain" {
    + MoveNext()
    + Reset()
}

class "AliasGetterSetter`4" {
    + GetValue()
    + GetValue()
    + SetValue()
    + SetValue()
}

class "GetterSetter`2" {
    + GetValue()
    + GetValue()
    + SetValue()
    + SetValue()
}

class "InspectorPropertyInfo" {
    + ToString()
    + GetAttribute()
    + GetAttribute()
    + GetAttributes()
    + GetGroupInfos()
    + GetMemberInfo()
    + GetMemberInfos()
    + GetGetterSetter()
    + GetMethodDelegate()
    + TryGetStrongGetterSetter()
    + GetEditableAttributesList()
    + CreateCopy()
    + UpdateOrderFromAttributes()
}

class "InspectorProperty" {
    + GetComponent()
    + MarkSerializationRootDirty()
    + RecordForUndo()
    + TryGetTypedValueEntry()
    + GetAttribute()
    + GetAttribute()
    + GetAttributes()
    + ToString()
    + GetActiveDrawerChain()
    - GetActiveDrawerChain()
    + RefreshSetup()
    - RefreshSetup()
    - CreateComponents()
    - RefreshProcessedAttributes()
    + OnStateUpdate()
    + Draw()
    + Draw()
    + PushDraw()
    + IncrementDrawerChainIndex()
    + PopDraw()
    + IsReachableFromRoot()
    + NextProperty()
    + FindParent()
    + FindChild()
    + ClearDrawCount()
    + Update()
    - UpdateStates()
    - GetNewStateUpdaters()
    + PopulateGenericMenu()
    + IsChildOf()
    + IsParentOf()
    - UpdateValueEntry()
    + Dispose()
    + CleanForCachedReuse()
    - DisposeExistingSetup()
}

class "PrefabModificationHandler" {
    + Update()
    - RebuildUnityPropertyModificationsLookup()
    + CleanForCachedReuse()
    + Dispose()
    - TargetHasRegisteredModificationsWaitingForApply()
    + GetUnityPropertyModification()
    + GetPrefabModificationType()
    - PrivateGetPrefabModificationType()
    + RegisterPrefabListLengthModification()
    + RegisterPrefabValueModification()
    + RegisterPrefabDictionaryDeltaModification()
    + RegisterPrefabDictionaryRemoveKeyModification()
    + RegisterPrefabDictionaryAddKeyModification()
    + RemovePrefabDictionaryModification()
    + RemovePrefabModification()
    - RemoveInvalidPrefabModifications()
    - RemovePrefabModificationsForInvalidIndices()
    - RemovePrefabModificationsForInvalidIndices()
    + GetPrefabModifications()
}

class "PropertyChildren" {
    + ClearAndDisposeChildrenFromIndex()
    + ClearAndDisposeChildren()
    + Update()
    + Get()
    + Get()
    + Get()
    + GetPath()
    + Recurse()
    + GetExistingChildren()
    - GetInfo()
    - NeedsRefresh()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "PropertyState" {
    + Create()
    + Exists()
    + Exists()
    + Exists()
    + Exists()
    + Get()
    + GetLastLayout()
    + Set()
    - GetPersistentContext()
    + Update()
    + CleanForCachedReuse()
    + Reset()
    - LogChange()
    - SendStateChangedNotifications()
}

class "PropertyTree`1" {
    + GetUnitySerializedObjectNoUpdate()
    + ApplyChanges()
    + RegisterPropertyDirty()
    + UpdateTree()
    + ObjectIsReferenced()
    + GetReferenceCount()
    + GetPropertyAtPath()
    + GetPropertyAtPath()
    + GetPropertyAtUnityPath()
    + GetPropertyAtUnityPath()
    + GetPropertyAtPrefabModificationPath()
    + GetPropertyAtPrefabModificationPath()
    - TryFindChildMemberPropertyWithNameFromGroups()
    + GetUnityPropertyForPath()
    + EnumerateTree()
    + ReplaceAllReferences()
    + ForceRegisterObjectReference()
    + GetRootProperty()
    + DelayAction()
    + DelayActionUntilRepaint()
    + InvokeDelayedActions()
    + CleanForCachedReuse()
    + SetTargets()
    + SetSerializedObject()
    + DisposeInheritedStuff()
    + DisposeAndResetRootProperty()
    - <get_RootProperty>b__24_0()
    - <get_RootProperty>b__24_1()
    - <ApplyChanges>b__49_0()
    - <ApplyChanges>b__49_1()
}

class "MemberDefinedAttributeProcessor" {
    + CanProcessSelfAttributes()
    + ProcessChildMemberAttributes()
}

class "TypeDefinitionAttributeProcessor" {
    + CanProcessChildMemberAttributes()
    + CanProcessSelfAttributes()
    + ProcessSelfAttributes()
}

class "TypeDefinitionGroupAttributeProcessor" {
    + CanProcessChildMemberAttributes()
    + ProcessChildMemberAttributes()
}

class "DefaultOdinAttributeProcessorLocator" {
    + GetChildProcessors()
    + GetSelfProcessors()
}

class "DefaultOdinPropertyResolverLocator" {
    + GetResolver()
    + GetEmptyResolverInstance()
}

class "AtomAndEnumPropertyResolver`1" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + CanResolveForPropertyFilter()
    + GetChildCount()
    + GetChildInfo()
}

class "ButtonParameterPropertyResolver" {
    + CanResolveForPropertyFilter()
    + Initialize()
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildInfo()
    + CalculateChildCount()
}

class "EditableKeyValuePairResolver`2" {
    + GetSpecialChildPath()
    + Initialize()
    + GetChildInfo()
    + GetChildCount()
    + ChildNameToIndex()
    + ChildNameToIndex()
}

class "EmptyPropertyResolver" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildInfo()
    + CalculateChildCount()
    + CanResolveForPropertyFilter()
}

class "GroupPropertyResolver" {
    + CanResolveForPropertyFilter()
    + Initialize()
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildInfo()
    + CalculateChildCount()
}

class "HashSetResolver`2" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + ChildPropertyRequiresRefresh()
    + GetChildInfo()
    + Initialize()
    - GetElement()
    - SetElement()
    - EnsureUpdated()
    + Add()
    + Clear()
    + CollectionIsReadOnly()
    + GetChildCount()
    + Remove()
}

class "MultiDimensionalArrayPropertyResolver`1" {
    + CanResolveForPropertyFilter()
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildInfo()
    + GetChildCount()
}

class "DelayedAttributeProcessor`1" {
    + ProcessMemberProperties()
}

class "DelayedPropertyAttributeProcessor`1" {
    + ProcessMemberProperties()
}

class "ProcessedMemberPropertyResolver`1" {
    + Dispose()
    + GetPropertyInfos()
}

class "TypeInfoBoxPropertyProcessor`1" {
    + ProcessMemberProperties()
}

class "QueueResolver`2" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + ChildPropertyRequiresRefresh()
    + GetChildInfo()
    + Initialize()
    - GetElement()
    - SetElement()
    - EnsureUpdated()
    + Add()
    + Clear()
    + CollectionIsReadOnly()
    + GetChildCount()
    + Remove()
    + InsertAt()
    + RemoveAt()
}

class "RectPropertyResolver" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildInfo()
    + GetChildCount()
}

class "StackResolver`2" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + ChildPropertyRequiresRefresh()
    + GetChildInfo()
    + Initialize()
    - GetElement()
    - SetElement()
    - EnsureUpdated()
    + Add()
    + Clear()
    + CollectionIsReadOnly()
    + GetChildCount()
    + Remove()
    + InsertAt()
    + RemoveAt()
}

class "StaticInspectorSerializationBackend" {
    + CanSerializeMember()
    + CanSerializeType()
}

class "StaticRootPropertyResolver`1" {
    + GetPropertyInfos()
    - Order()
    - Filter()
}

class "StrongCollectionResolver`2" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + ChildPropertyRequiresRefresh()
    + GetChildInfo()
    + Initialize()
    - GetElement()
    - SetElement()
    - EnsureUpdated()
    + Add()
    + Clear()
    + CollectionIsReadOnly()
    + GetChildCount()
    + Remove()
    + InsertAt()
    + RemoveAt()
}

class "StrongDictionaryPropertyResolver`3" {
    + Initialize()
    + TryGetRedirectedProperty()
    + GetSpecialChildPath()
    + GetKey()
    + GetChildInfo()
    - CreateGetter()
    - CreateSetter()
    + GetChildCount()
    + OnCollectionChangesApplied()
    + Add()
    + Remove()
    + RemoveKey()
    + Set()
    + Clear()
    + CollectionIsReadOnly()
    - HandleAddSetPrefabValueModification()
    - EnsureUpdated()
    - Update()
    + ChildNameToIndex()
    + ChildNameToIndex()
}

class "StrongListPropertyResolver`2" {
    + Initialize()
    + GetChildInfo()
    + ChildPropertyRequiresRefresh()
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildCount()
    + Add()
    + InsertAt()
    + Remove()
    + RemoveAt()
    + Clear()
    + CollectionIsReadOnly()
    - ReplaceArray()
    - ReplaceArrayRecursive()
}

class "UnityObjectPropertyResolver`1" {
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildInfo()
    + GetChildCount()
    + CanResolveForPropertyFilter()
}

class "WeakListPropertyResolver`1" {
    + GetChildInfo()
    + ChildPropertyRequiresRefresh()
    + ChildNameToIndex()
    + ChildNameToIndex()
    + GetChildCount()
    + Add()
    + InsertAt()
    + Remove()
    + RemoveAt()
    + Clear()
    + CollectionIsReadOnly()
}

class "NoneSerializationBackend" {
    + ToString()
    + CanSerializeMember()
    + CanSerializeType()
}

class "UnityClassicSerializationBackend" {
    + ToString()
    + CanSerializeMember()
    + CanSerializeType()
}

class "UnityPolymorphicSerializationBackend" {
    + ToString()
    + CanSerializeMember()
    + CanSerializeType()
}

class "OdinSerializationBackend" {
    + ToString()
    + CanSerializeMember()
    + CanSerializeType()
}

class "DefaultStateUpdaterLocator" {
    + GetStateUpdaters()
    + GetEmptyUpdaterInstance()
}

class "PropertyValueCollection`1" {
    + GetEnumerator()
    + MarkClean()
    + RevertUnappliedValues()
    + CopyTo()
    + GetWeakValue()
    + SetWeakValue()
    + Contains()
    + IndexOf()
    - System.Collections.Generic.IList<TValue>.IndexOf()
    - System.Collections.Generic.IList<TValue>.Insert()
    - System.Collections.Generic.IList<TValue>.RemoveAt()
    - System.Collections.Generic.ICollection<TValue>.Add()
    - System.Collections.Generic.ICollection<TValue>.Clear()
    - System.Collections.Generic.ICollection<TValue>.Contains()
    - System.Collections.Generic.ICollection<TValue>.CopyTo()
    - System.Collections.Generic.ICollection<TValue>.Remove()
    - System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
    + ForceSetValue()
    + ForceSetValue()
    + ForceMarkDirty()
    - MarkDirty()
}

class "PropertyValueCollectionAlias`2" {
    + GetEnumerator()
    + MarkClean()
    + RevertUnappliedValues()
    + Contains()
    + IndexOf()
    + CopyTo()
    + GetWeakValue()
    + SetWeakValue()
    - System.Collections.Generic.IList<TValue>.IndexOf()
    - System.Collections.Generic.IList<TValue>.Insert()
    - System.Collections.Generic.IList<TValue>.RemoveAt()
    - System.Collections.Generic.ICollection<TValue>.Add()
    - System.Collections.Generic.ICollection<TValue>.Clear()
    - System.Collections.Generic.ICollection<TValue>.Contains()
    - System.Collections.Generic.ICollection<TValue>.CopyTo()
    - System.Collections.Generic.ICollection<TValue>.Remove()
    - System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
    + ForceSetValue()
    + ForceSetValue()
    + ForceMarkDirty()
}

class "PropertyValueEntry`2" {
    + GetMostPreciseContainedType()
    + Initialize()
    + UpdateValues()
    + GetValueState()
    + ApplyChanges()
    - GetParent()
    + SetActualValueImplementation()
}

class "PropertyValueEntryAlias`2" {
    + ApplyChanges()
    + Update()
    + ValueTypeValuesAreEqual()
    + SetActualValue()
    - Sirenix.OdinInspector.Editor.IValueEntryActualValueSetter<TValue>.SetActualValue()
    + ValueIsPrefabDifferent()
    + ValueIsPrefabDifferent()
    + Dispose()
}

class "UnityPropertyGetterSetter`2" {
    + GetValue()
    + GetValue()
    + SetValue()
    + SetValue()
}

class "DrawWithUnityAttributeDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    + Dispose()
    - <Initialize>b__3_0()
    - <DrawPropertyLayout>b__4_0()
}

class "WrapAttributeInt16Drawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeInt32Drawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeInt64Drawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeFloatDrawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeDoubleDrawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeDecimalDrawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeVector2Drawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeVector3Drawer" {
    + DrawPropertyLayout()
}

class "WrapAttributeVector4Drawer" {
    + DrawPropertyLayout()
}

class "InvalidAttributeNotificationDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
}

class "OdinEditor" {
    + DrawDefaultInspector()
    + DrawUnityInspector()
    + OnInspectorGUI()
    + DrawTree()
    + GetInspectorWindow()
    + MockUnityGenericInspector()
    + OnDisable()
    + OnEnable()
    - DrawOdinInspector()
    - RepaintWarmup()
    - IsMissingMonoBehaviourTarget()
    - MissingMonoBehaviourGUI()
}

class "AbstractTypeUnityPropertyDrawer`3" {
    + DrawPropertyLayout()
    + Dispose()
    - <DrawPropertyLayout>b__10_0()
    - <DrawPropertyLayout>b__10_1()
}

class "UnityPropertyAttributeDrawer`3" {
    + Initialize()
    + DrawPropertyLayout()
    + Dispose()
    - <DrawPropertyLayout>b__13_0()
    - <DrawPropertyLayout>b__13_1()
}

class "UnityPropertyDrawer`2" {
    + DrawPropertyLayout()
    + Dispose()
}

class "AssemblyImportSettingsAutomation" {
    - UnityEditor.Build.IPreprocessBuildWithReport.OnPreprocessBuild()
}

class "AnimationCurveAtomHandler" {
    + CreateInstance()
    + CompareImplementation()
    + CopyImplementation()
}

class "GradientAtomHandler" {
    + CreateInstance()
    + CompareImplementation()
    + CopyImplementation()
}

class "EditorPrefBool" {
    + GetValue()
    + SetValue()
}

class "EditorPrefString" {
    + GetValue()
    + SetValue()
}

class "EditorPrefFloat" {
    + GetValue()
    + SetValue()
}

class "EditorPrefInt" {
    + GetValue()
    + SetValue()
}

class "EditorPrefEnum`1" {
    + GetValue()
    + SetValue()
}

class "EmittedAnimationCurveContainer" {
    + GetValue()
    + SetValue()
}

class "EmittedGradientContainer" {
    + GetValue()
    + SetValue()
}

class "FastMemberComparer" {
    + Equals()
    + GetHashCode()
}

class "InspectorPropertyValueGetter`1" {
    + GetValue()
    + GetValues()
}

class "PropertySearchFilter" {
    + UpdateSearch()
    + UpdateSearch()
    + Search()
    + Search()
    + IsMatch()
    + HasSearchFlag()
    + DrawSearchResults()
    + DrawSearchResult()
    + DrawDefaultSearchFieldLayout()
    - <DrawDefaultSearchFieldLayout>b__24_0()
}

class "SirenixPreferencesWindow" {
    + BuildMenuTree()
    + DrawMenu()
    + OnEnable()
    + GotoPreferencesTab()
}

class "StringMemberHelper" {
    + GetString()
    + GetString()
    + GetString()
    + ForceGetString()
    + ForceGetString()
    + ForceGetString()
}

class "OdinEditorWindow" {
    + GetTarget()
    + GetTargets()
    + EnableAutomaticHeightAdjustment()
    - UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
    - UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
    - CreateGUI()
    + OnImGUI()
    + OnGUI()
    + DrawEditors()
    + EnsureEditorsAreReady()
    + UpdateEditors()
    - InitializeIfNeeded()
    + Initialize()
    - SelectionChanged()
    + OnEnable()
    + DrawEditor()
    + DrawEditorPreview()
    + OnDisable()
    + OnDestroy()
    - Cleanup()
    + OnEndDrawEditors()
    + OnBeginDrawEditors()
    + OnAfterDeserialize()
    + OnBeforeSerialize()
    + ShowToast()
}

class "OdinMenuItem" {
    + Deselect()
    + Select()
    + GetChildMenuItemsRecursive()
    + GetParentMenuItemsRecursive()
    + GetFullPath()
    + SetObjectInstance()
    + SetObjectInstances()
    + DrawMenuItems()
    + DrawMenuItem()
    + OnDrawMenuItem()
    + UpdateMenuTreeRecursive()
    + UpdateFlatMenuItemNavigation()
    + CountVisibleRecursively()
    + AllocateRectRecursivelyForScrollView()
    + HandleMouseEvents()
    + Remove()
    + _IsVisible()
    + SetChildMenuItems()
    - GetAllNextMenuItems()
    - GetAllPreviousMenuItems()
    - ParentMenuItemsBottomUp()
    - EnsureInitialized()
    - <get_IconGetter>b__100_0()
}

class "OdinMenuStyle" {
    + SetHeight()
    + SetOffset()
    + SetIndentAmount()
    + SetIconSize()
    + SetIconOffset()
    + SetNotSelectedIconAlpha()
    + SetIconPadding()
    + SetDrawFoldoutTriangle()
    + SetTriangleSize()
    + SetTrianglePadding()
    + SetAlignTriangleLeft()
    + SetBorders()
    + SetBorderPadding()
    + SetBorderAlpha()
    + SetSelectedColorDarkSkin()
    + SetSelectedColorLightSkin()
    + Clone()
    - CopyCSharpSnippet()
}

class "OdinMenuTree" {
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + AddRange()
    + AddRange()
    + FocusSearchField()
    - SetupAutoScroll()
    + ScrollToMenuItem()
    + EnumerateTree()
    + EnumerateTree()
    + EnumerateTree()
    + DrawMenuTree()
    - HandleActiveMenuTreeState()
    + MenuTreeActivationZone()
    + MarkDirty()
    + MarkLayoutChanged()
    + DrawSearchToolbar()
    - DrawSearchField()
    + UpdateMenuTree()
    + HandleKeybaordMenuNavigation()
    + HandleKeyboardMenuNavigation()
    - System.Collections.IEnumerable.GetEnumerator()
    - <SetupAutoScroll>b__61_0()
    - <DrawSearchToolbar>b__71_1()
}

class "OdinMenuTreeDrawer" {
    + DrawPropertyLayout()
}

class "OdinMenuTreeSelection" {
    + Add()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + IndexOf()
    + Remove()
    + RemoveAt()
    + ConfirmSelection()
    - ApplyChanges()
    - System.Collections.Generic.IList<Sirenix.OdinInspector.Editor.OdinMenuItem>.Insert()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "EnumSelector`1" {
    + BuildSelectionTree()
    - DrawEnumInfo()
    - DrawEnumItem()
    - SpaceToggleEnumFlag()
    + DefaultWindowWidth()
    - DrawEnumFlagItem()
    - ToggleEnumFlag()
    + GetCurrentSelection()
    + SetSelection()
    - <BuildSelectionTree>b__15_2()
    - <BuildSelectionTree>b__15_3()
    - <BuildSelectionTree>b__15_4()
}

class "GenericSelector`1" {
    + DrawSelectionTree()
    - DrawCheckboxMenuItems()
    + SetSelection()
    + SetSelection()
    + IsValidSelection()
    + GetCurrentSelection()
    + BuildSelectionTree()
}

class "TypeSelector" {
    + IsValidSelection()
    + BuildSelectionTree()
    - GetTypeNamePath()
    + DefaultWindowWidth()
    - ShowTypeInfo()
    + SetSelection()
    - <BuildSelectionTree>b__13_1()
}

class "TypeSelectorV2" {
    + ShowInAux()
    + DefaultWindowWidth()
    + BuildSelectionTree()
    + DrawSelectionTree()
    + DrawToolbar()
    + DrawToolbarButtons()
    - GetTypePath()
    + AddType()
    - TryGetItemWithName()
    - GetOrMakePathItem()
    - SortItemsByPriorityAndName()
    - CompareItemNameAndPriority()
    - ShowTypeInfo()
}

class "GlobalPersistentContext`1" {
    + Deserialize()
    + Serialize()
    + ToString()
}

class "LocalPersistentContext`1" {
    + UpdateLocalValue()
}

class "IndexedDictionary" {
    + Get()
    + GeContextKey()
    + Add()
    + Clear()
    + RemoveAt()
    + TryGetValue()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    + Serialize()
    + Deserialize()
}

class "PersistentContextCache" {
    - EnsureIsInitialized()
    - OnPlaymodeChanged()
    + GetContext()
    - DrawCacheSize()
    - OnDomainUnload()
    - LoadCache()
    - SaveCache()
    + DeleteCache()
    - TryGetContext()
}

class "SirenixPathLookupScriptableObjectEditor" {
    + OnInspectorGUI()
}

class "UndoTrackerStateContainer" {
    + OnAfterDeserialize()
    + OnBeforeSerialize()
}

class "AcceptEULAWindow" {
    - DrawEULA()
    - Agree()
}

class "AttributesExampleWindow" {
    + DrawEditor()
    + BuildMenuTree()
    - SelectionChanged()
    + OnDisable()
    + OnDestroy()
}

class "CheckForUpdatesWindow" {
    - OnEnable()
    - OnGUI()
}

class "EditorIconsOverview" {
    + BuildSelectionTree()
}

class "OdinInspectorAboutWindow" {
    - OnGUI()
}

class "SerializationInfoMenuItem" {
    + OnDrawMenuItem()
    - DrawTheIcon()
}

class "StaticInspectorWindow" {
    - SelectType()
    + OnImGUI()
    - DrawFirstToolbar()
    - DrawSecondToolbar()
    - DrawSearchField()
    + DrawEditor()
    - DrawGettingStartedHelp()
    - DrawTree()
    - DrawProperty()
    + OnDisable()
    - <SelectType>b__18_0()
}

class "TypeRegistryUserConfigWindow" {
    + OnEnable()
    - Awake()
    + GetTargets()
    + OnImGUI()
    - RebuildMenuTree()
    + BuildMenuTree()
    - NamespaceCategorySelector()
    - IsTypeVisible()
    - <NamespaceCategorySelector>b__35_0()
}

class "UnitOverviewWindow" {
    + OnEnable()
    + OnDisable()
    + BuildMenuTree()
    + DrawEditor()
    - DrawHeader()
    - DrawTable()
    - DrawBadge()
    - DrawMenuCollapseAndExpandButton()
    - SelectionChanged()
}

class "OdinFeedbackWindow" {
    + Send()
    - ReceiveReply()
    - DrawMessageBox()
    - DrawWaitingForReply()
    - DrawSuccess()
}

class "GettingStartedPage" {
    + DrawFooter()
    + DrawPage()
    + GoBack()
    + EnterPage()
    + BeginScrollableLayoutPage()
    + EndScrollableLayoutPage()
}

class "ButtonPage" {
    + EnterPage()
}

class "TutorialPage" {
    + DrawPage()
}

class "WizardPage" {
    + EnterPage()
    + DrawPage()
    + DrawFooter()
    + GoToNextStage()
    + GoBack()
}

class "GettingStartedWindow" {
    + OnEnable()
    + OnImGUI()
    - UpdateThings()
    - DrawPage()
    - DrawToolbar()
    - DrawFancyOdinSelector()
}

class "ColorValueResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateResolverFunc()
}

class "ExpressionValueResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateResolverFunc()
}

class "MemberReferenceValueResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateResolverFunc()
}

class "MethodPropertyValueResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateResolverFunc()
}

class "ValueResolverFunc`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValueResolver`1" {
    + GetValue()
    + GetWeakValue()
}

class "DefaultValidationMemberSelector" {
    + SelectMembers()
}

class "DefaultValidatorLocator" {
    + PotentiallyHasValidatorsFor()
    + GetGlobalValidator()
    + GetGlobalValidators()
    + GetSceneValidators()
    + GetValidators()
    + GetSearchResults()
    + GetMergedSearchResults()
    + TryGetSceneValidator()
}

class "ResultItemMetaDataDrawerPropertyResolver" {
    + GetPropertyInfos()
    - MakeGetterSetter()
}

class "SerializationPolicyMemberSelector" {
    + SelectMembers()
}

class "ValidationDrawer`1" {
    + CanDrawValueProperty()
    + Initialize()
    + DrawPropertyLayout()
    + Dispose()
    - OnUndoRedoPerformed()
    - OnValueChanged()
    - OnChildValueChanged()
    - DrawMessageBoxWithButton()
    - CreateIssueFixerTrees()
}

class "ValidationUserActionPropDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValidationUserActionAssetPathDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Fix" {
    + CreateIdentifier()
    + CreateIdentifier()
    + CreateEditorObject()
}

class "ValidationResult" {
    + AddError()
    + AddWarning()
    + Add()
    + Add()
    + Explode()
    + IsMatch()
    + RerunValidation()
    + CreateCopy()
    + FirstItemExists()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.Validation.ResultItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.Generic.ICollection<Sirenix.OdinInspector.Editor.Validation.ResultItem>.Add()
    - System.Collections.Generic.ICollection<Sirenix.OdinInspector.Editor.Validation.ResultItem>.Clear()
    - System.Collections.Generic.ICollection<Sirenix.OdinInspector.Editor.Validation.ResultItem>.Contains()
    - System.Collections.Generic.ICollection<Sirenix.OdinInspector.Editor.Validation.ResultItem>.CopyTo()
    - System.Collections.Generic.ICollection<Sirenix.OdinInspector.Editor.Validation.ResultItem>.Remove()
}

class "AssetsOnlyValidator`1" {
    + Validate()
}

class "ChildGameObjectsOnlyValidator`1" {
    + Validate()
}

class "CrossSceneReferenceValidator" {
    + Validate()
    + CanValidateProperty()
}

class "DetailedInfoBoxValidator" {
    + Initialize()
    + Validate()
}

class "DisallowModificationsInAttributeValidator" {
    + Validate()
}

class "FilePathValidator" {
    + Initialize()
    + Validate()
}

class "FolderPathValidator" {
    + Initialize()
    + Validate()
}

class "InfoBoxValidator" {
    + Initialize()
    + Validate()
}

class "MaxValueValidator`1" {
    + CanValidateProperty()
    + Initialize()
    + Validate()
}

class "MinMaxSliderValidator`1" {
    + CanValidateProperty()
    + Initialize()
    + Validate()
}

class "MinValueValidator`1" {
    + CanValidateProperty()
    + Initialize()
    + Validate()
}

class "RangeValidator`1" {
    + CanValidateProperty()
    + Validate()
    - <Validate>b__3_0()
}

class "PropertyRangeValidator`1" {
    + CanValidateProperty()
    + Initialize()
    + Validate()
    - <Validate>b__6_0()
}

class "RequireComponentValidator`1" {
    + CanValidateProperty()
    + Validate()
    - Validate()
    - AddMissingComponents()
}

class "RequiredInValidator`1" {
    + Initialize()
    + Validate()
    - IsValid()
    - <Validate>b__3_0()
}

class "RequiredListLengthValidator" {
    + Initialize()
    + CanValidateProperty()
    + Validate()
}

class "RequiredValidator`1" {
    + Initialize()
    + Validate()
    - IsValid()
    - <Validate>b__2_0()
}

class "SceneObjectsOnlyValidator`1" {
    + Validate()
}

class "SelfValidator`1" {
    + CanValidateProperty()
    + Validate()
}

class "TypeRegistryIllegalInstanceValidator`1" {
    + CanValidateProperty()
    + Validate()
}

class "ValidateInputAttributeValidator`1" {
    + Initialize()
    + Validate()
}

class "ECSModuleDefinition" {
    + CheckSupportsCurrentEnvironment()
}

class "UnityAddressablesModuleDefinition" {
    + CheckSupportsCurrentEnvironment()
}

class "UnityLocalizationModuleDefinition" {
    + CheckSupportsCurrentEnvironment()
}

class "UnityMathematicsModuleDefinition" {
    + CheckSupportsCurrentEnvironment()
}

class "ModuleData" {
    + ToManifest()
}

class "ModuleDataManager" {
    + SaveData()
    + HasData()
    + LoadData()
}

class "ModuleManager" {
    + Refresh()
    - AskActivationAutomationQuestion()
    - AskUpdateAutomationQuestion()
    + PackageAllModules()
    + GetModule()
    + ContainsModule()
}

class "OdinModuleConfig" {
    + GetConfig()
    + GetConfig()
    + SaveAssetChanges()
    - OnEnable()
    - OnDisable()
    - SelectLastSelectedItem()
    - OnInspectorGUI()
    - CreateModuleTree()
    - <OnInspectorGUI>b__25_0()
}

class "DerivedTypeMatcher" {
    + Match()
}

class "ExactTypeMatcher" {
    + Match()
}

class "GenericParameterInferenceTypeMatcher" {
    + Match()
    - TryInferGenericParameters()
}

class "GenericSingleTargetTypeMatcher" {
    + Match()
}

class "NestedInSameGenericTypeTypeMatcher" {
    + Match()
}

class "TargetsSatisfyGenericParameterConstraintsTypeMatcher" {
    + Match()
}

class "TypeMatchIndexingRule" {
    + Process()
    + ToString()
}

class "TypeMatchRule" {
    + Match()
    + ToString()
}

class "TypeSearchIndex" {
    + GetAllCachedTargets()
    + AddIndexedType()
    + AddIndexedTypeUnsorted()
    + AddIndexedTypes()
    + ClearResultCache()
    + GetMatches()
    + GetMatches()
    + GetMatches()
    - FindAllMatches()
    - ProcessInfo()
    + AddDefaultMatchRules()
    + AddDefaultMatchCreators()
    + AddDefaultIndexingRules()
}

class "OdinGUIScrollView" {
    + SetBounds()
    + SetBoundsForCurrentAllocations()
    + BeginAllocations()
    + EndAllocations()
    + Space()
    + AllocateRect()
    + ReallocateRect()
    + BeginScrollView()
    + EndScrollView()
    + GetClipRect()
    + GetViewClipRect()
    + BeginClip()
    + EndClip()
    + ScrollTo()
    + ScrollTo()
    + HandleMiddleMouseDrag()
    + GetReferencedObject()
    + Resize()
    + ResizeToFit()
    + GetVisibleItems()
    - HandleSmoothScrolling()
}

class "ProjectSettingAssetRef`1" {
    + GetLocalValue()
    + SetLocalValue()
    + Draw()
}

class "ProjectSettingString" {
    + GetLocalValue()
    + SetLocalValue()
    + Draw()
}

class "ProjectSettingInt" {
    + GetLocalValue()
    + SetLocalValue()
    + Draw()
}

class "ProjectSettingBool" {
    + GetLocalValue()
    + SetLocalValue()
    + Draw()
}

class "ProjectSettingFloat" {
    + GetLocalValue()
    + SetLocalValue()
    + Draw()
}

class "ProjectSettingEnum`1" {
    + GetLocalValue()
    + SetLocalValue()
    + Draw()
}

class "ProjectSettingAttributeProcessor`2" {
    + ProcessChildMemberAttributes()
    + ProcessSelfAttributes()
}

class "PathLookup`1" {
    + BeginRebuild()
    + FinishRebuild()
    + CleanUp()
    + TryGetValue()
    + AddValue()
}

class "WeakReferenceEventListener`1" {
    + InvokeEvent()
    + SubscribeListener()
    + DesubscribeListener()
}

class "SdfIconOverviewWindow" {
    - OnEnable()
    - OnGUI()
    - <OnGUI>b__18_0()
}

class "DrawWithVisualElementsAttributeDrawer`1" {
    + CanDrawAttributeValueProperty()
    + Initialize()
    + DrawPropertyLayout()
    + Dispose()
    - <Initialize>b__4_0()
}

class "OdinImGuiElement" {
    + GetSize()
    + OnAdd()
}

class "OdinAttributeExampleItem" {
    + Draw()
    + OnDeselected()
}

class "AttributeExamplePreview" {
    + Draw()
    + DrawCode()
    + OnDeselected()
}

class "AssetListExamples" {
    - HasRigidbodyComponent()
}

class "BigTabGroupExample" {
    + Hello()
    + World()
    + And()
    + Such()
    + SubButtonA()
    + SubButtonB()
    + SubButtonC()
}

class "BigTitleGroupExample" {
    + FirstButton()
    + SecondButton()
}

class "ButtonExamples" {
    - DefaultSizedButton()
    + ExpressionLabel()
    - NamedButton()
    - SmallButton()
    - MediumSizedButton()
    - FanzyButton1()
    - FanzyButton2()
    - FanzyButton3()
    - GiganticButton()
    - CustomSizedButton()
    - IconButton01()
    - IconButton02()
}

class "ButtonGroupExamples" {
    - A()
    - B()
    - C()
    - D()
    - E()
    - F()
}

class "ButtonsInBoxesExample" {
    + Button1()
    + Button2()
    + Accept()
    + Cancel()
}

class "ButtonWithParametersExamples" {
    - Default()
    - Default()
    - FoldoutButton()
    - FoldoutButton()
    - Full()
    - Full()
    - CompactExpanded()
    - FullExpanded()
}

class "ChangingEditorToolExample" {
    - SetCurrentTool()
}

class "ColorPaletteExamples" {
    - FetchColorPalettes()
}

class "CustomContextMenuExamples" {
    - SayHello()
}

class "CustomValueDrawerExamples" {
    - MyCustomDrawerInstance()
    - MyCustomDrawerAppendRange()
    - MyCustomDrawerArrayNoLabel()
}

class "DelayedPropertyExample" {
    - OnValueChanged()
}

class "DictionaryExamples" {
    - CreateData()
}

class "DisableInInlineEditorExample" {
    - CreateData()
    - CleanupData()
}

class "GUIColorExamples" {
    - Apply()
    - Cancel()
}

class "HideDuplicateReferenceBoxExamples" {
    + CreateData()
    - MessageBox1()
    - MessageBox2()
    - MessageBox3()
}

class "HideMonoScriptExample" {
    - CreateData()
    - CleanupData()
}

class "IconButtonExamples" {
    - IconButtonLeftOfText()
    - IconButtonRightOfText()
    - IconButtonLeftEdge()
    - IconButtonRightEdge()
    - DontStretch()
    - DontStretchAndAlign()
}

class "InlineButtonExamples" {
    - A()
    - B()
    - C()
}

class "InlineEditorExamples" {
    - CreateData()
    - CleanupData()
}

class "InlineEditorModesExample" {
    - CreateData()
    - CleanupData()
}

class "ListExamples" {
    - DrawIntroInfoBox()
    - BeginDrawListElement()
    - EndDrawListElement()
    - DrawRefreshButton()
    - CustomAddFunction()
}

class "OnCollectionChangedExamples" {
    + Before()
    + After()
}

class "OnInspectorGUIExamples" {
    - DrawPreview()
    - OnInspectorGUI()
}

class "OnValueChangedExamples" {
    - CreateMaterial()
}

class "PolymorphicDrawerSettingsExample" {
    - CreateInstance()
}

class "PreviewFieldExamples" {
    - CreateData()
    - ConfigureGlobalPreviewFieldSettings()
}

class "ProgressBarExamples" {
    - GetHealthBarColor()
    - GetStackedHealthColor()
    - GetStackHealthBackgroundColor()
}

class "PropertyTooltipExamples" {
    - ButtonWithTooltip()
}

class "ResponsiveButtonGroupExample" {
    - OpenDockableWindowExample()
    - Space1()
    + Foo()
    + Bar()
    + Baz()
    - Space2()
    + Foo1()
    + Foo2()
    + LongesNameWins()
    + Foo4()
    + Foo5()
    + Foo6()
    - Space3()
    + Bar1()
    + Bar2()
    + Bar3()
    + Bar4()
    + Bar5()
    + Bar6()
    - Space4()
    + Baz1()
    + Baz2()
    + Baz3()
}

class "MyDockableGameDashboard" {
    + PepperPepperPepper()
    + Thud()
    + WaldoWaldo()
    + Fred()
    + FooFoo()
    + BarBar()
    + BazBazBaz()
    + QuxQux()
    + QuuxQuuxQuux()
    + CorgeCorge()
    + Uier()
    + A()
    + B()
    + C()
    + Henk()
    + Def()
    + DefDefDef()
    + FooPepper()
    + FooThud()
    + WaldoFoo()
    + FredFoo()
    + Fooooo()
    + BarFoo()
    + BazFoo()
    + FooQux()
    + QuuxFoo()
    + UierFoo()
    + CorgeFoo()
    + FooGrapl()
    + FooDef()
    + DefFoo()
}

class "ShowAndHideInInlineEditorExample" {
    - CreateData()
    - CleanupData()
}

class "TableMatrixExamples" {
    - CreateData()
}

class "TitleExamples" {
    + DoNothing()
}

class "TitleGroupExamples" {
    - IntButton()
    - StringButton()
    - VectorButton()
}

class "TransposeTableMatrixExample" {
    - CreateData()
}

class "TypeFilterExamples" {
    + GetFilteredTypeList()
}

class "TypeInfoBoxExample" {
    - CreateData()
    - CleanupData()
}

class "TypeSelectorSettingsExample" {
    - TypeFilter()
}

class "ValidateInputExamples" {
    - AlwaysFalse()
    - MustBeNull()
    - HasMeshRendererDefaultMessage()
    - HasMeshRendererDynamicMessage()
    - HasMeshRendererDynamicMessageAndType()
}

class "ValueDropdownExamples" {
    - GetListOfMonoBehaviours()
}

class "SyntaxHighlighter" {
    + ParseText()
    - ReadDeclaration()
    - ReadImplementation()
    - AppendDeclaration()
    - AppendMember()
    - AppendImplementation()
    - AppendToken()
    - Colorize()
    - Colorize()
    - Append()
    - Append()
    - AppendWhitespace()
}

class "AssetListAttributeDrawer`2" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    + Dispose()
    - <PopulateGenericMenu>b__6_0()
}

class "AssetListAttributeOnSingleObjectDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    - PopulateListRoutine()
    + EnsureListPopulation()
}

class "AssetSelectorAttributeDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    - AddResult()
    - DrawDropdown()
    - OpenSelector()
    - ShowSelector()
    - CreateSelector()
    - GetCurrentValueName()
    - <Initialize>b__9_0()
    - <Initialize>b__9_1()
    - <Initialize>b__9_3()
    - <Initialize>b__9_5()
    - <Initialize>b__9_4()
    - <OpenSelector>b__14_0()
}

class "ChildGameObjectsOnlyAttributeDrawer`1" {
    + Initialize()
    - GetRoot()
    - ValidateCurrentValue()
    - GetGameObjectPath()
    + DrawPropertyLayout()
    - ListAddButton()
    - ShowSelector()
    - CreateSelector()
    - <Initialize>b__4_0()
    - <ListAddButton>b__10_0()
}

class "ColorPaletteAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - <DrawPropertyLayout>b__7_0()
    - <DrawPropertyLayout>b__7_1()
}

class "ColorUsage32AttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "ColorUsageAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "CustomContextMenuAttributeDrawer" {
    + PopulateGenericMenu()
    + Initialize()
    + DrawPropertyLayout()
}

class "CustomValueDrawerAttributeDrawer`1" {
    + CanDrawTypeFilter()
    + Initialize()
    + DrawPropertyLayout()
}

class "DelayedAttributeCharDrawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeStringDrawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeSByteDrawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeByteDrawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeInt16Drawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeUInt16Drawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeInt32Drawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeUInt32Drawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeInt64Drawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeUInt64Drawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeFloatDrawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeDoubleDrawer" {
    + DrawPropertyLayout()
}

class "DelayedAttributeDecimalDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeCharDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeStringDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeSByteDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeByteDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeInt16Drawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeUInt16Drawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeInt32Drawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeUInt32Drawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeInt64Drawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeUInt64Drawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeFloatDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeDoubleDrawer" {
    + DrawPropertyLayout()
}

class "DelayedPropertyAttributeDecimalDrawer" {
    + DrawPropertyLayout()
}

class "DetailedInfoBoxAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "DisplayAsStringAttributeDrawer`1" {
    + PopulateGenericMenu()
    + Initialize()
    + DrawPropertyLayout()
    - <PopulateGenericMenu>b__2_0()
    - <PopulateGenericMenu>b__2_1()
}

class "EnableGUIAttributeDrawer" {
    + DrawPropertyLayout()
}

class "EnumPagingAttributeDrawer`1" {
    + CanDrawTypeFilter()
    + DrawPropertyLayout()
}

class "EnumToggleButtonsAttributeDrawer`1" {
    + CanDrawTypeFilter()
    + Initialize()
    + DrawPropertyLayout()
}

class "FilePathAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "FixBrokenUnityObjectWrapperDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
}

class "FolderPathAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    + PopulateGenericMenu()
}

class "GUIColorAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "HeaderAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "HideIfGroupAttributeDrawer" {
    + DrawPropertyLayout()
}

class "HideLabelAttributeDrawer" {
    + DrawPropertyLayout()
}

class "IfAttributeHelper" {
    + GetValue()
}

class "IndentAttributeDrawer" {
    + DrawPropertyLayout()
}

class "InfoBoxAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "InlineButtonAttributeDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    - InvokeButton()
}

class "InlineEditorAttributeDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    - DrawPolymorphicObjectField()
    - DrawPolymorphicObjectField()
    - TryCreateInspectorElementAndSetClasses()
    - DrawEditor()
    - DoTheDrawing()
    - DrawPreview()
    - DrawAnimationClipEditorPreview()
    - UpdateEditors()
    - DestroyEditors()
    - System.IDisposable.Dispose()
}

class "InlinePropertyAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - <DrawPropertyLayout>b__3_0()
}

class "LabelTextAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "LabelWidthAttributeDrawer" {
    + DrawPropertyLayout()
}

class "MaxValueAttributeDrawer`1" {
    + CanDrawTypeFilter()
    + Initialize()
    + DrawPropertyLayout()
}

class "MinMaxSliderAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "MinValueAttributeDrawer`1" {
    + CanDrawTypeFilter()
    + Initialize()
    + DrawPropertyLayout()
}

class "MultiLineAttributeDrawer" {
    + DrawPropertyLayout()
}

class "MultiLinePropertyAttributeDrawer" {
    + DrawPropertyLayout()
}

class "NonSerializedShowInInspectorWarningAttributeDrawer" {
    + CanDrawAttributeProperty()
    + Initialize()
    + DrawPropertyLayout()
}

class "OdinSerializeAttributeWarningDrawer" {
    + CanDrawAttributeProperty()
    + Initialize()
    + DrawPropertyLayout()
}

class "OnCollectionChangedAttributeDrawer" {
    + CanDrawAttributeProperty()
    + Initialize()
    - OnBeforeChange()
    - OnAfterChange()
    + DrawPropertyLayout()
    + Dispose()
}

class "OnInspectorGUIAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "OnValueChangedAttributeDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    - OnUndoRedo()
    - TriggerAction()
    + Dispose()
}

class "PreviewFieldAttributeDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
}

class "ProgressBarAttributeByteDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeSbyteDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeShortDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeUshortDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeIntDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeUintDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeLongDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeUlongDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributeFloatDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributedoubleDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "ProgressBarAttributedecimalDrawer" {
    + DrawProgressBar()
    + ConvertToDouble()
}

class "PropertyRangeAttributeByteDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeDoubleDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeFloatDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeDecimalDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeInt16Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeInt32Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeInt64Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeSByteDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeUInt16Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeUInt32Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyRangeAttributeUInt64Drawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertySpaceAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "RangeAttributeByteDrawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeDoubleDrawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeFloatDrawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeDecimalDrawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeInt16Drawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeInt32Drawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeInt64Drawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeSByteDrawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeUInt16Drawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeUInt32Drawer" {
    + DrawPropertyLayout()
}

class "RangeAttributeUInt64Drawer" {
    + DrawPropertyLayout()
}

class "ShowDrawerChainAttributeDrawer" {
    + DrawPropertyLayout()
}

class "ShowIfGroupAttributeDrawer" {
    + DrawPropertyLayout()
}

class "ShowPropertyResolverAttributeDrawer" {
    + DrawPropertyLayout()
}

class "SpaceAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "SuffixLabelAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "TextAreaAttributeDrawer" {
    + DrawPropertyLayout()
}

class "TitleAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "ToggleAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "ToggleLeftAttributeDrawer" {
    + DrawPropertyLayout()
}

class "TooltipAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "PropertyTooltipAttributeDrawer" {
    + Initialize()
    + CanDrawAttributeProperty()
    + DrawPropertyLayout()
}

class "TypeFilterAttributeDrawer" {
    + CanDrawAttributeProperty()
    + Initialize()
    - ReloadDropdownCollections()
    + DrawPropertyLayout()
    - AddResult()
    - CreateInstance()
    - DrawDropdown()
    - OpenSelector()
    - ShowSelector()
    - CreateSelector()
    - GetCurrentValueName()
    - <Initialize>b__8_0()
    - <Initialize>b__8_1()
    - <OpenSelector>b__15_0()
}

class "UnitAttributeIntDrawer" {
    + DrawField()
}

class "UnitAttributeUIntDrawer" {
    + DrawField()
}

class "UnitAttributeLongDrawer" {
    + DrawField()
}

class "UnitAttributeULongDrawer" {
    + DrawField()
}

class "UnitAttributeFloatDrawer" {
    + DrawField()
}

class "UnitAttributeDoubleDrawer" {
    + DrawField()
}

class "UnitAttributeDecimalDrawer" {
    + DrawField()
}

class "UnityDecoratorAttributeDrawer`3" {
    + Dispose()
    + DrawPropertyLayout()
}

class "ValueDropdownAttributeDrawer" {
    + Initialize()
    - ReloadDropdownCollections()
    + DrawPropertyLayout()
    - AddResult()
    - DrawDropdown()
    - OpenSelector()
    - ShowSelector()
    - CreateSelector()
    - GetCurrentValueName()
    - <Initialize>b__11_0()
    - <Initialize>b__11_1()
    - <OpenSelector>b__17_0()
}

class "IValueDropdownEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "Vector2IntMinMaxAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Vector2IntDrawer" {
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
}

class "Vector3IntDrawer" {
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
}

class "Vector2IntResolver" {
    + GetPropertyInfos()
}

class "Vector3IntResolver" {
    + GetPropertyInfos()
}

class "BoxGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "ButtonGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "FoldoutGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "HorizontalGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - <Initialize>b__8_1()
}

class "ResponsiveButtonGroupAttributeDrawer" {
    + DrawPropertyLayout()
}

class "TabGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - GetClampedCurrentIndex()
    + OnSelfStateChanged()
}

class "TitleGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "ToggleGroupAttributeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "VerticalGroupAttributeDrawer" {
    + DrawPropertyLayout()
}

class "DefaultMethodDrawer" {
    + Initialize()
    + DrawPropertyLayout()
    - DrawBoxButton()
    - DrawCompactBoxButton()
    - DrawNormalButton()
    - DrawFoldoutButton()
    - DrawParameters()
    - InvokeButton()
    - InvokeDelegate()
    - InvokeMethodInfo()
    - <InvokeDelegate>b__33_0()
    - <InvokeMethodInfo>b__34_0()
}

class "FixUnityNullDrawer`1" {
    + CanDrawTypeFilter()
    + DrawPropertyLayout()
}

class "HideSerializableJsonDictionaryFromEditorWindowsInUnity2017Drawer`1" {
    + CanDrawTypeFilter()
    + DrawPropertyLayout()
}

class "NullableReferenceDrawer`1" {
    + Initialize()
    + PopulateGenericMenu()
    + DrawPropertyLayout()
    - DrawReferencePicker()
    - DrawField()
    - DrawFieldInline()
    - DrawSearchFilter()
    + CanDrawValueProperty()
}

class "OnInspectorInitAndDisposeMethodDrawer" {
    + CanDrawMethodProperty()
    + DrawPropertyLayout()
}

class "PrimitiveValueConflictDrawer`1" {
    + CanDrawTypeFilter()
    + CanDrawValueProperty()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "PropertyContextMenuDrawer`1" {
    + CanDrawValueProperty()
    + Initialize()
    + DrawPropertyLayout()
}

class "ReferenceDrawer`1" {
    + CanDrawTypeFilter()
    + CanDrawValueProperty()
    + Initialize()
    + DrawPropertyLayout()
}

class "ReferencePathConflictDrawer`1" {
    + CanDrawValueProperty()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "ReferenceValueConflictDrawer`1" {
    + CanDrawValueProperty()
    + Initialize()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "AnimationCurveDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "BooleanDrawer" {
    + DrawPropertyLayout()
}

class "ByteDrawer" {
    + DrawPropertyLayout()
}

class "CharDrawer" {
    + DrawPropertyLayout()
}

class "CollectionSizeDialogue" {
    + Confirm()
    + Cancel()
}

class "CollectionDrawer`1" {
    - Sirenix.OdinInspector.Editor.Drawers.IHackyListDrawerInteractions.CreateValuesToAdd()
    + CanDrawValueProperty()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
    - SetCollectionSize()
    - GetValueToAdd()
    - GetValueToAdd()
    + Initialize()
    + DrawPropertyLayout()
    - BeginDropZone()
    - EndDropZone()
    - DrawToolbar()
    - StartCreatingValues()
    - DrawItems()
    - EndDragHandle()
    - GetKey()
    - BeginDragHandle()
    - DrawItem()
    - <Initialize>b__17_0()
    - <StartCreatingValues>b__24_0()
    - <EndDragHandle>b__26_0()
}

class "Color32Drawer" {
    + DrawPropertyField()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "ColorDrawer" {
    + DrawPropertyField()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "ColorPaletteDrawer" {
    + DrawPropertyLayout()
}

class "CompositeDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "DecimalDrawer" {
    + DrawPropertyLayout()
}

class "DelegateDrawer`1" {
    + CanDrawTypeFilter()
    + DrawPropertyLayout()
    - Popup()
    - RegisterGameObject()
    - RegisterUnityObject()
}

class "DictionaryDrawer`3" {
    + CanDrawValueProperty()
    + Initialize()
    + DrawPropertyLayout()
    - DrawAddKey()
    - DrawToolbar()
    - DrawElements()
    - DrawKeyProperty()
    + Dispose()
    - <DrawAddKey>b__30_1()
    - <DrawAddKey>b__30_0()
    - <DrawAddKey>b__30_2()
    - <DrawAddKey>b__30_3()
    - <DrawElements>b__38_1()
}

class "DoubleDrawer" {
    + DrawPropertyLayout()
}

class "EnumDrawer`1" {
    + CanDrawTypeFilter()
    + DrawPropertyLayout()
}

class "GuidDrawer" {
    + DrawPropertyLayout()
}

class "GUIStyleStateDrawer" {
    + Initialize()
    + DrawPropertyLayout()
}

class "Int16Drawer" {
    + DrawPropertyLayout()
}

class "Int32Drawer" {
    + DrawPropertyLayout()
}

class "Int64Drawer" {
    + DrawPropertyLayout()
}

class "LayerMaskDrawer" {
    + DrawPropertyLayout()
}

class "NullableDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
    + Dispose()
}

class "QuaternionDrawer" {
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetAxis()
    - SetDrawMode()
}

class "SByteDrawer" {
    + DrawPropertyLayout()
}

class "SdfIconTypeDrawer" {
    + DrawPropertyLayout()
}

class "MultiCollectionFilter`1" {
    + GetCount()
    + Draw()
    + Draw()
    + Update()
    + ScheduleUpdate()
    + Dispose()
    + GetCollectionIndex()
    - <.ctor>b__13_0()
}

class "SingleDrawer" {
    + DrawPropertyLayout()
}

class "StringDrawer" {
    + DrawPropertyLayout()
}

class "TableListAttributeDrawer" {
    + CanDrawAttributeProperty()
    + Initialize()
    + DrawPropertyLayout()
    - OnChildValueChanged()
    - DropZone()
    - AddColumns()
    - DrawToolbar()
    - DrawColumnHeaders()
    - DrawTable()
    - DrawColumnSeperators()
    - DrawListItemBackGrounds()
    - DrawRightClickContextMenuAreas()
    - DrawCell()
    - EnumerateGroupMembers()
    - GetColumnAttribute()
    + Dispose()
    - <DropZone>b__21_0()
    - <DropZone>b__21_1()
    - <DropZone>b__21_2()
}

class "ScriptableObjectTableListResolver`1" {
    + CanResolveForPropertyFilter()
    + GetPropertyInfos()
}

class "TwoDimensionalGenericArrayDrawer`2" {
    + OnBeforeDrawTable()
    + DrawElement()
}

class "TwoDimensionalUnityObjectArrayDrawer`2" {
    + Initialize()
    + DrawElement()
    + CompareElement()
}

class "TwoDimensionalEnumArrayDrawer`2" {
    + DrawElement()
}

class "TwoDimensionalAnimationCurveArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalGuidArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalLayerMaskArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalStringArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalBoolArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalIntArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalLongArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalFloatArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalDoubleArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalDecimalArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalVector2ArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalVector3ArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalVector4ArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalColorArrayDrawer`1" {
    + DrawElement()
}

class "TwoDimensionalQuaternionArrayDrawer`1" {
    + DrawElement()
}

class "TypeDrawer`1" {
    + PopulateGenericMenu()
    + Initialize()
    + DrawPropertyLayout()
    - ShowSelectorInPopup()
}

class "UInt16Drawer" {
    + DrawPropertyLayout()
}

class "UInt32Drawer" {
    + DrawPropertyLayout()
}

class "UInt64Drawer" {
    + DrawPropertyLayout()
}

class "UnityEventDrawer`1" {
    + Initialize()
    + DrawPropertyLayout()
}

class "UnityObjectDrawer`1" {
    + CanDrawValueProperty()
    + Initialize()
    + DrawPropertyLayout()
    - Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu()
}

class "UnityObjectRootDrawer`1" {
    + CanDrawValueProperty()
    + DrawPropertyLayout()
}

class "Vector2Drawer" {
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Vector3Drawer" {
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "Vector4Drawer" {
    + DrawPropertyLayout()
    + PopulateGenericMenu()
    - SetVector()
    - NormalizeEntries()
}

class "DisableIfAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "DisableInAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "DisableInEditorModeAttributeStateUpdater" {
    + OnStateUpdate()
}

class "DisableInInlineEditorsAttributeStateUpdater" {
    + OnStateUpdate()
}

class "DisableInNonPrefabsAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "DisableInPlayModeAttributeStateUpdater" {
    + OnStateUpdate()
}

class "DisableInPrefabAssetsAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "DisableInPrefabInstancesAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "DisableInPrefabsAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "DisallowModificationsInAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "EnableGUIAttributeStateUpdater" {
    + OnStateUpdate()
}

class "EnableIfAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "EnableInAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "GroupVisibilityStateUpdater`1" {
    + CanUpdateProperty()
    + Initialize()
    + OnStateUpdate()
    + OnChildStateChanged()
    + UpdateVisibility()
    + AreAnyChildrenVisible()
}

class "HideIfAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "HideInAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "HideInEditorModeAttributeStateUpdater" {
    + OnStateUpdate()
}

class "HideInInlineEditorsAttributeStateUpdater" {
    + OnStateUpdate()
}

class "HideInInspectorAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "HideInNonPrefabsAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "HideInPlayModeAttributeStateUpdater" {
    + OnStateUpdate()
}

class "HideInPrefabAssetsAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "HideInPrefabInstancesAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "HideInPrefabsAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "OnInspectorDisposeStateUpdater" {
    + Initialize()
    + Dispose()
}

class "OnInspectorInitStateUpdater" {
    + Initialize()
}

class "OnStateUpdateAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "ShowIfAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "ShowInAttributeStateUpdater" {
    + Initialize()
    + OnStateUpdate()
}

class "ShowInInlineEditorsAttributeStateUpdater" {
    + OnStateUpdate()
}

class "InheritAttributeAttributesAttributeProcessor" {
    + ProcessChildMemberAttributes()
}

class "ActionResolver" {
    + DrawError()
    + DoAction()
    + DoActionForAllSelectionIndices()
}

class "ExpressionActionResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateAction()
}

class "MethodPropertyActionResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateAction()
}

class "MethodReferenceActionResolverCreator" {
    + GetPossibleMatchesString()
    + TryCreateAction()
}

class "NamedValueGetter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ResolvedAction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <DrawTopBar>b__6_0()
    + <DrawTopBar>b__6_1()
    + <DrawTopBar>b__6_2()
    + <DrawTopBar>b__6_3()
    + <DrawTopBar>b__6_4()
    + <DrawTopBar>b__6_5()
}

class "TypeEntry" {
    + IsMatch()
}

class "TypeEntryDrawer" {
    + DrawPropertyLayout()
}

class "<>c" {
    + <SortTypes>b__30_0()
    + <RegisterTypes>b__33_0()
    + <RegisterTypes>b__33_1()
    + <RegisterTypes>b__33_2()
    + <RegisterTypes>b__33_3()
    + <RegisterTypes>b__33_4()
    + <GenerateDLL>b__37_0()
    + <GenerateDLL>b__37_1()
    + <GenerateDLL>b__38_0()
    + <GenerateDLL>b__38_1()
    + <GetAOTSupportedTypes>b__40_0()
    + <GetAOTSupportedTypes>b__40_1()
}

class "<>c__DisplayClass33_0" {
    + <RegisterTypes>b__5()
    + <RegisterTypes>b__6()
}

class "<>c" {
    + <Update>b__17_0()
    + <DeleteImportedDemos>b__34_0()
    + <DeleteDirsAndFiles>b__36_0()
}

class "<>c__DisplayClass31_0" {
    + <SetPluginImportSettings>b__0()
    + <SetPluginImportSettings>b__1()
}

class "ColorPref" {
    + Reset()
}

class "<>c" {
    + <RemoveObsoleteGeneratedOdinEditorsDLL>b__2_0()
    + <RemoveObsoleteGeneratedOdinEditorsDLL>b__2_1()
    + <UpdateOdinEditors>b__21_0()
}

class "<>c__DisplayClass22_0" {
    + <UpdateAndRefreshInspector>b__0()
}

class "TypeGroup" {
    + GetChildGroup()
    + ExpandAll()
    + SetSharedEditorType()
    + ClearEditorTypes()
    + GetSharedEditorType()
    + UpdateHasEligibleTypes()
    + UpdateConflicts()
    + Sort()
    + IsTypeVisible()
    + UpdateSearch()
}

class "<GetEditorsForCompilation>d__26" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - <>m__Finally3()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.TypeDrawerPair>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass16_0" {
    + <.ctor>b__0()
    + <.ctor>b__1()
}

class "TypeSignatureComparer" {
    + Equals()
    + GetHashCode()
}

class "<>c" {
    + <CreateForDelegate>b__50_0()
    + <CreateForUnityProperty>b__52_0()
}

class "<GetAttributes>d__66`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <CreateMemberProperties>b__23_0()
    + <CreateMemberProperties>b__23_1()
    + <PerformAndBakePostGroupOrdering>b__24_0()
    + <PerformAndBakePostGroupOrdering>b__24_2()
    + <ProcessGroups>b__34_0()
    + <FindUnityProperties>b__41_0()
}

class "<>c__DisplayClass24_0" {
    + <PerformAndBakePostGroupOrdering>b__1()
}

class "<>c__DisplayClass32_0" {
    + <BuildPropertyGroups>b__0()
}

class "<>c__DisplayClass32_1" {
    + <BuildPropertyGroups>b__1()
}

class "<>c__DisplayClass33_0" {
    + <RegisterGroupAttribute>b__0()
}

class "<>c__DisplayClass34_0" {
    + <ProcessGroups>b__1()
}

class "<>c__DisplayClass34_1" {
    + <ProcessGroups>b__2()
}

class "<>c__DisplayClass35_0" {
    + <CreatePropertyGroups>b__0()
}

class "<>c__DisplayClass41_1" {
    + <FindUnityProperties>b__1()
}

class "<>c__DisplayClass41_2" {
    + <FindUnityProperties>b__2()
    + <FindUnityProperties>b__3()
}

class "<>c__DisplayClass41_3" {
    + <FindUnityProperties>b__4()
}

class "<RecurseGroupMembers>d__38" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.InspectorPropertyInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<RecurseGroups>d__37" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.InspectorPropertyInfoUtility.GroupData>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <Draw>b__128_0()
}

class "<GetAttributes>d__118`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass38_0" {
    + <RegisterPrefabValueModification>b__0()
}

class "<GetEnumerator>d__30" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<Recurse>d__25" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.InspectorProperty>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<System-Collections-IEnumerable-GetEnumerator>d__31" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "OnPropertyValueChangedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <.cctor>b__19_0()
    + <SetUpForIMGUIDrawing>b__126_0()
}

class "<EnumerateTree>d__63" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.InspectorProperty>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass31_0" {
    + <QueueAdd>b__0()
}

class "<>c__DisplayClass32_0" {
    + <QueueClear>b__0()
}

class "<>c__DisplayClass34_0" {
    + <QueueRemove>b__0()
}

class "<>c__DisplayClass2_0" {
    + <QueueRemoveKey>b__0()
}

class "<>c__DisplayClass4_0" {
    + <QueueSet>b__0()
}

class "<>c__DisplayClass1_0" {
    + <QueueInsertAt>b__0()
}

class "<>c__DisplayClass3_0" {
    + <QueueRemoveAt>b__0()
}

class "GetterSetter`1" {
    + GetValue()
    + GetValue()
    + SetValue()
    + SetValue()
}

class "<>c" {
    + <GetChildInfo>b__10_2()
}

class "<>c__DisplayClass10_0" {
    + <GetChildInfo>b__0()
    + <GetChildInfo>b__1()
}

class "<>c" {
    + <ProcessMemberProperties>b__0_0()
}

class "<>c" {
    + <GetChildInfo>b__10_2()
}

class "<>c__DisplayClass10_0" {
    + <GetChildInfo>b__0()
    + <GetChildInfo>b__1()
}

class "<>c" {
    + <GetChildInfo>b__10_2()
}

class "<>c__DisplayClass10_0" {
    + <GetChildInfo>b__0()
    + <GetChildInfo>b__1()
}

class "<>c" {
    + <GetChildInfo>b__10_2()
}

class "<>c__DisplayClass10_0" {
    + <GetChildInfo>b__0()
    + <GetChildInfo>b__1()
}

class "<>c__DisplayClass19_0" {
    + <CreateGetter>b__0()
}

class "<>c__DisplayClass20_0" {
    + <CreateSetter>b__0()
}

class "<>c__DisplayClass8_0" {
    + <GetChildInfo>b__0()
    + <GetChildInfo>b__1()
}

class "<>c" {
    + <GetChildInfo>b__5_2()
}

class "<>c__DisplayClass5_0" {
    + <GetChildInfo>b__0()
    + <GetChildInfo>b__1()
}

class "OriginalValuesAlias" {
    - System.Collections.IList.Add()
    - System.Collections.Generic.ICollection<TValue>.Add()
    - System.Collections.IList.Clear()
    - System.Collections.Generic.ICollection<TValue>.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.Generic.ICollection<TValue>.Contains()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<TValue>.CopyTo()
    - System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.IndexOf()
    - System.Collections.Generic.IList<TValue>.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.Generic.IList<TValue>.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.Generic.ICollection<TValue>.Remove()
    - System.Collections.IList.RemoveAt()
    - System.Collections.Generic.IList<TValue>.RemoveAt()
}

class "TypePairKeyComparer" {
    + Equals()
    + GetHashCode()
}

class "ValueChangedDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass84_0" {
    + <TriggerOnValueChanged>b__0()
}

class "<>c__DisplayClass85_0" {
    + <TriggerOnChildValueChanged>b__0()
}

class "<>c__DisplayClass22_0" {
    + <DelayedSmartValueReferenceSet>b__0()
}

class "<>c__DisplayClass12_0" {
    + <DrawPropertyLayout>b__0()
    + <DrawPropertyLayout>b__1()
    + <DrawPropertyLayout>b__2()
    + <DrawPropertyLayout>b__3()
}

class "FiveArgAction`5" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <.cctor>b__23_3()
}

class "<>c__DisplayClass23_0" {
    + <.cctor>b__0()
    + <.cctor>b__1()
    + <.cctor>b__2()
    + <.cctor>b__4()
    + <.cctor>b__5()
    + <.cctor>b__6()
    + <.cctor>b__7()
    + <.cctor>b__8()
}

class "<>c" {
    + <.cctor>b__16_0()
    + <.cctor>b__16_1()
    + <HasAttributeDrawer>b__29_0()
    + <HasAttributeDrawer>b__29_3()
    + <HasAttributeDrawer>b__29_1()
}

class "<>c__DisplayClass29_0" {
    + <HasAttributeDrawer>b__2()
}

class "<>c__DisplayClass1_0" {
    + <Fix>b__0()
}

class "<>c" {
    + <.cctor>b__0_0()
}

class "<GetValues>d__8" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<TReturnType>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <.cctor>b__25_0()
}

class "<Search>d__18" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.SearchResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <GetUnityTypeWithName>b__3_0()
    + <.cctor>b__10_0()
    + <.cctor>b__10_1()
    + <.cctor>b__10_2()
    + <.cctor>b__10_3()
    + <.cctor>b__10_4()
    + <.cctor>b__10_5()
    + <.cctor>b__10_6()
    + <.cctor>b__10_7()
    + <.cctor>b__10_8()
    + <.cctor>b__10_9()
    + <.cctor>b__10_10()
    + <.cctor>b__10_11()
    + <.cctor>b__10_12()
    + <.cctor>b__10_13()
    + <.cctor>b__10_14()
    + <.cctor>b__10_15()
    + <.cctor>b__10_16()
    + <.cctor>b__10_17()
    + <.cctor>b__10_18()
    + <.cctor>b__10_19()
    + <.cctor>b__10_20()
    + <.cctor>b__10_21()
    + <.cctor>b__10_22()
    + <.cctor>b__10_23()
    + <.cctor>b__10_24()
    + <.cctor>b__10_25()
    + <.cctor>b__10_26()
    + <.cctor>b__10_27()
    + <.cctor>b__10_28()
    + <.cctor>b__10_29()
    + <.cctor>b__10_30()
    + <.cctor>b__10_31()
    + <.cctor>b__10_32()
    + <.cctor>b__10_33()
    + <.cctor>b__10_34()
    + <.cctor>b__10_35()
}

class "<>c__8`1" {
    + <GetValueGetter>b__8_0()
}

class "<>c__9`1" {
    + <GetValueSetter>b__9_0()
}

class "<>c__DisplayClass6_0" {
    + <GuessContainedType>b__0()
}

class "<>c__DisplayClass5_0" {
    + <GotoPreferencesTab>b__0()
}

class "Handle" {
    + Finalize()
    + Dispose()
}

class "<>c" {
    + <EmitType>b__21_0()
    + <EmitType>b__21_1()
    + <EmitType>b__21_2()
}

class "<>c__DisplayClass60_0" {
    + <EnableAutomaticHeightAdjustment>b__0()
}

class "<>c__DisplayClass63_0" {
    + <InspectObjectInDropDown>b__0()
    + <InspectObjectInDropDown>b__1()
}

class "<>c__DisplayClass63_1" {
    + <InspectObjectInDropDown>b__2()
}

class "<GetTargets>d__56" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <ForceMenuTreeRebuild>b__27_0()
    + <ForceMenuTreeRebuild>b__27_1()
    + <OnSelectionChanged>b__28_0()
}

class "<GetTargets>d__30" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <get_NextVisualMenuItem>b__64_0()
    + <get_PrevVisualMenuItem>b__70_0()
    + <GetChildMenuItemsRecursive>b__82_0()
    + <_IsVisible>b__112_0()
}

class "<GetAllNextMenuItems>d__114" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.OdinMenuItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllPreviousMenuItems>d__115" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.OdinMenuItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetChildMenuItemsRecursive>d__82" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.OdinMenuItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetParentMenuItemsRecursive>d__83" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.OdinMenuItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<ParentMenuItemsBottomUp>d__116" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.OdinMenuItem>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<get_ObjectInstances>d__88" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <MenuTreeActivationZone>b__68_0()
    + <DrawSearchToolbar>b__71_0()
    + <DrawSearchToolbar>b__71_2()
    + <DrawSearchToolbar>b__71_3()
    + <DrawSearchToolbar>b__71_4()
    + <DrawSearchToolbar>b__71_5()
    + <DrawSearchToolbar>b__71_6()
    + <HandleKeyboardMenuNavigation>b__77_0()
    + <HandleKeyboardMenuNavigation>b__77_1()
}

class "OdinMenuItemComparer" {
    + Compare()
}

class "<>c" {
    + <SortMenuItemsByName>b__19_0()
}

class "<>c__DisplayClass21_1`1" {
    + <AddIcons>b__0()
}

class "<>c__DisplayClass22_1`1" {
    + <AddIcons>b__0()
}

class "<>c__DisplayClass23_1" {
    + <AddIcons>b__0()
}

class "<>c__DisplayClass24_1" {
    + <AddIcons>b__0()
}

class "<>c__DisplayClass34_0" {
    + <AddThumbnailIcon>b__0()
    + <AddThumbnailIcon>b__1()
}

class "<>c__DisplayClass3_0" {
    + <GetMenuItem>b__0()
    + <GetMenuItem>b__1()
}

class "<>c__DisplayClass4_0" {
    + <AddAllAssetsAtPathCombined>b__0()
    + <AddAllAssetsAtPathCombined>b__1()
}

class "<>c__DisplayClass4_1" {
    + <AddAllAssetsAtPathCombined>b__2()
}

class "<>c__DisplayClass5_0" {
    + <AddAllAssetsAtPath>b__0()
}

class "<get_SelectedValues>d__17" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <BuildSelectionTree>b__15_0()
    + <BuildSelectionTree>b__15_1()
}

class "<>c__DisplayClass25_0" {
    + <SetSelection>b__0()
}

class "<GetCurrentSelection>d__24" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <.ctor>b__18_0()
    + <.ctor>b__22_0()
    + <DrawSelectionTree>b__28_0()
    + <DrawSelectionTree>b__28_1()
    + <DrawCheckboxMenuItems>b__29_0()
    + <BuildSelectionTree>b__34_0()
}

class "<>c__DisplayClass28_0" {
    + <DrawSelectionTree>b__2()
}

class "<>c__DisplayClass29_0" {
    + <DrawCheckboxMenuItems>b__1()
    + <DrawCheckboxMenuItems>b__2()
}

class "<>c" {
    + <.cctor>b__1_0()
}

class "<>c" {
    + <GetCurrentSelection>b__26_0()
    + <SetSelection>b__29_0()
    + <SetSelection>b__29_2()
}

class "<>c__50`1" {
    + <DrawSelectorButton>b__50_1()
    + <DrawSelectorButton>b__50_2()
}

class "<>c__DisplayClass29_0" {
    + <SetSelection>b__1()
}

class "<>c__DisplayClass48_0" {
    + <SetupWindow>b__0()
    + <SetupWindow>b__1()
    + <SetupWindow>b__2()
    + <SetupWindow>b__4()
}

class "<>c__DisplayClass48_1" {
    + <SetupWindow>b__3()
}

class "<>c__DisplayClass50_0`1" {
    + <DrawSelectorButton>b__0()
    + <DrawSelectorButton>b__3()
    + <DrawSelectorButton>b__4()
    + <DrawSelectorButton>b__5()
}

class "<>c" {
    + <OrderTypes>b__11_0()
    + <OrderTypes>b__11_1()
    + <OrderTypes>b__11_2()
    + <BuildSelectionTree>b__13_2()
    + <BuildSelectionTree>b__13_0()
    + <BuildSelectionTree>b__13_4()
    + <SetSelection>b__19_0()
    + <SetSelection>b__19_1()
}

class "<>c__DisplayClass13_0" {
    + <BuildSelectionTree>b__3()
}

class "TypeSelectorMenuItem" {
    + GetPath()
    + DrawMenuItem()
    - Initialize()
}

class "<>c__DisplayClass30_0" {
    + <BuildSelectionTree>b__0()
    + <BuildSelectionTree>b__1()
}

class "<>c__DisplayClass36_0" {
    + <AddType>b__0()
    + <AddType>b__1()
}

class "<>c__DisplayClass47_0" {
    + <Show>b__0()
}

class "<>c__DisplayClass53_0" {
    + <ClaimAndAssign>b__0()
}

class "<>c__DisplayClass10_0" {
    + <UpdatePrefabInstancePropertyModifications>b__0()
    + <UpdatePrefabInstancePropertyModifications>b__1()
    + <UpdatePrefabInstancePropertyModifications>b__2()
    + <UpdatePrefabInstancePropertyModifications>b__3()
}

class "CKC" {
    + Equals()
    + GetHashCode()
}

class "<>c" {
    + <.cctor>b__14_0()
}

class "<>c" {
    + <PostProcessModifications>b__13_0()
    + <PostProcessModifications>b__13_1()
    + <PostProcessModifications>b__13_2()
    + <UndoRedoPerformed>b__14_1()
    + <UndoRedoPerformed>b__14_3()
}

class "<>c__DisplayClass14_0" {
    + <UndoRedoPerformed>b__0()
    + <UndoRedoPerformed>b__2()
}

class "<>c" {
    + <SelectionChanged>b__8_0()
}

class "<>c__DisplayClass6_0" {
    + <OpenWindow>b__0()
}

class "<>c" {
    + <StartTryRefreshLatestOdinVersion>b__20_0()
}

class "<>c" {
    + <BuildSelectionTree>b__1_0()
}

class "<>c" {
    + <CreateSerializationOverview>b__7_0()
    + <CreateSerializationOverview>b__7_1()
    + <CreateSerializationOverview>b__7_2()
    + <CreateSerializationOverview>b__7_3()
    + <CreateSerializationOverview>b__7_5()
    + <CreateSerializationOverview>b__7_6()
    + <CreateSerializationOverview>b__7_7()
    + <CreateSerializationOverview>b__7_8()
    + <CreateSerializationOverview>b__7_9()
    + <CreateSerializationOverview>b__7_10()
    + <CreateSerializationOverview>b__7_11()
    + <CreateSerializationOverview>b__7_12()
    + <CreateSerializationOverview>b__7_13()
}

class "<>c__DisplayClass7_0" {
    + <CreateSerializationOverview>b__4()
}

class "TypeRegistryMenuItem" {
    + DrawMenuItem()
    - Initialize()
}

class "TypeItemSettingsAccessor" {
    + Reset()
    + CanReset()
    + Initialize()
}

class "<>c" {
    + <BuildMenuTree>b__32_0()
}

class "<GetTargets>d__28" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <OnEnable>b__32_0()
    + <OnEnable>b__32_1()
    + <OnEnable>b__32_2()
    + <OnEnable>b__32_3()
    + <OnEnable>b__32_4()
    + <OnEnable>b__32_5()
    + <BuildMenuTree>b__34_0()
    + <SelectionChanged>b__40_0()
    + <SelectionChanged>b__40_1()
    + <SelectionChanged>b__40_2()
}

class "<>c__DisplayClass43_0" {
    + <UpdateExamplePreview>b__0()
}

class "<>c__DisplayClass8_0" {
    + <SendFeedback>b__0()
}

class "<>c" {
    + <ShowValidator>b__10_0()
}

class "<>c" {
    + <AutoOpen>b__16_0()
}

class "<>c" {
    + <.cctor>b__7_0()
    + <.cctor>b__7_1()
    + <.cctor>b__7_2()
    + <.cctor>b__7_3()
    + <.cctor>b__7_4()
    + <.cctor>b__7_5()
    + <.cctor>b__7_6()
    + <.cctor>b__7_7()
    + <.cctor>b__7_8()
    + <.cctor>b__7_9()
    + <.cctor>b__7_10()
    + <.cctor>b__7_11()
    + <.cctor>b__7_12()
    + <.cctor>b__7_13()
    + <.cctor>b__7_14()
    + <.cctor>b__7_15()
    + <.cctor>b__7_16()
    + <.cctor>b__7_17()
    + <.cctor>b__7_18()
    + <.cctor>b__7_19()
    + <.cctor>b__7_20()
    + <.cctor>b__7_21()
    + <.cctor>b__7_22()
    + <.cctor>b__7_23()
    + <.cctor>b__7_24()
    + <.cctor>b__7_25()
    + <.cctor>b__7_26()
    + <.cctor>b__7_27()
    + <.cctor>b__7_28()
    + <.cctor>b__7_29()
    + <.cctor>b__7_30()
    + <OpenScene>b__25_1()
    + <OpenScene>b__25_2()
    + <OpenScene>b__25_3()
    + <OpenScene>b__25_4()
    + <OpenScene>b__25_5()
}

class "<>c__DisplayClass25_0" {
    + <OpenScene>b__0()
}

class "<>c__DisplayClass0_0`1" {
    + <GetFieldGetter>b__0()
    + <GetFieldGetter>b__1()
}

class "<>c__DisplayClass1_0`1" {
    + <GetPropertyGetter>b__0()
    + <GetPropertyGetter>b__1()
}

class "<>c__DisplayClass2_0`1" {
    + <GetMethodGetter>b__0()
}

class "<>c__DisplayClass3_0`1" {
    + <GetDelegateGetter>b__0()
}

class "<>c__DisplayClass11_0" {
    + <CreateColorResultFunc>b__0()
}

class "<>c__DisplayClass12_0" {
    + <CreateNullableColorResultFunc>b__0()
}

class "<>c__DisplayClass2_0`1" {
    + <GetExpressionLambda>b__0()
}

class "<>c" {
    + <.cctor>b__40_0()
    + <.cctor>b__40_1()
    + <.cctor>b__40_2()
}

class "BrokenAttributeValidator" {
    + RunValidation()
}

class "<>c__DisplayClass1_0" {
    + <MakeGetterSetter>b__0()
}

class "<>c" {
    + <Dispose>b__28_0()
    + <Dispose>b__28_1()
    + <CreateIssueFixerTrees>b__33_0()
}

class "<>c__DisplayClass32_0" {
    + <DrawMessageBoxWithButton>b__0()
}

class "<>c__DisplayClass6_0" {
    + <WithContextClick>b__0()
    + <WithContextClick>b__1()
}

class "<System-Collections-Generic-IEnumerable<Sirenix-OdinInspector-Editor-Validation-ResultItem>-GetEnumerator>d__27" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<System-Collections-IEnumerable-GetEnumerator>d__28" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
}

class "<>c" {
    + <Validate>b__3_0()
}

class "<>c__DisplayClass3_0" {
    + <Validate>b__1()
}

class "<RunValidation>d__2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.Validation.ValidationResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass2_0" {
    + <Validate>b__0()
    + <Validate>b__1()
}

class "<>c__DisplayClass6_0" {
    + <WithFix>b__0()
}

class "<>c" {
    + <.cctor>b__3_0()
}

class "<>c__DisplayClass3_0" {
    + <.cctor>b__1()
}

class "<FindAllComponentsInSceneOfType>d__12`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<FindComponentsOfTypeFallback>d__4" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<UnityEngine.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllGameObjectsInScene>d__14" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetChildren>d__15" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetSceneRoots>d__4" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<UnityEngine.GameObject>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass2_0" {
    + <CreateOnContextClickInvoker>b__0()
}

class "MetaData" {
    + Add()
}

class "<>c" {
    + <ToManifest>b__4_0()
}

class "<>c" {
    + <GetModuleDataForPackaging>b__40_1()
}

class "<>c__DisplayClass14_0" {
    + <DrawActivationButtons>b__0()
}

class "<>c__DisplayClass40_0" {
    + <GetModuleDataForPackaging>b__0()
}

class "<>c" {
    + <Load_Version1>b__5_0()
    + <Load_Version1>b__5_1()
}

class "ModuleSettings" {
    - OnInspectorGUI()
    - DrawApplyButton()
}

class "ModuleMenuItem" {
    - UpdateStatus()
    + OnDrawMenuItem()
}

class "<>c" {
    + <.cctor>b__16_0()
    + <EnsureInitialized>b__17_0()
    + <EnsureInitialized>b__17_1()
}

class "<>c__DisplayClass20_0" {
    + <SelectLastSelectedItem>b__0()
}

class "<>c__DisplayClass26_0" {
    + <CreateModuleTree>b__0()
}

class "<>c" {
    + <.cctor>b__4_0()
    + <.cctor>b__4_1()
    + <.cctor>b__4_2()
    + <.cctor>b__4_4()
    + <.cctor>b__4_5()
    + <.cctor>b__4_3()
}

class "<>c" {
    + <.cctor>b__5_0()
    + <.cctor>b__5_1()
    + <.cctor>b__5_2()
    + <.cctor>b__5_3()
    + <.cctor>b__5_4()
}

class "Creator" {
    + TryCreateMatcher()
}

class "Creator" {
    + TryCreateMatcher()
}

class "Creator" {
    + TryCreateMatcher()
}

class "Creator" {
    + TryCreateMatcher()
}

class "Creator" {
    + TryCreateMatcher()
}

class "Creator" {
    + TryCreateMatcher()
}

class "TypeMatchIndexingRuleDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TypeMatchRuleDelegate1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TypeMatchRuleDelegate2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TypeArrayEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "TypeMatchCacheSignatureEqualityComparer" {
    + Equals()
    + GetHashCode()
}

class "MergeSignatureComparer" {
    + Equals()
    + GetHashCode()
}

class "<>c" {
    + <.ctor>b__19_0()
}

class "DeepCopierNoPolymorphism`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DeepCopierWeakNoPolymorphism" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <.cctor>b__39_0()
    + <.cctor>b__39_1()
    + <.cctor>b__39_2()
    + <.cctor>b__39_3()
}

class "<>c__DisplayClass31_0" {
    + <CreateLdLocGenerator>b__0()
}

class "<>c__DisplayClass32_0" {
    + <CreateLdArgUnboxGenerator>b__0()
}

class "<>c__DisplayClass35_0`1" {
    + <CopyMultiDimensionalArray>b__0()
}

class "<>c__DisplayClass36_0" {
    + <EmitArrayCopyingLogic>b__0()
    + <EmitArrayCopyingLogic>b__1()
}

class "<>c__DisplayClass37_1" {
    + <EmitFieldCopyingLogic>b__0()
    + <EmitFieldCopyingLogic>b__1()
    + <EmitFieldCopyingLogic>b__2()
    + <EmitFieldCopyingLogic>b__3()
}

class "<>c__DisplayClass10_0" {
    + <SubscribeOnCompleted>b__0()
}

class "<>c__DisplayClass0_0" {
    + <ObjectSelectorZone>b__0()
}

class "<>c__DisplayClass17_0" {
    + <PolymorphicObjectField>b__2()
    + <PolymorphicObjectField>b__3()
}

class "<>c__DisplayClass17_1" {
    + <PolymorphicObjectField>b__0()
}

class "<>c__DisplayClass17_2" {
    + <PolymorphicObjectField>b__1()
}

class "<>c__DisplayClass29_0" {
    + <UnityPreviewObjectField>b__0()
}

class "<>c__DisplayClass32_0" {
    + <UnityPreviewObjectField>b__0()
}

class "<>c__DisplayClass39_0" {
    + <HandlePasteEvent>b__0()
}

class "<>c__DisplayClass5_0" {
    + <UnityObjectField>b__2()
    + <UnityObjectField>b__3()
}

class "<>c__DisplayClass5_1" {
    + <UnityObjectField>b__0()
}

class "<>c__DisplayClass5_2" {
    + <UnityObjectField>b__1()
}

class "<>c__DisplayClass5_3" {
    + <UnityObjectField>b__4()
}

class "Node" {
    + Cleanup()
}

class "<>c__DisplayClass18_0" {
    + <OnGUI>b__1()
}

class "<>c" {
    + <SelectIcon>b__6_0()
}

class "ImGUIElementDrawer" {
    + BeginContainerCallback()
    + ProcessElements()
    + ToDrawListChanged()
    - Hook()
    - <.ctor>b__7_0()
}

class "<>c" {
    + <Init>b__10_0()
    + <Init>b__10_1()
}

class "<GetAllStyleSheets>d__19" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StyleSheet>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "CategoryComparer" {
    + Compare()
}

class "<>c" {
    + <.cctor>b__3_0()
    + <.cctor>b__3_1()
    + <.cctor>b__3_2()
    + <GetAttributeCategories>b__5_0()
    + <BuildMenuTree>b__9_0()
}

class "<>c" {
    + <FetchColorPalettes>b__9_0()
}

class "ReferenceTypeClass" {
    - MessageBox()
}

class "<>c" {
    + <.ctor>b__4_0()
    + <.ctor>b__4_1()
}

class "<>c" {
    + <.ctor>b__8_0()
    + <.ctor>b__8_1()
}

class "MyItem" {
    - CreateData()
}

class "SomeCustomClass" {
    + Test1()
    + Test2()
    - CreateData()
}

class "<>c" {
    + <GetFilteredTypeList>b__3_0()
    + <GetFilteredTypeList>b__3_1()
    + <GetFilteredTypeList>b__3_2()
}

class "<>c" {
    + <TypeFilter>b__8_0()
}

class "<>c" {
    + <GetAllScriptableObjects>b__12_0()
    + <GetAllScriptableObjects>b__12_1()
}

class "<>c__DisplayClass11_0" {
    + <GetAllSceneObjects>b__0()
    + <GetAllSceneObjects>b__1()
}

class "<>c__DisplayClass13_0" {
    + <GetAllSirenixAssets>b__0()
    + <GetAllSirenixAssets>b__1()
    + <GetAllSirenixAssets>b__2()
}

class "<>c" {
    + <InitializeExampleDataSafely>b__8_0()
    + <InitializeExampleDataSafely>b__8_1()
}

class "<>c__DisplayClass8_0" {
    + <InitializeExampleDataSafely>b__2()
}

class "<>c" {
    + <ReadDeclaration>b__13_0()
    + <ReadDeclaration>b__13_1()
}

class "AssetList" {
    - PopulateListRoutine()
    + EnsureListPopulation()
    + SetToggleValues()
    + Rescan()
    - OnListTitlebarGUI()
    + UpdateList()
    + UpdateList()
}

class "AssetInstanceDrawer" {
    + DrawPropertyLayout()
}

class "<>c" {
    + <Initialize>b__4_0()
    + <Initialize>b__4_1()
}

class "<>c" {
    + <Initialize>b__12_0()
    + <Initialize>b__12_1()
    + <PopulateListRoutine>b__14_0()
}

class "<>c__DisplayClass13_0" {
    + <DrawPropertyLayout>b__0()
    + <DrawPropertyLayout>b__1()
}

class "<PopulateListRoutine>d__14" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<>c" {
    + <Initialize>b__9_2()
    + <ToValueDropdowns>b__10_0()
    + <CreateSelector>b__16_3()
    + <CreateSelector>b__16_4()
    + <CreateSelector>b__16_0()
    + <CreateSelector>b__16_1()
    + <CreateSelector>b__16_2()
}

class "<>c__DisplayClass16_0" {
    + <CreateSelector>b__5()
}

class "<>c__DisplayClass16_1" {
    + <CreateSelector>b__6()
}

class "<>c__DisplayClass9_0" {
    + <Initialize>b__6()
}

class "<>c" {
    + <CreateSelector>b__12_1()
    + <CreateSelector>b__12_4()
    + <CreateSelector>b__12_5()
    + <CreateSelector>b__12_6()
}

class "<>c__DisplayClass12_0" {
    + <CreateSelector>b__0()
    + <CreateSelector>b__2()
    + <CreateSelector>b__3()
}

class "<>c" {
    + <Initialize>b__6_0()
}

class "<>c" {
    + <PopulateGenericMenu>b__4_0()
}

class "<>c__DisplayClass4_0" {
    + <PopulateGenericMenu>b__1()
}

class "<>c" {
    + <Initialize>b__8_1()
}

class "<>c__DisplayClass8_0" {
    + <Initialize>b__0()
}

class "<>c" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__4_0()
}

class "<>c__DisplayClass4_0" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__1()
}

class "FixBrokenUnityObjectWrapperPopup" {
    + FixItThisTime()
    + FixItAlways()
}

class "<>c" {
    + <PopulateGenericMenu>b__8_0()
}

class "<>c__DisplayClass7_0" {
    + <ComponentIsBroken>b__0()
}

class "<>c" {
    + <PopulateGenericMenu>b__3_0()
}

class "<>c__DisplayClass3_0" {
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
}

class "<>c__DisplayClass20_0" {
    + <DrawPolymorphicObjectField>b__0()
}

class "<>c__DisplayClass21_0" {
    + <DrawPolymorphicObjectField>b__0()
}

class "<>c__DisplayClass28_0" {
    + <DestroyEditors>b__0()
}

class "<>c__DisplayClass5_0" {
    + <TriggerAction>b__0()
}

class "ScrollableTextAreaInternalDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <Initialize>b__8_2()
    + <Initialize>b__8_3()
    + <ToValueDropdowns>b__10_0()
    + <CreateSelector>b__17_0()
    + <CreateSelector>b__17_1()
}

class "<>c__DisplayClass12_0" {
    + <PopulateGenericMenu>b__2()
}

class "<>c" {
    + <Initialize>b__11_2()
    + <Initialize>b__11_3()
    + <ToValueDropdowns>b__13_0()
    + <CreateSelector>b__19_3()
    + <CreateSelector>b__19_4()
    + <CreateSelector>b__19_0()
    + <CreateSelector>b__19_1()
    + <CreateSelector>b__19_2()
}

class "<>c__DisplayClass19_0" {
    + <CreateSelector>b__5()
}

class "<>c__DisplayClass19_1" {
    + <CreateSelector>b__6()
}

class "<>c__DisplayClass1_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
}

class "<>c__DisplayClass2_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass1_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
}

class "<>c__DisplayClass2_0" {
    + <SetVector>b__0()
}

class "<>c" {
    + <GetPropertyInfos>b__0_0()
    + <GetPropertyInfos>b__0_1()
    + <GetPropertyInfos>b__0_2()
    + <GetPropertyInfos>b__0_3()
}

class "<>c" {
    + <GetPropertyInfos>b__0_0()
    + <GetPropertyInfos>b__0_1()
    + <GetPropertyInfos>b__0_2()
    + <GetPropertyInfos>b__0_3()
    + <GetPropertyInfos>b__0_4()
    + <GetPropertyInfos>b__0_5()
}

class "<>c" {
    + <Initialize>b__8_0()
}

class "<>c" {
    + <DrawPropertyLayout>b__5_0()
    + <DrawPropertyLayout>b__5_1()
}

class "<>c__DisplayClass14_0" {
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__0()
}

class "<>c__DisplayClass14_1" {
    + <PopulateGenericMenu>b__1()
}

class "<>c__DisplayClass15_0" {
    + <DrawPropertyLayout>b__0()
}

class "<>c__DisplayClass16_0" {
    + <DrawReferencePicker>b__0()
}

class "<>c__DisplayClass19_0" {
    + <DrawSearchFilter>b__0()
}

class "<>c__DisplayClass3_1" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__0()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__1()
}

class "IndexPopupWindow" {
    + Move()
    + Cancel()
    - DetectEnter()
}

class "<>c" {
    + <PopulateChangedFromPrefabContext>b__6_0()
    + <PopulateGenericMenu>b__8_0()
}

class "<>c__DisplayClass6_0" {
    + <PopulateChangedFromPrefabContext>b__1()
    + <PopulateChangedFromPrefabContext>b__2()
    + <PopulateChangedFromPrefabContext>b__3()
}

class "<>c__DisplayClass6_1" {
    + <PopulateChangedFromPrefabContext>b__4()
}

class "<>c__DisplayClass8_0" {
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__22()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
    + <PopulateGenericMenu>b__23()
}

class "<>c__DisplayClass8_1" {
    + <PopulateGenericMenu>b__9()
    + <PopulateGenericMenu>b__10()
    + <PopulateGenericMenu>b__11()
    + <PopulateGenericMenu>b__12()
    + <PopulateGenericMenu>b__13()
    + <PopulateGenericMenu>b__20()
    + <PopulateGenericMenu>b__15()
    + <PopulateGenericMenu>b__21()
}

class "<>c__DisplayClass8_2" {
    + <PopulateGenericMenu>b__14()
    + <PopulateGenericMenu>b__19()
}

class "<>c__DisplayClass8_3" {
    + <PopulateGenericMenu>b__16()
    + <PopulateGenericMenu>b__17()
}

class "<>c__DisplayClass8_4" {
    + <PopulateGenericMenu>b__18()
}

class "<>c__DisplayClass3_1" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__0()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__1()
}

class "<>c__DisplayClass3_0" {
    + <DrawPropertyLayout>b__0()
}

class "<>c__DisplayClass4_1" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__0()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__1()
}

class "FilteredPropertyChildren" {
    + Update()
    + ScheduleUpdate()
    - <ScheduleUpdate>b__13_0()
}

class "<>c" {
    + <HandleUnityObjectsDrop>b__21_3()
    + <HandleUnityObjectsDrop>b__21_4()
    + <HandleUnityObjectsDrop>b__21_5()
    + <HandleUnityObjectsDrop>b__21_6()
}

class "<>c__DisplayClass13_0" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__0()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__1()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__2()
}

class "<>c__DisplayClass13_1" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__3()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__4()
}

class "<>c__DisplayClass18_0" {
    + <CreateListElementLabelNameGetter>b__0()
}

class "<>c__DisplayClass18_1" {
    + <CreateListElementLabelNameGetter>b__1()
    + <CreateListElementLabelNameGetter>b__2()
    + <CreateListElementLabelNameGetter>b__3()
    + <CreateListElementLabelNameGetter>b__4()
    + <CreateListElementLabelNameGetter>b__5()
    + <CreateListElementLabelNameGetter>b__6()
}

class "<>c__DisplayClass21_0" {
    + <HandleUnityObjectsDrop>b__0()
    + <HandleUnityObjectsDrop>b__1()
    + <HandleUnityObjectsDrop>b__2()
}

class "<>c__DisplayClass22_0" {
    + <EndDropZone>b__0()
}

class "<>c__DisplayClass25_0" {
    + <DrawItems>b__0()
}

class "<>c__DisplayClass28_0" {
    + <BeginDragHandle>b__0()
    + <BeginDragHandle>b__1()
}

class "<>c__DisplayClass1_0`1" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__6()
}

class "<>c__DisplayClass3_0" {
    + <DrawPropertyLayout>b__0()
}

class "<>c" {
    + <Popup>b__7_0()
}

class "<>c__DisplayClass9_0" {
    + <RegisterUnityObject>b__0()
}

class "<>c__DisplayClass9_1" {
    + <RegisterUnityObject>b__1()
    + <RegisterUnityObject>b__2()
}

class "<>c" {
    + <DrawToolbar>b__31_0()
    + <DrawToolbar>b__31_1()
}

class "<>c__DisplayClass38_0" {
    + <DrawElements>b__0()
}

class "Wrapper" {
    + SetValue()
}

class "<>c__DisplayClass3_0" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__0()
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__1()
}

class "<>c__DisplayClass1_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
    + <PopulateGenericMenu>b__9()
}

class "<>c__DisplayClass2_0" {
    + <SetAxis>b__0()
}

class "<>c" {
    + <DropZone>b__21_3()
    + <DropZone>b__21_4()
    + <DropZone>b__21_5()
    + <DropZone>b__21_6()
}

class "<>c__31`1" {
    + <GetColumnAttribute>b__31_0()
    + <GetColumnAttribute>b__31_1()
}

class "<EnumerateGroupMembers>d__30" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.OdinInspector.Editor.InspectorProperty>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass12_0" {
    + <DrawRows>b__0()
    + <DrawRows>b__1()
    + <DrawRows>b__2()
    + <DrawRows>b__4()
    + <DrawRows>b__8()
    + <DrawRows>b__5()
    + <DrawRows>b__9()
    + <DrawRows>b__6()
    + <DrawRows>b__10()
    + <DrawRows>b__7()
    + <DrawRows>b__11()
}

class "<>c__DisplayClass12_1" {
    + <DrawRows>b__3()
}

class "<>c__DisplayClass13_0" {
    + <DrawColumn>b__0()
    + <DrawColumn>b__1()
    + <DrawColumn>b__2()
    + <DrawColumn>b__4()
    + <DrawColumn>b__8()
    + <DrawColumn>b__5()
    + <DrawColumn>b__9()
    + <DrawColumn>b__6()
    + <DrawColumn>b__10()
    + <DrawColumn>b__7()
    + <DrawColumn>b__11()
}

class "<>c__DisplayClass13_1" {
    + <DrawColumn>b__3()
}

class "<>c__DisplayClass14_1" {
    + <ApplyArrayModifications>b__0()
}

class "<>c__DisplayClass1_0" {
    + <RegisterDrawer>b__0()
}

class "<>c__DisplayClass6_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
}

class "<>c__DisplayClass9_0" {
    + <ShowSelectorInPopup>b__0()
}

class "<>c__DisplayClass9_1" {
    + <ShowSelectorInPopup>b__1()
}

class "<>c__DisplayClass10_0" {
    + <Sirenix.OdinInspector.Editor.IDefinesGenericMenuItems.PopulateGenericMenu>b__0()
}

class "<>c__DisplayClass9_0" {
    + <DrawPropertyLayout>b__0()
}

class "<>c__DisplayClass1_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
}

class "<>c__DisplayClass2_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass3_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass1_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
}

class "<>c__DisplayClass2_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass3_0" {
    + <NormalizeEntries>b__0()
}

class "<>c__DisplayClass1_0" {
    + <PopulateGenericMenu>b__0()
    + <PopulateGenericMenu>b__1()
    + <PopulateGenericMenu>b__2()
    + <PopulateGenericMenu>b__3()
    + <PopulateGenericMenu>b__4()
    + <PopulateGenericMenu>b__5()
    + <PopulateGenericMenu>b__6()
    + <PopulateGenericMenu>b__7()
    + <PopulateGenericMenu>b__8()
}

class "<>c__DisplayClass2_0" {
    + <SetVector>b__0()
}

class "<>c__DisplayClass3_0" {
    + <NormalizeEntries>b__0()
}

class "<>c" {
    + <.cctor>b__32_0()
    + <.cctor>b__32_1()
    + <.cctor>b__32_2()
}

class "<>c" {
    + <.cctor>b__4_0()
}

class "<>c__DisplayClass15_0" {
    + <GetDelegateInvoker>b__0()
}

class "<>c__DisplayClass16_0" {
    + <GetMethodInvoker>b__0()
}

class "<>c" {
    + <.cctor>b__5_0()
}

class "<>c__DisplayClass3_0" {
    + <GetExpressionLambda>b__0()
}

class "<>c" {
    + <Sort>b__33_0()
    + <Sort>b__33_1()
}

class "<>c" {
    + <Purge>b__5_0()
}

class "<Purge>d__5" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<>c" {
    + <.ctor>b__2_0()
}

class "<>c" {
    + <PopulateListRoutine>b__21_0()
}

class "<PopulateListRoutine>d__21" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<>c__DisplayClass2_0" {
    + <FixItThisTime>b__0()
}

class "AdoNetAppender" {
    + ActivateOptions()
    + OnClose()
    + SendBuffer()
    + AddParameter()
    + SendBuffer()
    + GetLogStatement()
    + CreateConnection()
    + ResolveConnectionString()
    + ResolveConnectionType()
    - InitializeDatabaseConnection()
    - DiposeConnection()
}

class "AdoNetAppenderParameter" {
    + Prepare()
    + FormatValue()
}

class "AnsiColorTerminalAppender" {
    + AddMapping()
    + Append()
    + ActivateOptions()
}

class "LevelColors" {
    + ActivateOptions()
}

class "AppenderCollection" {
    + CopyTo()
    + CopyTo()
    + Add()
    + Clear()
    + Clone()
    + Contains()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + AddRange()
    + AddRange()
    + AddRange()
    + TrimToSize()
    + ToArray()
    - ValidateIndex()
    - ValidateIndex()
    - EnsureCapacity()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "Enumerator" {
    + MoveNext()
    + Reset()
}

class "ReadOnlyAppenderCollection" {
    + CopyTo()
    + CopyTo()
    - System.Collections.ICollection.CopyTo()
    + Add()
    + Clear()
    + Contains()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + AddRange()
    + AddRange()
    + ToArray()
    + TrimToSize()
}

class "AspNetTraceAppender" {
    + Append()
}

class "BufferingForwardingAppender" {
    + OnClose()
    + SendBuffer()
    + AddAppender()
    + GetAppender()
    + RemoveAllAppenders()
    + RemoveAppender()
    + RemoveAppender()
}

class "ColoredConsoleAppender" {
    + AddMapping()
    + Append()
    + ActivateOptions()
}

class "LevelColors" {
    + ActivateOptions()
}

class "ConsoleAppender" {
    + Append()
}

class "DebugAppender" {
    + Append()
}

class "EventLogAppender" {
    + AddMapping()
    + ActivateOptions()
    + Append()
    + GetEntryType()
}

class "TextWriterAppender" {
    + PreAppendCheck()
    + Append()
    + Append()
    + OnClose()
    + WriteFooterAndCloseWriter()
    + CloseWriter()
    + Reset()
    + WriteFooter()
    + WriteHeader()
    + PrepareWriter()
}

class "FileAppender" {
    + ActivateOptions()
    + Reset()
    + OnClose()
    + PrepareWriter()
    + Append()
    + Append()
    + WriteFooter()
    + WriteHeader()
    + CloseWriter()
    + CloseFile()
    + SafeOpenFile()
    + OpenFile()
    + SetQWForFiles()
    + SetQWForFiles()
}

class "LockingStream" {
    + BeginRead()
    + BeginWrite()
    + Close()
    + EndRead()
    + EndWrite()
    + Flush()
    + Read()
    + ReadByte()
    + Seek()
    + SetLength()
    - System.IDisposable.Dispose()
    + Write()
    + WriteByte()
    - AssertLocked()
    + AcquireLock()
    + ReleaseLock()
}

class "ExclusiveLock" {
    + OpenFile()
    + CloseFile()
    + AcquireLock()
    + ReleaseLock()
    + ActivateOptions()
    + OnClose()
}

class "MinimalLock" {
    + OpenFile()
    + CloseFile()
    + AcquireLock()
    + ReleaseLock()
    + ActivateOptions()
    + OnClose()
}

class "InterProcessLock" {
    + OpenFile()
    + CloseFile()
    + AcquireLock()
    + ReleaseLock()
    + ActivateOptions()
    + OnClose()
}

class "ForwardingAppender" {
    + OnClose()
    + Append()
    + Append()
    + AddAppender()
    + GetAppender()
    + RemoveAllAppenders()
    + RemoveAppender()
    + RemoveAppender()
}

class "LocalSyslogAppender" {
    + AddMapping()
    + ActivateOptions()
    + Append()
    + OnClose()
    + GetSeverity()
}

class "ManagedColoredConsoleAppender" {
    + AddMapping()
    + Append()
    + ActivateOptions()
}

class "MemoryAppender" {
    + GetEvents()
    + Append()
    + Clear()
    + PopAllEvents()
}

class "NetSendAppender" {
    + ActivateOptions()
    + Append()
}

class "OutputDebugStringAppender" {
    + Append()
}

class "UdpAppender" {
    + ActivateOptions()
    + Append()
    + OnClose()
    + InitializeClientConnection()
}

class "RemoteSyslogAppender" {
    + AddMapping()
    + Append()
    + ActivateOptions()
    + GetSeverity()
}

class "RemotingAppender" {
    + ActivateOptions()
    + SendBuffer()
    + OnClose()
    - BeginAsyncSend()
    - EndAsyncSend()
    - SendBufferCallback()
}

class "RollingFileAppender" {
    + Finalize()
    + SetQWForFiles()
    + Append()
    + Append()
    + AdjustFileBeforeAppend()
    + OpenFile()
    + GetNextOutputFileName()
    - DetermineCurSizeRollBackups()
    - GetWildcardPatternForFile()
    - GetExistingFiles()
    - RollOverIfDateBoundaryCrossing()
    + ExistingInit()
    - InitializeFromOneFile()
    - GetBackUpIndex()
    - InitializeRollBackups()
    - ComputeCheckPeriod()
    + ActivateOptions()
    - CombinePath()
    + RollOverTime()
    + RollFile()
    + FileExists()
    + DeleteFile()
    + RollOverSize()
    + RollOverRenameFiles()
    + NextCheckDate()
}

class "SmtpAppender" {
    + SendBuffer()
    + SendEmail()
}

class "SmtpPickupDirAppender" {
    + SendBuffer()
    + ActivateOptions()
}

class "TelnetAppender" {
    + OnClose()
    + ActivateOptions()
    + Append()
}

class "SocketHandler" {
    + Send()
    - AddClient()
    - RemoveClient()
    - OnConnect()
    + Dispose()
}

class "SocketClient" {
    + Send()
    + Dispose()
}

class "TraceAppender" {
    + Append()
}

class "XmlConfiguratorAttribute" {
    + Configure()
    - ConfigureFromFile()
    - ConfigureFromFile()
    - ConfigureFromUri()
}

class "Log4NetConfigurationSectionHandler" {
    + Create()
}

class "PluginAttribute" {
    + CreatePlugin()
    + ToString()
}

class "SecurityContextProviderAttribute" {
    + Configure()
}

class "ConfigureAndWatchHandler" {
    - ConfigureAndWatchHandler_OnChanged()
    - ConfigureAndWatchHandler_OnRenamed()
    - OnWatchedFileChange()
    + Dispose()
}

class "CompactRepositorySelector" {
    + GetRepository()
    + GetRepository()
    + CreateRepository()
    + CreateRepository()
    + ExistsRepository()
    + GetAllRepositories()
    + OnLoggerRepositoryCreatedEvent()
}

class "DefaultRepositorySelector" {
    + GetRepository()
    + GetRepository()
    + CreateRepository()
    + CreateRepository()
    + CreateRepository()
    + ExistsRepository()
    + GetAllRepositories()
    + AliasRepository()
    + OnLoggerRepositoryCreatedEvent()
    - GetInfoForAssembly()
    - ConfigureRepository()
    - LoadPlugins()
    - LoadAliases()
}

class "ExceptionEvaluator" {
    + IsTriggeringEvent()
}

class "LoggerRepositoryCreationEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Level" {
    + ToString()
    + Equals()
    + GetHashCode()
    + CompareTo()
}

class "LevelCollection" {
    + CopyTo()
    + CopyTo()
    + Add()
    + Clear()
    + Clone()
    + Contains()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + AddRange()
    + AddRange()
    + AddRange()
    + TrimToSize()
    - ValidateIndex()
    - ValidateIndex()
    - EnsureCapacity()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "Enumerator" {
    + MoveNext()
    + Reset()
}

class "ReadOnlyLevelCollection" {
    + CopyTo()
    + CopyTo()
    + Add()
    + Clear()
    + Contains()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + AddRange()
    + AddRange()
}

class "LevelEvaluator" {
    + IsTriggeringEvent()
}

class "LevelMap" {
    + Clear()
    + Add()
    + Add()
    + Add()
    + LookupWithDefault()
}

class "LoggingEvent" {
    + EnsureRepository()
    + WriteRenderedMessage()
    + GetObjectData()
    + GetLoggingEventData()
    + GetLoggingEventData()
    + GetExceptionStrRep()
    + GetExceptionString()
    + FixVolatileData()
    + FixVolatileData()
    + FixVolatileData()
    - CreateCompositeProperties()
    - CacheProperties()
    + LookupProperty()
    + GetProperties()
}

class "LogImpl" {
    + ReloadLevels()
    + Debug()
    + Debug()
    + DebugFormat()
    + DebugFormat()
    + DebugFormat()
    + DebugFormat()
    + DebugFormat()
    + Info()
    + Info()
    + InfoFormat()
    + InfoFormat()
    + InfoFormat()
    + InfoFormat()
    + InfoFormat()
    + Warn()
    + Warn()
    + WarnFormat()
    + WarnFormat()
    + WarnFormat()
    + WarnFormat()
    + WarnFormat()
    + Error()
    + Error()
    + ErrorFormat()
    + ErrorFormat()
    + ErrorFormat()
    + ErrorFormat()
    + ErrorFormat()
    + Fatal()
    + Fatal()
    + FatalFormat()
    + FatalFormat()
    + FatalFormat()
    + FatalFormat()
    + FatalFormat()
    - LoggerRepositoryConfigurationChanged()
}

class "SecurityContextProvider" {
    + CreateSecurityContext()
}

class "TimeEvaluator" {
    + IsTriggeringEvent()
}

class "WrapperCreationHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WrapperMap" {
    + GetWrapper()
    + CreateNewWrapperObject()
    + RepositoryShutdown()
    - ILoggerRepository_Shutdown()
}

class "AbsoluteTimeDateFormatter" {
    + FormatDateWithoutMillis()
    + FormatDate()
}

class "DateTimeDateFormatter" {
    + FormatDateWithoutMillis()
}

class "Iso8601DateFormatter" {
    + FormatDateWithoutMillis()
}

class "SimpleDateFormatter" {
    + FormatDate()
}

class "DenyAllFilter" {
    + Decide()
}

class "LevelMatchFilter" {
    + Decide()
}

class "LevelRangeFilter" {
    + Decide()
}

class "LoggerMatchFilter" {
    + Decide()
}

class "StringMatchFilter" {
    + ActivateOptions()
    + Decide()
}

class "PropertyFilter" {
    + Decide()
}

class "AppDomainPatternConverter" {
    + Convert()
}

class "AspNetCachePatternConverter" {
    + Convert()
}

class "AspNetContextPatternConverter" {
    + Convert()
}

class "AspNetRequestPatternConverter" {
    + Convert()
}

class "AspNetSessionPatternConverter" {
    + Convert()
}

class "DatePatternConverter" {
    + ActivateOptions()
    + Convert()
}

class "ExceptionPatternConverter" {
    + Convert()
}

class "FileLocationPatternConverter" {
    + Convert()
}

class "FullLocationPatternConverter" {
    + Convert()
}

class "IdentityPatternConverter" {
    + Convert()
}

class "LevelPatternConverter" {
    + Convert()
}

class "LineLocationPatternConverter" {
    + Convert()
}

class "LoggerPatternConverter" {
    + GetFullyQualifiedName()
}

class "MessagePatternConverter" {
    + Convert()
}

class "MethodLocationPatternConverter" {
    + Convert()
}

class "NdcPatternConverter" {
    + Convert()
}

class "PropertyPatternConverter" {
    + Convert()
}

class "RelativeTimePatternConverter" {
    + Convert()
}

class "StackTracePatternConverter" {
    + ActivateOptions()
    + Convert()
    + GetMethodInformation()
}

class "StackTraceDetailPatternConverter" {
    + GetMethodInformation()
}

class "ThreadPatternConverter" {
    + Convert()
}

class "TypeNamePatternConverter" {
    + GetFullyQualifiedName()
}

class "UserNamePatternConverter" {
    + Convert()
}

class "UtcDatePatternConverter" {
    + Convert()
}

class "PatternLayout" {
    + CreatePatternParser()
    + ActivateOptions()
    + Format()
    + AddConverter()
    + AddConverter()
}

class "ExceptionLayout" {
    + ActivateOptions()
    + Format()
}

class "Layout2RawLayoutAdapter" {
    + Format()
}

class "RawLayoutConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "RawPropertyLayout" {
    + Format()
}

class "RawTimeStampLayout" {
    + Format()
}

class "RawUtcTimeStampLayout" {
    + Format()
}

class "SimpleLayout" {
    + ActivateOptions()
    + Format()
}

class "XmlLayout" {
    + ActivateOptions()
    + FormatXml()
}

class "XmlLayoutSchemaLog4j" {
    + FormatXml()
}

class "DefaultRenderer" {
    + RenderObject()
    - RenderArray()
    - RenderEnumerator()
    - RenderDictionaryEntry()
}

class "RendererMap" {
    + FindAndRender()
    + FindAndRender()
    + Get()
    + Get()
    - SearchTypeAndInterfaces()
    + Clear()
    + Put()
}

class "PluginCollection" {
    + CopyTo()
    + CopyTo()
    + Add()
    + Clear()
    + Clone()
    + Contains()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + AddRange()
    + AddRange()
    + AddRange()
    + TrimToSize()
    - ValidateIndex()
    - ValidateIndex()
    - EnsureCapacity()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IList.Add()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "Enumerator" {
    + MoveNext()
    + Reset()
}

class "ReadOnlyPluginCollection" {
    + CopyTo()
    + CopyTo()
    + Add()
    + Clear()
    + Contains()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + GetEnumerator()
    + AddRange()
    + AddRange()
}

class "PluginMap" {
    + Add()
    + Remove()
}

class "RemoteLoggingServerPlugin" {
    + Attach()
    + Shutdown()
}

class "RemoteLoggingSinkImpl" {
    + LogEvents()
    + InitializeLifetimeService()
}

class "DefaultLoggerFactory" {
    + CreateLogger()
}

class "LoggerCreationEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Hierarchy" {
    + Exists()
    + GetCurrentLoggers()
    + GetLogger()
    + Shutdown()
    + ResetConfiguration()
    + Log()
    + GetAppenders()
    - log4net.Repository.IBasicRepositoryConfigurator.Configure()
    - log4net.Repository.IBasicRepositoryConfigurator.Configure()
    + BasicRepositoryConfigure()
    - log4net.Repository.IXmlRepositoryConfigurator.Configure()
    + XmlRepositoryConfigure()
    + IsDisabled()
    + Clear()
    + GetLogger()
    + OnLoggerCreationEvent()
    - UpdateParents()
    + AddLevel()
    + AddProperty()
}

class "LevelEntry" {
    + ToString()
}

class "LoggerKey" {
    + GetHashCode()
    + Equals()
}

class "XmlHierarchyConfigurator" {
    + Configure()
    + FindAppenderByReference()
    + ParseAppender()
    + ParseLogger()
    + ParseRoot()
    + ParseChildrenOfLoggerElement()
    + ParseRenderer()
    + ParseLevel()
    + SetParameter()
    - HasAttributesOrElements()
    - FindMethodInfo()
    + ConvertStringTo()
    + CreateObjectFromXml()
    - CreateCaseInsensitiveWrapper()
}

class "LoggerRepositoryShutdownEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LoggerRepositoryConfigurationResetEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LoggerRepositoryConfigurationChangedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AppDomainPatternConverter" {
    + Convert()
}

class "DatePatternConverter" {
    + ActivateOptions()
    + Convert()
}

class "EnvironmentFolderPathPatternConverter" {
    + Convert()
}

class "EnvironmentPatternConverter" {
    + Convert()
}

class "IdentityPatternConverter" {
    + Convert()
}

class "LiteralPatternConverter" {
    + SetNext()
    + Format()
    + Convert()
}

class "NewLinePatternConverter" {
    + ActivateOptions()
}

class "ProcessIdPatternConverter" {
    + Convert()
}

class "PropertyPatternConverter" {
    + Convert()
}

class "RandomStringPatternConverter" {
    + ActivateOptions()
    + Convert()
}

class "UserNamePatternConverter" {
    + Convert()
}

class "UtcDatePatternConverter" {
    + Convert()
}

class "BooleanConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "EncodingConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "IPAddressConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "PatternLayoutConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "PatternStringConverter" {
    + CanConvertTo()
    + ConvertTo()
    + CanConvertFrom()
    + ConvertFrom()
}

class "TypeConverter" {
    + CanConvertFrom()
    + ConvertFrom()
}

class "AppenderAttachedImpl" {
    + AppendLoopOnAppenders()
    + AppendLoopOnAppenders()
    + AddAppender()
    + GetAppender()
    + RemoveAllAppenders()
    + RemoveAppender()
    + RemoveAppender()
}

class "CompositeProperties" {
    + Add()
    + Flatten()
}

class "ConverterInfo" {
    + AddProperty()
}

class "QuietTextWriter" {
    + Write()
    + Write()
    + Write()
    + Close()
}

class "CountingQuietTextWriter" {
    + Write()
    + Write()
    + Write()
}

class "CyclicBuffer" {
    + Append()
    + PopOldest()
    + PopAll()
    + Clear()
}

class "EmptyCollection" {
    + CopyTo()
    + GetEnumerator()
}

class "EmptyDictionary" {
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + Add()
    + Clear()
    + Contains()
    + GetEnumerator()
    + Remove()
}

class "GlobalContextProperties" {
    + Remove()
    + Clear()
    + GetReadOnlyProperties()
}

class "LevelMapping" {
    + Add()
    + Lookup()
    + ActivateOptions()
}

class "LogicalThreadContextProperties" {
    + Remove()
    + Clear()
    + GetProperties()
}

class "TwoArgAction`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LogicalThreadContextStack" {
    + Clear()
    + Pop()
    + Push()
    + GetFullMessage()
    + ToString()
    - log4net.Core.IFixingRequired.GetFixedObject()
}

class "LogicalThreadContextStacks" {
    - registerNew()
}

class "LogReceivedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LogLog" {
    + ToString()
}

class "LogReceivedAdapter" {
    - LogLog_LogReceived()
    + Dispose()
}

class "NativeError" {
    + ToString()
}

class "NullDictionaryEnumerator" {
    + MoveNext()
    + Reset()
}

class "NullEnumerator" {
    + MoveNext()
    + Reset()
}

class "NullSecurityContext" {
    + Impersonate()
}

class "OnlyOnceErrorHandler" {
    + Reset()
    + Error()
    + FirstError()
    + Error()
    + Error()
}

class "PatternParser" {
    + Parse()
    - BuildCache()
    - ParseInternal()
    - ProcessLiteral()
    - ProcessConverter()
    - AddConverter()
}

class "StringLengthComparer" {
    + Compare()
}

class "PatternString" {
    + ActivateOptions()
    - CreatePatternParser()
    + Format()
    + Format()
    + AddConverter()
    + AddConverter()
}

class "ReadOnlyPropertiesDictionary" {
    + GetKeys()
    + Contains()
    + GetObjectData()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.IDictionary.Contains()
    + Clear()
    - System.Collections.IDictionary.Add()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "PropertiesDictionary" {
    + Remove()
    - System.Collections.IDictionary.GetEnumerator()
    - System.Collections.IDictionary.Remove()
    - System.Collections.IDictionary.Contains()
    + Clear()
    - System.Collections.IDictionary.Add()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "PropertyEntry" {
    + ToString()
}

class "ProtectCloseTextWriter" {
    + Attach()
    + Close()
}

class "ReaderWriterLock" {
    + AcquireReaderLock()
    + ReleaseReaderLock()
    + AcquireWriterLock()
    + ReleaseWriterLock()
}

class "ReusableStringWriter" {
    + Dispose()
    + Reset()
}

class "SystemStringFormat" {
    + ToString()
}

class "ThreadContextProperties" {
    + Remove()
    + GetKeys()
    + Clear()
    + GetProperties()
}

class "ThreadContextStack" {
    + Clear()
    + Pop()
    + Push()
    + GetFullMessage()
    + ToString()
    - log4net.Core.IFixingRequired.GetFixedObject()
}

class "WindowsSecurityContext" {
    + ActivateOptions()
    + Impersonate()
}

class "DisposableImpersonationContext" {
    + Dispose()
}

class "BoxGroupAttribute" {
    + CombineValuesWith()
}

class "FoldoutGroupAttribute" {
    + CombineValuesWith()
}

class "HideIfGroupAttribute" {
    + CombineValuesWith()
}

class "HorizontalGroupAttribute" {
    + CombineValuesWith()
}

class "ResponsiveButtonGroupAttribute" {
    + CombineValuesWith()
}

class "ShowIfGroupAttribute" {
    + CombineValuesWith()
}

class "TabGroupAttribute" {
    + CombineValuesWith()
    - Sirenix.OdinInspector.Internal.ISubGroupProviderAttribute.GetSubGroupAttributes()
    - Sirenix.OdinInspector.Internal.ISubGroupProviderAttribute.RepathMemberAttribute()
}

class "TitleGroupAttribute" {
    + CombineValuesWith()
}

class "ToggleGroupAttribute" {
    + CombineValuesWith()
}

class "ValueDropdownList`1" {
    + Add()
    + Add()
}

class "VerticalGroupAttribute" {
    + CombineValuesWith()
}

class "SelfValidationResult" {
    + AddError()
    + AddWarning()
    + Add()
    + Add()
}

class "SelfMetaData" {
    + Add()
}

class "<>c" {
    + <set_Paths>b__12_0()
}

class "TabSubGroupAttribute" {
    + CombineValuesWith()
}

class "<>c__DisplayClass6_0" {
    + <WithContextClick>b__0()
}

class "<>c__DisplayClass7_0" {
    + <WithContextClick>b__0()
}

class "<>c__DisplayClass8_0" {
    + <WithContextClick>b__0()
}

class "DoubleLookupDictionary`3" {
    + InnerCount()
    + TotalInnerCount()
    + ContainsKeys()
    + TryGetInnerValue()
    + AddInner()
    + RemoveInner()
    + RemoveWhere()
}

class "WeakValueGetter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WeakValueSetter" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WeakValueGetter`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WeakValueSetter`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValueGetter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ValueSetter`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ImmutableHashSet`1" {
    + Contains()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "ImmutableList" {
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<System.Object>.RemoveAt()
    - System.Collections.Generic.IList<System.Object>.Insert()
    - System.Collections.Generic.ICollection<System.Object>.Add()
    - System.Collections.Generic.ICollection<System.Object>.Clear()
    - System.Collections.Generic.ICollection<System.Object>.Remove()
}

class "ImmutableList`1" {
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<T>.Add()
    - System.Collections.Generic.ICollection<T>.Clear()
    - System.Collections.Generic.ICollection<T>.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.Generic.IList<T>.Insert()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<T>.RemoveAt()
}

class "ImmutableList`2" {
    + Contains()
    + CopyTo()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.Generic.ICollection<TElement>.Add()
    - System.Collections.Generic.ICollection<TElement>.Clear()
    - System.Collections.Generic.ICollection<TElement>.Remove()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.Generic.IList<TElement>.Insert()
    - System.Collections.IList.RemoveAt()
    + IndexOf()
    - System.Collections.Generic.IList<TElement>.RemoveAt()
}

class "MemberAliasFieldInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetValue()
    + SetValue()
}

class "MemberAliasMethodInfo" {
    + GetBaseDefinition()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetMethodImplementationFlags()
    + GetParameters()
    + Invoke()
    + IsDefined()
}

class "MemberAliasPropertyInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
    + GetAccessors()
    + GetGetMethod()
    + GetIndexParameters()
    + GetSetMethod()
    + GetValue()
    + SetValue()
}

class "ReferenceEqualityComparer`1" {
    + Equals()
    + GetHashCode()
}

class "<>c__DisplayClass0_0`1" {
    + <Memoize>b__0()
}

class "<>c__DisplayClass1_0`2" {
    + <Memoize>b__0()
}

class "<AppendIf>d__20`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendIf>d__21`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendIf>d__22`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendIf>d__23`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendIf>d__24`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendIf>d__25`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendWith>d__17`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendWith>d__18`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<AppendWith>d__19`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<Convert>d__3`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<Examine>d__0`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<FilterCast>d__26`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__10`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__11`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__12`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__13`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__14`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__15`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__16`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__8`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependIf>d__9`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependWith>d__5`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependWith>d__6`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<PrependWith>d__7`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__37`1" {
    + <GetEqualityComparerDelegate>b__37_0()
    + <GetEqualityComparerDelegate>b__37_1()
}

class "<>c__DisplayClass31_0" {
    + <GetCastMethodDelegate>b__0()
}

class "<>c__DisplayClass47_0" {
    + <GetOperatorMethod>b__0()
}

class "<>c__DisplayClass48_0" {
    + <GetOperatorMethods>b__0()
}

class "<GetAllMembers>d__49" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllMembers>d__50" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllMembers>d__51`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetBaseClasses>d__55" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetCustomAttributes>d__64`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass11_0`1" {
    + <CreateWeakInstanceValueGetter>b__0()
}

class "<>c__DisplayClass12_0`1" {
    + <CreateValueGetter>b__0()
}

class "<>c__DisplayClass13_0`2" {
    + <CreateValueGetter>b__0()
}

class "<>c__DisplayClass14_0`2" {
    + <CreateWeakAliasForInstanceGetDelegate1>b__0()
}

class "<>c__DisplayClass15_0`2" {
    + <CreateWeakAliasForInstanceGetDelegate2>b__0()
}

class "<>c__DisplayClass16_0`1" {
    + <CreateWeakAliasForStaticGetDelegate>b__0()
}

class "<>c__DisplayClass17_0`2" {
    + <CreateWeakAliasForInstanceSetDelegate1>b__0()
}

class "<>c__DisplayClass18_0`2" {
    + <CreateWeakAliasForInstanceSetDelegate2>b__0()
}

class "<>c__DisplayClass19_0`1" {
    + <CreateWeakAliasForStaticSetDelegate>b__0()
}

class "<>c__DisplayClass21_0" {
    + <CreateSlowDeepStaticValueGetterDelegate>b__0()
}

class "<>c__DisplayClass22_0" {
    + <CreateSlowDeepInstanceValueGetterDelegate>b__0()
}

class "<>c__DisplayClass23_0" {
    + <CreateSlowDeepInstanceValueSetterDelegate>b__0()
}

class "<>c__DisplayClass10_0`1" {
    + <CreateWeakInstanceFieldGetter>b__0()
}

class "<>c__DisplayClass11_0" {
    + <CreateWeakInstanceFieldGetter>b__0()
}

class "<>c__DisplayClass12_0`2" {
    + <CreateInstanceFieldSetter>b__0()
}

class "<>c__DisplayClass13_0`1" {
    + <CreateWeakInstanceFieldSetter>b__0()
}

class "<>c__DisplayClass14_0" {
    + <CreateWeakInstanceFieldSetter>b__0()
}

class "<>c__DisplayClass15_0" {
    + <CreateWeakInstancePropertyGetter>b__0()
}

class "<>c__DisplayClass16_0" {
    + <CreateWeakInstancePropertySetter>b__0()
}

class "<>c__DisplayClass17_0`1" {
    + <CreateStaticPropertySetter>b__0()
}

class "<>c__DisplayClass18_0`1" {
    + <CreateStaticPropertyGetter>b__0()
}

class "<>c__DisplayClass19_0`2" {
    + <CreateInstancePropertySetter>b__0()
}

class "<>c__DisplayClass20_0`2" {
    + <CreateInstancePropertyGetter>b__0()
}

class "<>c__DisplayClass23_0`1" {
    + <CreateWeakInstanceMethodCaller>b__0()
}

class "<>c__DisplayClass24_0" {
    + <CreateWeakInstanceMethodCaller>b__0()
}

class "<>c__DisplayClass25_0`2" {
    + <CreateWeakInstanceMethodCaller>b__0()
}

class "<>c__DisplayClass26_0`1" {
    + <CreateWeakInstanceMethodCallerFunc>b__0()
}

class "<>c__DisplayClass27_0`2" {
    + <CreateWeakInstanceMethodCallerFunc>b__0()
}

class "<>c__DisplayClass5_0`1" {
    + <CreateStaticFieldGetter>b__0()
}

class "<>c__DisplayClass5_1`1" {
    + <CreateStaticFieldGetter>b__1()
}

class "<>c__DisplayClass6_0" {
    + <CreateWeakStaticFieldGetter>b__0()
}

class "<>c__DisplayClass7_0`1" {
    + <CreateStaticFieldSetter>b__0()
}

class "<>c__DisplayClass8_0" {
    + <CreateWeakStaticFieldSetter>b__0()
}

class "<>c__DisplayClass9_0`2" {
    + <CreateInstanceFieldGetter>b__0()
}

class "<>c" {
    + <OpenInEditor>b__9_0()
}

class "<>c__DisplayClass3_0" {
    + <GetInstance>b__0()
}

class "GUILayoutOptionsInstance" {
    - GetCachedOptions()
    - CreateOptionsArary()
    - Clone()
    + Width()
    + Height()
    + MaxHeight()
    + MaxWidth()
    + MinHeight()
    + MinWidth()
    + ExpandHeight()
    + ExpandWidth()
    + SetValue()
    + SetValue()
    + Equals()
    + GetHashCode()
}

class "<System-Collections-Generic-IEnumerable<System-Object>-GetEnumerator>d__25" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
}

class "<>c" {
    + <.cctor>b__11_0()
}

class "<>f__AnonymousType0`2" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType1`2" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "FastTypeComparer" {
    + Equals()
    + GetHashCode()
}

class "MemberFinder" {
    + HasNoParameters()
    + IsDeclaredOnly()
    + HasParameters()
    + HasParameters()
    + HasParameters()
    + HasParameters()
    + HasParameters()
    + HasParameters()
    + HasParameters()
    + HasParameters()
    + HasReturnType()
    + HasReturnType()
    + HasConvertableReturnType()
    + HasConvertableReturnType()
    + IsFieldOrProperty()
    + IsStatic()
    + IsInstance()
    + IsNamed()
    + IsProperty()
    + IsMethod()
    + IsField()
    + IsPublic()
    + IsNonPublic()
    + IsNamed()
    + ReturnsVoid()
    + GetMember()
    + GetMember()
    + GetMember()
    + TryGetMember()
    + TryGetMember()
    + TryGetMembers()
    - InitializeFor()
    - Reset()
    - HasCondition()
}

class "LazyEditorIcon" {
    + Dispose()
    - RenderIcon()
}

class "DelayedGUIDrawer" {
    + Begin()
    + Begin()
    + End()
    + Draw()
}

class "DragHandle" {
    + Update()
    - SetCurrentDragAndDropMethod()
    - FinalizeDropObject()
    + DropObject()
    + DropObject()
}

class "DropZoneHandle" {
    + ClaimObject()
    + Update()
}

class "OnDragFinnished" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GUIPagingHelper" {
    + Update()
    + DrawToolbarPagingButtons()
}

class "GUIScopeStack`1" {
    + Push()
    + Pop()
    + Peek()
}

class "GUITabGroup" {
    + SetCurrentPage()
    + RegisterTab()
    + BeginGroup()
    + EndGroup()
    - Animate()
    - DrawToolbar()
    - DrawMultilineToolbar()
    - DrawSingleLineToolbar()
    + GoToPage()
    + GoToPage()
    + GoToNextPage()
    + GoToPreviousPage()
}

class "MultilineWrapLayoutUtility" {
    + ComputeAndAllocateRect()
    - CalcHeight()
    - <CalcHeight>b__16_0()
}

class "GUITable" {
    + DrawTable()
    + MarkDirty()
    - SpanCellX()
    - SpanCellY()
    + ReCalculateSizes()
    - ApplyTitleStyle()
    - ApplyListStyle()
}

class "GUITableCell" {
    + Draw()
}

class "GUITableRowLayoutGroup" {
    + GetRowRect()
    + BeginTable()
    - DrawScrollBars()
    - GetScrollViewOptions()
    - GetOuterRectLayoutOptions()
    + BeginColumn()
    + BeginCell()
    + EndCell()
    + EndColumn()
    + EndTable()
    - UpdateSpaceAllocation()
}

class "GUITabPage" {
    + OnBeginGroup()
    + OnEndGroup()
    + BeginPage()
    + EndPage()
}

class "SlidePageNavigationHelper`1" {
    + PushPage()
    + NavigateBack()
    + NavigateBack()
    + DrawPageNavigation()
    + BeginGroup()
    + EndGroup()
}

class "SearchField" {
    + Focus()
    + HasFocus()
    + Draw()
    + Draw()
}

class "StringHistoryList" {
    + Apply()
    + ReleaseControlId()
    + GetPrevious()
    + GetNext()
    + Reset()
    + Clear()
    + SetMaxLength()
    - Save()
    - Load()
}

class "InstanceCreatorWindow" {
    + Initialize()
    - GetTypeTree()
    - OnGUI()
    - SelectChosenType()
    - SetSelectedType()
    - CreateInstance()
    + GetWindowHeight()
}

class "ObjectPicker`1" {
    - Update()
    + ClaimObject()
    + ShowObjectPicker()
}

class "ObjectPicker" {
    + ClaimObject()
    + ShowObjectPicker()
    + ShowObjectPicker()
    + Update()
}

class "GUITimeHelper" {
    - Update()
}

class "EditorTimeHelper" {
    + Update()
}

class "GUIFrameCounter" {
    + Update()
}

class "StringSliceEqualityComparer" {
    + Equals()
    + Equals()
    + GetHashCode()
    + GetHashCode()
}

class "ASTEmitter" {
    + EmitMethod()
    + EmitMethod()
    + Add()
    + AddressOf()
    + ArrayOf()
    + BaseAccess()
    + BitwiseAnd()
    + BitwiseExclusiveOr()
    + BitwiseInclusiveOr()
    + Checked()
    + ConstantBoolean()
    + ConstantChar()
    + ConstantDecimal()
    + ConstantFloat32()
    + ConstantFloat64()
    + ConstantNull()
    + ConstantSignedInt32()
    + ConstantSignedInt64()
    + ConstantString()
    + ConstantUnsignedInt32()
    + ConstantUnsignedInt64()
    + DefaultInferred()
    + DefaultTyped()
    + DereferencePointer()
    + Divide()
    + ElementAccess()
    + ElementAccess()
    + ElementAccessNullConditional()
    + ValueAccessNullConditional()
    + NumberedExpressionArgument()
    + NamedExpressionArgument()
    + Equals()
    + GreaterThan()
    + GreaterThanOrEqual()
    + Identifier()
    - Identifier()
    + InstantiateType()
    + Invocation()
    + Invocation()
    + LeftShift()
    + LessThan()
    + LessThanOrEqual()
    + LogicalAnd()
    + LogicalOr()
    + MemberAccess()
    + MemberAccess()
    + MemberAccessNullConditional()
    + MemberAccessPointerDereference()
    + Multiply()
    + NotEquals()
    + NullCoalesce()
    + ParenthesizedExpression()
    + PostDecrement()
    + PostIncrement()
    + PreDecrement()
    + PreIncrement()
    + PropertyQuery()
    + RelationalAs()
    + RelationalIs()
    + Remainder()
    + RightShift()
    + SimpleAssignment()
    - SimpleAssignment_IdentifierAccess()
    - SimpleAssignment_ElementAccess()
    + SizeOf()
    + Subtract()
    + TernaryConditional()
    + ThisAccess()
    + TypeCast()
    - TypeCast()
    + TypeOf()
    + TypeOfVoid()
    + UnaryComplement()
    + UnaryMinus()
    + UnaryNot()
    + Unchecked()
    - GetAndValidateNumberMathOperationResult()
    - EmitOperator()
    - EmitConvertParamsIfNecessary()
    + Nop()
}

class "ASTNode" {
    + ToString()
    + DeepCopy()
    + ToPrettyPrint()
    - PrettyPrint()
    + GetHighestPushedStackType()
}

class "ASTParser" {
    - GetNextToken()
    - Peek()
    - Accept()
    - Expect()
    - ExpectButDontEat()
    + Parse()
    - ExpressionStartTermAndContinuations()
    - ExpressionStartTermAndContinuationsUntil()
    - Continuation()
    - ExpressionStartTerm()
    - Constant()
    - PropertyQuery()
    - Identifier()
    - TypeOf()
    - SizeOf()
    - TypeName()
    - PreOperator()
    - ParenthesisedExpression()
    - This()
    - Base()
    - Default()
    - InstantiateType()
    - ExpressionArgument()
    - TypeCast()
    - MemberAccess()
    - Invocation()
    - ElementAccess()
    - Operator()
    - SimpleAssignment()
    - AssignmentOperator()
    - GetUnaryOperatorPrecedence()
    - GetTwoParamOperatorPrecedence()
    - ReadTypeName__()
}

class "ExpressionAction" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`3" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`4" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`5" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`6" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`7" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`8" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionAction`9" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`10" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`9" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`8" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`7" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`6" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`5" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`4" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`3" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ExpressionFunc`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SyntaxException" {
    + GetNiceErrorMessage()
    + GetCodeErrorSnippet()
}

class "Tokenizer" {
    + GetState()
    + SetState()
    + SetExpressionString()
    + GetNextToken()
    - EatWhiteSpace()
    - EatNextCharacter()
    - PeekNextCharacter()
    - ParseIdentifier()
    - ParseNumber()
}

class "Expressionator" {
    + Expressionate()
    + Bool()
    + String()
    + Int()
    + Expr()
    - GetContextParameters()
    + Expr()
    + ForEachExpressionate()
}

class "<>c__0`1" {
    + <ResizeColumns>b__0_0()
}

class "<>c__DisplayClass14_0" {
    + <DelayAction>b__0()
    + <DelayAction>b__1()
    + <DelayAction>b__2()
    + <DelayAction>b__3()
    + <DelayAction>b__4()
}

class "<>c__DisplayClass3_0" {
    + <MoveCaretToEndOfSearchFilter>b__0()
}

class "<GetTypes>d__27" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetTypes>d__28" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <TryGetMembers>b__42_1()
    + <TryGetMembers>b__42_5()
    + <TryGetMembers>b__42_12()
    + <TryGetMembers>b__42_11()
}

class "<>c__DisplayClass42_0" {
    + <TryGetMembers>b__0()
    + <TryGetMembers>b__4()
    + <TryGetMembers>b__6()
    + <TryGetMembers>b__2()
    + <TryGetMembers>b__3()
    + <TryGetMembers>b__10()
}

class "<>c__DisplayClass42_1" {
    + <TryGetMembers>b__7()
    + <TryGetMembers>b__8()
    + <TryGetMembers>b__9()
}

class "<>c" {
    + <Init>b__0_0()
}

class "<>c" {
    + <DropZone>b__41_4()
}

class "<>c__DisplayClass41_0" {
    + <DropZone>b__0()
    + <DropZone>b__1()
    + <DropZone>b__2()
    + <DropZone>b__3()
}

class "<>c" {
    + <RemoveUnusedConfigs>b__5_0()
}

class "<>c" {
    + <OpenEditorInOdinDropDown>b__59_0()
}

class "<>c__DisplayClass43_0" {
    + <.cctor>b__0()
}

class "<>c__DisplayClass58_0" {
    + <OpenInspectorWindow>b__0()
    + <OpenInspectorWindow>b__1()
}

class "<>c" {
    + <get_OrderedPages>b__17_0()
    + <get_OrderedPages>b__17_1()
    + <BeginGroup>b__47_0()
    + <BeginGroup>b__47_1()
    + <DrawSingleLineToolbar>b__55_0()
}

class "<>c" {
    + <CalcHeight>b__16_1()
}

class "<>c" {
    + <Create>b__25_0()
}

class "<>c__DisplayClass22_0" {
    + <ApplyTitleStyle>b__0()
}

class "<>c__DisplayClass23_0" {
    + <ApplyListStyle>b__0()
    + <ApplyListStyle>b__1()
    + <ApplyListStyle>b__2()
    + <ApplyListStyle>b__3()
}

class "<>c__DisplayClass24_0" {
    + <Create>b__0()
    + <Create>b__1()
}

class "<>c__DisplayClass24_1" {
    + <Create>b__2()
}

class "<>c__DisplayClass24_2" {
    + <Create>b__3()
}

class "<>c__DisplayClass24_3" {
    + <Create>b__4()
}

class "<>c__DisplayClass25_0" {
    + <Create>b__1()
}

class "<>c__DisplayClass25_2" {
    + <Create>b__2()
}

class "<>c__DisplayClass25_3" {
    + <Create>b__3()
}

class "Page" {
    + BeginPage()
    + EndPage()
}

class "<get_EnumeratePages>d__5" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Utilities.Editor.SlidePageNavigationHelper<T>.Page>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "_ExpressionEvaluator_Evaluate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "QuaternionContextBuffer" {
    + Set()
}

class "<>c" {
    + <FilePathField>b__207_0()
    + <FilePathField>b__207_1()
    + <GetFilePanelExtensions>b__220_0()
    + <GetFilePanelExtensions>b__220_1()
    + <EnumFlagDropdownImplementation>b__305_0()
    + <EnumFlagDropdownImplementation>b__305_1()
    + <EnumFlagDropdownImplementation>b__305_4()
}

class "<>c__DisplayClass207_0" {
    + <FilePathField>b__2()
}

class "<>c__DisplayClass294_1`1" {
    + <Dropdown>b__0()
    + <Dropdown>b__1()
}

class "<>c__DisplayClass304_1" {
    + <EnumDropdownImplementation>b__0()
}

class "<>c__DisplayClass305_0" {
    + <EnumFlagDropdownImplementation>b__2()
}

class "<>c__DisplayClass305_1" {
    + <EnumFlagDropdownImplementation>b__3()
}

class "<>c__DisplayClass305_2" {
    + <EnumFlagDropdownImplementation>b__5()
}

class "<>c__DisplayClass305_3" {
    + <EnumFlagDropdownImplementation>b__6()
}

class "<>c__DisplayClass314_0`1" {
    + <Dropdown>b__1()
}

class "<>c__DisplayClass314_1`1" {
    + <Dropdown>b__0()
    + <Dropdown>b__2()
}

class "<>c" {
    + <.cctor>b__254_0()
    + <.cctor>b__254_1()
    + <.cctor>b__254_2()
    + <.cctor>b__254_3()
    + <.cctor>b__254_4()
    + <.cctor>b__254_5()
    + <.cctor>b__254_6()
    + <.cctor>b__254_7()
    + <.cctor>b__254_8()
    + <.cctor>b__254_9()
    + <.cctor>b__254_10()
    + <.cctor>b__254_11()
    + <.cctor>b__254_12()
    + <.cctor>b__254_13()
}

class "<>c__DisplayClass71_0" {
    + <WarningMessageBox>b__0()
}

class "<>c__DisplayClass84_0" {
    + <PrivateMessageBox>b__0()
}

class "<>c__DisplayClass86_0" {
    + <IconMessageBox>b__0()
}

class "TypeTreeNode" {
    + PrependType()
    + DrawItem()
    + EnumerateTree()
    + Initialize()
    + UpdateSearchTerm()
    - SetMatchesSearchTermRecursive()
}

class "<>c" {
    + <GetTypeTree>b__14_3()
    + <GetTypeTree>b__14_4()
    + <GetTypeTree>b__14_9()
    + <GetTypeTree>b__14_11()
    + <GetTypeTree>b__14_13()
    + <GetTypeTree>b__14_17()
    + <GetTypeTree>b__14_18()
    + <GetTypeTree>b__14_19()
    + <GetTypeTree>b__14_20()
    + <GetTypeTree>b__14_14()
    + <GetTypeTree>b__14_15()
    + <GetTypeTree>b__14_16()
    + <GetTypeTree>b__14_6()
    + <GetTypeTree>b__14_0()
    + <GetTypeTree>b__14_21()
    + <GetTypeTree>b__14_1()
    + <GetWindowHeight>b__19_0()
}

class "<>c__DisplayClass14_0" {
    + <GetTypeTree>b__7()
    + <GetTypeTree>b__10()
    + <GetTypeTree>b__12()
}

class "<>c__DisplayClass14_1" {
    + <GetTypeTree>b__2()
    + <GetTypeTree>b__5()
}

class "<>c__DisplayClass14_2" {
    + <GetTypeTree>b__8()
}

class "<GetAllAssetsOfType>d__0`1" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllAssetsOfType>d__2" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<UnityEngine.Object>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<GetAllAssetsOfTypeWithProgress>d__3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Utilities.Editor.AssetUtilities.AssetSearchResult>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c__DisplayClass4_0" {
    + <OnBeginContainer>b__0()
}

class "<>c" {
    + <.cctor>b__2_0()
    + <.cctor>b__2_1()
    + <.cctor>b__2_2()
    + <.cctor>b__2_3()
}

class "<>c__DisplayClass21_0" {
    + <InternalAddCustomUnit>b__0()
}

class "<>c__DisplayClass8_0" {
    + <TryGetUnitInfoByName>b__0()
    + <TryGetUnitInfoByName>b__1()
}

class "<>c__DisplayClass9_0" {
    + <TryMatchUnitInfoBySymbol>b__0()
}

class "<GetAllUnitInfos>d__3" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Utilities.Editor.UnitInfo>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "DrawUnityObjectField" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DrawPolymorphicObjectField" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DoObjectPickerZone" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "NamespaceInfo" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
}

class "BaseAccessMember" {
    + GetCustomAttributes()
    + GetCustomAttributes()
    + IsDefined()
}

class "UnresolvedMethodOverload" {
    + ResolveOverload()
    + GetAllCandidatesString()
    + GetBaseDefinition()
    + GetCustomAttributes()
    + GetCustomAttributes()
    + GetMethodImplementationFlags()
    + GetParameters()
    + Invoke()
    + IsDefined()
    + SetAccess()
}

class "<>c" {
    + <BaseAccess>b__14_0()
    + <ConstantNull>b__24_0()
    + <DefaultTyped>b__31_2()
    + <NamedExpressionArgument>b__40_0()
    + <NamedExpressionArgument>b__40_1()
    + <Identifier>b__45_0()
    + <Identifier>b__45_1()
    + <InstantiateType>b__46_2()
    + <InstantiateType>b__46_3()
    + <Invocation>b__48_3()
    + <SimpleAssignment_IdentifierAccess>b__72_0()
    + <ThisAccess>b__79_0()
    + <TypeOfVoid>b__83_0()
    + <UnaryComplement>b__84_0()
    + <UnaryMinus>b__85_0()
    + <UnaryNot>b__86_0()
    + <ResolveIdentifier>b__88_1()
    + <ResolveIdentifier>b__88_2()
    + <ResolveIdentifier>b__88_0()
    + <FindOverload>b__95_0()
    + <EmitOperator>b__110_0()
    + <Nop>b__125_0()
}

class "<>c__DisplayClass110_0" {
    + <EmitOperator>b__1()
    + <EmitOperator>b__2()
    + <EmitOperator>b__8()
    + <EmitOperator>b__9()
    + <EmitOperator>b__10()
    + <EmitOperator>b__11()
    + <EmitOperator>b__3()
    + <EmitOperator>b__4()
    + <EmitOperator>b__5()
    + <EmitOperator>b__6()
    + <EmitOperator>b__7()
}

class "<>c__DisplayClass110_1" {
    + <EmitOperator>b__12()
}

class "<>c__DisplayClass110_2" {
    + <EmitOperator>b__13()
    + <EmitOperator>b__14()
}

class "<>c__DisplayClass111_0" {
    + <GetOperatorMethod>b__0()
    + <GetOperatorMethod>b__1()
}

class "<>c__DisplayClass19_0" {
    + <ConstantBoolean>b__0()
}

class "<>c__DisplayClass20_0" {
    + <ConstantChar>b__0()
}

class "<>c__DisplayClass21_0" {
    + <ConstantDecimal>b__0()
}

class "<>c__DisplayClass22_0" {
    + <ConstantFloat32>b__0()
}

class "<>c__DisplayClass23_0" {
    + <ConstantFloat64>b__0()
}

class "<>c__DisplayClass25_0" {
    + <ConstantSignedInt32>b__0()
}

class "<>c__DisplayClass26_0" {
    + <ConstantSignedInt64>b__0()
}

class "<>c__DisplayClass27_0" {
    + <ConstantString>b__0()
}

class "<>c__DisplayClass28_0" {
    + <ConstantUnsignedInt32>b__0()
}

class "<>c__DisplayClass29_0" {
    + <ConstantUnsignedInt64>b__0()
}

class "<>c__DisplayClass31_0" {
    + <DefaultTyped>b__0()
    + <DefaultTyped>b__1()
}

class "<>c__DisplayClass35_1" {
    + <ElementAccess>b__0()
}

class "<>c__DisplayClass35_2" {
    + <ElementAccess>b__1()
}

class "<>c__DisplayClass35_3" {
    + <ElementAccess>b__2()
}

class "<>c__DisplayClass35_4" {
    + <ElementAccess>b__3()
}

class "<>c__DisplayClass36_0" {
    + <ElementAccessNullConditional>b__0()
}

class "<>c__DisplayClass37_0" {
    + <ValueAccessNullConditional>b__0()
    + <ValueAccessNullConditional>b__1()
}

class "<>c__DisplayClass39_0" {
    + <NumberedExpressionArgument>b__0()
}

class "<>c__DisplayClass40_0" {
    + <NamedExpressionArgument>b__2()
}

class "<>c__DisplayClass45_1" {
    + <Identifier>b__2()
    + <Identifier>b__3()
    + <Identifier>b__4()
    + <Identifier>b__5()
}

class "<>c__DisplayClass45_2" {
    + <Identifier>b__6()
}

class "<>c__DisplayClass45_3" {
    + <Identifier>b__7()
    + <Identifier>b__8()
}

class "<>c__DisplayClass46_0" {
    + <InstantiateType>b__0()
    + <InstantiateType>b__1()
    + <InstantiateType>b__4()
    + <InstantiateType>b__5()
}

class "<>c__DisplayClass48_0" {
    + <Invocation>b__0()
    + <Invocation>b__1()
}

class "<>c__DisplayClass48_1" {
    + <Invocation>b__2()
}

class "<>c__DisplayClass48_2" {
    + <Invocation>b__4()
}

class "<>c__DisplayClass52_0" {
    + <LogicalAnd>b__0()
    + <LogicalAnd>b__1()
    + <LogicalAnd>b__2()
}

class "<>c__DisplayClass53_0" {
    + <LogicalOr>b__0()
    + <LogicalOr>b__1()
    + <LogicalOr>b__2()
}

class "<>c__DisplayClass56_0" {
    + <MemberAccessNullConditional>b__0()
}

class "<>c__DisplayClass60_0" {
    + <NullCoalesce>b__0()
    + <NullCoalesce>b__1()
}

class "<>c__DisplayClass66_0" {
    + <PropertyQuery>b__0()
}

class "<>c__DisplayClass67_0" {
    + <RelationalAs>b__0()
    + <RelationalAs>b__1()
}

class "<>c__DisplayClass68_0" {
    + <RelationalIs>b__0()
    + <RelationalIs>b__1()
}

class "<>c__DisplayClass72_0" {
    + <SimpleAssignment_IdentifierAccess>b__1()
    + <SimpleAssignment_IdentifierAccess>b__2()
    + <SimpleAssignment_IdentifierAccess>b__3()
    + <SimpleAssignment_IdentifierAccess>b__4()
    + <SimpleAssignment_IdentifierAccess>b__5()
}

class "<>c__DisplayClass72_1" {
    + <SimpleAssignment_IdentifierAccess>b__6()
}

class "<>c__DisplayClass72_2" {
    + <SimpleAssignment_IdentifierAccess>b__7()
}

class "<>c__DisplayClass75_0" {
    + <SimpleAssignment_ElementAccess>b__0()
    + <SimpleAssignment_ElementAccess>b__1()
}

class "<>c__DisplayClass75_1" {
    + <SimpleAssignment_ElementAccess>b__2()
}

class "<>c__DisplayClass75_2" {
    + <SimpleAssignment_ElementAccess>b__3()
}

class "<>c__DisplayClass75_3" {
    + <SimpleAssignment_ElementAccess>b__4()
}

class "<>c__DisplayClass75_4" {
    + <SimpleAssignment_ElementAccess>b__5()
}

class "<>c__DisplayClass76_0" {
    + <SizeOf>b__0()
}

class "<>c__DisplayClass78_0" {
    + <TernaryConditional>b__0()
    + <TernaryConditional>b__1()
    + <TernaryConditional>b__2()
    + <TernaryConditional>b__3()
}

class "<>c__DisplayClass81_0" {
    + <TypeCast>b__0()
    + <TypeCast>b__1()
    + <TypeCast>b__2()
}

class "<>c__DisplayClass81_1" {
    + <TypeCast>b__3()
}

class "<>c__DisplayClass82_0" {
    + <TypeOf>b__0()
}

class "<>c__DisplayClass84_0" {
    + <UnaryComplement>b__1()
}

class "<>c__DisplayClass85_0" {
    + <UnaryMinus>b__1()
}

class "<>c__DisplayClass86_0" {
    + <UnaryNot>b__1()
    + <UnaryNot>b__2()
}

class "ASTNodeChildren" {
    + Clear()
}

class "<>c" {
    + <ExpressionStartTermAndContinuations>b__10_0()
}

class "<ForEachExpressionate>d__17" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Utilities.Editor.Expressions.Internal.Expressionator>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "_ExpressionEvaluator_Evaluate`1" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass21_0" {
    + <PrependType>b__0()
    + <PrependType>b__1()
}

class "<EnumerateTree>d__23" {
    - System.IDisposable.Dispose()
    - MoveNext()
    - <>m__Finally1()
    - <>m__Finally2()
    - System.Collections.IEnumerator.Reset()
    - System.Collections.Generic.IEnumerable<Sirenix.Utilities.Editor.InstanceCreatorWindow.TypeTreeNode>.GetEnumerator()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "<>c" {
    + <GetAllCandidatesString>b__5_0()
}

class "Comparer" {
    + Equals()
    + GetHashCode()
}

class "<>f__AnonymousType0`4" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType1`6" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType2`6" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType3`4" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType4`6" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType5`6" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType6`7" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType7`5" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType8`6" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType9`6" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "<>f__AnonymousType10`7" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "SqlDependencyProcessDispatcher" {
    + InitializeLifetimeService()
    - Invalidate()
    + QueueAppDomainUnloading()
    - AppDomainUnloading()
    + StartWithDefault()
    + Start()
    - Start()
    + Stop()
}

class "SqlConnectionContainer" {
    + AppDomainUnload()
    - AsynchronouslyQueryServiceBrokerQueue()
    - AsyncResultCallback()
    - CreateQueueAndService()
    + IncrementStartCount()
    - ProcessNotificationResults()
    - Restart()
    + Stop()
    - SynchronouslyQueryServiceBrokerQueue()
    - TearDownAndDispose()
}

class "SqlConnectionContainerHashHelper" {
    + Equals()
    + GetHashCode()
}

class "DiagnosticListener" {
    + IsEnabled()
    + Write()
}

class "DataDocumentXPathNavigator" {
    + Clone()
    + GetAttribute()
    + GetNamespace()
    + MoveToNamespace()
    + MoveToFirstNamespace()
    + MoveToNextNamespace()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToNext()
    + MoveToPrevious()
    + MoveToFirst()
    + MoveToFirstChild()
    + MoveToParent()
    + MoveToRoot()
    + MoveTo()
    + MoveToId()
    + IsSamePosition()
    - System.Xml.IHasXmlNode.GetNode()
    + ComparePosition()
}

class "DataPointer" {
    + AddPointer()
    - GetRowElement()
    + MoveTo()
    - MoveTo()
    - MoveTo()
    - NextColumn()
    - NthColumn()
    - ColumnCount()
    + MoveToFirstChild()
    + MoveToNextSibling()
    + MoveToParent()
    + MoveToOwnerElement()
    + MoveToAttribute()
    - IsLocalNameEmpty()
    - System.Xml.IXmlDataVirtualNode.IsOnNode()
    - System.Xml.IXmlDataVirtualNode.IsOnColumn()
    + GetNode()
    - System.Xml.IXmlDataVirtualNode.OnFoliated()
    + RealFoliate()
    - AssertValid()
    - System.Xml.IXmlDataVirtualNode.IsInUse()
    + SetNoLongerUse()
}

class "DataSetMapper" {
    + SetupMapping()
    + IsMapped()
    + SearchMatchingTableSchema()
    + SearchMatchingTableSchema()
    + GetColumnSchemaForNode()
    + GetTableSchemaForElement()
    + GetTableSchemaForElement()
    + GetRowFromElement()
    + GetRowFromElement()
    + GetRegion()
    + IsRegionRadical()
    - AddTableSchema()
    - AddColumnSchema()
    - IsNextColumn()
}

class "RegionIterator" {
    + Next()
    + NextRight()
    + NextInitialTextLikeNodes()
}

class "TreeIterator" {
    + Next()
    + NextRight()
}

class "XPathNodePointer" {
    - DecideXPNodeTypeForTextNodes()
    - ConvertNodeType()
    - IsNamespaceNode()
    + Clone()
    - GetRowElement()
    + MoveTo()
    - MoveTo()
    - MoveTo()
    - IsFoliated()
    - ColumnCount()
    + NextColumn()
    + PreviousColumn()
    + MoveToAttribute()
    + MoveToNextAttribute()
    - IsValidChild()
    - IsValidChild()
    + MoveToNextSibling()
    + MoveToPreviousSibling()
    + MoveToFirst()
    + MoveToFirstChild()
    + MoveToParent()
    - GetParent()
    + MoveToRoot()
    + IsSamePosition()
    - CompareNamespacePosition()
    + ComparePosition()
    - System.Xml.IXmlDataVirtualNode.IsOnNode()
    - System.Xml.IXmlDataVirtualNode.IsOnColumn()
    - System.Xml.IXmlDataVirtualNode.OnFoliated()
    - RealFoliate()
    - GetNamespace()
    + GetNamespace()
    + MoveToNamespace()
    - MoveToNextNamespace()
    + MoveToFirstNamespace()
    - DuplicateNS()
    + MoveToNextNamespace()
    - AssertValid()
    - System.Xml.IXmlDataVirtualNode.IsInUse()
}

class "XmlBoundElement" {
    + InsertBefore()
    + InsertAfter()
    + ReplaceChild()
    + AppendChild()
    + RemoveAllChildren()
    + Foliate()
    - AutoFoliate()
    + CloneNode()
    + WriteContentTo()
    + WriteTo()
    - WriteRootBoundElementTo()
    + GetElementsByTagName()
}

class "XmlDataDocument" {
    + AddPointer()
    + AssertPointerPresent()
    - AttachDataSet()
    + SyncRows()
    + SyncTree()
    - BindForLoad()
    - Bind()
    + Bind()
    - BindSpecialListeners()
    - UnBindSpecialListeners()
    - BindListeners()
    - BindToDataSet()
    - BindToDocument()
    - BindToTable()
    + CreateElement()
    + CreateEntityReference()
    - DefoliateRegion()
    - EnsureDocumentElement()
    - EnsureNonRowDocumentElement()
    - DemoteDocumentElement()
    - EnsurePopulatedMode()
    - FixNestedChildren()
    + Foliate()
    - Foliate()
    - FoliateIfDataPointers()
    - EnsureFoliation()
    - ForceFoliation()
    - GetColumnInsertAfterLocation()
    - GetNestedChildRelations()
    - GetNestedParent()
    - GetTextOnlyColumn()
    + GetRowFromElement()
    - GetRowInsertBeforeLocation()
    + GetElementFromRow()
    + HasPointers()
    - IsFoliated()
    - IsFoliated()
    + CloneTree()
    - CloneTreeInternal()
    + CloneNode()
    - CloneNode()
    + IsNotMapped()
    - IsSame()
    + IsTextOnly()
    + Load()
    + Load()
    + Load()
    + Load()
    - LoadDataSetFromTree()
    - LoadTreeFromDataSet()
    - LoadRows()
    + OnDataRowCreated()
    + OnClearCalled()
    + OnDataRowCreatedSpecial()
    + OnNewRow()
    - AttachBoundElementToDataRow()
    - NeedXSI_NilAttr()
    - OnAddRow()
    - OnColumnValueChanged()
    - OnColumnChanged()
    - OnColumnValuesChanged()
    - OnDeleteRow()
    - OnDeletingRow()
    - OnFoliated()
    - FindAssociatedParentColumn()
    - OnNestedParentChange()
    - OnNodeChanged()
    - OnNodeChanging()
    - OnNodeInserted()
    - OnNodeInserting()
    - OnNodeRemoved()
    - OnNodeRemoving()
    - OnNodeRemovedFromTree()
    - OnNodeRemovedFromFragment()
    - OnRowChanged()
    - OnRowChanging()
    - OnDataSetPropertyChanging()
    - OnColumnPropertyChanging()
    - OnTablePropertyChanging()
    - OnTableColumnsChanging()
    - OnDataSetTablesChanging()
    - OnDataSetRelationsChanging()
    - OnRelationPropertyChanging()
    - OnUndeleteRow()
    - PromoteChild()
    - PromoteInnerRegions()
    - PromoteNonValueChildren()
    - RemoveInitialTextNodes()
    - ReplaceInitialChildText()
    + SafeFirstChild()
    + SafeNextSibling()
    + SafePreviousSibling()
    - SynchronizeRowFromRowElement()
    - SynchronizeRowFromRowElement()
    - SynchronizeRowFromRowElementEx()
    - UpdateAllColumns()
    - Init()
    - Init()
    - IsConnected()
    - IsRowLive()
    - OnNodeInsertedInTree()
    - OnNodeInsertedInFragment()
    - OnRowElementInsertedInTree()
    - EnsureDisconnectedDataRow()
    - OnNonRowElementInsertedInTree()
    - OnNonRowElementInsertedInFragment()
    - SetNestedParentRegion()
    - SetNestedParentRegion()
    + CreateNavigator()
    - AssertLiveRows()
    - AssertNonLiveRows()
    + GetElementById()
    + GetElementsByTagName()
    - OrderTables()
    - IsSelfRelatedDataTable()
    - TablesAreOrdered()
}

class "XmlDataImplementation" {
    + CreateDocument()
}

class "InternalDataCollectionBase" {
    + CopyTo()
    + GetEnumerator()
    + NamesEqual()
}

class "ColumnTypeConverter" {
    + CanConvertTo()
    + ConvertTo()
    + CanConvertFrom()
    + ConvertFrom()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
}

class "DataCommonEventSource" {
    + Trace()
    + Trace()
    + Trace()
    + Trace()
    + Trace()
    + Trace()
    + Trace()
    + EnterScope()
    + EnterScope()
    + EnterScope()
    + EnterScope()
    + EnterScope()
    + ExitScope()
}

class "ConstraintCollection" {
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + AddRange()
    - AddUniqueConstraint()
    - AddForeignKeyConstraint()
    - AutoGenerated()
    - ArrayAdd()
    - ArrayRemove()
    + AssignName()
    - BaseAdd()
    - BaseGroupSwitch()
    - BaseRemove()
    + CanRemove()
    + CanRemove()
    + Clear()
    + Contains()
    + Contains()
    + CopyTo()
    + FindConstraint()
    + FindKeyConstraint()
    + FindKeyConstraint()
    + FindForeignKeyConstraint()
    + IndexOf()
    + IndexOf()
    + InternalIndexOf()
    - MakeName()
    - OnCollectionChanged()
    + RegisterName()
    + Remove()
    + RemoveAt()
    + Remove()
    + UnregisterName()
    + FinishInitConstraints()
}

class "ConstraintConverter" {
    + CanConvertTo()
    + ConvertTo()
}

class "ConstraintEnumerator" {
    + GetNext()
    + GetConstraint()
    + IsValidCandidate()
}

class "ForeignKeyConstraintEnumerator" {
    + IsValidCandidate()
    + GetForeignKeyConstraint()
}

class "ChildForeignKeyConstraintEnumerator" {
    + IsValidCandidate()
}

class "ParentForeignKeyConstraintEnumerator" {
    + IsValidCandidate()
}

class "DBConcurrencyException" {
    + GetObjectData()
    + CopyToRows()
    + CopyToRows()
}

class "DataColumn" {
    - UpdateColumnType()
    - ResetCaption()
    - ShouldSerializeCaption()
    + GetColumnValueAsString()
    + BindExpression()
    - SetMaxLengthSimpleType()
    - ShouldSerializeNamespace()
    - ResetNamespace()
    + SetOrdinal()
    + SetOrdinalInternal()
    + SetTable()
    - GetDataRow()
    + InitializeRecord()
    + SetValue()
    + FreeRecord()
    + InternalUnique()
    + CheckColumnConstraint()
    + CheckMaxLength()
    + CheckMaxLength()
    + CheckNotAllowNull()
    + CheckNullable()
    + CheckUnique()
    + Compare()
    + CompareValueTo()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Clone()
    + FindParentRelation()
    + GetAggregateValue()
    - GetStringLength()
    + Init()
    - IsColumnMappingValid()
    + IsValueCustomTypeInstance()
    + IsNull()
    + IsInRelation()
    + IsMaxLengthViolated()
    + IsNotAllowDBNullViolated()
    + FinishInitInProgress()
    + OnPropertyChanging()
    + RaisePropertyChanging()
    - InsureStorage()
    + SetCapacity()
    - ShouldSerializeDefaultValue()
    + OnSetDataSet()
    + ToString()
    + ConvertXmlToObject()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + ConvertObjectToXml()
    + GetEmptyColumnStore()
    + CopyValueIntoStore()
    + SetStorage()
    + AddDependentColumn()
    + RemoveDependentColumn()
    + HandleDependentColumnList()
}

class "AutoIncrementInt64" {
    + MoveAfter()
    + SetCurrent()
    + SetCurrentAndIncrement()
    - BoundaryCheck()
}

class "AutoIncrementBigInteger" {
    + MoveAfter()
    + SetCurrent()
    + SetCurrentAndIncrement()
    - BoundaryCheck()
}

class "DataColumnChangeEventArgs" {
    + InitializeColumnChangeEvent()
}

class "DataColumnChangeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DataColumnCollection" {
    + EnsureAdditionalCapacity()
    + Add()
    + AddAt()
    + AddRange()
    + Add()
    + Add()
    + Add()
    + Add()
    - ArrayAdd()
    - ArrayAdd()
    - ArrayRemove()
    + AssignName()
    - BaseAdd()
    - BaseGroupSwitch()
    - BaseRemove()
    + CanRemove()
    + CanRemove()
    - CheckIChangeTracking()
    + Clear()
    + Contains()
    + Contains()
    + CopyTo()
    + IndexOf()
    + IndexOf()
    + IndexOfCaseInsensitive()
    + FinishInitCollection()
    - MakeName()
    + MoveTo()
    - OnCollectionChanged()
    - OnCollectionChanging()
    + OnColumnPropertyChanged()
    + RegisterColumnName()
    + CanRegisterName()
    + Remove()
    + RemoveAt()
    + Remove()
    + UnregisterName()
    - AddColumnsImplementingIChangeTrackingList()
    - RemoveColumnsImplementingIChangeTrackingList()
}

class "DataColumnPropertyDescriptor" {
    + Equals()
    + GetHashCode()
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "DataError" {
    + SetColumnError()
    + GetColumnError()
    + Clear()
    + Clear()
    + GetColumnsInError()
    - SetText()
    + IndexOf()
}

class "DataRelation" {
    + SetDataSet()
    + SetParentRowRecords()
    + CheckNamespaceValidityForNestedRelations()
    + CheckNestedRelations()
    + SetParentKeyConstraint()
    + SetChildKeyConstraint()
    + CheckState()
    + CheckStateForProperty()
    - Create()
    + Clone()
    + OnPropertyChanging()
    + RaisePropertyChanging()
    + ToString()
    + ValidateMultipleNestedRelations()
    - IsAutoGenerated()
}

class "DataTableRelationCollection" {
    - EnsureDataSet()
    + GetDataSet()
    + OnRelationPropertyChanged()
    - AddCache()
    + AddCore()
    + CanRemove()
    - RemoveCache()
    + RemoveCore()
}

class "DataSetRelationCollection" {
    + AddRange()
    + Clear()
    + GetDataSet()
    + AddCore()
    + RemoveCore()
    + FinishInitRelations()
}

class "DataRelationPropertyDescriptor" {
    + Equals()
    + GetHashCode()
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "DataRow" {
    - RowErrorChanged()
    + CheckForLoops()
    + GetNestedParentCount()
    + AcceptChanges()
    + BeginEdit()
    - BeginEditInternal()
    + CancelEdit()
    - CheckColumn()
    + CheckInTable()
    + Delete()
    + EndEdit()
    + SetColumnError()
    + SetColumnError()
    + SetColumnError()
    + GetColumnError()
    + GetColumnError()
    + GetColumnError()
    + ClearErrors()
    + ClearError()
    + GetColumnsInError()
    + GetChildRows()
    + GetChildRows()
    + GetChildRows()
    + GetChildRows()
    + GetDataColumn()
    + GetParentRow()
    + GetParentRow()
    + GetParentRow()
    + GetParentRow()
    + GetNestedParentRow()
    + GetParentRows()
    + GetParentRows()
    + GetParentRows()
    + GetParentRows()
    + GetColumnValues()
    + GetColumnValues()
    + GetKeyValues()
    + GetKeyValues()
    + GetCurrentRecordNo()
    + GetDefaultRecord()
    + GetOriginalRecordNo()
    - GetProposedRecordNo()
    + GetRecordFromVersion()
    + GetDefaultRowVersion()
    + GetRecordState()
    + HasKeyChanged()
    + HasKeyChanged()
    + HasVersion()
    + HasChanges()
    + HaveValuesChanged()
    + HaveValuesChanged()
    + IsNull()
    + IsNull()
    + IsNull()
    + IsNull()
    + RejectChanges()
    + ResetLastChangedColumn()
    + SetKeyValues()
    + SetNull()
    + SetNestedParentRow()
    + SetParentRow()
    + SetParentRow()
    + SetParentRowToDBNull()
    + SetParentRowToDBNull()
    + SetAdded()
    + SetModified()
    + CopyValuesIntoStore()
    - VerifyValueFromStorage()
}

class "DataRowChangeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DataRowCollection" {
    + Add()
    + InsertAt()
    + DiffInsertAt()
    + IndexOf()
    + AddWithColumnEvents()
    + Add()
    + ArrayAdd()
    + ArrayInsert()
    + ArrayClear()
    + ArrayRemove()
    + Find()
    + Find()
    + Clear()
    + Contains()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + Remove()
    + RemoveAt()
}

class "DataRowTree" {
    + CompareNode()
    + CompareSateliteTreeNode()
}

class "DataRowCreatedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DataSetClearEventhandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DataRowView" {
    + Equals()
    + GetHashCode()
    + GetRecord()
    + HasRecord()
    + GetColumnValue()
    + SetColumnValue()
    + CreateChildView()
    + CreateChildView()
    + CreateChildView()
    + CreateChildView()
    + BeginEdit()
    + CancelEdit()
    + EndEdit()
    + Delete()
    + RaisePropertyChangedEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    - System.ComponentModel.ICustomTypeDescriptor.GetClassName()
    - System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
    - System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
    - System.ComponentModel.ICustomTypeDescriptor.GetEditor()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner()
}

class "DataSet" {
    + IsBinarySerialized()
    + DetermineSchemaSerializationMode()
    + DetermineSchemaSerializationMode()
    + GetSerializationData()
    + GetObjectData()
    + InitializeDerivedDataSet()
    - SerializeDataSet()
    + DeserializeDataSet()
    - DeserializeDataSetSchema()
    - DeserializeDataSetData()
    - SerializeDataSetProperties()
    - DeserializeDataSetProperties()
    - SerializeRelations()
    - DeserializeRelations()
    + FailedEnableConstraints()
    + RestoreEnforceConstraints()
    + EnableConstraints()
    + SetLocaleValue()
    + ShouldSerializeLocale()
    + ShouldSerializeRelations()
    - ResetRelations()
    + ShouldSerializeTables()
    - ResetTables()
    + AcceptChanges()
    + BeginInit()
    + EndInit()
    + Clear()
    + Clone()
    + Copy()
    + EstimatedXmlStringSize()
    + GetChanges()
    + GetChanges()
    - MarkModifiedRows()
    - MarkRelatedRowsAsModified()
    - System.ComponentModel.IListSource.GetList()
    + GetRemotingDiffGram()
    + GetXml()
    + GetXmlSchema()
    + GetXmlSchemaForRemoting()
    + HasChanges()
    + HasChanges()
    + InferXmlSchema()
    + InferXmlSchema()
    + InferXmlSchema()
    + InferXmlSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    + MoveToElement()
    + ReadEndElement()
    + ReadXSDSchema()
    + ReadXDRSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    - WriteXmlSchema()
    - WriteXmlSchema()
    - WriteXmlSchema()
    - WriteXmlSchema()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + InferSchema()
    - IsEmpty()
    - ReadXmlDiffgram()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + GetParentRelations()
    + Merge()
    + Merge()
    + Merge()
    + Merge()
    + Merge()
    + Merge()
    + Merge()
    + OnPropertyChanging()
    + OnMergeFailed()
    + RaiseMergeFailed()
    + OnDataRowCreated()
    + OnClearFunctionCalled()
    - OnInitialized()
    + OnRemoveTable()
    + OnRemovedTable()
    + OnRemoveRelation()
    + OnRemoveRelationHack()
    + RaisePropertyChanging()
    + TopLevelTables()
    + TopLevelTables()
    + RejectChanges()
    + Reset()
    + ValidateCaseConstraint()
    + ValidateLocaleConstraint()
    + FindTable()
    + ReadXmlSerializable()
    + GetSchemaSerializable()
    - System.Xml.Serialization.IXmlSerializable.GetSchema()
    - System.Xml.Serialization.IXmlSerializable.ReadXml()
    - System.Xml.Serialization.IXmlSerializable.WriteXml()
    + Load()
    + Load()
    + Load()
    + CreateDataReader()
    + CreateDataReader()
}

class "DataTable" {
    + GetObjectData()
    - SerializeDataTable()
    + DeserializeDataTable()
    + SerializeTableSchema()
    + DeserializeTableSchema()
    + SerializeConstraints()
    + DeserializeConstraints()
    + SerializeExpressionColumns()
    + DeserializeExpressionColumns()
    + SerializeTableData()
    + DeserializeTableData()
    - ConvertToRowState()
    + GetRowAndColumnErrors()
    - ConvertToRowError()
    + RestoreIndexEvents()
    + SuspendIndexEvents()
    + SetCaseSensitiveValue()
    - ResetCaseSensitive()
    + ShouldSerializeCaseSensitive()
    - ResetColumns()
    - ResetConstraints()
    + SetDataSet()
    + EnableConstraints()
    + SetLocaleValue()
    + ShouldSerializeLocale()
    + CacheNestedParent()
    - FindNestedParentRelations()
    - ShouldSerializePrimaryKey()
    - ResetPrimaryKey()
    - GetInheritedNamespace()
    + IsNamespaceInherited()
    + CheckCascadingNamespaceConflict()
    + CheckNamespaceValidityForNestedRelations()
    + CheckNamespaceValidityForNestedParentRelations()
    + DoRaiseNamespaceChange()
    - ShouldSerializeNamespace()
    - ResetNamespace()
    + BeginInit()
    + EndInit()
    + SetKeyValues()
    + FindByIndex()
    + FindMergeTarget()
    - SetMergeRecords()
    + MergeRow()
    + AcceptChanges()
    + CreateInstance()
    + Clone()
    + Clone()
    - IncrementalCloneTo()
    - CloneHierarchy()
    - CloneTo()
    + Copy()
    + AddRecords()
    + AddRow()
    + AddRow()
    + InsertRow()
    + InsertRow()
    + CheckNotModifying()
    + Clear()
    + Clear()
    + CascadeAll()
    + CommitRow()
    + Compare()
    + Compare()
    + IndexOf()
    + IsSuffix()
    + Compute()
    + CopyRow()
    + DeleteRow()
    - CheckPrimaryKey()
    + FindByPrimaryKey()
    + FindByPrimaryKey()
    - FindRow()
    - FindRow()
    + FormatSortString()
    + FreeRecord()
    + GetChanges()
    + GetChanges()
    + GetErrors()
    + GetIndex()
    + GetIndex()
    + GetIndex()
    - System.ComponentModel.IListSource.GetList()
    + GetListeners()
    + GetSpecialHashCode()
    + ImportRow()
    + InsertRow()
    - NewIndexDesc()
    + NewRecord()
    + NewUninitializedRecord()
    + NewRecordFromArray()
    + NewRecord()
    + NewEmptyRow()
    - NewUninitializedRow()
    + NewRow()
    + CreateEmptyRow()
    - NewRowCreated()
    + NewRow()
    + NewRowFromBuilder()
    + GetRowType()
    + NewRowArray()
    + OnColumnChanging()
    + OnColumnChanged()
    + OnPropertyChanging()
    + OnRemoveColumnInternal()
    + OnRemoveColumn()
    - OnRowChanged()
    - OnRowChanging()
    + OnRowChanged()
    + OnRowChanging()
    + OnRowDeleting()
    + OnRowDeleted()
    + OnTableCleared()
    + OnTableClearing()
    + OnTableNewRow()
    - OnInitialized()
    + ParseSortString()
    + RaisePropertyChanging()
    + RecordChanged()
    + RecordChanged()
    + RecordStateChanged()
    + RecordStateChanged()
    + RemoveRecordFromIndexes()
    + InsertRecordToIndexes()
    + SilentlySetValue()
    + RejectChanges()
    + RemoveRow()
    + Reset()
    + ResetIndexes()
    + ResetInternalIndexes()
    + RollbackRow()
    - RaiseRowChanged()
    - RaiseRowChanging()
    - RaiseRowChanging()
    + Select()
    + Select()
    + Select()
    + Select()
    + SetNewRecord()
    - SetNewRecordWorker()
    + SetOldRecord()
    - RestoreShadowIndexes()
    - SetShadowIndexes()
    + ShadowIndexCopy()
    + ToString()
    + BeginLoadData()
    + EndLoadData()
    + LoadDataRow()
    + LoadDataRow()
    + UpdatingAdd()
    + UpdatingCurrent()
    + AddUniqueKey()
    + AddUniqueKey()
    + AddForeignKey()
    + UpdatePropertyDescriptorCollectionCache()
    + GetPropertyDescriptorCollection()
    + Merge()
    + Merge()
    + Merge()
    + Load()
    + Load()
    + Load()
    - LoadRow()
    - SetDataRowWithLoadOption()
    + CreateDataReader()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXml()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    - CheckForClosureOnExpressions()
    - CheckForClosureOnExpressionTables()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + WriteXmlSchema()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    + ReadXml()
    - RestoreConstraint()
    - IsEmptyXml()
    + ReadXml()
    + ReadXml()
    + ReadEndElement()
    + ReadXDRSchema()
    + MoveToElement()
    - ReadXmlDiffgram()
    + ReadXSDSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    + ReadXmlSchema()
    - CreateTableList()
    - CreateRelationList()
    - System.Xml.Serialization.IXmlSerializable.GetSchema()
    + GetSchema()
    - System.Xml.Serialization.IXmlSerializable.ReadXml()
    - System.Xml.Serialization.IXmlSerializable.WriteXml()
    + ReadXmlSerializable()
    + AddDependentColumn()
    + RemoveDependentColumn()
    + EvaluateExpressions()
    + EvaluateExpressions()
    + EvaluateExpressions()
    + EvaluateDependentExpressions()
    + EvaluateDependentExpressions()
}

class "DataTableClearEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DataTableCollection" {
    + GetTable()
    + GetTableSmart()
    + Add()
    + AddRange()
    + Add()
    + Add()
    + Add()
    - ArrayAdd()
    + AssignName()
    - BaseAdd()
    - BaseGroupSwitch()
    - BaseRemove()
    + CanRemove()
    + CanRemove()
    + Clear()
    + Contains()
    + Contains()
    + Contains()
    + Contains()
    + CopyTo()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + ReplaceFromInference()
    + InternalIndexOf()
    + InternalIndexOf()
    + FinishInitCollection()
    - MakeName()
    - OnCollectionChanged()
    - OnCollectionChanging()
    + RegisterName()
    + Remove()
    + RemoveAt()
    + Remove()
    + Remove()
    + UnregisterName()
}

class "DataTableNewRowEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DataTablePropertyDescriptor" {
    + Equals()
    + GetHashCode()
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "DataTableReader" {
    - Init()
    + Close()
    + GetSchemaTable()
    + NextResult()
    + Read()
    + GetProviderSpecificFieldType()
    + GetProviderSpecificValue()
    + GetProviderSpecificValues()
    + GetBoolean()
    + GetByte()
    + GetBytes()
    + GetChar()
    + GetChars()
    + GetDataTypeName()
    + GetDateTime()
    + GetDecimal()
    + GetDouble()
    + GetFieldType()
    + GetFloat()
    + GetGuid()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetName()
    + GetOrdinal()
    + GetString()
    + GetValue()
    + GetValues()
    + IsDBNull()
    + GetEnumerator()
    - ValidateOpen()
    - ValidateReader()
    - ValidateState()
    - ValidateRow()
    + SchemaChanged()
    + DataTableCleared()
    + DataChanged()
}

class "DataTableReaderListener" {
    + CleanUp()
    + UpdataTable()
    - SubscribeEvents()
    - UnSubscribeEvents()
    - DataTableCleared()
    - SchemaChanged()
    - DataChanged()
}

class "DataTableTypeConverter" {
    + GetPropertiesSupported()
}

class "DataView" {
    + AddNew()
    + BeginInit()
    + EndInit()
    - CheckOpen()
    - CheckSort()
    + Close()
    + CopyTo()
    - CopyTo()
    + Delete()
    + Delete()
    + Dispose()
    + Find()
    + FindByKey()
    + Find()
    + FindByKey()
    + FindRows()
    + FindRows()
    + FindRowsByKey()
    + GetDataRowViewFromRange()
    + FinishAddNew()
    + GetEnumerator()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    + IndexOf()
    - IndexOfDataRowView()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    + GetFindIndex()
    - System.ComponentModel.IBindingList.AddNew()
    + GetSortProperty()
    - System.ComponentModel.IBindingList.AddIndex()
    - System.ComponentModel.IBindingList.ApplySort()
    - System.ComponentModel.IBindingList.Find()
    - System.ComponentModel.IBindingList.RemoveIndex()
    - System.ComponentModel.IBindingList.RemoveSort()
    - System.ComponentModel.IBindingListView.ApplySort()
    - CreateSortString()
    - System.ComponentModel.IBindingListView.RemoveFilter()
    + GetSortDescriptions()
    - System.ComponentModel.ITypedList.GetListName()
    - System.ComponentModel.ITypedList.GetItemProperties()
    + GetFilter()
    - GetRecord()
    + GetRow()
    - GetRowView()
    - GetRowView()
    + IndexListChanged()
    + IndexListChangedInternal()
    + MaintainDataView()
    + OnListChanged()
    - OnInitialized()
    + Open()
    + Reset()
    + ResetRowViewCache()
    + SetDataViewManager()
    + SetIndex()
    + SetIndex2()
    + UpdateIndex()
    + UpdateIndex()
    + UpdateIndex()
    + ChildRelationCollectionChanged()
    + ParentRelationCollectionChanged()
    + ColumnCollectionChanged()
    + ColumnCollectionChangedInternal()
    + ToTable()
    + ToTable()
    + ToTable()
    + ToTable()
    - RowExist()
    + Equals()
}

class "DataRowReferenceComparer" {
    + Equals()
    + GetHashCode()
}

class "RowPredicateFilter" {
    - System.Data.IFilter.Invoke()
}

class "DataViewListener" {
    - ChildRelationCollectionChanged()
    - ParentRelationCollectionChanged()
    - ColumnCollectionChanged()
    + MaintainDataView()
    + IndexListChanged()
    + RegisterMetaDataEvents()
    + UnregisterMetaDataEvents()
    - UnregisterMetaDataEvents()
    + RegisterListChangedEvent()
    + UnregisterListChangedEvent()
    - CleanUp()
    - RegisterListener()
}

class "DataViewManager" {
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IList.Add()
    - System.Collections.IList.Clear()
    - System.Collections.IList.Contains()
    - System.Collections.IList.IndexOf()
    - System.Collections.IList.Insert()
    - System.Collections.IList.Remove()
    - System.Collections.IList.RemoveAt()
    - System.ComponentModel.IBindingList.AddNew()
    - System.ComponentModel.IBindingList.AddIndex()
    - System.ComponentModel.IBindingList.ApplySort()
    - System.ComponentModel.IBindingList.Find()
    - System.ComponentModel.IBindingList.RemoveIndex()
    - System.ComponentModel.IBindingList.RemoveSort()
    - System.ComponentModel.ITypedList.GetListName()
    - System.ComponentModel.ITypedList.GetItemProperties()
    + CreateDataView()
    + OnListChanged()
    + TableCollectionChanged()
    + RelationCollectionChanged()
}

class "DataViewManagerListItemTypeDescriptor" {
    + Reset()
    + GetDataView()
    - System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    - System.ComponentModel.ICustomTypeDescriptor.GetClassName()
    - System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
    - System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
    - System.ComponentModel.ICustomTypeDescriptor.GetEditor()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner()
}

class "DataViewSetting" {
    + SetDataViewManager()
    + SetDataTable()
}

class "DataViewSettingCollection" {
    - GetTable()
    - GetTable()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + Remove()
}

class "DataViewSettingsEnumerator" {
    + MoveNext()
    + Reset()
}

class "DefaultValueTypeConverter" {
    + ConvertTo()
    + ConvertFrom()
}

class "FillErrorEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AggregateNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + DependsOn()
    + Optimize()
}

class "BinaryNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + DependsOn()
    + Optimize()
    + SetTypeMismatchError()
    + BinaryCompare()
    + BinaryCompare()
    - EvalBinaryOp()
    - GetPrecedence()
    - IsMixed()
    - IsMixedSql()
    + ResultType()
    + ResultSqlType()
    - SqlResultType()
}

class "LikeNode" {
    + Eval()
    + AnalyzePattern()
}

class "ConstNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + Optimize()
    - SmallestDecimal()
    - SmallestNumeric()
}

class "DataExpression" {
    + Bind()
    + DependsOn()
    + Evaluate()
    + Evaluate()
    + Evaluate()
    + Evaluate()
    + Invoke()
    + GetDependency()
    + IsTableAggregate()
    + HasLocalAggregate()
    + HasRemoteAggregate()
}

class "ExpressionParser" {
    + LoadExpression()
    + StartScan()
    + Parse()
    - ParseAggregateArgument()
    - NodePop()
    - NodePeek()
    - NodePush()
    - BuildExpression()
    + CheckToken()
    + Scan()
    - ScanNumeric()
    - ScanName()
    - ScanName()
    - ScanDate()
    - ScanBinaryConstant()
    - ScanReserved()
    - ScanString()
    + ScanToken()
    - ScanWhite()
    - IsWhiteSpace()
    - IsAlphaNumeric()
    - IsDigit()
    - IsAlpha()
}

class "FunctionNode" {
    + AddArgument()
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + DependsOn()
    + Optimize()
    - GetDataType()
    - EvalFunction()
    + Check()
}

class "LookupNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + DependsOn()
    + Optimize()
}

class "NameNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + DependsOn()
    + Optimize()
}

class "UnaryNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    - EvalUnaryOp()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + DependsOn()
    + Optimize()
}

class "ZeroOpNode" {
    + Bind()
    + Eval()
    + Eval()
    + Eval()
    + IsConstant()
    + IsTableConstant()
    + HasLocalAggregate()
    + HasRemoteAggregate()
    + Optimize()
}

class "ForeignKeyConstraint" {
    + CheckCanAddToCollection()
    + CanBeRemovedFromCollection()
    + IsKeyNull()
    + IsConstraintViolated()
    + CanEnableConstraint()
    + CascadeCommit()
    + CascadeDelete()
    + CascadeRollback()
    + CascadeUpdate()
    + CheckCanClearParentTable()
    + CheckCanRemoveParentRow()
    + CheckCascade()
    + CheckConstraint()
    - NonVirtualCheckState()
    + CheckState()
    + ContainsColumn()
    + Clone()
    + Clone()
    + Clone()
    - Create()
    + Equals()
    + GetHashCode()
    + FindParentRelation()
}

class "MergeFailedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Merger" {
    + MergeDataSet()
    + MergeTable()
    - MergeTable()
    + MergeRows()
    - MergeSchema()
    - MergeTableData()
    - MergeConstraints()
    - MergeConstraints()
    - MergeRelation()
    - MergeExtendedProperties()
    - GetSrcKey()
}

class "PrimaryKeyTypeConverter" {
    + GetPropertiesSupported()
    + CanConvertTo()
    + ConvertTo()
}

class "PropertyCollection" {
    + Clone()
}

class "TreePage" {
    + AllocSlot()
}

class "RecordManager" {
    - GrowRecordCapacity()
    - NormalizedMinimumCapacity()
    + NewRecordBase()
    + FreeRecord()
    + Clear()
    + SetKeyValues()
    + ImportRecord()
    + CopyRecord()
    + SetRowCache()
    + VerifyRecord()
    + VerifyRecord()
}

class "RelatedView" {
    - GetParentValues()
    + Invoke()
    + GetFilter()
    + AddNew()
    + SetIndex()
    + Equals()
    - CompareArray()
}

class "RelationshipConverter" {
    + CanConvertTo()
    + ConvertTo()
}

class "Select" {
    - IsSupportedOperator()
    - AnalyzeExpression()
    - CompareSortIndexDesc()
    - FindSortIndex()
    - CompareClosestCandidateIndexDesc()
    - FindClosestCandidateIndex()
    - InitCandidateColumns()
    - CreateIndex()
    - IsOperatorIn()
    - BuildLinearExpression()
    + SelectRows()
    + GetRows()
    - AcceptRecord()
    - Eval()
    - Evaluate()
    - FindFirstMatchingRecord()
    - FindLastMatchingRecord()
    - GetBinaryFilteredRecords()
    - GetLinearFilteredRecords()
    - GetLinearFilteredRows()
    - CompareRecords()
    - Sort()
}

class "Index" {
    + Equal()
    + GetRecord()
    - AcceptRecord()
    - AcceptRecord()
    + ListChangedAdd()
    + ListChangedRemove()
    + AddRef()
    + RemoveRef()
    - ApplyChangeAction()
    + CheckUnique()
    - CompareRecords()
    - CompareDataRows()
    - CompareDuplicateRecords()
    - CompareRecordToKey()
    + DeleteRecordFromIndex()
    - DeleteRecord()
    - DeleteRecord()
    + GetEnumerator()
    + GetIndex()
    - GetIndex()
    + GetUniqueKeyValues()
    + FindRecord()
    + FindRecordByKey()
    + FindRecordByKey()
    - FindNodeByKey()
    - FindNodeByKeys()
    - FindNodeByKeyRecord()
    - GetRangeFromNode()
    + FindRecords()
    + FindRecords()
    + FireResetEvent()
    - GetChangeAction()
    + GetRow()
    + GetRows()
    + GetRows()
    - InitRecords()
    + InsertRecordToIndex()
    - InsertRecord()
    + IsKeyInIndex()
    + IsKeyInIndex()
    + IsKeyRecordInIndex()
    - OnListChanged()
    - OnListChanged()
    - OnListChanged()
    - MaintainDataView()
    + Reset()
    + RecordChanged()
    + RecordChanged()
    + RecordStateChanged()
    + RecordStateChanged()
    - GetUniqueKeyValues()
}

class "IndexTree" {
    + CompareNode()
    + CompareSateliteTreeNode()
}

class "<>c" {
    + <.ctor>b__22_0()
    + <OnListChanged>b__85_0()
}

class "<>c__DisplayClass86_0" {
    + <MaintainDataView>b__0()
}

class "Listeners`1" {
    + Add()
    + IndexOfReference()
    + Remove()
    + Notify()
    - RemoveNullListeners()
}

class "Action`4" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Func`2" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SimpleType" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + LoadTypeValues()
    + IsPlainString()
    + QualifiedName()
    + ToNode()
    + HasConflictingDefinition()
    + CanHaveMaxLength()
    + ConvertToAnnonymousSimpleType()
}

class "StateChangeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StatementCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UniqueConstraint" {
    - AssertConstraintAndKeyIndexes()
    + ConstraintIndexClear()
    + ConstraintIndexInitialize()
    + CheckState()
    - NonVirtualCheckState()
    + CheckCanAddToCollection()
    + CanBeRemovedFromCollection()
    + CanEnableConstraint()
    + IsConstraintViolated()
    + CheckConstraint()
    + ContainsColumn()
    + Clone()
    + Clone()
    + Clone()
    - Create()
    + Equals()
    + GetHashCode()
}

class "XDRSchema" {
    + LoadSchema()
    + FindTypeNode()
    + IsTextOnlyContent()
    + IsXDRField()
    + HandleTable()
    - ParseDataType()
    + GetInstanceName()
    + HandleColumn()
    + GetMinMax()
    + GetMinMax()
    + HandleTypeNode()
    + InstantiateTable()
    + InstantiateSimpleTable()
}

class "NameType" {
    + CompareTo()
}

class "XMLDiffLoader" {
    + LoadDiffGram()
    - CreateTablesHierarchy()
    + LoadDiffGram()
    + ProcessDiffs()
    + ProcessDiffs()
    + ProcessErrors()
    + ProcessErrors()
    - GetTable()
    - ReadOldRowData()
    + SkipWhitespaces()
}

class "XSDSchema" {
    - CollectElementsAnnotations()
    - CollectElementsAnnotations()
    - HandleColumnExpression()
    + HandleRefTableProperties()
    + HandleRelation()
    - HasAttributes()
    - IsDatasetParticle()
    - DatasetElementCount()
    - FindDatasetElement()
    + LoadSchema()
    + LoadSchema()
    - HandleRelations()
    + GetParticleItems()
    + HandleParticle()
    + HandleAttributes()
    - HandleAttributeGroup()
    + HandleComplexType()
    + GetParticle()
    + FindField()
    + BuildKey()
    + GetBooleanAttribute()
    + GetStringAttribute()
    + HandleKeyref()
    + HandleConstraint()
    + InstantiateSimpleTable()
    + GetInstanceName()
    + InstantiateTable()
    - ParseDataType()
    + FindTypeNode()
    + HandleSimpleTypeSimpleContentColumn()
    + HandleSimpleContentColumn()
    + HandleAttributeColumn()
    + HandleElementColumn()
    + HandleDataSet()
    - AddTablesToList()
    - GetPrefix()
    - GetNamespaceFromPrefix()
    - GetTableNamespace()
    - GetTableName()
    + IsTable()
    + HandleTable()
}

class "NameType" {
    + CompareTo()
}

class "XmlIgnoreNamespaceReader" {
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
}

class "XmlDataLoader" {
    - AttachRows()
    - CountNonNSAttributes()
    - GetValueForTextOnlyColums()
    - GetInitialTextFromNodes()
    - GetTextOnlyColumn()
    + GetRowFromElement()
    + FColumnElement()
    - FExcludedNamespace()
    - FIgnoreNamespace()
    - FIgnoreNamespace()
    + IsTextLikeNode()
    + IsTextOnly()
    + LoadData()
    - LoadRowData()
    - LoadRows()
    - SetRowValueFromXmlText()
    - InitNameTable()
    + LoadData()
    - LoadTopMostTable()
    - LoadTable()
    - LoadColumn()
    - ProcessXsdSchema()
}

class "XmlToDatasetMap" {
    - AddTableSchema()
    - AddTableSchema()
    - AddColumnSchema()
    - AddColumnSchema()
    - BuildIdentityMap()
    - BuildIdentityMap()
    - BuildIdentityMap()
    - BuildIdentityMap()
    - GetSelfAndDescendants()
    + GetColumnSchema()
    + GetColumnSchema()
    + GetSchemaForNode()
    + GetTableForNode()
    - HandleSpecialColumn()
}

class "XmlNodeIdentety" {
    + GetHashCode()
    + Equals()
}

class "XmlTreeGen" {
    + AddXdoProperties()
    + AddXdoProperty()
    - GenerateConstraintNames()
    - GenerateConstraintNames()
    - GenerateConstraintNames()
    - HaveExtendedProperties()
    + WriteSchemaRoot()
    + SetupAutoGenerated()
    + SetupAutoGenerated()
    + SetupAutoGenerated()
    - CreateTablesHierarchy()
    - CreateRelations()
    - CreateToplevelTables()
    + SchemaTree()
    + SchemaTree()
    + FillDataSetElement()
    + SetPath()
    + Save()
    + Save()
    + Save()
    + Save()
    + Save()
    + HandleRelation()
    + GetSchema()
    + HandleColumnType()
    + AddColumnProperties()
    - FindTargetNamespace()
    + HandleColumn()
    + AppendChildWithoutRef()
    + FindTypeNode()
    + HandleTable()
    - HasMixedColumns()
    - AutoGenerated()
    - IsAutoGenerated()
    + HandleTable()
    - SetMSDataAttribute()
}

class "NewDiffgramGen" {
    - CreateTableHierarchy()
    - DoAssignments()
    - EmptyData()
    + Save()
    + Save()
    - GenerateTable()
    - GenerateTableErrors()
    - GenerateRow()
    - GenerateColumn()
}

class "XmlDataTreeWriter" {
    - CreateToplevelTables()
    - CreateTablesHierarchy()
    + SaveDiffgramData()
    + Save()
    - GetNestedChildRelations()
    + XmlDataRowWriter()
}

class "DataTextWriter" {
    + WriteStartDocument()
    + WriteStartDocument()
    + WriteEndDocument()
    + WriteDocType()
    + WriteStartElement()
    + WriteEndElement()
    + WriteFullEndElement()
    + WriteStartAttribute()
    + WriteEndAttribute()
    + WriteCData()
    + WriteComment()
    + WriteProcessingInstruction()
    + WriteEntityRef()
    + WriteCharEntity()
    + WriteWhitespace()
    + WriteString()
    + WriteSurrogateCharEntity()
    + WriteChars()
    + WriteRaw()
    + WriteRaw()
    + WriteBase64()
    + WriteBinHex()
    + Close()
    + Flush()
    + WriteName()
    + WriteQualifiedName()
    + LookupPrefix()
    + WriteNmToken()
}

class "DataTextReader" {
    + GetAttribute()
    + GetAttribute()
    + GetAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToAttribute()
    + MoveToFirstAttribute()
    + MoveToNextAttribute()
    + MoveToElement()
    + ReadAttributeValue()
    + Read()
    + Close()
    + Skip()
    + LookupNamespace()
    + ResolveEntity()
    + ReadContentAsBase64()
    + ReadElementContentAsBase64()
    + ReadContentAsBinHex()
    + ReadElementContentAsBinHex()
    + ReadString()
}

class "LocalDBFormatMessageDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TypedDataSetGeneratorException" {
    + GetObjectData()
}

class "TypedDataSetGenerator" {
    + GenerateCode()
    - InitLookupIdentifiers()
    - FixIdName()
    - RowClassName()
    - RowBaseClassName()
    - RowConcreteClassName()
    - TableClassName()
    - TablePropertyName()
    - TableFieldName()
    - RowColumnPropertyName()
    - TableColumnFieldName()
    - TableColumnPropertyName()
    - ChildPropertyName()
    - ParentPropertyName()
    - RelationFieldName()
    - GetTypeName()
    - ChildRelationFollowable()
    - CreateTypedTable()
    - CreateTypedRow()
    - CreateTypedRowEvent()
    - CreateTypedRowEventHandler()
    - CreateTypedDataSet()
}

class "DataSetSchemaImporterExtension" {
    + ImportSchemaType()
    + ImportSchemaType()
    + FindDataSetElement()
    + GenerateTypedDataSet()
}

class "OleDbPermission" {
    + Copy()
}

class "OleDbPermissionAttribute" {
    + CreatePermission()
}

class "OleDbCommand" {
    + Cancel()
    + Clone()
    + CreateDbParameter()
    + CreateParameter()
    + Dispose()
    + ExecuteDbDataReader()
    + ExecuteNonQuery()
    + ExecuteReader()
    + ExecuteReader()
    + ExecuteScalar()
    + Prepare()
    + ResetCommandTimeout()
    - System.Data.IDbCommand.ExecuteReader()
    - System.Data.IDbCommand.ExecuteReader()
    - System.ICloneable.Clone()
}

class "OleDbCommandBuilder" {
    + ApplyParameterInfo()
    + GetDeleteCommand()
    + GetDeleteCommand()
    + GetInsertCommand()
    + GetInsertCommand()
    + GetParameterName()
    + GetParameterName()
    + GetParameterPlaceholder()
    + GetUpdateCommand()
    + GetUpdateCommand()
    + QuoteIdentifier()
    + QuoteIdentifier()
    + SetRowUpdatingHandler()
    + UnquoteIdentifier()
    + UnquoteIdentifier()
}

class "OleDbConnection" {
    + BeginDbTransaction()
    + BeginTransaction()
    + BeginTransaction()
    + ChangeDatabase()
    + Close()
    + CreateCommand()
    + CreateDbCommand()
    + Dispose()
    + EnlistDistributedTransaction()
    + EnlistTransaction()
    + GetOleDbSchemaTable()
    + GetSchema()
    + GetSchema()
    + GetSchema()
    + Open()
    + ResetState()
    - System.ICloneable.Clone()
}

class "OleDbConnectionStringBuilder" {
    + Clear()
    + ContainsKey()
    + GetProperties()
    + Remove()
    + TryGetValue()
}

class "OleDbDataAdapter" {
    + CreateRowUpdatedEvent()
    + CreateRowUpdatingEvent()
    + Fill()
    + Fill()
    + OnRowUpdated()
    + OnRowUpdating()
    - System.ICloneable.Clone()
}

class "OleDbDataReader" {
    + Close()
    + GetBoolean()
    + GetByte()
    + GetBytes()
    + GetChar()
    + GetChars()
    + GetData()
    + GetDbDataReader()
    + GetDataTypeName()
    + GetDateTime()
    + GetDecimal()
    + GetDouble()
    + GetEnumerator()
    + GetFieldType()
    + GetFloat()
    + GetGuid()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetName()
    + GetOrdinal()
    + GetSchemaTable()
    + GetString()
    + GetTimeSpan()
    + GetValue()
    + GetValues()
    + IsDBNull()
    + NextResult()
    + Read()
}

class "OleDbEnumerator" {
    + GetElements()
}

class "OleDbError" {
    + ToString()
}

class "OleDbErrorCollection" {
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
}

class "OleDbException" {
    + GetObjectData()
}

class "OleDbFactory" {
    + CreateCommand()
    + CreateCommandBuilder()
    + CreateConnection()
    + CreateConnectionStringBuilder()
    + CreateDataAdapter()
    + CreateParameter()
    + CreatePermission()
}

class "OleDbInfoMessageEventArgs" {
    + ToString()
}

class "OleDbInfoMessageEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OleDbParameter" {
    + ResetDbType()
    + ToString()
    - System.ICloneable.Clone()
    + ResetOleDbType()
}

class "OleDbParameterCollection" {
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    + AddRange()
    + AddRange()
    + AddWithValue()
    + Clear()
    + Contains()
    + Contains()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + GetParameter()
    + GetParameter()
    + IndexOf()
    + IndexOf()
    + IndexOf()
    + Insert()
    + Insert()
    + Remove()
    + Remove()
    + RemoveAt()
    + RemoveAt()
    + SetParameter()
    + SetParameter()
}

class "OleDbRowUpdatedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OleDbRowUpdatingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OleDbTransaction" {
    + Begin()
    + Begin()
    + Commit()
    + Dispose()
    + Rollback()
}

class "SqlDataSourceEnumerator" {
    + GetDataSources()
}

class "OnChangeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SqlRowsCopiedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SqlBuffer" {
    + GetTypeFromStorageType()
    + Clear()
    + SetToDateTime()
    + SetToDecimal()
    + SetToMoney()
    + SetToNullOfType()
    + SetToString()
    + SetToDate()
    + SetToDate()
    + SetToTime()
    + SetToTime()
    + SetToDateTime2()
    + SetToDateTime2()
    + SetToDateTimeOffset()
    + SetToDateTimeOffset()
    - ThrowIfNull()
}

class "Result" {
    + AddRow()
}

class "BulkCopySimpleResultSet" {
    + SetMetaData()
    + CreateIndexMap()
    + CreateRowBuffer()
}

class "SqlBulkCopy" {
    - System.IDisposable.Dispose()
    - IsCopyOption()
    - CreateInitialQuery()
    - CreateAndExecuteInitialQueryAsync()
    - AnalyzeTargetAndCreateUpdateBulkCommand()
    - SubmitUpdateBulkCommand()
    - WriteMetaData()
    + Close()
    - Dispose()
    - GetValueFromSourceRow()
    - ReadFromRowSourceAsync()
    - ReadFromRowSource()
    - GetColumnMetadata()
    - CreateOrValidateConnection()
    - RunParser()
    - RunParserReliably()
    - CommitTransaction()
    - AbortTransaction()
    - AppendColumnNameAndTypeName()
    - UnquotedName()
    - ValidateBulkCopyVariant()
    - ConvertValue()
    + WriteToServer()
    + WriteToServer()
    + WriteToServer()
    + WriteToServer()
    + WriteToServer()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    + WriteToServerAsync()
    - WriteRowSourceToServerAsync()
    - WriteRowSourceToServerCommon()
    + OnConnectionClosed()
    - OnRowsCopied()
    - FireRowsCopiedEvent()
    - ReadWriteColumnValueAsync()
    - RegisterForConnectionCloseNotification()
    - CopyColumnsAsync()
    - CopyColumnsAsyncSetupContinuation()
    - CheckAndRaiseNotification()
    - CheckForCancellation()
    - ContinueTaskPend()
    - CopyRowsAsync()
    - CopyBatchesAsync()
    - CopyBatchesAsyncContinued()
    - CopyBatchesAsyncContinuedOnSuccess()
    - CopyBatchesAsyncContinuedOnError()
    - CleanUpStateObjectOnError()
    - WriteToServerInternalRestContinuedAsync()
    - WriteToServerInternalRestAsync()
    - WriteToServerInternalAsync()
    - <CreateAndExecuteInitialQueryAsync>b__71_0()
    - <SubmitUpdateBulkCommand>b__73_0()
    - <ReadFromRowSourceAsync>b__78_0()
}

class "<>c__DisplayClass105_0" {
    + <WriteRowSourceToServerAsync>b__3()
}

class "<>c__DisplayClass105_1" {
    + <WriteRowSourceToServerAsync>b__1()
    + <WriteRowSourceToServerAsync>b__2()
}

class "<>c" {
    + <WriteRowSourceToServerAsync>b__105_0()
    + <WriteToServerInternalRestAsync>b__124_3()
    + <WriteToServerInternalRestAsync>b__124_1()
}

class "<>c__DisplayClass113_0" {
    + <CopyColumnsAsyncSetupContinuation>b__0()
}

class "<>c__DisplayClass116_0" {
    + <ContinueTaskPend>b__0()
}

class "<>c__DisplayClass117_0" {
    + <CopyRowsAsync>b__1()
    + <CopyRowsAsync>b__0()
    + <CopyRowsAsync>b__2()
}

class "<>c__DisplayClass118_0" {
    + <CopyBatchesAsync>b__0()
}

class "<>c__DisplayClass119_0" {
    + <CopyBatchesAsyncContinued>b__0()
    + <CopyBatchesAsyncContinued>b__1()
    + <CopyBatchesAsyncContinued>b__2()
}

class "<>c__DisplayClass120_0" {
    + <CopyBatchesAsyncContinuedOnSuccess>b__0()
    + <CopyBatchesAsyncContinuedOnSuccess>b__1()
}

class "<>c__DisplayClass123_0" {
    + <WriteToServerInternalRestContinuedAsync>b__0()
}

class "<>c__DisplayClass124_0" {
    + <WriteToServerInternalRestAsync>b__0()
    + <WriteToServerInternalRestAsync>b__5()
    + <WriteToServerInternalRestAsync>b__9()
    + <WriteToServerInternalRestAsync>b__2()
}

class "<>c__DisplayClass124_1" {
    + <WriteToServerInternalRestAsync>b__4()
    + <WriteToServerInternalRestAsync>b__6()
    + <WriteToServerInternalRestAsync>b__7()
    + <WriteToServerInternalRestAsync>b__8()
}

class "<>c__DisplayClass125_0" {
    + <WriteToServerInternalAsync>b__0()
}

class "SqlBulkCopyColumnMappingCollection" {
    + Add()
    + Add()
    + Add()
    + Add()
    + Add()
    - AssertWriteAccess()
    + Clear()
    + Contains()
    + CopyTo()
    + CreateDefaultMapping()
    + IndexOf()
    + Insert()
    + Remove()
    + RemoveAt()
    + ValidateCollection()
}

class "SqlCachedBuffer" {
    + ToStream()
    + ToString()
    + ToSqlString()
    + ToSqlXml()
    + ToXmlReader()
}

class "SqlClientFactory" {
    + CreateCommand()
    + CreateCommandBuilder()
    + CreateConnection()
    + CreateConnectionStringBuilder()
    + CreateDataAdapter()
    + CreateParameter()
    + CreateDataSourceEnumerator()
    + CreatePermission()
    - System.IServiceProvider.GetService()
}

class "SqlCommand" {
    + ResetCommandTimeout()
    + OnStatementCompleted()
    - PropertyChanging()
    + Prepare()
    - InternalPrepare()
    + Unprepare()
    + Cancel()
    + CreateParameter()
    + CreateDbParameter()
    + Dispose()
    + ExecuteScalar()
    - CompleteExecuteScalar()
    + ExecuteNonQuery()
    + BeginExecuteNonQuery()
    + BeginExecuteNonQuery()
    - BeginExecuteNonQueryInternalReadStage()
    - VerifyEndExecuteState()
    - WaitForAsyncResults()
    - ThrowIfReconnectionHasBeenCanceled()
    + EndExecuteNonQuery()
    - EndExecuteNonQueryInternal()
    - InternalExecuteNonQuery()
    + ExecuteXmlReader()
    + BeginExecuteXmlReader()
    + BeginExecuteXmlReader()
    - BeginExecuteXmlReaderInternalReadStage()
    + EndExecuteXmlReader()
    - EndExecuteXmlReaderInternal()
    - CompleteXmlReader()
    + ExecuteDbDataReader()
    + ExecuteReader()
    + ExecuteReader()
    + EndExecuteReader()
    - EndExecuteReaderInternal()
    + BeginExecuteReader()
    - BeginExecuteReaderInternalReadStage()
    - InternalEndExecuteReader()
    + ExecuteNonQueryAsync()
    + ExecuteDbDataReaderAsync()
    + ExecuteReaderAsync()
    + ExecuteReaderAsync()
    + ExecuteReaderAsync()
    + ExecuteReaderAsync()
    + ExecuteScalarAsync()
    + ExecuteXmlReaderAsync()
    + ExecuteXmlReaderAsync()
    + DeriveParameters()
    - ParameterDirectionFromOleDbDirection()
    - CheckNotificationStateAndAutoEnlist()
    - RunExecuteNonQueryTds()
    + RunExecuteReader()
    + RunExecuteReader()
    - RunExecuteReaderTds()
    - CompleteAsyncExecuteReader()
    - FinishExecuteReader()
    - RegisterForConnectionCloseNotification()
    - ValidateCommand()
    - ValidateAsyncCommand()
    - GetStateObject()
    - ReliablePutStateObject()
    - PutStateObject()
    + OnDoneProc()
    + OnReturnStatus()
    + OnReturnValue()
    - GetCurrentParameterCollection()
    - GetParameterForOutputValueExtraction()
    - GetRPCObject()
    - SetUpRPCParameters()
    - BuildPrepExec()
    - CountSendableParameters()
    - GetParameterCount()
    - BuildRPC()
    - BuildExecute()
    - BuildExecuteSql()
    + BuildParamList()
    - ParseAndQuoteIdentifier()
    - GetSetOptionsString()
    - GetResetOptionsString()
    - GetCommandText()
    + CheckThrowSNIException()
    + OnConnectionClosed()
    + ClearBatchCommand()
    + AddBatchCommand()
    + ExecuteBatchRPCCommand()
    + GetRecordsAffected()
    + GetErrors()
    + CancelIgnoreFailure()
    - NotifyDependency()
    - System.ICloneable.Clone()
    + Clone()
    + BeginExecuteReader()
    + BeginExecuteReader()
    + BeginExecuteReader()
    + BeginExecuteReader()
}

class "<>c__DisplayClass98_0" {
    + <BeginExecuteNonQuery>b__0()
}

class "<>c__DisplayClass98_1" {
    + <BeginExecuteNonQuery>b__1()
}

class "<>c__DisplayClass105_0" {
    + <InternalExecuteNonQuery>b__0()
}

class "<>c__DisplayClass108_0" {
    + <BeginExecuteXmlReader>b__1()
}

class "<>c__DisplayClass108_1" {
    + <BeginExecuteXmlReader>b__0()
}

class "<>c__DisplayClass118_0" {
    + <BeginExecuteReader>b__1()
}

class "<>c__DisplayClass118_1" {
    + <BeginExecuteReader>b__0()
}

class "<>c__DisplayClass121_0" {
    + <ExecuteNonQueryAsync>b__1()
}

class "<>c" {
    + <ExecuteNonQueryAsync>b__121_0()
    + <ExecuteDbDataReaderAsync>b__122_0()
    + <ExecuteReaderAsync>b__126_0()
    + <ExecuteXmlReaderAsync>b__129_0()
    + <RunExecuteNonQueryTds>b__140_0()
    + <RunExecuteReaderTds>b__143_0()
}

class "<>c__DisplayClass126_0" {
    + <ExecuteReaderAsync>b__1()
}

class "<>c__DisplayClass127_0" {
    + <ExecuteScalarAsync>b__0()
}

class "<>c__DisplayClass127_1" {
    + <ExecuteScalarAsync>b__1()
}

class "<>c__DisplayClass129_0" {
    + <ExecuteXmlReaderAsync>b__1()
}

class "<>c__DisplayClass140_0" {
    + <RunExecuteNonQueryTds>b__1()
    + <RunExecuteNonQueryTds>b__2()
}

class "<>c__DisplayClass143_0" {
    + <RunExecuteReaderTds>b__3()
    + <RunExecuteReaderTds>b__4()
}

class "<>c__DisplayClass143_1" {
    + <RunExecuteReaderTds>b__1()
    + <RunExecuteReaderTds>b__2()
}

class "SqlCommandBuilder" {
    - SqlRowUpdatingHandler()
    + GetInsertCommand()
    + GetInsertCommand()
    + GetUpdateCommand()
    + GetUpdateCommand()
    + GetDeleteCommand()
    + GetDeleteCommand()
    + ApplyParameterInfo()
    + GetParameterName()
    + GetParameterName()
    + GetParameterPlaceholder()
    - ConsistentQuoteDelimiters()
    + GetSchemaTable()
    + InitializeCommand()
    + QuoteIdentifier()
    + SetRowUpdatingHandler()
    + UnquoteIdentifier()
}

class "SqlCommandSet" {
    + Append()
    + Clear()
    + Dispose()
    + ExecuteNonQuery()
    + GetParameter()
    + GetBatchedAffected()
    + GetParameterCount()
    - ValidateCommandBehavior()
}

class "SqlConnection" {
    - CacheConnectionStringProperties()
    - UsesIntegratedSecurity()
    - UsesClearUserIdOrPassword()
    - CheckAndThrowOnInvalidCombinationOfConnectionStringAndSqlCredential()
    - CheckAndThrowOnInvalidCombinationOfConnectionOptionAndAccessToken()
    + OnStateChange()
    + BeginTransaction()
    + BeginTransaction()
    + BeginTransaction()
    + BeginDbTransaction()
    + BeginTransaction()
    + ChangeDatabase()
    - CloseInnerConnection()
    + Close()
    + CreateCommand()
    - DisposeMe()
    + Open()
    + RegisterWaitingForReconnect()
    - ReconnectAsync()
    + ValidateAndReconnect()
    - WaitForPendingReconnection()
    - CancelOpenAndWait()
    + OpenAsync()
    + GetSchema()
    + GetSchema()
    + GetSchema()
    - PrepareStatisticsForNewConnection()
    - TryOpen()
    + ValidateConnectionForExecute()
    + OnError()
    + GetOpenTdsConnection()
    + GetOpenTdsConnection()
    + OnInfoMessage()
    + OnInfoMessage()
    + RegisterForConnectionCloseNotification()
    + ResetStatistics()
    + RetrieveStatistics()
    - UpdateStatistics()
    - System.ICloneable.Clone()
    - CopyFrom()
    - ResolveTypeAssembly()
    + CheckGetExtendedUDTInfo()
    + GetUdtValue()
    + GetBytes()
    + GetBytes()
    - GetInfoFromType()
    - ConnectionString_Get()
    - ConnectionString_Set()
    + Abort()
    + AddWeakReference()
    + CreateDbCommand()
    + Dispose()
    - RepairInnerConnection()
    + EnlistTransaction()
    + NotifyWeakReference()
    + PermissionDemand()
    + RemoveWeakReference()
    + SetInnerConnectionEvent()
    + SetInnerConnectionFrom()
    + SetInnerConnectionTo()
    + EnlistDistributedTransaction()
}

class "<>c__DisplayClass98_0" {
    + <ValidateAndReconnect>b__0()
}

class "<>c__DisplayClass101_0" {
    + <OpenAsync>b__0()
}

class "<>c" {
    + <OpenAsync>b__101_1()
}

class "<>c__DisplayClass118_0" {
    + <OnError>b__0()
}

class "<>c__DisplayClass126_0`1" {
    + <RegisterForConnectionCloseNotification>b__0()
}

class "<>c__DisplayClass133_0" {
    + <CheckGetExtendedUDTInfo>b__0()
}

class "SqlConnectionFactory" {
    + CreateConnection()
    + CreateConnection()
    + CreateConnectionOptions()
    + CreateConnectionPoolProviderInfo()
    + CreateConnectionPoolGroupOptions()
    + CreateConnectionPoolGroupProviderInfo()
    + GetConnectionPoolGroup()
    + GetInnerConnection()
    + PermissionDemand()
    + SetConnectionPoolGroup()
    + SetInnerConnectionEvent()
    + SetInnerConnectionFrom()
    + SetInnerConnectionTo()
    + CreateMetaDataFactory()
}

class "SqlConnectionPoolGroupProviderInfo" {
    + AliasCheck()
    + FailoverCheck()
}

class "SqlConnectionPoolKey" {
    + Clone()
    + Equals()
    + GetHashCode()
    - CalculateHashCode()
}

class "SqlConnectionString" {
    + ObtainWorkstationId()
    - ValidateValueLength()
    + ConvertValueToApplicationIntent()
    + ThrowUnsupportedIfKeywordSet()
}

class "SqlConnectionStringBuilder" {
    + Clear()
    + ContainsKey()
    - GetAt()
    - GetIndex()
    + Remove()
    - Reset()
    - SetValue()
    - SetValue()
    - SetValue()
    - SetApplicationIntentValue()
    + ShouldSerialize()
    + TryGetValue()
    - UnsupportedKeyword()
}

class "SqlInitialCatalogConverter" {
    + GetStandardValuesSupported()
    - GetStandardValuesSupportedInternal()
    + GetStandardValuesExclusive()
    + GetStandardValues()
}

class "SqlConnectionTimeoutPhaseDuration" {
    + StartCapture()
    + StopCapture()
    + GetMilliSecondDuration()
}

class "SqlConnectionTimeoutErrorInternal" {
    + SetFailoverScenario()
    + SetInternalSourceType()
    + ResetAndRestartPhase()
    + SetAndBeginPhase()
    + EndPhase()
    + SetAllCompleteMarker()
    + GetErrorMessage()
}

class "SqlDataAdapter" {
    + AddToBatch()
    + ClearBatch()
    + ExecuteBatch()
    + GetBatchedParameter()
    + GetBatchedRecordsAffected()
    + InitializeBatching()
    + TerminateBatching()
    - System.ICloneable.Clone()
    + CreateRowUpdatedEvent()
    + CreateRowUpdatingEvent()
    + OnRowUpdated()
    + OnRowUpdating()
}

class "SqlDataReader" {
    + ColumnDataBytesRemaining()
    + GetInternalSmiMetaData()
    + Bind()
    + BuildSchemaTable()
    + Cancel()
    - TryCleanPartialRead()
    - CleanPartialReadReliable()
    + Dispose()
    + Close()
    - TryCloseInternal()
    + CloseReaderFromConnection()
    - TryConsumeMetaData()
    + GetDataTypeName()
    - GetDataTypeNameInternal()
    + GetVariantInternalStorageType()
    + GetEnumerator()
    + GetFieldType()
    - GetFieldTypeInternal()
    + GetLocaleId()
    + GetName()
    + GetProviderSpecificFieldType()
    - GetProviderSpecificFieldTypeInternal()
    + GetOrdinal()
    + GetProviderSpecificValue()
    + GetProviderSpecificValues()
    + GetSchemaTable()
    + GetBoolean()
    + GetXmlReader()
    + GetStream()
    + GetByte()
    + GetBytes()
    + GetBytesInternal()
    - TryGetBytesInternal()
    + GetBytesInternalSequential()
    + TryGetBytesInternalSequential()
    + GetTextReader()
    + GetChar()
    + GetChars()
    - GetCharsFromPlpData()
    + GetStreamingXmlChars()
    + GetDateTime()
    + GetDecimal()
    + GetDouble()
    + GetFloat()
    + GetGuid()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetSqlBoolean()
    + GetSqlBinary()
    + GetSqlByte()
    + GetSqlBytes()
    + GetSqlChars()
    + GetSqlDateTime()
    + GetSqlDecimal()
    + GetSqlGuid()
    + GetSqlDouble()
    + GetSqlInt16()
    + GetSqlInt32()
    + GetSqlInt64()
    + GetSqlMoney()
    + GetSqlSingle()
    + GetSqlString()
    + GetSqlXml()
    + GetSqlValue()
    - GetSqlValueInternal()
    - GetSqlValueFromSqlBufferInternal()
    + GetSqlValues()
    + GetString()
    + GetFieldValue()
    + GetValue()
    + GetTimeSpan()
    + GetDateTimeOffset()
    - GetValueInternal()
    - GetValueFromSqlBufferInternal()
    - GetFieldValueInternal()
    - GetFieldValueFromSqlBufferInternal()
    + GetValues()
    - GetVersionedMetaType()
    - TryHasMoreResults()
    - TryHasMoreRows()
    - IsRowToken()
    + IsDBNull()
    + IsCommandBehavior()
    + NextResult()
    - TryNextResult()
    + Read()
    - TryReadInternal()
    - ReadColumn()
    - TryReadColumn()
    - TryReadColumnData()
    - ReadColumnHeader()
    - TryReadColumnHeader()
    - TryReadColumnInternal()
    - WillHaveEnoughData()
    - TryResetBlobState()
    - CloseActiveSequentialStreamAndTextReader()
    - RestoreServerSettings()
    + TrySetAltMetaDataSet()
    - ClearMetaData()
    + TrySetMetaData()
    - SetTimeout()
    - HasActiveStreamOrTextReaderOnColumn()
    - CheckMetaDataIsReady()
    - CheckMetaDataIsReady()
    - CheckDataIsReady()
    - CheckHeaderIsReady()
    - CheckDataIsReady()
    - AssertReaderState()
    + NextResultAsync()
    + GetBytesAsync()
    - GetBytesAsyncReadDataStage()
    + ReadAsync()
    + IsDBNullAsync()
    + GetFieldValueAsync()
    - ContinueRetryable()
    - InvokeRetryable()
    - CompleteRetryable()
    - PrepareAsyncInvocation()
    - CleanupAfterAsyncInvocation()
    - CleanupAfterAsyncInvocationInternal()
    - PrepareForAsyncContinuation()
    - SwitchToAsyncWithoutSnapshot()
    + GetColumnSchema()
    - BuildColumnSchema()
}

class "<>c__DisplayClass187_0" {
    + <NextResultAsync>b__1()
}

class "<>c" {
    + <NextResultAsync>b__187_0()
    + <ReadAsync>b__190_0()
    + <IsDBNullAsync>b__191_0()
}

class "<>c__DisplayClass188_0" {
    + <GetBytesAsync>b__0()
}

class "<>c__DisplayClass189_0" {
    + <GetBytesAsyncReadDataStage>b__1()
}

class "<>c__DisplayClass189_1" {
    + <GetBytesAsyncReadDataStage>b__0()
}

class "<>c__DisplayClass190_0" {
    + <ReadAsync>b__1()
}

class "<>c__DisplayClass191_0" {
    + <IsDBNullAsync>b__1()
}

class "<>c__DisplayClass192_0`1" {
    + <GetFieldValueAsync>b__1()
}

class "<>c__192`1" {
    + <GetFieldValueAsync>b__192_0()
}

class "<>c__DisplayClass194_0`1" {
    + <ContinueRetryable>b__0()
}

class "<>c__DisplayClass195_0`1" {
    + <InvokeRetryable>b__0()
}

class "SqlDbColumn" {
    - Populate()
}

class "SqlDelegatedTransaction" {
    + Initialize()
    + Promote()
    + Rollback()
    + SinglePhaseCommit()
    + TransactionEnded()
    - GetValidConnection()
    - ValidateActiveOnConnection()
    - GetGlobalTxnIdentifierFromToken()
}

class "SqlDependency" {
    + AddCommandDependency()
    + AddToServerList()
    + ContainsServer()
    + ComputeHashAndAddToDispatcher()
    + Invalidate()
    + StartTimer()
    - AddCommandInternal()
    - ComputeCommandHash()
}

class "IdentityUserNamePair" {
    + Equals()
    + GetHashCode()
}

class "DatabaseServicePair" {
    + Equals()
    + GetHashCode()
}

class "EventContextPair" {
    + Equals()
    + GetHashCode()
    + Invoke()
}

class "SqlDependencyPerAppDomainDispatcher" {
    + InitializeLifetimeService()
    + AddDependencyEntry()
    + AddCommandEntry()
    + InvalidateCommandID()
    + InvalidateServer()
    + LookupDependencyEntry()
    - LookupDependencyEntryWithRemove()
    - LookupCommandEntryWithRemove()
    - RemoveDependencyFromCommandToDependenciesHash()
    + StartTimer()
    - SubscribeToAppDomainUnload()
}

class "SqlError" {
    + ToString()
}

class "SqlErrorCollection" {
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + Add()
}

class "SqlException" {
    + GetObjectData()
    + ToString()
    + InternalClone()
}

class "SqlInfoMessageEventArgs" {
    - ShouldSerializeErrors()
    + ToString()
}

class "SqlInfoMessageEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SessionData" {
    + Reset()
    + AssertUnrecoverableStateCountIsCorrect()
}

class "SqlInternalConnectionTds" {
    - IsTransientError()
    + ChangeDatabaseInternal()
    + Dispose()
    + ValidateConnectionForExecute()
    + CheckEnlistedTransactionBinding()
    + IsConnectionAlive()
    + Activate()
    + InternalDeactivate()
    - ResetConnection()
    + DecrementAsyncCount()
    + IncrementAsyncCount()
    + DisconnectTransaction()
    + ExecuteTransaction()
    + ExecuteTransaction()
    + ExecuteTransactionYukon()
    + DelegatedTransactionEnded()
    + GetDTCAddress()
    + PropagateTransactionCookie()
    - CompleteLogin()
    - Login()
    - LoginFailure()
    - OpenLoginEnlist()
    - IsDoNotRetryConnectError()
    - LoginNoFailover()
    - LoginWithFailover()
    - ResolveExtendedServerName()
    - AttemptOneLogin()
    + ObtainAdditionalLocksForClose()
    + ReleaseAdditionalLocksForClose()
    + GetSessionAndReconnectIfNeeded()
    + BreakConnection()
    + OnEnvChange()
    + OnLoginAck()
    + OnFeatureExtAck()
    + TryReplaceConnection()
}

class "<>c__DisplayClass88_0" {
    + <ExecuteTransactionYukon>b__0()
}

class "<>c__DisplayClass103_0" {
    + <GetSessionAndReconnectIfNeeded>b__0()
}

class "ServerInfo" {
    + SetDerivedNames()
}

class "SqlInternalTransaction" {
    + Activate()
    - CheckTransactionLevelAndZombie()
    + CloseFromConnection()
    + Commit()
    + Completed()
    + DecrementAndObtainOpenResultCount()
    + Dispose()
    - Dispose()
    - GetServerTransactionLevel()
    + IncrementAndObtainOpenResultCount()
    + InitParent()
    + Rollback()
    + Rollback()
    + Save()
    + Zombie()
    - ZombieParent()
}

class "SqlMetaDataFactory" {
    - addUDTsToDataTypesTable()
    - AddTVPsToDataTypesTable()
    - GetDataTypesTable()
    + PrepareCollection()
}

class "SqlParameter" {
    + ResetDbType()
    + MetaDataForSmi()
    - ShouldSerializePrecision()
    - ShouldSerializeScale()
    - ShouldSerializeSqlDbType()
    + ResetSqlDbType()
    + GetActualSize()
    - System.ICloneable.Clone()
    + FixStreamDataForNonPLP()
    - CloneHelper()
    + GetActualPrecision()
    + GetActualScale()
    + GetParameterSize()
    - GetActualFieldsAndProperties()
    + GetCoercedValue()
    + AssertCachedPropertiesAreValid()
    + AssertPropertiesAreValid()
    - GetMetaSqlDbTypeOnly()
    - GetMetaTypeOnly()
    + Prepare()
    - PropertyChanging()
    - PropertyTypeChanging()
    + SetSqlBuffer()
    + SetUdtLoadError()
    + Validate()
    + ValidateTypeLengths()
    - ValuePrecision()
    - ValueScale()
    - ValueSize()
    - ShouldSerializeSize()
    + CompareExchangeParent()
    + ResetParent()
    + ToString()
    - ValuePrecisionCore()
    - ValueScaleCore()
    - ValueSizeCore()
    + CopyTo()
}

class "SqlParameterConverter" {
    + CanConvertTo()
    + ConvertTo()
    - ConvertToInstanceDescriptor()
}

class "SqlParameterCollection" {
    + Add()
    + AddWithValue()
    + Add()
    + Add()
    + Add()
    + AddRange()
    + Contains()
    + Contains()
    + CopyTo()
    + IndexOf()
    + Insert()
    - OnChange()
    + Remove()
    + Add()
    + AddRange()
    - CheckName()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + GetParameter()
    + GetParameter()
    + IndexOf()
    + IndexOf()
    + Insert()
    - RangeCheck()
    + Remove()
    + RemoveAt()
    + RemoveAt()
    - RemoveIndex()
    - Replace()
    + SetParameter()
    + SetParameter()
    - Validate()
    - ValidateType()
    + Add()
}

class "SqlReferenceCollection" {
    + Add()
    + Deactivate()
    + FindLiveReader()
    + FindLiveCommand()
    + NotifyItem()
    + Remove()
}

class "<>c__DisplayClass5_0" {
    + <FindLiveReader>b__1()
}

class "<>c" {
    + <FindLiveReader>b__5_0()
}

class "<>c__DisplayClass6_0" {
    + <FindLiveCommand>b__0()
}

class "SqlRowUpdatedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SqlRowUpdatingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SqlSequentialStream" {
    + Flush()
    + Read()
    + ReadAsync()
    + BeginRead()
    + EndRead()
    + Seek()
    + SetLength()
    + Write()
    + SetClosed()
    + Dispose()
}

class "<>c__DisplayClass26_0" {
    + <ReadAsync>b__0()
}

class "SqlSequentialTextReader" {
    + Peek()
    + Read()
    + Read()
    + ReadAsync()
    + Dispose()
    + SetClosed()
    - InternalRead()
    - PrepareByteBuffer()
    - DecodeBytesToChars()
}

class "<>c__DisplayClass14_0" {
    + <ReadAsync>b__0()
}

class "SqlUnicodeEncoding" {
    + GetDecoder()
    + GetMaxByteCount()
}

class "SqlUnicodeDecoder" {
    + GetCharCount()
    + GetChars()
    + Convert()
}

class "SqlStatistics" {
    + ContinueOnNewConnection()
    + GetDictionary()
    + RequestExecutionTimer()
    + RequestNetworkServerTimer()
    + ReleaseAndUpdateExecutionTimer()
    + ReleaseAndUpdateNetworkServerTimer()
    + Reset()
    + SafeAdd()
    + SafeIncrement()
    + UpdateStatistics()
}

class "StatisticsDictionary" {
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    - CopyKeys()
    - CopyValues()
    - ValidateCopyToArguments()
}

class "Collection" {
    - System.Collections.ICollection.CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
}

class "SqlStream" {
    + Dispose()
    + Flush()
    + Read()
    - ReadBytes()
    + ToXmlReader()
    + Seek()
    + SetLength()
    + Write()
}

class "SqlCachedStream" {
    + Dispose()
    + Flush()
    + Read()
    + Seek()
    + SetLength()
    + Write()
    - SetInternalPosition()
}

class "SqlStreamingXml" {
    + Close()
    + GetChars()
    - WriteXmlElement()
}

class "SqlTransaction" {
    + Commit()
    + Dispose()
    + Rollback()
    + Rollback()
    + Save()
    + Zombie()
    - ZombieCheck()
}

class "<>c__DisplayClass0_0" {
    + <CreateContinuationTask>b__0()
}

class "<>c__DisplayClass1_0`2" {
    + <CreateContinuationTask>b__0()
}

class "<>c__DisplayClass2_0" {
    + <ContinueTask>b__0()
}

class "<>c__DisplayClass4_0" {
    + <SetTimeoutException>b__0()
}

class "<>c" {
    + <.cctor>b__9_0()
    + <.cctor>b__9_1()
    + <.cctor>b__9_2()
}

class "TdsParameterSetter" {
    + GetTypedGetterSetter()
    + SetDBNull()
}

class "TdsParser" {
    + PostReadAsyncForMars()
    - LoadSSPILibrary()
    - WaitForSSLHandShakeToComplete()
    - GetSniErrorDetails()
    + IncrementNonTransactedOpenResultCount()
    + DecrementNonTransactedOpenResultCount()
    + ProcessPendingAck()
    + Connect()
    + RemoveEncryption()
    + EnableMars()
    + CreateSession()
    + GetSession()
    + PutSession()
    - SendPreLoginHandshake()
    - ConsumePreLoginHandshake()
    + Deactivate()
    + Disconnect()
    - FireInfoMessageEvent()
    + DisconnectTransaction()
    + RollbackOrphanedAPITransactions()
    + ThrowExceptionAndWarning()
    + ProcessSNIError()
    + CheckResetConnection()
    + WriteShort()
    + WriteUnsignedShort()
    + WriteUnsignedInt()
    + WriteInt()
    + WriteFloat()
    + WriteLong()
    + WritePartialLong()
    + WriteUnsignedLong()
    + WriteDouble()
    + PrepareResetConnection()
    + Run()
    + TryRun()
    - TryProcessEnvChange()
    - TryReadTwoBinaryFields()
    - TryReadTwoStringFields()
    - TryProcessDone()
    - ProcessSqlStatistics()
    - TryProcessFeatureExtAck()
    - TryProcessSessionState()
    - TryProcessLoginAck()
    + TryProcessError()
    + TryProcessReturnValue()
    + TryProcessCollation()
    - WriteCollation()
    + GetCodePage()
    + DrainData()
    + ThrowUnsupportedCollationEncountered()
    + TryProcessAltMetaData()
    + TryProcessMetaData()
    - IsVarTimeTds()
    - TryCommonProcessMetaData()
    - WriteUDTMetaData()
    + TryProcessTableName()
    - TryProcessOneTable()
    - TryProcessColInfo()
    + TryProcessColumnHeader()
    - TryProcessColumnHeaderNoNBC()
    + TryGetAltRowId()
    - TryProcessRow()
    + GetNullSqlValue()
    + TrySkipRow()
    + TrySkipRow()
    + TrySkipValue()
    - IsNull()
    - TryReadSqlStringValue()
    + TryReadSqlValue()
    - TryReadSqlDateTime()
    + TryReadSqlValueInternal()
    + TryReadSqlVariant()
    + WriteSqlVariantValue()
    + WriteSqlVariantDataRowValue()
    + WriteSqlVariantHeader()
    + WriteSqlVariantDateTime2()
    + WriteSqlVariantDate()
    - WriteSqlMoney()
    - WriteCurrency()
    - WriteDate()
    - WriteTime()
    - WriteDateTime2()
    - WriteDateTimeOffset()
    - TryReadSqlDecimal()
    - TryReadDecimalBits()
    + WriteSqlDecimal()
    - WriteDecimal()
    - WriteIdentifier()
    - WriteIdentifierWithShortLength()
    - WriteString()
    + WriteCharArray()
    + WriteString()
    - WriteEncodingChar()
    - WriteEncodingChar()
    + GetEncodingCharLength()
    + TryGetDataLength()
    + TryGetTokenLength()
    - ProcessAttention()
    + WriteSessionRecoveryFeatureRequest()
    + WriteFedAuthFeatureRequest()
    + WriteGlobalTransactionsFeatureRequest()
    + TdsLogin()
    - SSPIData()
    - SNISSPIData()
    - ProcessSSPI()
    - SSPIError()
    + GetDTCAddress()
    + PropagateDistributedTransaction()
    + TdsExecuteTransactionManagerRequest()
    + FailureCleanup()
    + TdsExecuteSQLBatch()
    + TdsExecuteRPC()
    - FinalizeExecuteRPC()
    - TdsExecuteRPC_OnFailure()
    - ExecuteFlushTaskCallback()
    - WriteParameterName()
    - WriteSmiParameter()
    - WriteSmiParameterMetaData()
    - WriteSmiTypeInfo()
    - WriteTvpTypeInfo()
    - WriteTvpColumnMetaData()
    - WriteTvpOrderUnique()
    + WriteBulkCopyDone()
    + WriteBulkCopyMetaData()
    + WriteBulkCopyValue()
    - WriteBulkCopyValueSetupContinuation()
    - WriteMarsHeaderData()
    - GetNotificationHeaderSize()
    - WriteQueryNotificationHeaderData()
    - WriteRPCBatchHeaders()
    - WriteTokenLength()
    - IsBOMNeeded()
    - GetTerminationTask()
    - WriteSqlValue()
    - WriteUnterminatedSqlValue()
    - WriteXmlFeed()
    - WriteTextFeed()
    - WriteStreamFeed()
    - NullIfCompletedWriteTask()
    - WriteValue()
    - WriteUnterminatedValue()
    + WriteParameterVarLen()
    - TryReadPlpUnicodeCharsChunk()
    + ReadPlpUnicodeChars()
    + TryReadPlpUnicodeChars()
    + ReadPlpAnsiChars()
    + SkipPlpValue()
    + TrySkipPlpValue()
    + PlpBytesLeft()
    + TryPlpBytesLeft()
    + PlpBytesTotalLength()
    - TryProcessUDTMetaData()
}

class "TdsOutputStream" {
    + Flush()
    + Read()
    + Seek()
    + SetLength()
    - StripPreamble()
    + Write()
    + WriteAsync()
}

class "ConstrainedTextWriter" {
    + Flush()
    + FlushAsync()
    + Write()
    + Write()
    + WriteAsync()
    + WriteAsync()
    + WriteAsync()
}

class "<>c__DisplayClass83_0" {
    + <ThrowExceptionAndWarning>b__0()
}

class "<>c__DisplayClass83_1" {
    + <ThrowExceptionAndWarning>b__1()
}

class "<>c__DisplayClass98_0" {
    + <TryRun>b__0()
}

class "<>c__DisplayClass179_0" {
    + <TdsExecuteSQLBatch>b__0()
}

class "<>c__DisplayClass180_0" {
    + <TdsExecuteRPC>b__1()
    + <TdsExecuteRPC>b__2()
}

class "<>c__DisplayClass180_2" {
    + <TdsExecuteRPC>b__0()
}

class "<>c__DisplayClass180_3" {
    + <TdsExecuteRPC>b__3()
}

class "<>c__DisplayClass196_0" {
    + <WriteBulkCopyValueSetupContinuation>b__0()
}

class "_SqlMetaData" {
    + Clone()
}

class "_SqlMetaDataSet" {
    + Clone()
}

class "_SqlMetaDataSetCollection" {
    + SetAltMetaData()
    + GetAltMetaData()
    + Clone()
}

class "SqlMetaDataPriv" {
    + CopyFrom()
}

class "_SqlRPC" {
    + GetCommandTextOrRpcName()
}

class "SNILoadHandle" {
    + ReleaseHandle()
}

class "SNIHandle" {
    + ReleaseHandle()
}

class "SNIPacket" {
    + ReleaseHandle()
}

class "WritePacketCache" {
    + Take()
    + Add()
    + Clear()
    + Dispose()
}

class "TdsParserSessionPool" {
    + Deactivate()
    + Dispose()
    + GetSession()
    + PutSession()
}

class "StateSnapshot" {
    + CloneNullBitmapInfo()
    + CloneCleanupAltMetaDataSetArray()
    + PushBuffer()
    + Replay()
    + Snap()
    + ResetSnapshotState()
    + PrepareReplay()
}

class "<>c__DisplayClass175_0" {
    + <OnTimeout>b__0()
}

class "<>c__DisplayClass184_0`1" {
    + <ReadAsyncCallback>b__0()
    + <ReadAsyncCallback>b__1()
}

class "<>c__DisplayClass186_0" {
    + <ReadAsyncCallbackCaptureException>b__0()
}

class "<>c__DisplayClass194_0" {
    + <WriteByteArraySetupContinuation>b__0()
}

class "TdsParserStateObjectFactory" {
    + CreateTdsParserStateObject()
    + CreateSessionObject()
}

class "TdsParserStateObjectNative" {
    + CreateSessionHandle()
    - CreateConsumerInfo()
    + CreatePhysicalSNIHandle()
    + SNIPacketGetData()
    + CheckPacket()
    + ReadAsyncCallback()
    + WriteAsyncCallback()
    + RemovePacketFromPendingList()
    + Dispose()
    + FreeGcHandle()
    + IsFailedHandle()
    + ReadSyncOverAsync()
    + IsPacketEmpty()
    + ReleasePacket()
    + CheckConnection()
    + ReadAsync()
    + CreateAndSetAttentionPacket()
    + WritePacket()
    + AddPacketToPendingList()
    + IsValidPacket()
    + GetResetWritePacket()
    + ClearAllWritePackets()
    + SetPacketData()
    + SniGetConnectionId()
    + DisabeSsl()
    + EnableMars()
    + EnableSsl()
    + SetConnectionBufferSize()
    + GenerateSspiClientContext()
    + WaitForSSLHandShakeToComplete()
    + DisposePacketCache()
}

class "WritePacketCache" {
    + Take()
    + Add()
    + Clear()
    + Dispose()
}

class "TdsRecordBufferSetter" {
    + SetDBNull()
    + SetBoolean()
    + SetByte()
    + SetBytes()
    + SetBytesLength()
    + SetChars()
    + SetCharsLength()
    + SetString()
    + SetInt16()
    + SetInt32()
    + SetInt64()
    + SetSingle()
    + SetDouble()
    + SetSqlDecimal()
    + SetDateTime()
    + SetGuid()
    + SetTimeSpan()
    + SetDateTimeOffset()
    + SetVariantMetaData()
    + NewElement()
    + EndElements()
    - CheckWritingToColumn()
    - SkipPossibleDefaultedColumns()
    + CheckSettingColumn()
}

class "TdsValueSetter" {
    + SetDBNull()
    + SetBoolean()
    + SetByte()
    + SetBytes()
    - SetBytesNoOffsetHandling()
    + SetBytesLength()
    + SetChars()
    + SetCharsLength()
    + SetString()
    + SetInt16()
    + SetInt32()
    + SetInt64()
    + SetSingle()
    + SetDouble()
    + SetSqlDecimal()
    + SetDateTime()
    + SetGuid()
    + SetTimeSpan()
    + SetDateTimeOffset()
    + SetVariantType()
    - CheckSettingOffset()
}

class "SqlClientPermission" {
    + Add()
    + Copy()
}

class "SqlClientPermissionAttribute" {
    + CreatePermission()
}

class "LocalDB" {
    - GetConnectionString()
    - LoadUserInstanceDll()
    - GetUserInstanceDllPath()
}

class "LocalDBStartInstance" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c" {
    + <.ctor>b__11_0()
}

class "SNIMarsConnection" {
    + CreateMarsSession()
    + StartReceive()
    + Send()
    + SendAsync()
    + ReceiveAsync()
    + CheckConnection()
    + HandleReceiveError()
    + HandleSendComplete()
    + HandleReceiveComplete()
    + EnableSsl()
    + DisableSsl()
}

class "SNIMarsHandle" {
    + Dispose()
    - SendControlPacket()
    - GetSMUXHeaderBytes()
    - GetSMUXEncapsulatedPacket()
    + Send()
    - InternalSendAsync()
    - SendPendingPackets()
    + SendAsync()
    + ReceiveAsync()
    + HandleReceiveError()
    + HandleSendComplete()
    + HandleAck()
    + HandleReceiveComplete()
    - SendAckIfNecessary()
    + Receive()
    + CheckConnection()
    + SetAsyncCallbacks()
    + SetBufferSize()
    + EnableSsl()
    + DisableSsl()
}

class "SNINpHandle" {
    + CheckConnection()
    + Dispose()
    + Receive()
    + ReceiveAsync()
    + Send()
    + SendAsync()
    + SetAsyncCallbacks()
    + EnableSsl()
    + DisableSsl()
    - ValidateServerCertificate()
    + SetBufferSize()
    - ReportErrorAndReleasePacket()
    - ReportErrorAndReleasePacket()
}

class "SNIPacket" {
    + Dispose()
    + SetCompletionCallback()
    + InvokeCompletionCallback()
    + Allocate()
    + Clone()
    + GetData()
    + SetData()
    + TakeData()
    + AppendData()
    + AppendPacket()
    + TakeData()
    + Release()
    + Reset()
    + ReadFromStreamAsync()
    + ReadFromStream()
    + WriteToStream()
    + WriteToStreamAsync()
    + GetHashCode()
    + Equals()
    + Equals()
}

class "<>c__DisplayClass32_0" {
    + <ReadFromStreamAsync>b__0()
}

class "SNIProxy" {
    + Terminate()
    + EnableSsl()
    + DisableSsl()
    + GenSspiClientContext()
    + InitializeSspiPackage()
    + SetConnectionBufferSize()
    + PacketGetData()
    + ReadSyncOverAsync()
    + GetConnectionId()
    + WritePacket()
    + CreateConnectionHandle()
    - CreateTcpHandle()
    - CreateNpHandle()
    + ReadAsync()
    + PacketSetData()
    + PacketRelease()
    + CheckConnection()
    + GetLastError()
    - GetLocalDBDataSource()
}

class "DataSource" {
    - PopulateProtocol()
    - InferLocalServerName()
    - InferConnectionDetails()
    - ReportSNIError()
    - InferNamedPipesInformation()
}

class "SNITCPHandle" {
    + Dispose()
    + EnableSsl()
    + DisableSsl()
    - ValidateServerCertificate()
    + SetBufferSize()
    + Send()
    + Receive()
    + SetAsyncCallbacks()
    + SendAsync()
    + ReceiveAsync()
    + CheckConnection()
    - ReportTcpSNIError()
    - ReportTcpSNIError()
    - ReportErrorAndReleasePacket()
    - ReportErrorAndReleasePacket()
}

class "<>c__DisplayClass20_0" {
    + <Connect>g__Cancel|0()
}

class "SslOverTdsStream" {
    + FinishHandshake()
    + Read()
    + Write()
    + WriteAsync()
    + ReadAsync()
    - ReadInternal()
    - WriteInternal()
    + SetLength()
    + Flush()
    + Seek()
}

class "TdsParserStateObjectManaged" {
    + CheckPacket()
    + CreateSessionHandle()
    + CreateMarsSession()
    + SNIPacketGetData()
    + CreatePhysicalSNIHandle()
    + ReadAsyncCallback()
    + WriteAsyncCallback()
    + RemovePacketFromPendingList()
    + Dispose()
    + DisposePacketCache()
    + FreeGcHandle()
    + IsFailedHandle()
    + ReadSyncOverAsync()
    + IsPacketEmpty()
    + ReleasePacket()
    + CheckConnection()
    + ReadAsync()
    + CreateAndSetAttentionPacket()
    + WritePacket()
    + AddPacketToPendingList()
    + IsValidPacket()
    + GetResetWritePacket()
    + ClearAllWritePackets()
    + SetPacketData()
    + SniGetConnectionId()
    + DisabeSsl()
    + EnableMars()
    + EnableSsl()
    + SetConnectionBufferSize()
    + GenerateSspiClientContext()
    + WaitForSSLHandShakeToComplete()
}

class "WritePacketCache" {
    + Take()
    + Add()
    + Clear()
    + Dispose()
}

class "DbCache" {
    + InvalidateValue()
    + AccessIndex()
    + GetSchema()
    + FlushValues()
}

class "OdbcCommand" {
    - DisposeDeadDataReader()
    - DisposeDataReader()
    + DisconnectFromDataReaderAndConnection()
    + Dispose()
    + ResetCommandTimeout()
    - ShouldSerializeCommandTimeout()
    + GetDescriptorHandle()
    + GetStatementHandle()
    + Cancel()
    - System.ICloneable.Clone()
    + RecoverFromConnection()
    - CloseCommandWrapper()
    + CloseFromConnection()
    + CloseFromDataReader()
    + CreateParameter()
    + CreateDbParameter()
    + ExecuteDbDataReader()
    + ExecuteNonQuery()
    + ExecuteReader()
    + ExecuteReader()
    + ExecuteReaderFromSQLMethod()
    - ExecuteReaderObject()
    - ExecuteReaderObject()
    + ExecuteScalar()
    + GetDiagSqlState()
    - PropertyChanging()
    + Prepare()
    - TrySetStatementAttribute()
    - ValidateOpenConnection()
    - ValidateConnectionAndTransaction()
}

class "CMDWrapper" {
    + CreateKeyInfoStatementHandle()
    + CreateStatementHandle()
    + Dispose()
    - DisposeDescriptorHandle()
    + DisposeStatementHandle()
    + DisposeKeyInfoStatementHandle()
    + FreeStatementHandle()
    + FreeKeyInfoStatementHandle()
    + GetDescriptorHandle()
    + GetDiagSqlState()
    + StatementErrorHandler()
    + UnbindStmtColumns()
}

class "OdbcCommandBuilder" {
    - OdbcRowUpdatingHandler()
    + GetInsertCommand()
    + GetInsertCommand()
    + GetUpdateCommand()
    + GetUpdateCommand()
    + GetDeleteCommand()
    + GetDeleteCommand()
    + GetParameterName()
    + GetParameterName()
    + GetParameterPlaceholder()
    + ApplyParameterInfo()
    + QuoteIdentifier()
    + QuoteIdentifier()
    + SetRowUpdatingHandler()
    + UnquoteIdentifier()
    + UnquoteIdentifier()
}

class "OdbcConnection" {
    + EscapeChar()
    + QuoteChar()
    + BeginTransaction()
    + BeginTransaction()
    - RollbackDeadTransaction()
    + ChangeDatabase()
    + CheckState()
    - System.ICloneable.Clone()
    + ConnectionIsAlive()
    + CreateCommand()
    + CreateStatementHandle()
    + Close()
    - DisposeMe()
    + GetConnectAttrString()
    + GetConnectAttr()
    - GetDiagSqlState()
    + GetInfoInt16Unhandled()
    + GetInfoInt32Unhandled()
    - GetInfoInt32Unhandled()
    + GetInfoStringUnhandled()
    - GetInfoStringUnhandled()
    + HandleErrorNoThrow()
    + HandleError()
    + Open()
    - OnInfoMessage()
    + SetStateExecuting()
    + SetSupportedType()
    + FlagRestrictedSqlBindType()
    + FlagUnsupportedConnectAttr()
    + FlagUnsupportedStmtAttr()
    + FlagUnsupportedColAttr()
    + SQLGetFunctions()
    + TestTypeSupport()
    + TestRestrictedSqlBindType()
    + BeginDbTransaction()
    + Open_BeginTransaction()
    + Open_ChangeDatabase()
    + Open_GetServerVersion()
    - CopyFrom()
    - ConnectionString_Get()
    - ConnectionString_Set()
    - ConnectionString_Set()
    + Abort()
    + AddWeakReference()
    + CreateDbCommand()
    + Dispose()
    + GetSchema()
    + GetSchema()
    + GetSchema()
    + NotifyWeakReference()
    + PermissionDemand()
    + RemoveWeakReference()
    + SetInnerConnectionEvent()
    + SetInnerConnectionFrom()
    + SetInnerConnectionTo()
    + EnlistDistributedTransaction()
}

class "OdbcConnectionFactory" {
    + CreateConnection()
    + CreateConnectionOptions()
    + CreateConnectionPoolGroupOptions()
    + CreateConnectionPoolGroupProviderInfo()
    + CreateMetaDataFactory()
    + GetConnectionPoolGroup()
    + GetInnerConnection()
    + PermissionDemand()
    + SetConnectionPoolGroup()
    + SetInnerConnectionEvent()
    + SetInnerConnectionFrom()
    + SetInnerConnectionTo()
}

class "OdbcConnectionHandle" {
    - AutoCommitOff()
    + BeginTransaction()
    + CompleteTransaction()
    - CompleteTransaction()
    - Connect()
    + ReleaseHandle()
    + GetConnectionAttribute()
    + GetFunctions()
    + GetInfo2()
    + GetInfo1()
    + SetConnectionAttribute2()
    + SetConnectionAttribute3()
    + SetConnectionAttribute4()
}

class "OdbcConnectionStringBuilder" {
    + Clear()
    + ContainsKey()
    - GetAt()
    + Remove()
    - Reset()
    - SetValue()
    + TryGetValue()
}

class "OdbcDataAdapter" {
    - System.ICloneable.Clone()
    + CreateRowUpdatedEvent()
    + CreateRowUpdatingEvent()
    + OnRowUpdated()
    + OnRowUpdating()
}

class "OdbcDataReader" {
    + IsBehavior()
    + FieldCountNoThrow()
    - GetRowCount()
    + CalculateRecordsAffected()
    + Close()
    - Close()
    + Dispose()
    + GetDataTypeName()
    + GetEnumerator()
    + GetFieldType()
    + GetName()
    + GetOrdinal()
    - IndexOf()
    - IsCommandBehavior()
    + GetValue()
    + GetValue()
    + GetValues()
    - GetSqlType()
    + IsDBNull()
    + GetByte()
    - internalGetByte()
    + GetChar()
    - internalGetChar()
    + GetInt16()
    - internalGetInt16()
    + GetInt32()
    - internalGetInt32()
    + GetInt64()
    - internalGetInt64()
    + GetBoolean()
    - internalGetBoolean()
    + GetFloat()
    - internalGetFloat()
    + GetDate()
    - internalGetDate()
    + GetDateTime()
    - internalGetDateTime()
    + GetDecimal()
    - internalGetDecimal()
    + GetDouble()
    - internalGetDouble()
    + GetGuid()
    - internalGetGuid()
    + GetString()
    - internalGetString()
    + GetTime()
    - internalGetTime()
    - SetCurrentRowColumnInfo()
    + GetBytes()
    + GetChars()
    - GetBytesOrChars()
    - readBytesOrCharsSequentialAccess()
    - internalGetBytes()
    - GetColAttribute()
    - GetColAttributeStr()
    - GetDescFieldStr()
    - QueryFieldInfo()
    - GetData()
    - GetData()
    + Read()
    + FirstResult()
    + NextResult()
    - NextResult()
    - BuildMetaDataInfo()
    - NewSchemaTable()
    + GetSchemaTable()
    + RetrieveKeyInfo()
    - RetrieveKeyInfoFromStatistics()
    + SameIndexColumn()
    + GetOrdinalFromBaseColName()
    + GetOrdinalFromBaseColName()
    + GetTableNameFromCommandText()
    + SetBaseTableNames()
}

class "QualifiedTableName" {
    + GetTable()
    - UnQuote()
}

class "OdbcError" {
    + SetSource()
    + ToString()
}

class "OdbcErrorCollection" {
    + Add()
    + CopyTo()
    + CopyTo()
    + GetEnumerator()
    + SetSource()
}

class "OdbcException" {
    + GetObjectData()
}

class "OdbcFactory" {
    + CreateCommand()
    + CreateCommandBuilder()
    + CreateConnection()
    + CreateConnectionStringBuilder()
    + CreateDataAdapter()
    + CreateParameter()
    + CreatePermission()
}

class "OdbcDescriptorHandle" {
    + GetDescriptionField()
    + SetDescriptionField1()
    + SetDescriptionField2()
}

class "OdbcInfoMessageEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OdbcInfoMessageEventArgs" {
    + ToString()
}

class "OdbcMetaDataFactory" {
    - BooleanFromODBC()
    - GetCommand()
    - DataTableFromDataReader()
    - DataTableFromDataReaderDataTypes()
    - DataTableFromDataReaderIndex()
    - DataTableFromDataReaderProcedureColumns()
    - DataTableFromDataReaderProcedures()
    - FillOutRestrictions()
    - GetColumnsCollection()
    - GetDataSourceInformationCollection()
    - GetDataTypesCollection()
    - GetIndexCollection()
    - GetProcedureColumnsCollection()
    - GetProceduresCollection()
    - GetReservedWordsCollection()
    - GetTablesCollection()
    - IncludeIndexRow()
    - NewDataTableFromReader()
    + PrepareCollection()
}

class "OdbcParameter" {
    + ResetDbType()
    + ResetOdbcType()
    - ShouldSerializePrecision()
    - ShouldSerializeScale()
    - ShouldSerializeScale()
    - GetColumnSize()
    - GetValueSize()
    - GetParameterSize()
    - GetParameterPrecision()
    - GetParameterScale()
    - System.ICloneable.Clone()
    - CopyParameterInternal()
    - CloneHelper()
    + ClearBinding()
    + PrepareForBind()
    + Bind()
    + GetOutputValue()
    - ProcessAndGetParameterValue()
    - PropertyChanging()
    - PropertyTypeChanging()
    + SetInputValue()
    - SqlDirectionFromParameterDirection()
    - ValuePrecision()
    - ValueScale()
    - ValueSize()
    - ShouldSerializeSize()
    - CloneHelperCore()
    + CompareExchangeParent()
    + ResetParent()
    + ToString()
    - ValuePrecisionCore()
    - ValueScaleCore()
    - ValueSizeCore()
}

class "OdbcParameterCollection" {
    + Add()
    + Add()
    + AddWithValue()
    + Add()
    + Add()
    + Add()
    + AddRange()
    + Bind()
    + CalcParameterBufferSize()
    + ClearBindings()
    + Contains()
    + Contains()
    + CopyTo()
    - OnChange()
    + GetOutputValues()
    + IndexOf()
    + Insert()
    + Remove()
    + Add()
    + AddRange()
    - CheckName()
    + Clear()
    + Contains()
    + CopyTo()
    + GetEnumerator()
    + GetParameter()
    + GetParameter()
    + IndexOf()
    + IndexOf()
    + Insert()
    - RangeCheck()
    + Remove()
    + RemoveAt()
    + RemoveAt()
    - RemoveIndex()
    - Replace()
    + SetParameter()
    + SetParameter()
    - Validate()
    - ValidateType()
}

class "OdbcReferenceCollection" {
    + Add()
    + NotifyItem()
    + Remove()
}

class "OdbcRowUpdatingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OdbcRowUpdatedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "OdbcStatementHandle" {
    + BindColumn2()
    + BindColumn3()
    + BindParameter()
    + Cancel()
    + CloseCursor()
    + ColumnAttribute()
    + Columns()
    + Execute()
    + ExecuteDirect()
    + Fetch()
    + FreeStatement()
    + GetData()
    + GetStatementAttribute()
    + GetTypeInfo()
    + MoreResults()
    + NumberOfResultColumns()
    + Prepare()
    + PrimaryKeys()
    + Procedures()
    + ProcedureColumns()
    + RowCount()
    + SetStatementAttribute()
    + SpecialColumns()
    + Statistics()
    + Statistics()
    + Tables()
}

class "OdbcTransaction" {
    + Commit()
    + Dispose()
    + Rollback()
}

class "CNativeBuffer" {
    + MarshalToManaged()
    + MarshalToNative()
    + PtrOffset()
    + WriteODBCDateTime()
}

class "CStringTokenizer" {
    + NextToken()
    - GetTokenFromBracket()
    - GetTokenFromQuote()
    - IsValidNameChar()
    + FindTokenIndex()
    + StartsWith()
}

class "OdbcConnectionOpen" {
    + Activate()
    + BeginTransaction()
    + BeginOdbcTransaction()
    + ChangeDatabase()
    + CreateReferenceCollection()
    + Deactivate()
    + EnlistTransaction()
}

class "OdbcPermission" {
    + Add()
    + Copy()
}

class "OdbcPermissionAttribute" {
    + CreatePermission()
}

class "SqlBytes" {
    + SetNull()
    + SetLength()
    + Read()
    + Write()
    + ToSqlBinary()
    - AssertValid()
    - CopyStreamToBuffer()
    + FStream()
    - SetBuffer()
    - System.Xml.Serialization.IXmlSerializable.GetSchema()
    - System.Xml.Serialization.IXmlSerializable.ReadXml()
    - System.Xml.Serialization.IXmlSerializable.WriteXml()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "StreamOnSqlBytes" {
    + Seek()
    + Read()
    + Write()
    + ReadByte()
    + WriteByte()
    + SetLength()
    + Flush()
    + Dispose()
    - FClosed()
    - CheckIfStreamClosed()
}

class "SqlChars" {
    + SetNull()
    + SetLength()
    + Read()
    + Write()
    + ToSqlString()
    - AssertValid()
    + FStream()
    - CopyStreamToBuffer()
    - SetBuffer()
    - System.Xml.Serialization.IXmlSerializable.GetSchema()
    - System.Xml.Serialization.IXmlSerializable.ReadXml()
    - System.Xml.Serialization.IXmlSerializable.WriteXml()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "StreamOnSqlChars" {
    + Seek()
    + Read()
    + Write()
    + SetLength()
    + Dispose()
    - FClosed()
    - CheckIfStreamClosed()
}

class "SqlXml" {
    + CreateReader()
    - SetNull()
    - CreateMemoryStreamFromXmlReader()
    - System.Xml.Serialization.IXmlSerializable.GetSchema()
    - System.Xml.Serialization.IXmlSerializable.ReadXml()
    - System.Xml.Serialization.IXmlSerializable.WriteXml()
}

class "SqlXmlStreamWrapper" {
    + Seek()
    + Read()
    + Write()
    + ReadByte()
    + WriteByte()
    + SetLength()
    + Flush()
    + Dispose()
    - ThrowIfStreamCannotSeek()
    - ThrowIfStreamCannotRead()
    - ThrowIfStreamCannotWrite()
    - ThrowIfStreamClosed()
    - IsStreamClosed()
}

class "SqlTypesSchemaImporterExtensionHelper" {
    - Init()
    + ImportSchemaType()
    + ImportSchemaType()
}

class "BasicFieldNameLookup" {
    + GetOrdinal()
    + IndexOfName()
    + IndexOf()
    + GetCompareInfo()
    - LinearIndexOf()
    - GenerateLookup()
}

class "FieldNameLookup" {
    + GetCompareInfo()
}

class "DbConnectionClosedConnecting" {
    + CloseConnection()
    + TryReplaceConnection()
    + TryOpenConnection()
}

class "DbConnectionClosedPreviouslyOpened" {
    + TryReplaceConnection()
}

class "<>c__DisplayClass40_0" {
    + <TryGetConnection>b__1()
}

class "<>c__DisplayClass40_1" {
    + <TryGetConnection>b__0()
}

class "DbConnectionPoolGroup" {
    + Clear()
    + GetConnectionPool()
    - MarkPoolGroupAsActive()
    + Prune()
}

class "DbMetaDataFactory" {
    + CloneAndFilterCollection()
    + Dispose()
    + Dispose()
    - ExecuteCommand()
    - FilterColumns()
    + FindMetaDataCollectionRow()
    - FixUpVersion()
    - GetParameterName()
    + GetSchema()
    - IncludeThisColumn()
    - LoadDataSetFromXml()
    + PrepareCollection()
    - SupportedByCurrentVersion()
}

class "TimeoutTimer" {
    + SetTimeoutSeconds()
}

class "ProviderSpecificDataReader" {
    + GetFieldType()
    + GetValue()
    + GetValues()
}

class "CommonLanguageSubsetDataReader" {
    + GetFieldType()
    + GetValue()
    + GetValues()
}

class "SchemaMapping" {
    + ApplyToDataRow()
    - MappedChapterIndex()
    - MappedChapter()
    - MappedIndex()
    - MappedValues()
    - GetMappedValues()
    + LoadDataRowWithClear()
    + LoadDataRow()
    - FreeDataRowChapters()
    + LoadDataRowChapters()
    - CreateIndexMap()
    - ResizeColumnArray()
    - AddItemToAllowRollback()
    - RollbackAddedItems()
    - SetupSchemaWithoutKeyInfo()
    - SetupSchemaWithKeyInfo()
    - AddAdditionalProperties()
    - AddRelation()
    - SetupMapping()
}

class "DbConnectionPool" {
    - CleanupCallback()
    + Clear()
    - CreateCleanupTimer()
    - CreateObject()
    - DeactivateObject()
    + DestroyObject()
    - ErrorCallback()
    - TryCloneCachedException()
    - WaitForPendingOpen()
    + TryGetConnection()
    - TryGetConnection()
    - PrepareConnection()
    + ReplaceConnection()
    - GetFromGeneralPool()
    - GetFromTransactedPool()
    - PoolCreateRequest()
    + PutNewObject()
    + PutObject()
    + PutObjectFromTransactedPool()
    - QueuePoolCreateRequest()
    - ReclaimEmancipatedObjects()
    + Startup()
    + Shutdown()
    + TransactionEnded()
    - UserCreateRequest()
}

class "TransactedConnectionList" {
    + Dispose()
}

class "TransactedConnectionPool" {
    + GetTransactedObject()
    + PutTransactedObject()
    + TransactionEnded()
}

class "PoolWaitHandles" {
    + GetHandles()
}

class "DbConnectionPoolIdentity" {
    + Equals()
    + GetHashCode()
}

class "DbConnectionOptions" {
    + UsersConnectionString()
    - UsersConnectionString()
    + ConvertValueToBoolean()
    + ReplacePasswordPwd()
    + Expand()
    + ExpandKeyword()
    + TryGetParsetableValue()
    + ConvertValueToIntegratedSecurity()
    + ConvertValueToIntegratedSecurityInternal()
    + ConvertValueToInt32()
    + ConvertValueToString()
    + ContainsKey()
    + ExpandDataDirectories()
}

class "DbConnectionPoolKey" {
    + Clone()
    + Equals()
    + GetHashCode()
}

class "BigIntegerStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "BooleanStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "ByteStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "CharStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "ParameterNames" {
    - SetAndValidateNamePrefixes()
    - ApplyProviderSpecificFormat()
    - EliminateConflictingNames()
    + GenerateMissingNames()
    - GetAdjustedParameterNameMaxLength()
    - GetNextGenericParameterName()
    + GetBaseParameterName()
    + GetOriginalParameterName()
    + GetNullParameterName()
}

class "DbSchemaTable" {
    - CachedDataColumn()
    - CachedDataColumn()
}

class "DataAdapter" {
    - AssertReaderHandleFieldCount()
    - AssertSchemaMapping()
    + ShouldSerializeAcceptChangesDuringFill()
    + ResetFillLoadOption()
    + ShouldSerializeFillLoadOption()
    + ShouldSerializeTableMappings()
    + HasTableMappings()
    + CloneInternals()
    - CloneFrom()
    + CreateTableMappings()
    + Dispose()
    + FillSchema()
    + FillSchema()
    + FillSchema()
    + FillSchemaFromReader()
    + Fill()
    + Fill()
    + Fill()
    + Fill()
    + FillFromReader()
    - FillLoadDataRowChunk()
    - FillLoadDataRow()
    - FillMappingInternal()
    - FillMapping()
    - FillNextResult()
    + GetFillParameters()
    + GetTableMappingBySchemaAction()
    + IndexOfDataSetTable()
    + OnFillError()
    - OnFillErrorHandler()
    + Update()
}

class "LoadAdapter" {
    + FillFromReader()
}

class "DataColumnMapping" {
    - System.ICloneable.Clone()
    + GetDataColumnBySchemaAction()
    + ToString()
}

class "DataColumnMappingConverter" {
    + CanConvertTo()
    + ConvertTo()
}

class "DataColumnMappingCollection" {
    - System.Data.IColumnMappingCollection.Add()
    - System.Data.IColumnMappingCollection.GetByDataSetColumn()
    + Add()
    - Add()
    + Add()
    + AddRange()
    + AddRange()
    - AddEnumerableRange()
    - AddWithoutEvents()
    - ArrayList()
    + Clear()
    - ClearWithoutEvents()
    + Contains()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetByDataSetColumn()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOfDataSetColumn()
    + Insert()
    + Insert()
    - RangeCheck()
    - RangeCheck()
    + RemoveAt()
    + RemoveAt()
    - RemoveIndex()
    + Remove()
    + Remove()
    - Replace()
    - ValidateType()
    - Validate()
    + ValidateSourceColumn()
}

class "DataRecordInternal" {
    + GetValues()
    + GetName()
    + GetValue()
    + GetDataTypeName()
    + GetFieldType()
    + GetOrdinal()
    + GetBoolean()
    + GetByte()
    + GetBytes()
    + GetChar()
    + GetChars()
    + GetGuid()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetFloat()
    + GetDouble()
    + GetString()
    + GetDecimal()
    + GetDateTime()
    + IsDBNull()
    - System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    - System.ComponentModel.ICustomTypeDescriptor.GetClassName()
    - System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
    - System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
    - System.ComponentModel.ICustomTypeDescriptor.GetEditor()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner()
}

class "DataTableMapping" {
    - System.ICloneable.Clone()
    + GetDataColumn()
    + GetColumnMappingBySchemaAction()
    + GetDataTableBySchemaAction()
    + ToString()
}

class "DataTableMappingConverter" {
    + CanConvertTo()
    + ConvertTo()
}

class "DataTableMappingCollection" {
    - System.Data.ITableMappingCollection.Add()
    - System.Data.ITableMappingCollection.GetByDataSetTable()
    + Add()
    - Add()
    + AddRange()
    + AddRange()
    - AddEnumerableRange()
    + Add()
    - AddWithoutEvents()
    - ArrayList()
    + Clear()
    - ClearWithoutEvents()
    + Contains()
    + Contains()
    + CopyTo()
    + CopyTo()
    + GetByDataSetTable()
    + GetEnumerator()
    + IndexOf()
    + IndexOf()
    + IndexOfDataSetTable()
    + Insert()
    + Insert()
    - RangeCheck()
    - RangeCheck()
    + RemoveAt()
    + RemoveAt()
    - RemoveIndex()
    + Remove()
    + Remove()
    - Replace()
    - ValidateType()
    - Validate()
    + ValidateSourceTable()
}

class "DateTimeOffsetStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "DateTimeStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "<>c" {
    + <ExecuteNonQueryAsync>b__52_0()
    + <ExecuteDbDataReaderAsync>b__57_0()
    + <ExecuteScalarAsync>b__59_0()
}

class "DbConnectionStringBuilder" {
    + ConvertValueToString()
    - System.Collections.IDictionary.Add()
    + Add()
    + Clear()
    + ClearPropertyDescriptors()
    - System.Collections.IDictionary.Contains()
    + ContainsKey()
    - System.Collections.ICollection.CopyTo()
    + EquivalentTo()
    - System.Collections.IEnumerable.GetEnumerator()
    - System.Collections.IDictionary.GetEnumerator()
    - ObjectToString()
    - System.Collections.IDictionary.Remove()
    + Remove()
    + ShouldSerialize()
    + ToString()
    + TryGetValue()
    + GetAttributesFromCollection()
    - GetProperties()
    + GetProperties()
    - GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetClassName()
    - System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
    - System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
    - System.ComponentModel.ICustomTypeDescriptor.GetEditor()
    - System.ComponentModel.ICustomTypeDescriptor.GetConverter()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetProperties()
    - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetEvents()
    - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner()
}

class "DbConnectionStringBuilderDescriptor" {
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "DbEnumerator" {
    + MoveNext()
    + Reset()
    - BuildSchemaInfo()
}

class "DbColumnDescriptor" {
    + CanResetValue()
    + GetValue()
    + ResetValue()
    + SetValue()
    + ShouldSerializeValue()
}

class "DecimalStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "DoubleStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "Int16Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "Int32Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "Int64Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "ObjectStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    - CompareTo()
    - CompareWithFamilies()
    + Copy()
    + Get()
    - GetFamily()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "TempAssemblyComparer" {
    + Equals()
    + GetHashCode()
}

class "RowUpdatedEventArgs" {
    + AdapterInit()
    + AdapterInit()
    + CopyToRows()
    + CopyToRows()
}

class "SByteStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlBinaryStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlByteStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlBytesStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlCharsStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlDateTimeStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlDecimalStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlDoubleStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlGuidStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlInt16Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlInt32Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlInt64Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlMoneyStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlSingleStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlStringStorage" {
    + Aggregate()
    + Compare()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + GetStringLength()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlBooleanStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SingleStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "SqlUdtStorage" {
    + IsNull()
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "<>c__DisplayClass6_0" {
    + <GetStaticNullForUdtType>b__0()
}

class "StringStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + GetStringLength()
    + IsNull()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "TimeSpanStorage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "UInt16Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "UInt32Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "UInt64Storage" {
    + Aggregate()
    + Compare()
    + CompareValueTo()
    + ConvertValue()
    + Copy()
    + Get()
    + Set()
    + SetCapacity()
    + ConvertXmlToObject()
    + ConvertObjectToXml()
    + GetEmptyStorage()
    + CopyValue()
    + SetStorage()
}

class "DBConnectionString" {
    + ContainsKey()
    + Intersect()
    - ValidateCombinedSet()
    - IsRestrictedKeyword()
    + IsSupersetOf()
}

class "NameValuePermission" {
    - System.IComparable.CompareTo()
    + Intersect()
    - Add()
    + CheckValueForKeyPermit()
    - CheckKeyForValue()
    + CopyNameValue()
}

class "ActivityId" {
    + Increment()
    + ToString()
}

class "DbProviderConfigurationHandler" {
    + Create()
}

class "DbProviderFactoryConfigSection" {
    + IsNull()
}

class "DbProviderFactoriesConfigurationHandler" {
    + Create()
}

class "MemoryRecordBuffer" {
    + IsDBNull()
    + GetVariantType()
    + GetBoolean()
    + GetByte()
    + GetBytesLength()
    + GetBytes()
    + GetCharsLength()
    + GetChars()
    + GetString()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetSingle()
    + GetDouble()
    + GetSqlDecimal()
    + GetDateTime()
    + GetGuid()
    + GetTimeSpan()
    + GetDateTimeOffset()
    + SetDBNull()
    + SetBoolean()
    + SetByte()
    + SetBytes()
    + SetBytesLength()
    + SetChars()
    + SetCharsLength()
    + SetString()
    + SetInt16()
    + SetInt32()
    + SetInt64()
    + SetSingle()
    + SetDouble()
    + SetSqlDecimal()
    + SetDateTime()
    + SetGuid()
    + SetTimeSpan()
    + SetDateTimeOffset()
    + SetVariantMetaData()
}

class "SmiEventSink_Default" {
    + DispatchMessages()
    + ProcessMessages()
    + ProcessMessagesAndThrow()
}

class "SmiGettersStream" {
    + Flush()
    + Seek()
    + SetLength()
    + Read()
    + Write()
}

class "SmiMetaData" {
    + IsValidMaxLengthForCtorGivenType()
    - SetDefaultsForType()
}

class "SmiMetaDataPropertyCollection" {
    + SetReadOnly()
    - EnsureWritable()
}

class "SmiUniqueKeyProperty" {
    + CheckCount()
}

class "SmiOrderProperty" {
    + CheckCount()
}

class "SmiDefaultFieldsProperty" {
    + CheckCount()
}

class "SmiSettersStream" {
    + Flush()
    + Seek()
    + SetLength()
    + Read()
    + Write()
}

class "SqlDataRecord" {
    + GetName()
    + GetDataTypeName()
    + GetFieldType()
    + GetValue()
    + GetValues()
    + GetOrdinal()
    + GetBoolean()
    + GetByte()
    + GetBytes()
    + GetChar()
    + GetChars()
    + GetGuid()
    + GetInt16()
    + GetInt32()
    + GetInt64()
    + GetFloat()
    + GetDouble()
    + GetString()
    + GetDecimal()
    + GetDateTime()
    + GetDateTimeOffset()
    + GetTimeSpan()
    + IsDBNull()
    + GetSqlMetaData()
    + GetSqlFieldType()
    + GetSqlValue()
    + GetSqlValues()
    + GetSqlBinary()
    + GetSqlBytes()
    + GetSqlXml()
    + GetSqlBoolean()
    + GetSqlByte()
    + GetSqlChars()
    + GetSqlInt16()
    + GetSqlInt32()
    + GetSqlInt64()
    + GetSqlSingle()
    + GetSqlDouble()
    + GetSqlMoney()
    + GetSqlDateTime()
    + GetSqlDecimal()
    + GetSqlString()
    + GetSqlGuid()
    + SetValues()
    + SetValue()
    + SetBoolean()
    + SetByte()
    + SetBytes()
    + SetChar()
    + SetChars()
    + SetInt16()
    + SetInt32()
    + SetInt64()
    + SetFloat()
    + SetDouble()
    + SetString()
    + SetDecimal()
    + SetDateTime()
    + SetTimeSpan()
    + SetDateTimeOffset()
    + SetDBNull()
    + SetGuid()
    + SetSqlBoolean()
    + SetSqlByte()
    + SetSqlInt16()
    + SetSqlInt32()
    + SetSqlInt64()
    + SetSqlSingle()
    + SetSqlDouble()
    + SetSqlMoney()
    + SetSqlDateTime()
    + SetSqlXml()
    + SetSqlDecimal()
    + SetSqlString()
    + SetSqlBinary()
    + SetSqlGuid()
    + SetSqlChars()
    + SetSqlBytes()
    + InternalGetMetaData()
    + InternalGetSmiMetaData()
    + GetSmiMetaData()
    + ThrowIfInvalidOrdinal()
    - EnsureSubclassOverride()
    - System.Data.IDataRecord.GetData()
}

class "SqlRecordBuffer" {
    + GetBytes()
    + GetChars()
    + SetBytes()
    + SetChars()
    + SetNull()
    - ConvertXmlStringToByteArray()
}

class "SqlMetaData" {
    - Construct()
    - Construct()
    - Construct()
    - Construct()
    - Construct()
    - Construct()
    - AssertNameIsValid()
    - ValidateSortOrder()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    + Adjust()
    - VerifyDateTimeRange()
    - VerifyMoneyRange()
    - InternalAdjustSqlDecimal()
    - VerifyTimeRange()
    - InternalAdjustTimeTicks()
    - SetDefaultsForType()
}

class "FieldInfoEx" {
    + CompareTo()
}

class "BinaryOrderedUdtNormalizer" {
    - GetFields()
    + NormalizeTopObject()
    + DeNormalizeTopObject()
    - DeNormalizeInternal()
    + Normalize()
    + DeNormalize()
}

class "BooleanNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "SByteNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "ByteNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "ShortNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "UShortNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "IntNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "UIntNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "LongNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "ULongNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "FloatNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "DoubleNormalizer" {
    + Normalize()
    + DeNormalize()
}

class "NormalizedSerializer" {
    + Serialize()
    + Deserialize()
}

class "BinarySerializeSerializer" {
    + Serialize()
    + Deserialize()
}

class "DummyStream" {
    - DontDoIt()
    + SetLength()
    + Seek()
    + Flush()
    + Read()
    + Write()
}

class "SqlTriggerContext" {
    + IsUpdatedColumn()
}

class "InvalidUdtException" {
    + GetObjectData()
}

class "SqlPipe" {
    + ExecuteAndSend()
    + Send()
    + Send()
    + Send()
    + SendResultsStart()
    + SendResultsRow()
    + SendResultsEnd()
}

class "SafeLibraryHandle" {
    + ReleaseHandle()
}

class "SqlFileStream" {
    + Flush()
    + Read()
    + Seek()
    + SetLength()
    + Write()
}

class "SqlClientLogger" {
    + LogAssert()
    + LogError()
    + LogInfo()
}

class "SqlColumnEncryptionCertificateStoreProvider" {
    + DecryptColumnEncryptionKey()
    + EncryptColumnEncryptionKey()
    + SignColumnMasterKeyMetadata()
    + VerifyColumnMasterKeyMetadata()
}

class "SqlColumnEncryptionCngProvider" {
    + DecryptColumnEncryptionKey()
    + EncryptColumnEncryptionKey()
    + SignColumnMasterKeyMetadata()
    + VerifyColumnMasterKeyMetadata()
}

class "SqlColumnEncryptionCspProvider" {
    + DecryptColumnEncryptionKey()
    + EncryptColumnEncryptionKey()
    + SignColumnMasterKeyMetadata()
    + VerifyColumnMasterKeyMetadata()
}

class "SqlEnclaveSession" {
    + GetSessionKey()
}

class "SqlEnclaveAttestationParameters" {
    + GetInput()
}

class "AbstractUnixEndPoint" {
    + Create()
    + Serialize()
    + ToString()
    + GetHashCode()
    + Equals()
}

class "StdioFileStream" {
    - InitStream()
    - InitCanReadWrite()
    - AssertNotDisposed()
    + SaveFilePosition()
    + RestoreFilePosition()
    + Flush()
    + Read()
    - AssertValidBuffer()
    + Rewind()
    + Seek()
    + SetLength()
    + Write()
    + Finalize()
    + Close()
}

class "UnixClient" {
    + Close()
    + Connect()
    + Connect()
    + Dispose()
    + Dispose()
    + GetStream()
    - CheckDisposed()
    + Finalize()
}

class "UnixDirectoryInfo" {
    + Create()
    + Create()
    + Create()
    + Delete()
    + Delete()
    + GetEntries()
    + GetEntries()
    + GetEntries()
    + GetFileSystemEntries()
    - GetFileSystemEntries()
    + GetFileSystemEntries()
    + GetFileSystemEntries()
}

class "UnixDriveInfo" {
    - FromFstab()
    + ToString()
    - Refresh()
    - Refresh()
}

class "UnixEncoding" {
    + GetByteCount()
    + GetByteCount()
    + GetBytes()
    + GetBytes()
    + GetBytes()
    + GetCharCount()
    + GetChars()
    + GetMaxByteCount()
    + GetMaxCharCount()
    + GetDecoder()
    + GetEncoder()
    + GetPreamble()
    + Equals()
    + GetHashCode()
    + GetBytes()
}

class "UnixEndPoint" {
    + Create()
    + Serialize()
    + ToString()
    + GetHashCode()
    + Equals()
}

class "UnixFileInfo" {
    + Delete()
    + Create()
    + Create()
    + Create()
    + Open()
    + Open()
    + Open()
    + Open()
    + Open()
    + OpenRead()
    + OpenWrite()
}

class "UnixGroupInfo" {
    + GetMembers()
    + GetMemberNames()
    + GetHashCode()
    + Equals()
    + ToString()
    + ToGroup()
}

class "UnixListener" {
    - Init()
    + AcceptSocket()
    + AcceptUnixClient()
    + Finalize()
    + Pending()
    + Start()
    + Start()
    + Stop()
    + Dispose()
    + Dispose()
    - CheckDisposed()
}

class "UnixProcess" {
    - GetProcessStatus()
    + Kill()
    + Signal()
    + WaitForExit()
}

class "UnixSignal" {
    - AssertValid()
    + Reset()
    + Dispose()
    + WaitOne()
    + WaitOne()
    + WaitOne()
}

class "UnixStream" {
    - AssertNotDisposed()
    - RefreshStat()
    + AdviseFileAccessPattern()
    + AdviseFileAccessPattern()
    + Flush()
    + Read()
    - AssertValidBuffer()
    + ReadAtOffset()
    + Seek()
    + SetLength()
    + Write()
    + WriteAtOffset()
    + SendTo()
    + SendTo()
    + SendTo()
    + SetOwner()
    + SetOwner()
    + SetOwner()
    + GetConfigurationValue()
    + Finalize()
    + Close()
    - System.IDisposable.Dispose()
}

class "UnixSymbolicLinkInfo" {
    + GetContents()
    + CreateSymbolicLinkTo()
    + CreateSymbolicLinkTo()
    + Delete()
    + SetOwner()
    + GetFileStatus()
}

class "UnixUserInfo" {
    + GetHashCode()
    + Equals()
    + ToString()
    + ToPasswd()
}

class "CdeclFunction" {
    + Invoke()
    - CreateMethod()
    - CreateType()
    - GetTypeName()
}

class "FileNameMarshaler" {
    + CleanUpManagedData()
    + CleanUpNativeData()
    + GetNativeDataSize()
    + MarshalManagedToNative()
    + MarshalNativeToManaged()
}

class "FilePosition" {
    + Dispose()
    - Cleanup()
    + ToString()
    - GetDump()
    + Equals()
    + Equals()
    + GetHashCode()
    + Finalize()
}

class "SignalHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Dirent" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "Fstab" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "Group" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "Passwd" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "Utsname" {
    + GetHashCode()
    + Equals()
    + Equals()
    + ToString()
}

class "Sockaddr" {
    + GetNativeSize()
    + DynamicData()
    + GetDynamicLength()
    + SetDynamicLength()
    + ToSockaddrStorage()
}

class "SockaddrStorage" {
    + DynamicData()
    + GetDynamicLength()
    + SetDynamicLength()
    + SetTo()
    + CopyTo()
    + ToString()
    + GetHashCode()
    + Equals()
    + Equals()
}

class "SockaddrUn" {
    + DynamicData()
    + GetDynamicLength()
    + SetDynamicLength()
    + ToString()
    + GetHashCode()
    + Equals()
    + Equals()
}

class "SockaddrIn" {
    + ToString()
    + GetHashCode()
    + Equals()
    + Equals()
}

class "SockaddrIn6" {
    + ToString()
    + GetHashCode()
    + Equals()
    + Equals()
}

class "UnixBinaryClientFormatterSink" {
    + AsyncProcessRequest()
    + AsyncProcessResponse()
    + GetRequestStream()
    + ProcessMessage()
    + AsyncProcessMessage()
    + SyncProcessMessage()
}

class "UnixBinaryClientFormatterSinkProvider" {
    + CreateSink()
}

class "UnixBinaryCore" {
    + Init()
}

class "SimpleBinder" {
    + BindToType()
}

class "UnixBinaryServerFormatterSink" {
    + AsyncProcessResponse()
    + GetResponseStream()
    + ProcessMessage()
}

class "MethodCallHeaderHandler" {
    + HandleHeaders()
}

class "UnixBinaryServerFormatterSinkProvider" {
    + CreateSink()
    + GetChannelData()
}

class "UnixChannel" {
    - Init()
    + CreateMessageSink()
    + StartListening()
    + StopListening()
    + GetUrlsForUri()
    + Parse()
}

class "UnixClientChannel" {
    + CreateMessageSink()
    + Parse()
}

class "UnixClientTransportSink" {
    + AsyncProcessRequest()
    - ReadAsyncUnixMessage()
    + AsyncProcessResponse()
    + GetRequestStream()
    + ProcessMessage()
    - <AsyncProcessRequest>b__6_0()
}

class "UnixClientTransportSinkProvider" {
    + CreateSink()
}

class "UnixConnection" {
    + Release()
    + Close()
}

class "HostConnectionPool" {
    + GetConnection()
    - CreateConnection()
    + ReleaseConnection()
    - CancelConnection()
    + PurgeConnections()
}

class "UnixServerChannel" {
    - Init()
    + GetChannelUri()
    + GetUrlsForUri()
    + Parse()
    - WaitForConnections()
    + CreateListenerConnection()
    + ReleaseConnection()
    + StartListening()
    + StopListening()
}

class "ClientConnection" {
    + ProcessMessages()
}

class "UnixServerTransportSink" {
    + AsyncProcessResponse()
    + GetResponseStream()
    + ProcessMessage()
    + InternalProcessMessage()
}

class "UnixEndPoint" {
    + Create()
    + Serialize()
    + ToString()
    + GetHashCode()
    + Equals()
}

class "UnixDecoder" {
    + GetCharCount()
    + GetChars()
}

class "UnixEncoder" {
    + GetByteCount()
    + GetBytes()
}

class "ErrorTranslator" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Mono_Posix_RuntimeIsShuttingDown" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "XPrintf" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DoReadlinkFun" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "<>c__DisplayClass333_0" {
    + <readlink>b__0()
}

class "<>c__DisplayClass389_0" {
    + <readlinkat>b__0()
}

class "sighandler_t" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "HandleType" {
    + Add()
    + NeedCollection()
    + Remove()
}

class "HandleChangeEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SizeConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + CreateInstance()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetPropertiesSupported()
}

class "SizeFConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + CreateInstance()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetPropertiesSupported()
}

class "WeakRefCollection" {
    + ScavengeReferences()
    + Equals()
    + GetHashCode()
    - CreateWeakRefObject()
    + RemoveByHashCode()
    + Clear()
    + Contains()
    + RemoveAt()
    + Remove()
    + IndexOf()
    + Insert()
    + Add()
    + CopyTo()
    + GetEnumerator()
}

class "WeakRefObject" {
    + GetHashCode()
    + Equals()
}

class "ColorConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + GetStandardValues()
    + GetStandardValuesSupported()
}

class "ColorComparer" {
    + Compare()
}

class "LOGFONT" {
    + ToString()
}

class "DEVMODE" {
    + ToString()
}

class "PointConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + CreateInstance()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetPropertiesSupported()
}

class "SolidBrush" {
    + Clone()
    + Dispose()
    - InternalSetColor()
}

class "TextureBrush" {
    + Clone()
    + ResetTransform()
    + MultiplyTransform()
    + MultiplyTransform()
    + TranslateTransform()
    + TranslateTransform()
    + ScaleTransform()
    + ScaleTransform()
    + RotateTransform()
    + RotateTransform()
}

class "ComStreamFromDataStream" {
    - ActualizeVirtualPosition()
    + Clone()
    + Commit()
    + CopyTo()
    + LockRegion()
    + Read()
    + Read()
    + Revert()
    + Seek()
    + SetSize()
    + Stat()
    + UnlockRegion()
    + Write()
    + Write()
}

class "Bitmap" {
    + GetPixel()
    + SetPixel()
    + Clone()
    + Clone()
    + GetHbitmap()
    + GetHbitmap()
    + GetHicon()
    + LockBits()
    + LockBits()
    + MakeTransparent()
    + MakeTransparent()
    + SetResolution()
    + UnlockBits()
}

class "BufferedGraphics" {
    + Finalize()
    + Dispose()
    - Dispose()
    + Render()
    + Render()
    + Render()
}

class "BufferedGraphicsContext" {
    + Finalize()
    + Allocate()
    + Allocate()
    + Dispose()
    + Invalidate()
}

class "ComIStreamMarshaler" {
    + MarshalManagedToNative()
    + CleanUpNativeData()
    + MarshalNativeToManaged()
    + CleanUpManagedData()
    + GetNativeDataSize()
}

class "QueryInterfaceDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AddRefDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ReleaseDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ReadDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "WriteDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SeekDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "SetSizeDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CopyToDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CommitDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "RevertDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "LockRegionDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UnlockRegionDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StatDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "CloneDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ManagedToNativeWrapper" {
    - Dispose()
}

class "NativeToManagedWrapper" {
    + Finalize()
    - Dispose()
    + Read()
    + Write()
    + Seek()
    + SetSize()
    + CopyTo()
    + Commit()
    + Revert()
    + LockRegion()
    + UnlockRegion()
    + Stat()
    + Clone()
}

class "ComIStreamWrapper" {
    - SetSizeToPosition()
    + Read()
    + Write()
    + Seek()
    + SetSize()
    + CopyTo()
    + Commit()
    + Revert()
    + LockRegion()
    + UnlockRegion()
    + Stat()
    + Clone()
}

class "Font" {
    - CreateFont()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + Finalize()
    + Dispose()
    + SetSystemFontName()
    + unitConversion()
    - setProperties()
    + ToHfont()
    + Clone()
    + Equals()
    + GetHashCode()
    + GetHeight()
    + ToLogFont()
    + ToLogFont()
    + GetHeight()
    + GetHeight()
    + ToString()
}

class "FontConverter" {
    + Finalize()
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertTo()
    + ConvertFrom()
    + CreateInstance()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetPropertiesSupported()
}

class "FontNameConverter" {
    - System.IDisposable.Dispose()
    + CanConvertFrom()
    + ConvertFrom()
    + GetStandardValues()
    + GetStandardValuesExclusive()
    + GetStandardValuesSupported()
}

class "FontUnitConverter" {
    + GetStandardValues()
}

class "FontFamily" {
    + refreshName()
    + Finalize()
    + GetCellAscent()
    + GetCellDescent()
    + GetEmHeight()
    + GetLineSpacing()
    + IsStyleAvailable()
    + Dispose()
    + Equals()
    + GetHashCode()
    + GetName()
    + ToString()
}

class "Graphics" {
    + Finalize()
    + AddMetafileComment()
    + BeginContainer()
    + BeginContainer()
    + BeginContainer()
    + Clear()
    + CopyFromScreen()
    + CopyFromScreen()
    + CopyFromScreen()
    + CopyFromScreen()
    - CopyFromScreenWin32()
    - CopyFromScreenMac()
    - CopyFromScreenX11()
    + Dispose()
    + DrawArc()
    + DrawArc()
    + DrawArc()
    + DrawArc()
    + DrawBezier()
    + DrawBezier()
    + DrawBezier()
    + DrawBeziers()
    + DrawBeziers()
    + DrawClosedCurve()
    + DrawClosedCurve()
    + DrawClosedCurve()
    + DrawClosedCurve()
    + DrawCurve()
    + DrawCurve()
    + DrawCurve()
    + DrawCurve()
    + DrawCurve()
    + DrawCurve()
    + DrawCurve()
    + DrawEllipse()
    + DrawEllipse()
    + DrawEllipse()
    + DrawEllipse()
    + DrawIcon()
    + DrawIcon()
    + DrawIconUnstretched()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImage()
    + DrawImageUnscaled()
    + DrawImageUnscaled()
    + DrawImageUnscaled()
    + DrawImageUnscaled()
    + DrawImageUnscaledAndClipped()
    + DrawLine()
    + DrawLine()
    + DrawLine()
    + DrawLine()
    + DrawLines()
    + DrawLines()
    + DrawPath()
    + DrawPie()
    + DrawPie()
    + DrawPie()
    + DrawPie()
    + DrawPolygon()
    + DrawPolygon()
    + DrawRectangle()
    + DrawRectangle()
    + DrawRectangle()
    + DrawRectangles()
    + DrawRectangles()
    + DrawString()
    + DrawString()
    + DrawString()
    + DrawString()
    + DrawString()
    + DrawString()
    + EndContainer()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + EnumerateMetafile()
    + ExcludeClip()
    + ExcludeClip()
    + FillClosedCurve()
    + FillClosedCurve()
    + FillClosedCurve()
    + FillClosedCurve()
    + FillClosedCurve()
    + FillClosedCurve()
    + FillEllipse()
    + FillEllipse()
    + FillEllipse()
    + FillEllipse()
    + FillPath()
    + FillPie()
    + FillPie()
    + FillPie()
    + FillPolygon()
    + FillPolygon()
    + FillPolygon()
    + FillPolygon()
    + FillRectangle()
    + FillRectangle()
    + FillRectangle()
    + FillRectangle()
    + FillRectangles()
    + FillRectangles()
    + FillRegion()
    + Flush()
    + Flush()
    + GetHdc()
    + GetNearestColor()
    + IntersectClip()
    + IntersectClip()
    + IntersectClip()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + MeasureCharacterRanges()
    - GdipMeasureString()
    + MeasureString()
    + MeasureString()
    + MeasureString()
    + MeasureString()
    + MeasureString()
    + MeasureString()
    + MeasureString()
    + MultiplyTransform()
    + MultiplyTransform()
    + ReleaseHdc()
    + ReleaseHdc()
    + ReleaseHdcInternal()
    + ResetClip()
    + ResetTransform()
    + Restore()
    + RotateTransform()
    + RotateTransform()
    + Save()
    + ScaleTransform()
    + ScaleTransform()
    + SetClip()
    + SetClip()
    + SetClip()
    + SetClip()
    + SetClip()
    + SetClip()
    + SetClip()
    + SetClip()
    + SetClip()
    + TransformPoints()
    + TransformPoints()
    + TranslateClip()
    + TranslateClip()
    + TranslateTransform()
    + TranslateTransform()
    + GetContextInfo()
}

class "EnumerateMetafileProc" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DrawImageAbort" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "Icon" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + Dispose()
    + Clone()
    - SaveIconImage()
    - SaveIconDump()
    - SaveIconDirEntry()
    - SaveAll()
    - SaveBestSingleIcon()
    - SaveBitmapAsIcon()
    - Save()
    + Save()
    + BuildBitmapOnWin32()
    + GetInternalBitmap()
    + ToBitmap()
    + ToString()
    + Finalize()
    - InitFromStreamWithSize()
}

class "IconConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
}

class "GetThumbnailImageAbort" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "AnimateEventArgs" {
    + GetNextFrame()
}

class "WorkerThread" {
    + LoopHandler()
}

class "ImageConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + GetProperties()
    + GetPropertiesSupported()
}

class "ImageFormatConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + GetStandardValues()
    + GetStandardValuesSupported()
}

class "Pen" {
    + Clone()
    + Dispose()
    - Dispose()
    + Finalize()
    + MultiplyTransform()
    + MultiplyTransform()
    + ResetTransform()
    + RotateTransform()
    + RotateTransform()
    + ScaleTransform()
    + ScaleTransform()
    + SetLineCap()
    + TranslateTransform()
    + TranslateTransform()
}

class "RectangleConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + CreateInstance()
    + GetCreateInstanceSupported()
    + GetProperties()
    + GetPropertiesSupported()
}

class "Region" {
    + Union()
    + Union()
    + Union()
    + Union()
    + Intersect()
    + Intersect()
    + Intersect()
    + Intersect()
    + Complement()
    + Complement()
    + Complement()
    + Complement()
    + Exclude()
    + Exclude()
    + Exclude()
    + Exclude()
    + Xor()
    + Xor()
    + Xor()
    + Xor()
    + GetBounds()
    + Translate()
    + Translate()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsEmpty()
    + IsInfinite()
    + MakeEmpty()
    + MakeInfinite()
    + Equals()
    + GetHrgn()
    + GetRegionData()
    + GetRegionScans()
    + Transform()
    + Clone()
    + Dispose()
    - DisposeHandle()
    + Finalize()
    + ReleaseHrgn()
}

class "StringFormat" {
    + Finalize()
    + Dispose()
    - Dispose()
    + SetMeasurableCharacterRanges()
    + GetMeasurableCharacterRangeCount()
    + Clone()
    + ToString()
    + SetTabStops()
    + SetDigitSubstitution()
    + GetTabStops()
}

class "ToolboxBitmapAttribute" {
    + Equals()
    + GetHashCode()
    + GetImage()
    + GetImage()
    + GetImage()
    + GetImage()
    + GetImage()
}

class "StreamGetHeaderDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamGetBytesDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamSeekDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamPutBytesDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamCloseDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "StreamSizeDelegate" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "GdiPlusStreamHelper" {
    + StreamGetHeaderImpl()
    + StreamGetBytesImpl()
    + StreamSeekImpl()
    + StreamPutBytesImpl()
    + StreamCloseImpl()
    + StreamSizeImpl()
}

class "CocoaContext" {
    + Synchronize()
    + Release()
}

class "PrivateFontCollection" {
    + AddFontFile()
    + AddMemoryFont()
    + Dispose()
}

class "InvalidPrinterException" {
    + GetObjectData()
}

class "Margins" {
    - OnDeserializedMethod()
    - CheckMargin()
    + Clone()
    + Equals()
    + GetHashCode()
    + ToString()
}

class "PaperSize" {
    + ToString()
}

class "PaperSource" {
    + ToString()
}

class "PrintEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PrintPageEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PrinterResolution" {
    + ToString()
}

class "QueryPageSettingsEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PrintingPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
    + Union()
}

class "PrintingPermissionAttribute" {
    + CreatePermission()
}

class "MarginsConverter" {
    + CanConvertFrom()
    + CanConvertTo()
    + ConvertFrom()
    + ConvertTo()
    + GetCreateInstanceSupported()
    + CreateInstance()
}

class "PageSettings" {
    + Clone()
    + CopyToHdevmode()
    + SetHdevmode()
    + ToString()
}

class "PreviewPrintController" {
    + OnEndPage()
    + OnStartPrint()
    + OnEndPrint()
    + OnStartPage()
    + GetPreviewPageInfo()
}

class "PrintDocument" {
    + Print()
    + ToString()
    + OnBeginPrint()
    + OnEndPrint()
    + OnPrintPage()
    + OnQueryPageSettings()
}

class "PrintPageEventArgs" {
    + SetGraphics()
}

class "PrinterSettings" {
    - ResetToDefaults()
    + Clone()
    + CreateMeasurementGraphics()
    + CreateMeasurementGraphics()
    + CreateMeasurementGraphics()
    + CreateMeasurementGraphics()
    + GetHdevmode()
    + GetHdevmode()
    + GetHdevnames()
    + IsDirectPrintingSupported()
    + IsDirectPrintingSupported()
    + SetHdevmode()
    + SetHdevnames()
    + ToString()
}

class "PaperSourceCollection" {
    + Add()
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + Clear()
}

class "PaperSizeCollection" {
    + Add()
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + Clear()
}

class "PrinterResolutionCollection" {
    + Add()
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
    + Clear()
}

class "StringCollection" {
    + Add()
    + CopyTo()
    - System.Collections.IEnumerable.GetEnumerator()
    + GetEnumerator()
    - System.Collections.ICollection.CopyTo()
}

class "PrintingServicesUnix" {
    - OpenPrinter()
    - ClosePrinter()
    + IsPrinterValid()
    + LoadPrinterSettings()
    + LoadPrinterResolutions()
    - ParseResolution()
    - LoadPrinterPaperSizes()
    - LoadPrinterPaperSources()
    - LoadPrinterResolutionsAndDefault()
    + GetPrintDialogInfo()
    - GetPaperKind()
}

class "GlobalPrintingServicesUnix" {
    + CreateGraphicsContext()
    + StartDoc()
    + EndDoc()
    + StartPage()
    + EndPage()
}

class "PrintingServicesWin32" {
    + IsPrinterValid()
    + LoadPrinterSettings()
    + LoadPrinterResolutions()
    - LoadPrinterPaperSizes()
    - LoadPrinterPaperSources()
    + GetPrintDialogInfo()
    - GetPrinterStatusMsg()
}

class "GlobalPrintingServicesWin32" {
    + CreateGraphicsContext()
    + StartDoc()
    + EndDoc()
    + StartPage()
    + EndPage()
}

class "StandardPrintController" {
    + OnEndPage()
    + OnStartPrint()
    + OnEndPrint()
    + OnStartPage()
}

class "GPPOINTF" {
    + ToPoint()
}

class "ColorMatrix" {
    + SetMatrix()
    + GetMatrix()
}

class "ColorPalette" {
    + ConvertFromMemory()
    + ConvertToMemory()
}

class "EncoderParameter" {
    + Finalize()
    + Dispose()
    - Dispose()
}

class "EncoderParameters" {
    + ConvertToMemory()
    + Dispose()
}

class "FrameDimension" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "ImageAttributes" {
    + SetNativeImageAttributes()
    + Dispose()
    - Dispose()
    + Finalize()
    + Clone()
    + SetColorMatrix()
    + SetColorMatrix()
    + SetColorMatrix()
    + ClearColorMatrix()
    + ClearColorMatrix()
    + SetColorMatrices()
    + SetColorMatrices()
    + SetColorMatrices()
    + SetThreshold()
    + SetThreshold()
    + ClearThreshold()
    + ClearThreshold()
    + SetGamma()
    + SetGamma()
    + ClearGamma()
    + ClearGamma()
    + SetNoOp()
    + SetNoOp()
    + ClearNoOp()
    + ClearNoOp()
    + SetColorKey()
    + SetColorKey()
    + ClearColorKey()
    + ClearColorKey()
    + SetOutputChannel()
    + SetOutputChannel()
    + ClearOutputChannel()
    + ClearOutputChannel()
    + SetOutputChannelColorProfile()
    + SetOutputChannelColorProfile()
    + ClearOutputChannelColorProfile()
    + ClearOutputChannelColorProfile()
    + SetRemapTable()
    + SetRemapTable()
    + ClearRemapTable()
    + ClearRemapTable()
    + SetBrushRemapTable()
    + ClearBrushRemapTable()
    + SetWrapMode()
    + SetWrapMode()
    + SetWrapMode()
    + GetAdjustedPalette()
}

class "PlayRecordCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PropertyItemInternal" {
    + Finalize()
    + Dispose()
    - Dispose()
}

class "ImageFormat" {
    + Equals()
    + GetHashCode()
    + ToString()
}

class "Metafile" {
    + AddMetafileHolder()
    + Dispose()
    + GetHenhmetafile()
    + GetMetafileHeader()
    + PlayRecord()
}

class "MetafileHolder" {
    + Finalize()
    + Dispose()
    + Dispose()
    + MetafileDisposed()
    + GraphicsDisposed()
}

class "MetafileHeader" {
    + IsDisplay()
    + IsEmf()
    + IsEmfOrEmfPlus()
    + IsEmfPlus()
    + IsEmfPlusDual()
    + IsEmfPlusOnly()
    + IsWmf()
    + IsWmfPlaceable()
}

class "CategoryNameCollection" {
    + Contains()
    + CopyTo()
    + IndexOf()
}

class "PropertyValueUIHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "PropertyValueUIItem" {
    + Reset()
}

class "PropertyValueUIItemInvokeHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ToolboxComponentsCreatedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ToolboxComponentsCreatingEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "ToolboxItemCollection" {
    + Contains()
    + CopyTo()
    + IndexOf()
}

class "ToolboxItemCreatorCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "UITypeEditor" {
    + EditValue()
    + EditValue()
    + GetEditStyle()
    + GetPaintValueSupported()
    + GetPaintValueSupported()
    + GetEditStyle()
    + PaintValue()
    + PaintValue()
}

class "ToolboxItem" {
    + CheckUnlocked()
    + CreateComponents()
    + CreateComponents()
    + CreateComponentsCore()
    + CreateComponentsCore()
    + CreateComponents()
    + FilterPropertyValue()
    + Deserialize()
    + Equals()
    + GetHashCode()
    + GetType()
    + GetType()
    + Initialize()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + Lock()
    + OnComponentsCreated()
    + OnComponentsCreating()
    + Serialize()
    + ToString()
    + ValidatePropertyType()
    + ValidatePropertyValue()
    - SetValue()
    - GetValue()
}

class "CustomLineCap" {
    + SetNativeLineCap()
    + Dispose()
    + Dispose()
    + Finalize()
    + Clone()
    + CoreClone()
    + SetStrokeCaps()
    + GetStrokeCaps()
}

class "GraphicsPathIterator" {
    + Dispose()
    - Dispose()
    + Finalize()
    + NextSubpath()
    + NextSubpath()
    + NextPathType()
    + NextMarker()
    + NextMarker()
    + HasCurve()
    + Rewind()
    + Enumerate()
    + CopyData()
}

class "HatchBrush" {
    + Clone()
}

class "SafeCustomLineCapHandle" {
    + ReleaseHandle()
}

class "GraphicsPath" {
    + Clone()
    + Dispose()
    + Finalize()
    - Dispose()
    + AddArc()
    + AddArc()
    + AddArc()
    + AddArc()
    + AddBezier()
    + AddBezier()
    + AddBezier()
    + AddBezier()
    + AddBeziers()
    + AddBeziers()
    + AddEllipse()
    + AddEllipse()
    + AddEllipse()
    + AddEllipse()
    + AddLine()
    + AddLine()
    + AddLine()
    + AddLine()
    + AddLines()
    + AddLines()
    + AddPie()
    + AddPie()
    + AddPie()
    + AddPolygon()
    + AddPolygon()
    + AddRectangle()
    + AddRectangle()
    + AddRectangles()
    + AddRectangles()
    + AddPath()
    + GetLastPoint()
    + AddClosedCurve()
    + AddClosedCurve()
    + AddClosedCurve()
    + AddClosedCurve()
    + AddCurve()
    + AddCurve()
    + AddCurve()
    + AddCurve()
    + AddCurve()
    + AddCurve()
    + Reset()
    + Reverse()
    + Transform()
    + AddString()
    + AddString()
    + AddString()
    + AddString()
    + ClearMarkers()
    + CloseAllFigures()
    + CloseFigure()
    + Flatten()
    + Flatten()
    + Flatten()
    + GetBounds()
    + GetBounds()
    + GetBounds()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsOutlineVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + IsVisible()
    + SetMarkers()
    + StartFigure()
    + Warp()
    + Warp()
    + Warp()
    + Warp()
    + Widen()
    + Widen()
    + Widen()
}

class "LinearGradientBrush" {
    + MultiplyTransform()
    + MultiplyTransform()
    + ResetTransform()
    + RotateTransform()
    + RotateTransform()
    + ScaleTransform()
    + ScaleTransform()
    + SetBlendTriangularShape()
    + SetBlendTriangularShape()
    + SetSigmaBellShape()
    + SetSigmaBellShape()
    + TranslateTransform()
    + TranslateTransform()
    + Clone()
}

class "Matrix" {
    + Clone()
    + Dispose()
    + Equals()
    + Finalize()
    + GetHashCode()
    + Invert()
    + Multiply()
    + Multiply()
    + Reset()
    + Rotate()
    + Rotate()
    + RotateAt()
    + RotateAt()
    + Scale()
    + Scale()
    + Shear()
    + Shear()
    + TransformPoints()
    + TransformPoints()
    + TransformVectors()
    + TransformVectors()
    + Translate()
    + Translate()
    + VectorTransformPoints()
}

class "PathGradientBrush" {
    + MultiplyTransform()
    + MultiplyTransform()
    + ResetTransform()
    + RotateTransform()
    + RotateTransform()
    + ScaleTransform()
    + ScaleTransform()
    + SetBlendTriangularShape()
    + SetBlendTriangularShape()
    + SetSigmaBellShape()
    + SetSigmaBellShape()
    + TranslateTransform()
    + TranslateTransform()
    + Clone()
}

class "MyBinaryWriter" {
    + WriteLeb128()
}

class "MyBinaryReader" {
    + ReadLeb128()
    + ReadString()
}

class "MonoSymbolFile" {
    + AddSource()
    + AddCompileUnit()
    + AddMethod()
    + DefineMethod()
    + DefineAnonymousScope()
    + DefineCapturedVariable()
    + DefineCapturedScope()
    + GetNextTypeIndex()
    + GetNextMethodIndex()
    + GetNextNamespaceIndex()
    - Write()
    + CreateSymbolFile()
    + GetSourceFile()
    + GetCompileUnit()
    - read_methods()
    + GetMethodByToken()
    + GetMethod()
    + FindSource()
    + GetAnonymousScope()
    + Dispose()
    + Dispose()
}

class "OffsetTable" {
    + Write()
    + ToString()
}

class "LineNumberEntry" {
    + ToString()
}

class "CodeBlockEntry" {
    + Close()
    + Write()
    + ToString()
}

class "AnonymousScopeEntry" {
    + AddCapturedVariable()
    + AddCapturedScope()
    + Write()
    + ToString()
}

class "CompileUnitEntry" {
    + AddFile()
    + DefineNamespace()
    + WriteData()
    + Write()
    + ReadAll()
    - ReadData()
}

class "SourceFileEntry" {
    + WriteData()
    + Write()
    + SetAutoGenerated()
    + CheckChecksum()
    + ToString()
}

class "LineNumberTable" {
    + Write()
    - DoRead()
    + GetMethodBounds()
}

class "MethodEntry" {
    + Write()
    + WriteData()
    + ReadAll()
    + GetLineNumberTable()
    + GetLocals()
    + GetCodeBlocks()
    + GetScopeVariables()
    + GetRealName()
    + CompareTo()
    + ToString()
}

class "MonoSymbolWriter" {
    + CloseNamespace()
    + DefineLocalVariable()
    + DefineCapturedLocal()
    + DefineCapturedParameter()
    + DefineCapturedThis()
    + DefineCapturedScope()
    + DefineScopeVariable()
    + MarkSequencePoint()
    + OpenMethod()
    + CloseMethod()
    + DefineDocument()
    + DefineDocument()
    + DefineCompilationUnit()
    + DefineNamespace()
    + OpenScope()
    + CloseScope()
    + OpenCompilerGeneratedBlock()
    + CloseCompilerGeneratedBlock()
    + StartIteratorBody()
    + EndIteratorBody()
    + StartIteratorDispatcher()
    + EndIteratorDispatcher()
    + DefineAnonymousScope()
    + WriteSymbolFile()
}

class "SourceMethodBuilder" {
    + MarkSequencePoint()
    + MarkSequencePoint()
    + StartBlock()
    + StartBlock()
    + EndBlock()
    + AddLocal()
    + AddScopeVariable()
    + DefineMethod()
    + DefineMethod()
}

class "SymbolWriterImpl" {
    + Close()
    + CloseMethod()
    + CloseNamespace()
    + CloseScope()
    + DefineDocument()
    + DefineField()
    + DefineGlobalVariable()
    + DefineLocalVariable()
    + DefineParameter()
    + DefineSequencePoints()
    + Initialize()
    + OpenMethod()
    + OpenNamespace()
    + OpenScope()
    + SetMethodSourceRange()
    + SetScopeRange()
    + SetSymAttribute()
    + SetUnderlyingWriter()
    + SetUserEntryPoint()
    + UsingNamespace()
    - GetCurrentNamespace()
}

class "SymbolDocumentWriterImpl" {
    + SetCheckSum()
    + SetSource()
}

class "LocationComparer" {
    + Compare()
}

class "Plugin" {
    + ToString()
}

class "CommittableTransaction" {
    + BeginCommit()
    + EndCommit()
    - CommitCallback()
    + Commit()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "HostCurrentTransactionCallback" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TransactionCompletedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "TransactionStartedEventHandler" {
    + Invoke()
    + BeginInvoke()
    + EndInvoke()
}

class "DependentTransaction" {
    + Complete()
    - System.Runtime.Serialization.ISerializable.GetObjectData()
}

class "Enlistment" {
    + Done()
    + InternalOnDone()
}

class "PreparingEnlistment" {
    + ForceRollback()
    + InternalOnDone()
    + ForceRollback()
    + Prepared()
    + RecoveryInformation()
}

class "SinglePhaseEnlistment" {
    + Aborted()
    + Aborted()
    + Committed()
    + InDoubt()
    + InDoubt()
}

class "Transaction" {
    - System.Runtime.Serialization.ISerializable.GetObjectData()
    + Clone()
    + Dispose()
    + DependentClone()
    + EnlistDurable()
    + EnlistDurable()
    + EnlistPromotableSinglePhase()
    + SetDistributedTransactionIdentifier()
    + EnlistPromotableSinglePhase()
    + GetPromotedToken()
    + EnlistVolatile()
    + EnlistVolatile()
    - EnlistVolatileInternal()
    + PromoteAndEnlistDurable()
    + Equals()
    - Equals()
    + GetHashCode()
    + Rollback()
    + Rollback()
    + Rollback()
    + BeginCommitInternal()
    + EndCommitInternal()
    + CommitInternal()
    - DoCommit()
    - Complete()
    + InitScope()
    - DoPreparePhase()
    - DoCommitPhase()
    - DoSingleCommit()
    - DoSingleCommit()
    - CheckAborted()
    - FireCompleted()
}

class "TransactionInformation" {
    + Clone()
}

class "TransactionScope" {
    - Initialize()
    - TimeoutScope()
    - InitTransaction()
    + Complete()
    + Dispose()
}

class "DistributedTransactionPermission" {
    + Copy()
    + FromXml()
    + Intersect()
    + IsSubsetOf()
    + IsUnrestricted()
    + ToXml()
}

class "DistributedTransactionPermissionAttribute" {
    + CreatePermission()
}
@enduml
